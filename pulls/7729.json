{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729",
    "id": 63587999,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjM1ODc5OTk=",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7729",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/7729.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/7729.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fef41789e8d7293ccfd859bc90fa0a3b2484752d",
    "number": 7729,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "rpc: introduce 'label' API for wallet",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Add label API to wallet RPC.\r\n\r\nThis is one step towards #3816 (\"Remove bolt-on account system\") although it doesn't actually remove anything yet (that would be a follow-up pull).\r\n\r\nThese initially mirror the account functions, with the following differences:\r\n- These functions aren't DEPRECATED in the help\r\n- Help mentions 'label' instead of accounts. In the language used, labels are associated with addresses, instead of addresses associated with labels. (in contrast to accounts.)\r\n- Labels have no balance\r\n  - No `getreceivedbylabel`\r\n  - No balances in `listlabels`\r\n  - `listreceivedbylabel` can show received transactions to addresses with a label, not use the account tally (currently it is removed, but according to discussion that goes too far as this doesn't inherently have to do with balance)\r\n  - `listlabels` has no minconf or watchonly argument\r\n  - Remove `move`\r\n- Like in the GUI, labels can be set on any address, not just receiving addreses\r\n- Unlike accounts, labels can be deleted. Being unable to delete them is a common annoyance (see #1231).  Currently only by reassigning all addresses using `setlabel`, but an explicit call `deletelabel` which assigns all address to the default label may make sense.\r\n- These calls stay the same, with `account` argument renamed to `label`:\r\n  - `importaddress`\r\n  - `importprivkey`\r\n  - `importpubkey`\r\n\r\n## API\r\n\r\nShort description of every RPC call: for detailed information check RPC help. The general idea is to offer the same functionality as the GUI label system. Labels are simply a name for an address, or a group of addresses.\r\n\r\n**Do not use the deprecated account system and the label system with the same wallet at the same time**. These APIs use the same underlying data in the database for (slightly) different purposes, using them interchangeably will give unexpected results. (Just like using the GUI labels and account system at the same time. Using the GUI labels and the label API at the same time, however, is no problem)\r\n- `getlabel`: returns the label (and other address book data) associated with an address\r\n  - This exposes the fields in the CAddressBookData structure, which is currently the 'purpose' (sending address, receiving address) and 'destdata' (used for storing payment requests IIRC)\r\n- `getaddressesbylabel`: get addresses labelled with one label\r\n- `listlabels`: list all labels (or labels with a certain purpose, such as receive/send)\r\n- `setlabel`: assign a label to an address\r\n- `getlabeladdress`: get the 'label address' for the specified label. This gets an unused address with the label, creating one if necessary **should be removed according to discussion**\r\n\r\nThese calls have a deprecated account parameter, which can be turned into a label-parameter as is:\r\n- `listtransactions`\r\n\r\n## Open questions\r\n\r\n- Should there be such a thing as a 'label address'? My initial feeling about this was\r\n  'no', labels are just a name for one or more addresses, intuitively there is no \"default address\",\r\n  and it also isn't a GUI feature (->no)\r\n",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      },
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/33",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33/labels",
      "id": 2931889,
      "node_id": "MDk6TWlsZXN0b25lMjkzMTg4OQ==",
      "number": 33,
      "state": "closed",
      "title": "0.17.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 122,
      "created_at": "2017-11-22T18:54:09Z",
      "updated_at": "2018-11-28T21:03:57Z",
      "closed_at": "2018-10-14T23:21:13Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2016-03-21T16:02:09Z",
    "updated_at": "2022-08-16T17:03:32Z",
    "closed_at": "2018-04-05T17:46:47Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "8a3be8615c26440b7b7d7426af37be876e682db6",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "laanwj:2016_03_wallet_label_api",
      "ref": "2016_03_wallet_label_api",
      "sha": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1750308,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNzUwMzA4",
        "name": "bitcoin",
        "full_name": "laanwj/bitcoin",
        "owner": {
          "login": "laanwj",
          "id": 126646,
          "node_id": "MDQ6VXNlcjEyNjY0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/laanwj",
          "html_url": "https://github.com/laanwj",
          "followers_url": "https://api.github.com/users/laanwj/followers",
          "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
          "organizations_url": "https://api.github.com/users/laanwj/orgs",
          "repos_url": "https://api.github.com/users/laanwj/repos",
          "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/laanwj/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/laanwj/bitcoin",
        "description": "Laanwj's Bitcoin Core fork - see README.md on \"readme\" branch",
        "fork": true,
        "url": "https://api.github.com/repos/laanwj/bitcoin",
        "archive_url": "https://api.github.com/repos/laanwj/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/laanwj/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/laanwj/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/laanwj/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/laanwj/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/laanwj/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/laanwj/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/laanwj/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/laanwj/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/laanwj/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/laanwj/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/laanwj/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/laanwj/bitcoin/events",
        "forks_url": "https://api.github.com/repos/laanwj/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/laanwj/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/laanwj/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/laanwj/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/laanwj/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/laanwj/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/laanwj/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/laanwj/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/laanwj/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/laanwj/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/laanwj/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/laanwj/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/laanwj/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/laanwj/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/laanwj/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/laanwj/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:laanwj/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/laanwj/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/laanwj/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/laanwj/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/laanwj/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/laanwj/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/laanwj/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/laanwj/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/laanwj/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/laanwj/bitcoin/hooks",
        "svn_url": "https://github.com/laanwj/bitcoin",
        "homepage": "",
        "forks_count": 19,
        "stargazers_count": 43,
        "watchers_count": 43,
        "size": 200945,
        "default_branch": "readme",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-02-07T09:13:04Z",
        "created_at": "2011-05-15T07:09:54Z",
        "updated_at": "2023-07-17T18:35:33Z"
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "cead84b72d27517338ac3c49eaaed4db07352f41",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35475,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 668,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T14:29:40Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T14:31:15Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 216,
    "deletions": 32,
    "changed_files": 5,
    "commits": 2,
    "review_comments": 45,
    "comments": 71
  },
  "events": [
    {
      "event": "labeled",
      "id": 597365071,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDU5NzM2NTA3MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/597365071",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-21T16:02:09Z",
      "label": {
        "name": "Wallet",
        "color": "02d7e1"
      }
    },
    {
      "event": "labeled",
      "id": 597365072,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDU5NzM2NTA3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/597365072",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-21T16:02:09Z",
      "label": {
        "name": "RPC",
        "color": "0052cc"
      }
    },
    {
      "event": "mentioned",
      "id": 597365074,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTk3MzY1MDc0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/597365074",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-21T16:02:10Z"
    },
    {
      "event": "subscribed",
      "id": 597365076,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDU5NzM2NTA3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/597365076",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-21T16:02:10Z"
    },
    {
      "event": "commented",
      "id": 199361174,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTM2MTE3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/199361174",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-21T16:14:04Z",
      "updated_at": "2016-03-21T16:14:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK.\nI just wonder if this makes the wallet code more complex (add another layer).\n\nMy idea was it to duplicate the current wallet implementation (`cp src/wallet src/newwallet`-approach) and add such things there (after removing the accounts-related code). Also the Bip32 and @CodeShark multi-wallet PR could be added there.\n\nThe second wallet could come without API stableness (for the first two releases or so) and could be marked as experimental.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199361174",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 597382586,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTk3MzgyNTg2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/597382586",
      "actor": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-21T16:14:05Z"
    },
    {
      "event": "subscribed",
      "id": 597382587,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDU5NzM4MjU4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/597382587",
      "actor": {
        "login": "CodeShark",
        "id": 894059,
        "node_id": "MDQ6VXNlcjg5NDA1OQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/CodeShark",
        "html_url": "https://github.com/CodeShark",
        "followers_url": "https://api.github.com/users/CodeShark/followers",
        "following_url": "https://api.github.com/users/CodeShark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/CodeShark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/CodeShark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
        "organizations_url": "https://api.github.com/users/CodeShark/orgs",
        "repos_url": "https://api.github.com/users/CodeShark/repos",
        "events_url": "https://api.github.com/users/CodeShark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/CodeShark/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-21T16:14:05Z"
    },
    {
      "event": "commented",
      "id": 199362346,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTM2MjM0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/199362346",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-21T16:17:42Z",
      "updated_at": "2016-03-21T16:24:42Z",
      "author_association": "MEMBER",
      "body": "> I just wonder if this makes the wallet code more complex (add another layer).\n\nI disagree:\n- All of this functionality is required anyway to support the GUI.\n- Yes, there is some intentional duplication, but only until the account calls are ripped out, which should be one of the next steps.\n- There are only added RPC calls in rpcwallet.cpp. The `CWallet` class is not complicated by this.\n\nThe point here is to give a non-deprecated equivalent to the 'label' system as used in the GUI, so the subset of the 'account system' that people are still allowed to use. This is a required, but up to now missing part of deprecating the account system.\n\nI'm not trying to rule out any other work that is being done such as multi-wallet support. I think this is pretty much orthogonal. As for alternative wallets, they've been proposed since at least 2012 - but none have materialized yet. And none of this change rules them out.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199362346",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 199368604,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTM2ODYwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/199368604",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-21T16:33:16Z",
      "updated_at": "2016-03-21T16:33:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "> As for alternative wallets, they've been proposed since at least 2012 - but none have materialized yet. And none of this change rules them out.\n\nYes. I agree.\nThis PR has a clear value.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199368604",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 199444036,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTQ0NDAzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/199444036",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-21T19:42:09Z",
      "updated_at": "2016-03-21T19:42:09Z",
      "author_association": "MEMBER",
      "body": "Note getaccountaddress does not presently get a \"default\" address, it gets an _unused_ address with the label, creating one if necessary. This seems useful _only_ for mining, since no other context can guarantee an address hasn't been \"used\" but not sent to yet. I can't think of a good way to deprecate this, however.\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199444036",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 199705726,
      "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTcwNTcyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/199705726",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-22T08:53:51Z",
      "updated_at": "2016-03-22T08:54:53Z",
      "author_association": "MEMBER",
      "body": "> it gets an unused address with the label, creating one if necessary.\n\nI wonder if we can find a better (or at least simpler, the `GetAccountAddress` function is pretty terrible) way to do this, now that we're creating a new API anyway. Need to think about this a bit.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-199705726",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 200219840,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDIxOTg0MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/200219840",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-23T07:10:17Z",
      "updated_at": "2016-03-23T07:16:17Z",
      "author_association": "MEMBER",
      "body": "@luke-jr \n\n> I wonder if we can find a better (or at least simpler, the GetAccountAddress function is pretty terrible) way to do this, now that we're creating a new API anyway. Need to think about this a bit.\n\nI thought of the following: you could use two labels, one for the 'active' address, one for the 'normal'. Say `mining_active` and `mining`.\n\nWhen the miner needs an address it will:\n- _addr_ = `getaddressesbylabel mining_active` (if no address returned, go to \"if so\" directly below and skip the first)\n- `getreceivedbyaddress` - check with wallet that _addr_ has been used before (or maybe add a more convenient RPC call for checking a single address)\n- If so:\n  -  `setlabel <addr> mining`  - move current address to normal label\n  - _addr_ = `getnewaddress mining_active` - generate new address in `mining_active` label\n  - Use _addr_ for mining to\n- If not:\n  - Use _addr_ for mining to\n\nThis is a little bit more involved at the user side, but it avoids special administration (needing to keep around `CAccount` structure per label) at the server side.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-200219840",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 599866885,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NTk5ODY2ODg1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/599866885",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-23T07:10:17Z"
    },
    {
      "event": "subscribed",
      "id": 599866886,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDU5OTg2Njg4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/599866886",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-23T07:10:17Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-24T07:41:31Z",
      "updated_at": "2016-03-24T07:41:31Z",
      "source": {
        "issue": {
          "id": 141874185,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjMzNzc2NjI=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7715",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7715/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7715/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7715/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/7715",
          "number": 7715,
          "state": "closed",
          "state_reason": null,
          "title": "Fix calculation of balances and available coins.",
          "body": "No longer consider coins which aren't in our mempool as adding to our spendable but unconfirmed balance.  Add testing of this in abandonconflict.py.\nFixes #7690 (sort of)\n\nThis PR only changes the result of `GetUnconfirmedBalance` and `AvailableCoins`.  Balances returned via `GetAccountBalance` such as the rpc call `getbalance \"\" 0` were already unreliable in 0.11 and suffered a further regression in 0.12.  It is recommended to use rpc call `getunconfirmedbalance` to get the unconfirmed portion of the balance.\n\nSummary of effect on balances for various transaction types: \n:white_check_mark: - Reduces balance for coins spent and increases balance for coins received.\n:ballot_box_with_check: - Reduces balance for coins spent and increases unconfirmed balance for coins received\n:arrow_down: - Reduces balance for coins spent, does not affect balance for any coins received\n:fearful: - Increases unconfirmed balance for coins received, but does not reduce balance for coins spent\n:heavy_minus_sign: - no effect on balance\n\n| tx status | 0.11 | 0.12 | #7715 |\n| --- | --- | --- | --- |\n| Confirmed | :white_check_mark: | :white_check_mark: | :white_check_mark: |\n| Unconfirmed, in mempool | :ballot_box_with_check: | :ballot_box_with_check: | :ballot_box_with_check: |\n| Unconfirmed, not in mempool | :heavy_minus_sign: | :ballot_box_with_check: | :arrow_down: |\n| Unconfirmed, not in mempool, abandoned | :heavy_minus_sign: | :fearful: | :heavy_minus_sign: |\n| Unconfirmed, not in mempool, known to conflict | :heavy_minus_sign: | :heavy_minus_sign: | :heavy_minus_sign: |\n| Unconfirmed, not in mempool, non-final | :fearful: | :ballot_box_with_check: | :arrow_down: |\n| Unconfirmed, not in mempool, non-final, abandoned | :fearful: | :fearful: | :heavy_minus_sign: |\n| Unconfirmed, not in mempool, non-final, known to conflict | :fearful: | :fearful: | :heavy_minus_sign: |\n",
          "user": {
            "login": "morcos",
            "id": 4360349,
            "node_id": "MDQ6VXNlcjQzNjAzNDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/morcos",
            "html_url": "https://github.com/morcos",
            "followers_url": "https://api.github.com/users/morcos/followers",
            "following_url": "https://api.github.com/users/morcos/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/morcos/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/morcos/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
            "organizations_url": "https://api.github.com/users/morcos/orgs",
            "repos_url": "https://api.github.com/users/morcos/repos",
            "events_url": "https://api.github.com/users/morcos/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/morcos/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7715",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/7715",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/7715.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/7715.patch"
          },
          "closed_at": "2016-03-23T14:09:15Z",
          "created_at": "2016-03-18T13:58:21Z",
          "updated_at": "2021-09-08T11:00:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-03-30T08:39:18Z",
      "updated_at": "2016-03-30T08:39:18Z",
      "source": {
        "issue": {
          "id": 58126140,
          "node_id": "MDU6SXNzdWU1ODEyNjE0MA==",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5802",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5802/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5802/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5802/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/5802",
          "number": 5802,
          "state": "closed",
          "state_reason": "completed",
          "title": "getbalance gives weird results",
          "body": "```\nbitcoin-cli getbalance \"*\" 0\n0.12820000\nbitcoin-cli getbalance \"\" 0\n0.12830000\n```\n\nThe \\* gives less results than \"\". I guess that's a bug.\n\nAlso weird:\n\n```\nbitcoin-cli getbalance\n0.12820000\nbitcoin-cli getbalance '*' 1\n0.12810000\n```\n\nWhen you would expect those two commands are identical. (probably due to unconfirmed change)\n",
          "user": {
            "login": "RHavar",
            "id": 9326759,
            "node_id": "MDQ6VXNlcjkzMjY3NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9326759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RHavar",
            "html_url": "https://github.com/RHavar",
            "followers_url": "https://api.github.com/users/RHavar/followers",
            "following_url": "https://api.github.com/users/RHavar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/RHavar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/RHavar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/RHavar/subscriptions",
            "organizations_url": "https://api.github.com/users/RHavar/orgs",
            "repos_url": "https://api.github.com/users/RHavar/repos",
            "events_url": "https://api.github.com/users/RHavar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/RHavar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 6,
          "closed_at": "2016-03-30T02:56:46Z",
          "created_at": "2015-02-18T20:50:52Z",
          "updated_at": "2021-09-08T12:43:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 206735494,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjczNTQ5NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/206735494",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T07:25:48Z",
      "updated_at": "2016-04-07T07:25:48Z",
      "author_association": "MEMBER",
      "body": "That looks like a lot of overhead, and this is a rather time-sensitive call, as the miner is working on stale work until it's done.\n\nAlso, why are there no getreceivedbylabel/listreceivedbylabel? These don't have anything to do with balances.\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206735494",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T08:53:18Z",
      "updated_at": "2016-04-07T08:53:18Z",
      "source": {
        "issue": {
          "id": 146550940,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjU1OTQ1MDg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7830",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7830/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7830/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7830/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/7830",
          "number": 7830,
          "state": "closed",
          "state_reason": null,
          "title": "[Wallet] Add cloned wallet, remove accounts, reset version",
          "body": "An alternative solution to #7729\n\nThis adds a clone of the current wallet. The second wallet can be enabled over `--enable-lightwallet`.\n### Includes:\n- The cloned wallet is fully protected in its own namespace `Lightwallet::`.\n- Thanks to the init.cpp refactoring, the intersection between non-wallet classes is extremely minimal (47 lines in init.cpp).\n- Second wallet can run in parallel to the existing one.\n- **Accounts are fully removed** (including `CAccount`, `CAccountEntry`, etc.).\n- Full labels support from #7729\n- Only one send command (ex `sandmany` now renamed to \"sendcoins\")\n- All backward compatibility/version detection and version-backward-comp.-fixes has been removed\n- Version is reset to `10000`\n### Benefits:\n- safe way to remove accounts\n- safe way to add BIP32 and multiwallet support\n- safe way to remove BerkleyDB\n- safe way to slowly process separate the wallet (add SPV)\n- safe way to add a complete new GUI\n- no promise of a stable API until 0.14 or 0.15.\n\nCurrently bitcoin-cli misses some value conversion for some commands (you can use cURL for these commands).\n\n**This PR is large because of the copy of the content in `src/wallet`**. You can verify the copy by diffing the first commit and start review on top of that**\n",
          "user": {
            "login": "jonasschnelli",
            "id": 178464,
            "node_id": "MDQ6VXNlcjE3ODQ2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasschnelli",
            "html_url": "https://github.com/jonasschnelli",
            "followers_url": "https://api.github.com/users/jonasschnelli/followers",
            "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
            "repos_url": "https://api.github.com/users/jonasschnelli/repos",
            "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7830",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/7830",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/7830.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/7830.patch"
          },
          "closed_at": "2016-05-06T09:21:47Z",
          "created_at": "2016-04-07T08:53:18Z",
          "updated_at": "2021-09-08T11:40:35Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 206927479,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjkyNzQ3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/206927479",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:19:30Z",
      "updated_at": "2016-04-07T14:19:30Z",
      "author_association": "MEMBER",
      "body": "> That looks like a lot of overhead, and this is a rather time-sensitive call, as the miner is working on stale work until it's done.\n\nI'd suggest to try it. It shouldn't be much slower.\n\n> Also, why are there no getreceivedbylabel/listreceivedbylabel? These don't have anything to do with balances.\n\nLooks like you're right. `getreceivedbyaccount` doesn't actually return the account balance, but the total number of coins sent to the addresses that make up the account?\n\n`listreceivedbyaccount`  on the other hand goes over the account tally. But I agree if it only were to show actual transactions sent to addresses belonging to a label it'd be ok.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206927479",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 206929678,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjkyOTY3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/206929678",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:24:05Z",
      "updated_at": "2016-04-07T14:24:05Z",
      "author_association": "MEMBER",
      "body": "@luke-jr Wouldn't it be feasible to instead generate a sequence of deterministic addresses for mining, for example using BIP32 derivation with the block height as index?\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206929678",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 618574992,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NjE4NTc0OTky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/618574992",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:24:05Z"
    },
    {
      "event": "subscribed",
      "id": 618574993,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDYxODU3NDk5Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/618574993",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:24:05Z"
    },
    {
      "event": "commented",
      "id": 206934807,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjkzNDgwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/206934807",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:37:48Z",
      "updated_at": "2016-04-07T14:37:48Z",
      "author_association": "MEMBER",
      "body": "> I'd suggest to try it. It shouldn't be much slower.\n\n@laanwj getreceivedbyaddress at least would loop over all the wtx... and then there's the additional latency from the back and forth of multiple calls. I haven't tried it yet, though.\n\n> Wouldn't it be feasible to instead generate a sequence of deterministic addresses for mining, for example using BIP32 derivation with the block height as index?\n\n@sipa Perhaps, if the wallet had a way to do this. Using the height seems incompatible with gap limits, though?\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206934807",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 618595759,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NjE4NTk1NzU5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/618595759",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:37:48Z"
    },
    {
      "event": "subscribed",
      "id": 618595760,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDYxODU5NTc2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/618595760",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:37:48Z"
    },
    {
      "event": "mentioned",
      "id": 618595762,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NjE4NTk1NzYy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/618595762",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:37:48Z"
    },
    {
      "event": "subscribed",
      "id": 618595763,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDYxODU5NTc2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/618595763",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:37:48Z"
    },
    {
      "event": "commented",
      "id": 206938418,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjkzODQxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/206938418",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:48:27Z",
      "updated_at": "2016-04-07T14:48:27Z",
      "author_association": "MEMBER",
      "body": "@luke-jr I mean the mining software can do derivation, and import the keys into the wallet when a block is found.\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-206938418",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 618611183,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NjE4NjExMTgz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/618611183",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:48:27Z"
    },
    {
      "event": "subscribed",
      "id": 618611185,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDYxODYxMTE4NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/618611185",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-04-07T14:48:27Z"
    },
    {
      "event": "commented",
      "id": 220828728,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDgyODcyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220828728",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-22T12:02:24Z",
      "updated_at": "2016-05-22T12:02:24Z",
      "author_association": "MEMBER",
      "body": "The functional test coverage for accounts is minimal or not existent, I think we should move forward with this pull.\n\nNeeds rebase.\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-220828728",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 220830924,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDgzMDkyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220830924",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-22T12:54:32Z",
      "updated_at": "2016-05-22T12:54:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Re-Concept ACK.\nI think this solution makes more sense than the closed #7830.\nNeeds tests, rebase and release-note mentioning.\n",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-220830924",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 220840308,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDg0MDMwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/220840308",
      "actor": {
        "login": "wallclockbuilder",
        "id": 2033945,
        "node_id": "MDQ6VXNlcjIwMzM5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2033945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wallclockbuilder",
        "html_url": "https://github.com/wallclockbuilder",
        "followers_url": "https://api.github.com/users/wallclockbuilder/followers",
        "following_url": "https://api.github.com/users/wallclockbuilder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wallclockbuilder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wallclockbuilder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wallclockbuilder/subscriptions",
        "organizations_url": "https://api.github.com/users/wallclockbuilder/orgs",
        "repos_url": "https://api.github.com/users/wallclockbuilder/repos",
        "events_url": "https://api.github.com/users/wallclockbuilder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wallclockbuilder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-05-22T16:04:32Z",
      "updated_at": "2016-05-22T16:04:32Z",
      "author_association": "NONE",
      "body": "Needs tests.\n",
      "user": {
        "login": "wallclockbuilder",
        "id": 2033945,
        "node_id": "MDQ6VXNlcjIwMzM5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2033945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wallclockbuilder",
        "html_url": "https://github.com/wallclockbuilder",
        "followers_url": "https://api.github.com/users/wallclockbuilder/followers",
        "following_url": "https://api.github.com/users/wallclockbuilder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wallclockbuilder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wallclockbuilder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wallclockbuilder/subscriptions",
        "organizations_url": "https://api.github.com/users/wallclockbuilder/orgs",
        "repos_url": "https://api.github.com/users/wallclockbuilder/repos",
        "events_url": "https://api.github.com/users/wallclockbuilder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wallclockbuilder/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-220840308",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 223287263,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzI4NzI2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/223287263",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-06-02T13:13:50Z",
      "updated_at": "2016-06-02T13:13:50Z",
      "author_association": "MEMBER",
      "body": "@wallclockbuilder No shit, have you seen the TODOs at the bottom of the opening post?\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-223287263",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 679777468,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Njc5Nzc3NDY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/679777468",
      "actor": {
        "login": "wallclockbuilder",
        "id": 2033945,
        "node_id": "MDQ6VXNlcjIwMzM5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2033945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wallclockbuilder",
        "html_url": "https://github.com/wallclockbuilder",
        "followers_url": "https://api.github.com/users/wallclockbuilder/followers",
        "following_url": "https://api.github.com/users/wallclockbuilder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wallclockbuilder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wallclockbuilder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wallclockbuilder/subscriptions",
        "organizations_url": "https://api.github.com/users/wallclockbuilder/orgs",
        "repos_url": "https://api.github.com/users/wallclockbuilder/repos",
        "events_url": "https://api.github.com/users/wallclockbuilder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wallclockbuilder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-06-02T13:13:50Z"
    },
    {
      "event": "subscribed",
      "id": 679777469,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDY3OTc3NzQ2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/679777469",
      "actor": {
        "login": "wallclockbuilder",
        "id": 2033945,
        "node_id": "MDQ6VXNlcjIwMzM5NDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2033945?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wallclockbuilder",
        "html_url": "https://github.com/wallclockbuilder",
        "followers_url": "https://api.github.com/users/wallclockbuilder/followers",
        "following_url": "https://api.github.com/users/wallclockbuilder/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/wallclockbuilder/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/wallclockbuilder/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/wallclockbuilder/subscriptions",
        "organizations_url": "https://api.github.com/users/wallclockbuilder/orgs",
        "repos_url": "https://api.github.com/users/wallclockbuilder/repos",
        "events_url": "https://api.github.com/users/wallclockbuilder/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/wallclockbuilder/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-06-02T13:13:50Z"
    },
    {
      "event": "commented",
      "id": 223287825,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzI4NzgyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/223287825",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-06-02T13:15:57Z",
      "updated_at": "2016-06-02T13:16:08Z",
      "author_association": "MEMBER",
      "body": "To be clear I posted this to get comments on the API, is there anything left to be done there? I'm going to write tests when it is clear that this is what we want at all.\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-223287825",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "milestoned",
      "id": 690164444,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDY5MDE2NDQ0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/690164444",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-06-13T09:22:08Z",
      "milestone": {
        "title": "Future"
      }
    },
    {
      "event": "commented",
      "id": 232776422,
      "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjc3NjQyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/232776422",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-07-14T20:05:04Z",
      "updated_at": "2016-07-14T20:05:04Z",
      "author_association": "MEMBER",
      "body": "> Do not use the deprecated account system and the label system with the same wallet at the same time\n> [...]\n> optional: a flag in the wallet to prevent use of both the account and label API\n\nI would not consider this optional. User will always do what you not want them to do.\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-232776422",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-18T16:12:26Z",
      "updated_at": "2016-08-18T16:12:26Z",
      "source": {
        "issue": {
          "id": 150717936,
          "node_id": "MDU6SXNzdWUxNTA3MTc5MzY=",
          "url": "https://api.github.com/repos/bitcoin-dot-org/Bitcoin.org/issues/1287",
          "repository_url": "https://api.github.com/repos/bitcoin-dot-org/Bitcoin.org",
          "labels_url": "https://api.github.com/repos/bitcoin-dot-org/Bitcoin.org/issues/1287/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-dot-org/Bitcoin.org/issues/1287/comments",
          "events_url": "https://api.github.com/repos/bitcoin-dot-org/Bitcoin.org/issues/1287/events",
          "html_url": "https://github.com/bitcoin-dot-org/Bitcoin.org/issues/1287",
          "number": 1287,
          "state": "closed",
          "state_reason": "completed",
          "title": "\"accounts\" wallet functionality is deprecated",
          "body": "https://bitcoin.org/en/developer-reference#sendfrom\n\n(etc)\n",
          "user": {
            "login": "pstratem",
            "id": 620611,
            "node_id": "MDQ6VXNlcjYyMDYxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pstratem",
            "html_url": "https://github.com/pstratem",
            "followers_url": "https://api.github.com/users/pstratem/followers",
            "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
            "organizations_url": "https://api.github.com/users/pstratem/orgs",
            "repos_url": "https://api.github.com/users/pstratem/repos",
            "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pstratem/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 152645749,
              "node_id": "MDU6TGFiZWwxNTI2NDU3NDk=",
              "url": "https://api.github.com/repos/bitcoin-dot-org/Bitcoin.org/labels/Dev%20Docs",
              "name": "Dev Docs",
              "color": "c7def8",
              "default": false
            },
            {
              "id": 206869323,
              "node_id": "MDU6TGFiZWwyMDY4NjkzMjM=",
              "url": "https://api.github.com/repos/bitcoin-dot-org/Bitcoin.org/labels/Merge%20Scheduled",
              "name": "Merge Scheduled",
              "description": "",
              "color": "75ffcc",
              "default": false
            }
          ],
          "assignee": {
            "login": "wbnns",
            "id": 1130872,
            "node_id": "MDQ6VXNlcjExMzA4NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1130872?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wbnns",
            "html_url": "https://github.com/wbnns",
            "followers_url": "https://api.github.com/users/wbnns/followers",
            "following_url": "https://api.github.com/users/wbnns/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/wbnns/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/wbnns/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/wbnns/subscriptions",
            "organizations_url": "https://api.github.com/users/wbnns/orgs",
            "repos_url": "https://api.github.com/users/wbnns/repos",
            "events_url": "https://api.github.com/users/wbnns/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/wbnns/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "wbnns",
              "id": 1130872,
              "node_id": "MDQ6VXNlcjExMzA4NzI=",
              "avatar_url": "https://avatars.githubusercontent.com/u/1130872?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/wbnns",
              "html_url": "https://github.com/wbnns",
              "followers_url": "https://api.github.com/users/wbnns/followers",
              "following_url": "https://api.github.com/users/wbnns/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/wbnns/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/wbnns/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/wbnns/subscriptions",
              "organizations_url": "https://api.github.com/users/wbnns/orgs",
              "repos_url": "https://api.github.com/users/wbnns/repos",
              "events_url": "https://api.github.com/users/wbnns/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/wbnns/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "closed_at": "2017-02-16T02:31:58Z",
          "created_at": "2016-04-25T00:36:49Z",
          "updated_at": "2017-02-16T02:31:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "tinspin",
        "id": 4329234,
        "node_id": "MDQ6VXNlcjQzMjkyMzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4329234?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tinspin",
        "html_url": "https://github.com/tinspin",
        "followers_url": "https://api.github.com/users/tinspin/followers",
        "following_url": "https://api.github.com/users/tinspin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tinspin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tinspin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tinspin/subscriptions",
        "organizations_url": "https://api.github.com/users/tinspin/orgs",
        "repos_url": "https://api.github.com/users/tinspin/repos",
        "events_url": "https://api.github.com/users/tinspin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tinspin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-20T14:21:18Z",
      "updated_at": "2016-08-20T14:21:18Z",
      "source": {
        "issue": {
          "id": 138012958,
          "node_id": "MDU6SXNzdWUxMzgwMTI5NTg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7633",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7633/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7633/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7633/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/7633",
          "number": 7633,
          "state": "closed",
          "state_reason": "completed",
          "title": "paytxfee behavior changed without warning",
          "body": "(updated with new information)\nCalculation of the transaction fee when \"paytxfee\" is set has changed, without announcement or documentation.\n\nPer @sipa :\n`In earlier versions however the size of a transaction was rounded up to a\nmultiple of 1000, as that is how the mining code used to sort transaction\nyears ago. In 0.12, it was finally changed to the accurate formula that\nworks at an accuracy per byte. If the paytxfee value was always exactly\nwhat you saw as resulting fee, that must mean all your transactions were 1\nkB in size.`\n\nIn bitcoin.conf, I had\n\n`paytxfee=0.0001`\n\nIn 0.11, that meant that BTC 0.0001 would be added to every outbound tx as a fee.\n\nin 0.12, it means every tx will have added to it a fee of BTC 0.0001 **per kilobyte**\n\n**This is not documented in the release notes.** As a result of this, I've got 3 days worth of spend transactions caught in unconfirmed limbo, having gone out with fees like 0.00002260 instead of 0.0001.\n",
          "user": {
            "login": "mikegogulski",
            "id": 118625,
            "node_id": "MDQ6VXNlcjExODYyNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/118625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikegogulski",
            "html_url": "https://github.com/mikegogulski",
            "followers_url": "https://api.github.com/users/mikegogulski/followers",
            "following_url": "https://api.github.com/users/mikegogulski/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/mikegogulski/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/mikegogulski/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/mikegogulski/subscriptions",
            "organizations_url": "https://api.github.com/users/mikegogulski/orgs",
            "repos_url": "https://api.github.com/users/mikegogulski/repos",
            "events_url": "https://api.github.com/users/mikegogulski/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/mikegogulski/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 40,
          "closed_at": "2019-03-21T20:23:54Z",
          "created_at": "2016-03-02T22:32:31Z",
          "updated_at": "2021-12-16T14:51:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 242373379,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjM3MzM3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/242373379",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-08-25T12:46:57Z",
      "updated_at": "2016-08-25T12:46:57Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-242373379",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 249340313,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTM0MDMxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249340313",
      "actor": {
        "login": "andrewbaine",
        "id": 101534,
        "node_id": "MDQ6VXNlcjEwMTUzNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/101534?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbaine",
        "html_url": "https://github.com/andrewbaine",
        "followers_url": "https://api.github.com/users/andrewbaine/followers",
        "following_url": "https://api.github.com/users/andrewbaine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewbaine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewbaine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewbaine/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbaine/orgs",
        "repos_url": "https://api.github.com/users/andrewbaine/repos",
        "events_url": "https://api.github.com/users/andrewbaine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewbaine/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-24T02:38:58Z",
      "updated_at": "2016-09-24T02:39:42Z",
      "author_association": "NONE",
      "body": "listtransactions has an \"account\" argument where you now you would pass \"*\" if you need to supply non-default args for count, from, and includeWatchOnly. Will there be a way to query for transactions affecting any address with a given label? Could we tack on a \"label\" argument to listtransactions?\n",
      "user": {
        "login": "andrewbaine",
        "id": 101534,
        "node_id": "MDQ6VXNlcjEwMTUzNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/101534?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbaine",
        "html_url": "https://github.com/andrewbaine",
        "followers_url": "https://api.github.com/users/andrewbaine/followers",
        "following_url": "https://api.github.com/users/andrewbaine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewbaine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewbaine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewbaine/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbaine/orgs",
        "repos_url": "https://api.github.com/users/andrewbaine/repos",
        "events_url": "https://api.github.com/users/andrewbaine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewbaine/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-249340313",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 249346342,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTM0NjM0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/249346342",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-09-24T05:25:44Z",
      "updated_at": "2016-09-24T05:25:44Z",
      "author_association": "MEMBER",
      "body": "I think the account argument of listtransactions could simply be re-used as a label argument. As listing transactions to a label has nothing to do with per-label balances there is no need to drop that particular functionality, \n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-249346342",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 251130307,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTEzMDMwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/251130307",
      "actor": {
        "login": "andrewbaine",
        "id": 101534,
        "node_id": "MDQ6VXNlcjEwMTUzNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/101534?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbaine",
        "html_url": "https://github.com/andrewbaine",
        "followers_url": "https://api.github.com/users/andrewbaine/followers",
        "following_url": "https://api.github.com/users/andrewbaine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewbaine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewbaine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewbaine/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbaine/orgs",
        "repos_url": "https://api.github.com/users/andrewbaine/repos",
        "events_url": "https://api.github.com/users/andrewbaine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewbaine/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-10-03T15:00:33Z",
      "updated_at": "2016-10-03T15:00:33Z",
      "author_association": "NONE",
      "body": "repurposing the \"account\" argument to be \"label\" makes sense to me\n",
      "user": {
        "login": "andrewbaine",
        "id": 101534,
        "node_id": "MDQ6VXNlcjEwMTUzNA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/101534?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewbaine",
        "html_url": "https://github.com/andrewbaine",
        "followers_url": "https://api.github.com/users/andrewbaine/followers",
        "following_url": "https://api.github.com/users/andrewbaine/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewbaine/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewbaine/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewbaine/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewbaine/orgs",
        "repos_url": "https://api.github.com/users/andrewbaine/repos",
        "events_url": "https://api.github.com/users/andrewbaine/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewbaine/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-251130307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-10-18T19:34:13Z",
      "updated_at": "2016-10-18T19:34:13Z",
      "source": {
        "issue": {
          "id": 61846967,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzEyMDIwODM=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5905",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5905/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5905/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/5905/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/5905",
          "number": 5905,
          "state": "closed",
          "state_reason": null,
          "title": "[Qt][WIP] allow possibility to add a comment to a WalletTx",
          "body": "Try to sync rpc/qt wallets implementations.\nSolves #2086.\n\n![bildschirmfoto 2015-03-15 um 16 40 49](https://cloud.githubusercontent.com/assets/178464/6656708/39c7695c-cb32-11e4-9b62-b2714af9c140.png)\n\n![bildschirmfoto 2015-03-15 um 16 40 59](https://cloud.githubusercontent.com/assets/178464/6656707/39a5d45e-cb32-11e4-8e74-a4c55cac1f12.png)\n\n```\n    {\n        \"account\" : \"\",\n        \"address\" : \"mm2STH7X3rbBVd73XaDrwdJHM69ukj31N8\",\n        \"category\" : \"send\",\n        \"amount\" : -1.00000000,\n        \"vout\" : 1,\n        \"fee\" : -0.00000521,\n        \"confirmations\" : 0,\n        \"txid\" : \"151e1e32090b765ebc30ebcc385bd79978081130b331972b94e142f3aeb85e10\",\n        \"walletconflicts\" : [\n        ],\n        \"time\" : 1426434053,\n        \"timereceived\" : 1426434053,\n        \"comment\" : \"This is a test wtx comment.\"\n    }\n```\n",
          "user": {
            "login": "jonasschnelli",
            "id": 178464,
            "node_id": "MDQ6VXNlcjE3ODQ2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasschnelli",
            "html_url": "https://github.com/jonasschnelli",
            "followers_url": "https://api.github.com/users/jonasschnelli/followers",
            "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
            "repos_url": "https://api.github.com/users/jonasschnelli/repos",
            "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 25,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/5905",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/5905",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/5905.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/5905.patch"
          },
          "closed_at": "2016-10-18T19:34:13Z",
          "created_at": "2015-03-15T15:44:59Z",
          "updated_at": "2022-08-16T17:04:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 261392305,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTM5MjMwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261392305",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-17T22:38:06Z",
      "updated_at": "2016-11-17T22:38:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fast review ACK (besides needing rebase and the promised tests).\nThe API is actually more than I expected but still simple enough, I think.\n\n> optional: a flag in the wallet to prevent use of both the account and label API\n\nI'm not sure it's worth to bother. I think we should go ahead and completely remove account functionality within 0.14 instead. But whatever we do, it can be done in a later PR.\n",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-261392305",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 261539197,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTUzOTE5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261539197",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-18T14:06:38Z",
      "updated_at": "2016-11-18T14:11:14Z",
      "author_association": "MEMBER",
      "body": "> labels are associated with addresses, instead of addresses associated with labels\n\nDescription nit: not sure I catch the distinction here.  \n\n> Should there be such a thing as a 'label address'?  \n\nI'd say no unless there is a compelling use-case that can't be replicated another way.\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-261539197",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "reviewed",
      "id": 9233413,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3OTIzMzQxMw==",
      "url": null,
      "actor": null,
      "commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "concept ACK, with some nits/questions.\n\nI am not an expert on how accounts exactly work as-is.\n\nIt also may be helpful to give a brief motivation in the OP. What's wrong with accounts, and what label fixes about that. Currently it's a list of differences without clear motivation.\n",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-9233413",
      "submitted_at": "2016-11-18T14:50:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "commented",
      "id": 261928077,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTkyODA3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261928077",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-21T12:48:36Z",
      "updated_at": "2016-11-21T12:48:36Z",
      "author_association": "MEMBER",
      "body": "> It also may be helpful to give a brief motivation in the OP. What's wrong with accounts, and what label fixes about that. Currently it's a list of differences without clear motivation.\r\n\r\nSee #3816",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-261928077",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 261929161,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTkyOTE2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261929161",
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-21T12:53:55Z",
      "updated_at": "2016-11-21T12:53:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK a2557ffb80543af5e92c3db03d257fe594b0d910 needs (trivial) rebase for the new `JSONRPCRequest` object passing.",
      "user": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-261929161",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 261933520,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTkzMzUyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/261933520",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-21T13:09:22Z",
      "updated_at": "2016-11-21T13:09:38Z",
      "author_association": "MEMBER",
      "body": "@laanwj yes I read the issue, but there are some disagreements in that thread about what the actual issue is(malleability being the first issue noted?). I assume it's along the lines of \"people want to watermark addresses, but bitcoind wallet shouldn't try to be an accounting system for those labels\".",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-261933520",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 866470779,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODY2NDcwNzc5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/866470779",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-21T13:09:22Z"
    },
    {
      "event": "subscribed",
      "id": 866470780,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg2NjQ3MDc4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/866470780",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-21T13:09:22Z"
    },
    {
      "event": "commented",
      "id": 262390221,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjM5MDIyMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262390221",
      "actor": {
        "login": "motatoes",
        "id": 1627972,
        "node_id": "MDQ6VXNlcjE2Mjc5NzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1627972?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/motatoes",
        "html_url": "https://github.com/motatoes",
        "followers_url": "https://api.github.com/users/motatoes/followers",
        "following_url": "https://api.github.com/users/motatoes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/motatoes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/motatoes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/motatoes/subscriptions",
        "organizations_url": "https://api.github.com/users/motatoes/orgs",
        "repos_url": "https://api.github.com/users/motatoes/repos",
        "events_url": "https://api.github.com/users/motatoes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/motatoes/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-22T22:52:56Z",
      "updated_at": "2016-11-22T22:52:56Z",
      "author_association": "NONE",
      "body": "Hi. When is this new feature expected to be rolled out?",
      "user": {
        "login": "motatoes",
        "id": 1627972,
        "node_id": "MDQ6VXNlcjE2Mjc5NzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1627972?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/motatoes",
        "html_url": "https://github.com/motatoes",
        "followers_url": "https://api.github.com/users/motatoes/followers",
        "following_url": "https://api.github.com/users/motatoes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/motatoes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/motatoes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/motatoes/subscriptions",
        "organizations_url": "https://api.github.com/users/motatoes/orgs",
        "repos_url": "https://api.github.com/users/motatoes/repos",
        "events_url": "https://api.github.com/users/motatoes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/motatoes/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-262390221",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 262390495,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjM5MDQ5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/262390495",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-22T22:54:26Z",
      "updated_at": "2016-11-22T22:54:26Z",
      "author_association": "MEMBER",
      "body": "@motatoes Like everything, when it's ready. That may be in 0.14.0 or later.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-262390495",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 869000430,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODY5MDAwNDMw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/869000430",
      "actor": {
        "login": "motatoes",
        "id": 1627972,
        "node_id": "MDQ6VXNlcjE2Mjc5NzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1627972?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/motatoes",
        "html_url": "https://github.com/motatoes",
        "followers_url": "https://api.github.com/users/motatoes/followers",
        "following_url": "https://api.github.com/users/motatoes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/motatoes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/motatoes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/motatoes/subscriptions",
        "organizations_url": "https://api.github.com/users/motatoes/orgs",
        "repos_url": "https://api.github.com/users/motatoes/repos",
        "events_url": "https://api.github.com/users/motatoes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/motatoes/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-22T22:54:26Z"
    },
    {
      "event": "subscribed",
      "id": 869000432,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg2OTAwMDQzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/869000432",
      "actor": {
        "login": "motatoes",
        "id": 1627972,
        "node_id": "MDQ6VXNlcjE2Mjc5NzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1627972?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/motatoes",
        "html_url": "https://github.com/motatoes",
        "followers_url": "https://api.github.com/users/motatoes/followers",
        "following_url": "https://api.github.com/users/motatoes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/motatoes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/motatoes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/motatoes/subscriptions",
        "organizations_url": "https://api.github.com/users/motatoes/orgs",
        "repos_url": "https://api.github.com/users/motatoes/repos",
        "events_url": "https://api.github.com/users/motatoes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/motatoes/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-11-22T22:54:26Z"
    },
    {
      "event": "reviewed",
      "id": 12573775,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTI1NzM3NzU=",
      "url": null,
      "actor": null,
      "commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-12573775",
      "submitted_at": "2016-12-12T23:17:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "commented",
      "id": 266593020,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjU5MzAyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/266593020",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-12-13T00:00:47Z",
      "updated_at": "2016-12-13T00:00:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj , I created an RPC test for this change here: https://github.com/ryanofsky/bitcoin/commit/2dac8eb0d915b4c04764eff100d81718b2cd9a90\r\n\r\nFeel free to incorporate it in this PR, or I could create a separate one.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-266593020",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 891248144,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50ODkxMjQ4MTQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/891248144",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-12-13T00:00:47Z"
    },
    {
      "event": "subscribed",
      "id": 891248146,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDg5MTI0ODE0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/891248146",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-12-13T00:00:47Z"
    },
    {
      "event": "commented",
      "id": 267624474,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI2NzYyNDQ3NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/267624474",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2016-12-16T15:52:05Z",
      "updated_at": "2016-12-16T15:52:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Needs rebase",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-267624474",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonasschnelli",
        "id": 178464,
        "node_id": "MDQ6VXNlcjE3ODQ2NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonasschnelli",
        "html_url": "https://github.com/jonasschnelli",
        "followers_url": "https://api.github.com/users/jonasschnelli/followers",
        "following_url": "https://api.github.com/users/jonasschnelli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonasschnelli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonasschnelli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
        "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
        "repos_url": "https://api.github.com/users/jonasschnelli/repos",
        "events_url": "https://api.github.com/users/jonasschnelli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-02-08T16:14:42Z",
      "updated_at": "2017-02-08T16:14:42Z",
      "source": {
        "issue": {
          "id": 206222997,
          "node_id": "MDU6SXNzdWUyMDYyMjI5OTc=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9723",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9723/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9723/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9723/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/9723",
          "number": 9723,
          "state": "closed",
          "state_reason": "completed",
          "title": "Feature request: getnewaddress 'count'",
          "body": "Currently it is only possible to generate 1 address per command:\r\n`getnewaddress 'account'`\r\n\r\nI think it would be really useful to add an optional count in the command. Therefore, if someone wanted to generate e.g. 200 addresses, they could simply do so with a single call of this command.\r\n\r\nI'm also not sure why it still has 'account' as an argument considering that it's deprecated? \r\nBitcoin Core 0.13.2",
          "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "closed_at": "2017-11-14T22:09:04Z",
          "created_at": "2017-02-08T15:02:03Z",
          "updated_at": "2021-09-08T12:36:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 22625488,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MjI2MjU0ODg=",
      "url": null,
      "actor": null,
      "commit_id": "a2557ffb80543af5e92c3db03d257fe594b0d910",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Get a balance",
      "user": {
        "login": "Tintress15",
        "id": 12578172,
        "node_id": "MDQ6VXNlcjEyNTc4MTcy",
        "avatar_url": "https://avatars.githubusercontent.com/u/12578172?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Tintress15",
        "html_url": "https://github.com/Tintress15",
        "followers_url": "https://api.github.com/users/Tintress15/followers",
        "following_url": "https://api.github.com/users/Tintress15/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Tintress15/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Tintress15/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Tintress15/subscriptions",
        "organizations_url": "https://api.github.com/users/Tintress15/orgs",
        "repos_url": "https://api.github.com/users/Tintress15/repos",
        "events_url": "https://api.github.com/users/Tintress15/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Tintress15/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-22625488",
      "submitted_at": "2017-02-18T01:37:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-02-23T19:05:43Z",
      "updated_at": "2017-02-23T19:05:43Z",
      "source": {
        "issue": {
          "id": 209487719,
          "node_id": "MDU6SXNzdWUyMDk0ODc3MTk=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9826",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9826/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9826/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9826/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/9826",
          "number": 9826,
          "state": "closed",
          "state_reason": "completed",
          "title": "Intermittent failure of `import-rescan.py`",
          "body": "On master, the `import-rescan.py` test fails intermittently. See for example: https://travis-ci.org/bitcoin/bitcoin/jobs/203878010\r\n```\r\nimport-rescan.py:\r\nInitializing test directory /tmp/testzpotg5c7/46\r\nstart_node: bitcoind started, waiting for RPC to come up\r\nstart_node: RPC successfully started\r\nstart_node: bitcoind started, waiting for RPC to come up\r\nstart_node: RPC successfully started\r\nstart_node: bitcoind started, waiting for RPC to come up\r\nstart_node: RPC successfully started\r\nstart_node: bitcoind started, waiting for RPC to come up\r\nstart_node: RPC successfully started\r\nstart_node: bitcoind started, waiting for RPC to come up\r\nstart_node: RPC successfully started\r\nAssertion failed: not(False == True)\r\nStopping nodes\r\nNot cleaning up dir /tmp/testzpotg5c7/46\r\n...\r\n Shutdown: done\r\nFailed\r\nstderr:\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/test_framework/test_framework.py\", line 145, in main\r\n    self.run_test()\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/import-rescan.py\", line 172, in run_test\r\n    variant.check(variant.sent_txid, variant.sent_amount, 1)\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/import-rescan.py\", line 87, in check\r\n    assert_equal(\"involvesWatchonly\" not in tx, True)\r\n  File \"/home/travis/build/bitcoin/bitcoin/build/bitcoin-i686-pc-linux-gnu/qa/rpc-tests/test_framework/util.py\", line 529, in assert_equal\r\n    raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\nPass: False, Duration: 9 s\r\n```",
          "user": {
            "login": "laanwj",
            "id": 126646,
            "node_id": "MDQ6VXNlcjEyNjY0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laanwj",
            "html_url": "https://github.com/laanwj",
            "followers_url": "https://api.github.com/users/laanwj/followers",
            "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
            "organizations_url": "https://api.github.com/users/laanwj/orgs",
            "repos_url": "https://api.github.com/users/laanwj/repos",
            "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/laanwj/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "closed_at": "2017-02-27T07:46:51Z",
          "created_at": "2017-02-22T15:28:58Z",
          "updated_at": "2021-09-08T12:35:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-01T09:45:44Z",
      "updated_at": "2017-03-01T09:45:44Z",
      "source": {
        "issue": {
          "id": 210943348,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTA4NDQxOTMz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9894",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9894/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9894/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9894/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/9894",
          "number": 9894,
          "state": "closed",
          "state_reason": null,
          "title": "remove 'label' filter for rpc command help",
          "body": "No idea why it's there(which gives me some pause) since it's a sourceforge-era commit, but it seems useless and filters out any command with \"label\" in the name.",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9894",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/9894",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/9894.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/9894.patch"
          },
          "closed_at": "2017-03-02T09:08:07Z",
          "created_at": "2017-03-01T00:20:40Z",
          "updated_at": "2021-09-08T11:09:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-05T10:06:15Z",
      "updated_at": "2017-03-05T10:06:15Z",
      "source": {
        "issue": {
          "id": 28982757,
          "node_id": "MDU6SXNzdWUyODk4Mjc1Nw==",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3816",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3816/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3816/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/3816/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/3816",
          "number": 3816,
          "state": "closed",
          "state_reason": "completed",
          "title": "Remove bolt-on accounting system",
          "body": "The recent malleability issues exposed some cases not covered by the accounting system.  Rather than fix it, the consensus seems to lean towards scrapping the accounting system entirely, and returning to a system where keys may have labels (or tags, as I prefer to call them).\n\nThe accounting system can easily result in negative or odd balances if misused or misunderstood, which has happened in the field.  Use of raw tx API or direct spends exacerbates this.  Users are used to seemingly-odd practices of transferring imaginary money from a dummy account, to eliminate a negative number in some cases.\n\nPractically speaking, this seems likely to be a large, incompatible change to RPC.  This implies\n- other incompatible RPC changes are possible\n- the following line in rpcserver.cpp should be updated along standard REST API versioning conventions, changing the standard URI path from \"/\" to \"/v2/\" or somesuch.\n\n```\n        if (strURI != \"/\") {\n```\n",
          "user": {
            "login": "jgarzik",
            "id": 494411,
            "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgarzik",
            "html_url": "https://github.com/jgarzik",
            "followers_url": "https://api.github.com/users/jgarzik/followers",
            "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
            "organizations_url": "https://api.github.com/users/jgarzik/orgs",
            "repos_url": "https://api.github.com/users/jgarzik/repos",
            "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jgarzik/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 80,
          "closed_at": "2018-04-11T19:18:23Z",
          "created_at": "2014-03-07T17:24:59Z",
          "updated_at": "2021-09-08T12:28:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 284558409,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDU1ODQwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/284558409",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-06T22:42:00Z",
      "updated_at": "2017-03-06T22:42:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "Needs rebase again, sorry for not reviewing after the last rebase.",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-284558409",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 287168649,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzE2ODY0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/287168649",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-16T19:39:07Z",
      "updated_at": "2017-03-16T19:39:07Z",
      "author_association": "MEMBER",
      "body": "Concept reACK",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-287168649",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "milestoned",
      "id": 1003391248,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDEwMDMzOTEyNDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1003391248",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-16T19:47:14Z",
      "milestone": {
        "title": "0.15.0"
      }
    },
    {
      "event": "demilestoned",
      "id": 1003391249,
      "node_id": "MDE3OkRlbWlsZXN0b25lZEV2ZW50MTAwMzM5MTI0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1003391249",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-16T19:47:14Z",
      "milestone": {
        "title": "Future"
      }
    },
    {
      "event": "reviewed",
      "id": 27999741,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjc5OTk3NDE=",
      "url": null,
      "actor": null,
      "commit_id": "a2557ffb80543af5e92c3db03d257fe594b0d910",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Grr, posted on wrong PR...(and cant delete reviews?)",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-27999741",
      "submitted_at": "2017-03-21T00:30:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "added_to_project",
      "id": 1013778907,
      "node_id": "MDE5OkFkZGVkVG9Qcm9qZWN0RXZlbnQxMDEzNzc4OTA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1013778907",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-24T07:17:52Z",
      "project_card": {
        "id": 2207250,
        "url": "https://api.github.com/projects/columns/cards/2207250",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "commented",
      "id": 289144410,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTE0NDQxMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/289144410",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-24T21:13:34Z",
      "updated_at": "2017-03-24T21:13:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Needs rebase. Concept ACK",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-289144410",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "str4d",
        "id": 4993799,
        "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/str4d",
        "html_url": "https://github.com/str4d",
        "followers_url": "https://api.github.com/users/str4d/followers",
        "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
        "organizations_url": "https://api.github.com/users/str4d/orgs",
        "repos_url": "https://api.github.com/users/str4d/repos",
        "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/str4d/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-27T21:54:29Z",
      "updated_at": "2017-03-27T21:54:29Z",
      "source": {
        "issue": {
          "id": 217387018,
          "node_id": "MDU6SXNzdWUyMTczODcwMTg=",
          "url": "https://api.github.com/repos/zcash/zcash/issues/2215",
          "repository_url": "https://api.github.com/repos/zcash/zcash",
          "labels_url": "https://api.github.com/repos/zcash/zcash/issues/2215/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/zcash/zcash/issues/2215/comments",
          "events_url": "https://api.github.com/repos/zcash/zcash/issues/2215/events",
          "html_url": "https://github.com/zcash/zcash/issues/2215",
          "number": 2215,
          "state": "open",
          "state_reason": null,
          "title": "Add the ability to label addresses in the wallet",
          "body": "Upstream has been working to remove accounts (https://github.com/bitcoin/bitcoin/issues/3816), and is replacing them with labels (e.g. https://github.com/bitcoin/bitcoin/pull/7729). We disabled accounts before launch (#1454) to make things easier for us, but this is inhibiting usage of Zcash by a user who currently depends on the (deprecated) Bitcoin account APIs. They have requested that we add the ability to label addresses, to make it easier for them to support both Bitcoin and Zcash.",
          "user": {
            "login": "str4d",
            "id": 4993799,
            "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/str4d",
            "html_url": "https://github.com/str4d",
            "followers_url": "https://api.github.com/users/str4d/followers",
            "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
            "organizations_url": "https://api.github.com/users/str4d/orgs",
            "repos_url": "https://api.github.com/users/str4d/repos",
            "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/str4d/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 156615475,
              "node_id": "MDU6TGFiZWwxNTY2MTU0NzU=",
              "url": "https://api.github.com/repos/zcash/zcash/labels/A-wallet",
              "name": "A-wallet",
              "description": "Area: Wallet",
              "color": "f7e101",
              "default": false
            },
            {
              "id": 166754268,
              "node_id": "MDU6TGFiZWwxNjY3NTQyNjg=",
              "url": "https://api.github.com/repos/zcash/zcash/labels/C-upstream-port",
              "name": "C-upstream-port",
              "description": "Category: Changes that are ported from the Bitcoin Core codebase.",
              "color": "f5f1fd",
              "default": false
            },
            {
              "id": 310948738,
              "node_id": "MDU6TGFiZWwzMTA5NDg3Mzg=",
              "url": "https://api.github.com/repos/zcash/zcash/labels/usability",
              "name": "usability",
              "color": "fab8b7",
              "default": false
            },
            {
              "id": 336611909,
              "node_id": "MDU6TGFiZWwzMzY2MTE5MDk=",
              "url": "https://api.github.com/repos/zcash/zcash/labels/A-rpc-interface",
              "name": "A-rpc-interface",
              "description": "Area: RPC interface",
              "color": "f7e101",
              "default": false
            }
          ],
          "assignee": {
            "login": "str4d",
            "id": 4993799,
            "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/str4d",
            "html_url": "https://github.com/str4d",
            "followers_url": "https://api.github.com/users/str4d/followers",
            "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
            "organizations_url": "https://api.github.com/users/str4d/orgs",
            "repos_url": "https://api.github.com/users/str4d/repos",
            "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/str4d/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "str4d",
              "id": 4993799,
              "node_id": "MDQ6VXNlcjQ5OTM3OTk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/4993799?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/str4d",
              "html_url": "https://github.com/str4d",
              "followers_url": "https://api.github.com/users/str4d/followers",
              "following_url": "https://api.github.com/users/str4d/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/str4d/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/str4d/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/str4d/subscriptions",
              "organizations_url": "https://api.github.com/users/str4d/orgs",
              "repos_url": "https://api.github.com/users/str4d/repos",
              "events_url": "https://api.github.com/users/str4d/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/str4d/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "created_at": "2017-03-27T21:54:29Z",
          "updated_at": "2018-04-16T21:27:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 29591055,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk1OTEwNTU=",
      "url": null,
      "actor": null,
      "commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-29591055",
      "submitted_at": "2017-03-28T22:26:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "reviewed",
      "id": 29591895,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mjk1OTE4OTU=",
      "url": null,
      "actor": null,
      "commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "utack!\r\n\r\nOverall, looks good. Just nits from me really. Only thing I was concerned about is the proper behavior for watchonly addresses, perhaps some added documentation for that would be good.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-29591895",
      "submitted_at": "2017-03-28T22:55:57Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "NicolasDorier",
        "id": 3020646,
        "node_id": "MDQ6VXNlcjMwMjA2NDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NicolasDorier",
        "html_url": "https://github.com/NicolasDorier",
        "followers_url": "https://api.github.com/users/NicolasDorier/followers",
        "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
        "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
        "repos_url": "https://api.github.com/users/NicolasDorier/repos",
        "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-03-29T04:45:36Z",
      "updated_at": "2017-03-29T04:45:36Z",
      "source": {
        "issue": {
          "id": 214070190,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEwNjE5NDY0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9991",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9991/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9991/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9991/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/9991",
          "number": 9991,
          "state": "closed",
          "state_reason": null,
          "title": "listreceivedbyaddress Filter Address",
          "body": "Supersede https://github.com/bitcoin/bitcoin/pull/9503 created by @JeremyRubin , I will maintain it.",
          "user": {
            "login": "NicolasDorier",
            "id": 3020646,
            "node_id": "MDQ6VXNlcjMwMjA2NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3020646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NicolasDorier",
            "html_url": "https://github.com/NicolasDorier",
            "followers_url": "https://api.github.com/users/NicolasDorier/followers",
            "following_url": "https://api.github.com/users/NicolasDorier/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/NicolasDorier/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/NicolasDorier/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/NicolasDorier/subscriptions",
            "organizations_url": "https://api.github.com/users/NicolasDorier/orgs",
            "repos_url": "https://api.github.com/users/NicolasDorier/repos",
            "events_url": "https://api.github.com/users/NicolasDorier/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/NicolasDorier/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9991",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/9991",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/9991.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/9991.patch"
          },
          "closed_at": "2018-03-07T15:09:11Z",
          "created_at": "2017-03-14T13:23:34Z",
          "updated_at": "2021-09-08T11:51:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 292522820,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUyMjgyMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292522820",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-07T12:25:27Z",
      "updated_at": "2017-04-07T12:25:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "@laanwj, do you want to cherry pick my unit test into this PR? (https://github.com/ryanofsky/bitcoin/commit/2dac8eb0d915b4c04764eff100d81718b2cd9a90)\r\n\r\nIn [IRC recently](https://botbot.me/freenode/bitcoin-core-dev/msg/83565594/), you requested that people \"please review the *API*, not the code,\" and I think the unit test can help with this, because it demonstrates the API in action, covers various subtleties, and is also well commented.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-292522820",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1034005581,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAzNDAwNTU4MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1034005581",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-07T12:25:27Z"
    },
    {
      "event": "subscribed",
      "id": 1034005582,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMzQwMDU1ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1034005582",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-07T12:25:27Z"
    },
    {
      "event": "commented",
      "id": 292577814,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU3NzgxNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/292577814",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-07T16:03:04Z",
      "updated_at": "2017-04-07T16:03:04Z",
      "author_association": "MEMBER",
      "body": "> @laanwj, do you want to cherry pick my unit test into this PR? (ryanofsky@2dac8eb)\r\n\r\nYes, I will, thank you!",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-292577814",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1034357986,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTAzNDM1Nzk4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1034357986",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-07T16:03:04Z"
    },
    {
      "event": "subscribed",
      "id": 1034357987,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwMzQzNTc5ODc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1034357987",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-07T16:03:04Z"
    },
    {
      "event": "commented",
      "id": 296454888,
      "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjQ1NDg4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/296454888",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-04-23T16:26:44Z",
      "updated_at": "2017-04-23T16:26:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "API ACK. Still needs rebase :(",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-296454888",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 302820825,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjgyMDgyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/302820825",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-05-19T21:58:01Z",
      "updated_at": "2017-05-19T21:58:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "I expected to be able to attach multiple labels to a single address.",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-302820825",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 302854998,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg1NDk5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/302854998",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-05-20T06:43:22Z",
      "updated_at": "2017-05-20T06:43:22Z",
      "author_association": "MEMBER",
      "body": "> I expected to be able to attach multiple labels to a single address.\r\n\r\nThat is not possible in the GUI either, in the OP I've defined the scope as:\r\n\r\n> The general idea is to offer the same functionality as the GUI label system\r\n\r\nSuch functionality could be added in the future.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-302854998",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 302862044,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg2MjA0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/302862044",
      "actor": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-05-20T09:26:17Z",
      "updated_at": "2017-05-20T09:26:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nobody seems to have big problems with the API for a while. Perhaps it's time to rebase and start reviewing the code itself",
      "user": {
        "login": "jtimon",
        "id": 1008458,
        "node_id": "MDQ6VXNlcjEwMDg0NTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jtimon",
        "html_url": "https://github.com/jtimon",
        "followers_url": "https://api.github.com/users/jtimon/followers",
        "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
        "organizations_url": "https://api.github.com/users/jtimon/orgs",
        "repos_url": "https://api.github.com/users/jtimon/repos",
        "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jtimon/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-302862044",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1090552079,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTA5MDU1MjA3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1090552079",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-05-20T14:27:14Z"
    },
    {
      "event": "subscribed",
      "id": 1090552081,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEwOTA1NTIwODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1090552081",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-05-20T14:27:14Z"
    },
    {
      "event": "commented",
      "id": 307823982,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzgyMzk4Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/307823982",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-12T15:25:35Z",
      "updated_at": "2017-06-12T15:25:35Z",
      "author_association": "MEMBER",
      "body": "I wanted to test this so I rebased on master and cherry-picked Russ's test. I've pushed it here: https://github.com/jnewbery/bitcoin/tree/pr7729 . Feel free to reset onto that commit. Note that there were quite a few refactors (multiwallet, namespaces, database wrapper, JSONRPC request, rpc names args), so someone else should probably review the rebase to make sure I haven't missed anything.\r\n\r\nNote that the final test in Russ's test script currently fails. I added some trace to the script and see that the address returned by `getlabeladdress` isn't included in the list of addresses returned by `getaddressesbylabel`:\r\n\r\n```\r\n-146-> getaddressesbylabel [\"c\"]\r\n<-146- [0.000135] {\"n1HsWg6ANV5Z8SLojKNyjqCRf5saqQKQed\": {\"purpose\": \"receive\"}, \"mfYMvaXrHp2RUxe1q1PwRgS8AokYjgUSmf\": {\"purpose\": \"receive\"}, \"mhVHLa9KCHGMXHBNpyfAHNZXmwKaaTg6Fj\": {\"purpose\": \"receive\"}}\r\n-147-> getlabeladdress [\"c\"]\r\n<-147- [0.001559] \"mnvNe2eG3hmderC3y5E4SYLNnwWsYrSg1c\"\r\n-148-> getlabel [\"mnvNe2eG3hmderC3y5E4SYLNnwWsYrSg1c\"]\r\n<-148- [0.000136] {\"name\": \"c\", \"destdata\": {}, \"purpose\": \"receive\"}\r\n```\r\n\r\nI haven't yet dug into why that's the case.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-307823982",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 307881106,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzg4MTEwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/307881106",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-12T18:40:40Z",
      "updated_at": "2017-06-12T18:40:40Z",
      "author_association": "MEMBER",
      "body": "I've made a few more changes to rpcwallet.cpp to reflect more recent style guidelines (no `BOOST_FOREACH` and braces for if statements. I've also committed a fixup commit for the failing test case. @laanwj feel free to squash that if you're happy with it.\r\n\r\nOnce you've taken the changes I'll add my review comments.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-307881106",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1120036112,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTEyMDAzNjExMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1120036112",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-12T18:40:40Z"
    },
    {
      "event": "subscribed",
      "id": 1120036113,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExMjAwMzYxMTM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1120036113",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-12T18:40:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1122913505,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTEyMjkxMzUwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1122913505",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-14T09:19:47Z"
    },
    {
      "event": "commented",
      "id": 308374415,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMwODM3NDQxNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308374415",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-14T09:19:49Z",
      "updated_at": "2017-06-14T09:19:49Z",
      "author_association": "MEMBER",
      "body": "@jnewbery Thanks so much! Updated this pull to that branch.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-308374415",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1122913544,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTEyMjkxMzU0NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1122913544",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-14T09:19:49Z"
    },
    {
      "event": "subscribed",
      "id": 1122913547,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExMjI5MTM1NDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1122913547",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-14T09:19:49Z"
    },
    {
      "event": "commented",
      "id": 308454179,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMwODQ1NDE3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/308454179",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-14T14:45:20Z",
      "updated_at": "2017-06-14T14:45:20Z",
      "author_association": "MEMBER",
      "body": "needs rebase again! (although this one should be easier - just fixing the `BASE_SCRIPTS` list in test_runner.py)",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-308454179",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "reviewed",
      "id": 44049432,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDk0MzI=",
      "url": null,
      "actor": null,
      "commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "A few comments inline. More general feedback:\r\n\r\n1. I really don't like the concept of a 'label address'. It seems to go against the philosophy of 'labels are associated with addresses, instead of addresses associated with labels', and makes the distinction between labels and accounts more confusing.\r\nYou also mentioned in the OP *this would greatly simplify the code though - it would be impossible to get rid of the CAccount structure due to this.*.\r\nSo it sounds to me like removing label addresses makes the interface clearer for users and makes the implementation simpler, so let's just do it. https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-200219840 seems to be a sensible solution for miners using account addresses.\r\n\r\n2. I agree that users should be able to add multiple labels to an address. That can be done as a follow-up PR.\r\n\r\n3. You say in the OP **Do not use the deprecated account system and the label system with the same wallet at the same time.**. There doesn't appear to be any discussion yet on how to achieve this, or how to handle migrating from accounts to labels. One suggestion: hide these new RPCs with old wallet versions, add a new `enablelabels` RPC which upgrades the wallet to a new version, and on the new version, hide the account RPCs. The `enablelabels` RPC should describe the implications of moving from accounts to labels. I think this requires a bit more thought and discussion.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-44049432",
      "submitted_at": "2017-06-14T17:03:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1123701636,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTEyMzcwMTYzNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1123701636",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-14T17:10:38Z"
    },
    {
      "event": "reviewed",
      "id": 44358863,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNTg4NjM=",
      "url": null,
      "actor": null,
      "commit_id": "3098e7b8939ed8b1fdb6312e23350152dc2a22c9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-44358863",
      "submitted_at": "2017-06-15T17:15:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "commented",
      "id": 310896931,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg5NjkzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/310896931",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-25T11:18:55Z",
      "updated_at": "2017-06-25T11:18:55Z",
      "author_association": "MEMBER",
      "body": "So to summarize above discussion, the following changes should be made:\r\n- Add `listreceivedbylabel`, listing transactions to addresses that have a certain label\r\n- Remove the default label address. Discussion confirms my intuition that it's better to get rid of this. \r\n  - 'acc' database entries, as well as CAccount, would not be necessary for labels. After this change, labels have no metadata, so a lot of code can be simplified.\r\n- `setlabel` on an address that already has the same label should be a no-op\r\n- Documentation changes / nits\r\n\r\n>  RPC which upgrades the wallet to a new version, and on the new version, hide the account RPCs. The enablelabels RPC should describe the implications of moving from accounts to labels. I think this requires a bit more thought and discussion.\r\n\r\nAgree re: versioning. We already have a command line argument to upgrade the wallet version, `-upgradewallet`. Wouldn't that be enough?\r\nEither label or account RPCs could be usable based on the wallet version.\r\nI don't see why a RPC to do the upgrade would be preferable, it's something that will be done at most once.\r\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-310896931",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1144764878,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTE0NDc2NDg3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1144764878",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-06-29T18:35:09Z"
    },
    {
      "event": "mentioned",
      "id": 1154612104,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTE1NDYxMjEwNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1154612104",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-07T14:49:50Z"
    },
    {
      "event": "subscribed",
      "id": 1154612106,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExNTQ2MTIxMDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1154612106",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-07T14:49:50Z"
    },
    {
      "event": "reviewed",
      "id": 48625551,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjU1NTE=",
      "url": null,
      "actor": null,
      "commit_id": "0e3ef241d18593a9f67d4e5f37c22008cd9dc6b7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Partial review. Is this going forward?",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-48625551",
      "submitted_at": "2017-07-07T15:01:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "commented",
      "id": 313720486,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzcyMDQ4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/313720486",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-07T15:52:04Z",
      "updated_at": "2017-07-07T15:52:04Z",
      "author_association": "MEMBER",
      "body": "> We already have a command line argument to upgrade the wallet version, -upgradewallet. Wouldn't that be enough\r\n\r\nACK - yes this is enough.\r\n\r\nThe wallet startup command line arguments always seemed strange to me, and if we were building this from scratch we might implement upgradewallet as an RPC or an external tool. However, it makes sense to use the existing infrastructure.\r\n\r\n> Either label or account RPCs could be usable based on the wallet version.\r\n\r\n✅ sounds good to me.\r\n\r\nTwo additional points:\r\n\r\n1. Obviously documentation is key here. The wallet upgrade will effectively remove the accounts from the wallet, so we need to make sure users understand the implication before upgrading.\r\n2. When will we be able to remove the account code entirely? At that point will bitcoind no longer support wallets older than the new version? Is there precedence for how we deprecate wallet features like this?\r\n\r\n> Is this going forward?\r\n\r\nIt feels like we've missed the boat for 0.15. @laanwj - it'd be great to get this in early in the next cycle. I'll have some spare time in the next few weeks. Let me know if there's anything I can do to help here. I'm happy to help write and test the upgrade code.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-313720486",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1154722726,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTE1NDcyMjcyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1154722726",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-07T15:52:04Z"
    },
    {
      "event": "subscribed",
      "id": 1154722727,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExNTQ3MjI3Mjc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1154722727",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-07T15:52:04Z"
    },
    {
      "event": "removed_from_project",
      "id": 1158449291,
      "node_id": "MDIzOlJlbW92ZWRGcm9tUHJvamVjdEV2ZW50MTE1ODQ0OTI5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1158449291",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-11T09:44:39Z",
      "project_card": {
        "id": 2207250,
        "url": "https://api.github.com/projects/columns/cards/2207250",
        "project_id": 481835,
        "project_url": "https://api.github.com/projects/481835",
        "column_name": "Blockers"
      }
    },
    {
      "event": "milestoned",
      "id": 1158780732,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDExNTg3ODA3MzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1158780732",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-11T13:27:06Z",
      "milestone": {
        "title": "0.16.0"
      }
    },
    {
      "event": "demilestoned",
      "id": 1158780733,
      "node_id": "MDE3OkRlbWlsZXN0b25lZEV2ZW50MTE1ODc4MDczMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1158780733",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-11T13:27:06Z",
      "milestone": {
        "title": "0.15.0"
      }
    },
    {
      "event": "commented",
      "id": 317246483,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzI0NjQ4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/317246483",
      "actor": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-23T11:27:42Z",
      "updated_at": "2017-07-25T10:46:04Z",
      "author_association": "NONE",
      "body": "@laanwj `importaddress`, `importpubkey` and `importprivkey` have \"label\" arguments that currently set the account for an address. (To delete the old account for an address and create a new one, it's enough to just re-import the address.)  Won't these calls need to be updated as well? I don't see them in your patch.",
      "user": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-317246483",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1175141341,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTE3NTE0MTM0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1175141341",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-23T11:27:42Z"
    },
    {
      "event": "subscribed",
      "id": 1175141342,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExNzUxNDEzNDI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1175141342",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-23T11:27:42Z"
    },
    {
      "event": "commented",
      "id": 318817191,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxODgxNzE5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318817191",
      "actor": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-29T09:39:27Z",
      "updated_at": "2017-07-29T09:41:02Z",
      "author_association": "NONE",
      "body": "@jnewbery Since I got no reponse from @laanwj, I'll refer you to my above comment. The behavior I mentioned can be easily demonstrated with the following:\r\n\r\n\t$ bitcoin-cli importaddress n2FgXPKwuFkCXF946EnoxWJDWF2VwQ6q8J 'Label 1'\r\n\t$ bitcoin-cli listaccounts 0 true | grep 'Label 1'\r\n\t \"Label 1\": 0.00000000,\r\n\t$ bitcoin-cli importaddress n2FgXPKwuFkCXF946EnoxWJDWF2VwQ6q8J 'Label 2'\r\n\t$ bitcoin-cli listaccounts 0 true | grep 'Label 1'\r\n\t$ bitcoin-cli listaccounts 0 true | grep 'Label 2'\r\n\t \"Label 2\": 0.00000000,\r\n",
      "user": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-318817191",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1184464423,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTE4NDQ2NDQyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1184464423",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-29T09:39:27Z"
    },
    {
      "event": "subscribed",
      "id": 1184464424,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExODQ0NjQ0MjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1184464424",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-29T09:39:27Z"
    },
    {
      "event": "mentioned",
      "id": 1184464425,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTE4NDQ2NDQyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1184464425",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-29T09:39:27Z"
    },
    {
      "event": "subscribed",
      "id": 1184464426,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExODQ0NjQ0MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1184464426",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-29T09:39:27Z"
    },
    {
      "event": "commented",
      "id": 318873687,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg3MzY4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318873687",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-30T02:39:32Z",
      "updated_at": "2017-07-30T02:39:32Z",
      "author_association": "MEMBER",
      "body": "@mmgen : @laanwj is very busy with the 0.15 release right now, so I'm not surprised he hasn't updated this PR. I'm planning on picking this up early in 0.16 and I'll review your comments then. Any help with review/testing then will be very much appreciated!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-318873687",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1184676398,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTE4NDY3NjM5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1184676398",
      "actor": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-30T02:39:32Z"
    },
    {
      "event": "subscribed",
      "id": 1184676399,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExODQ2NzYzOTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1184676399",
      "actor": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-30T02:39:32Z"
    },
    {
      "event": "mentioned",
      "id": 1184676400,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTE4NDY3NjQwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1184676400",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-30T02:39:32Z"
    },
    {
      "event": "subscribed",
      "id": 1184676401,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExODQ2NzY0MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1184676401",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-30T02:39:32Z"
    },
    {
      "event": "commented",
      "id": 318894146,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg5NDE0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/318894146",
      "actor": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-30T10:59:57Z",
      "updated_at": "2017-07-30T10:59:57Z",
      "author_association": "NONE",
      "body": "@jnewbery Thanks! Will be ready to help when needed.",
      "user": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-318894146",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1184762388,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTE4NDc2MjM4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1184762388",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-30T10:59:57Z"
    },
    {
      "event": "subscribed",
      "id": 1184762390,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDExODQ3NjIzOTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1184762390",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-07-30T10:59:57Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-14T19:02:12Z",
      "updated_at": "2017-10-14T19:02:12Z",
      "source": {
        "issue": {
          "id": 265455600,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ2NTgxNDI5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11497",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11497/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11497/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11497/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/11497",
          "number": 11497,
          "state": "closed",
          "state_reason": null,
          "title": "Hide accounts system behind deprecation switch",
          "body": "Deprecate all accounts functionality and make it only accessible by using `-deprecatedrpc=accounts`.\r\n\r\nAccounts specific RPCs, account arguments, and account related results all require the `-deprecatedrpc=acocunts` startup option now in order to see account things.\r\n\r\nA couple of the tests use the accounts system for labeling things, so instead of changing those, I left them as is and set the tests to start the nodes with `-deprecatedrpc=accounts`. That switch can be removed as those RPCs are replaced with a labels system.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/33",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33/labels",
            "id": 2931889,
            "node_id": "MDk6TWlsZXN0b25lMjkzMTg4OQ==",
            "number": 33,
            "state": "closed",
            "title": "0.17.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 122,
            "created_at": "2017-11-22T18:54:09Z",
            "updated_at": "2018-11-28T21:03:57Z",
            "closed_at": "2018-10-14T23:21:13Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11497",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/11497",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/11497.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/11497.patch"
          },
          "closed_at": "2018-04-11T16:10:04Z",
          "created_at": "2017-10-14T01:48:33Z",
          "updated_at": "2021-09-08T11:53:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 336660069,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjY2MDA2OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/336660069",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-14T19:12:40Z",
      "updated_at": "2017-10-14T19:12:40Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, needs rebase.\r\n\r\nMaybe this and #11497 should be done together?\r\n\r\nEarlier in this thread, it was suggested that the version number be bumped to distinguish between whether to use accounts or wallets. Because of the HD wallets thing with the optional features in the version number, would we want to bump the version number (which would then mean only HD wallets can use labels) or do something else?",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-336660069",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 336911546,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjkxMTU0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/336911546",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-16T14:51:24Z",
      "updated_at": "2017-10-16T14:51:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "Should probably just drop the version number idea now that we have the `-deprecatedrpc` mechanism. Seems like adding versioning to the decision of which rpcs to enable would make the transition more complicated without providing a clear benefit.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-336911546",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "reviewed",
      "id": 69708512,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Njk3MDg1MTI=",
      "url": null,
      "actor": null,
      "commit_id": "0e3ef241d18593a9f67d4e5f37c22008cd9dc6b7",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "jamesscookk",
        "id": 25412787,
        "node_id": "MDQ6VXNlcjI1NDEyNzg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/25412787?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesscookk",
        "html_url": "https://github.com/jamesscookk",
        "followers_url": "https://api.github.com/users/jamesscookk/followers",
        "following_url": "https://api.github.com/users/jamesscookk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesscookk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesscookk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesscookk/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesscookk/orgs",
        "repos_url": "https://api.github.com/users/jamesscookk/repos",
        "events_url": "https://api.github.com/users/jamesscookk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesscookk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-69708512",
      "submitted_at": "2017-10-16T21:38:41Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "commented",
      "id": 338151842,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzODE1MTg0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338151842",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-20T09:12:59Z",
      "updated_at": "2017-10-20T09:17:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've rebased this on current master here, as well as fixed a few of the nits above: https://github.com/MeshCollider/bitcoin/tree/201710_labels_rebased\r\nFeel free to use that if it helps, and squash my commits into yours if needed :)\r\n\r\nStill to-do summary from comments:\r\n- Remove `getlabeladdress` RPC\r\n- Add `listreceivedbylabel` RPC\r\n- Incorporate #11497 to disable accounts at the same time (including renaming of `account` params to `label`)",
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-338151842",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 338164777,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzODE2NDc3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338164777",
      "actor": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-20T10:07:34Z",
      "updated_at": "2017-10-20T10:07:34Z",
      "author_association": "NONE",
      "body": "`importaddress`, `importpubkey` and `importprivkey` have 'label' arguments (see my note above) that currently set the account for the address. After the label API is introduced, will these now set the label, or the account? Since both APIs will continue to exist side-by-side for a time, this could be a source of potential confusion for users. My wallet uses `importaddress` to set the account, which I use as an alias for a given address.",
      "user": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-338164777",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 338167442,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzODE2NzQ0Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338167442",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-20T10:19:35Z",
      "updated_at": "2017-10-20T10:20:15Z",
      "author_association": "MEMBER",
      "body": "@mmgen \r\n> importaddress, importpubkey and importprivkey have 'label' arguments (see my note above) that currently set the account for the address. After the label API is introduced, will these now set the label, or the account?\r\n\r\nThe same arguments will be used for label (where it makes sense) to ease the transition and avoid unused holes in the argument list. This is mentioned in the OP.\r\nFor 0.16 it will be possible to switch between label and account API with a command line argument, but will default to labels. 0.17 will likely drop suppport for accounts completely.\r\n\r\n@MeshCollider \r\n> I've rebased this on current master here, as well as fixed a few of the nits above: \r\n\r\nThanks! Will take that over.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-338167442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1302743435,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMwMjc0MzQzNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1302743435",
      "actor": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-20T10:20:15Z"
    },
    {
      "event": "subscribed",
      "id": 1302743436,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMDI3NDM0MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1302743436",
      "actor": {
        "login": "mmgen",
        "id": 6071028,
        "node_id": "MDQ6VXNlcjYwNzEwMjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6071028?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mmgen",
        "html_url": "https://github.com/mmgen",
        "followers_url": "https://api.github.com/users/mmgen/followers",
        "following_url": "https://api.github.com/users/mmgen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mmgen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mmgen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mmgen/subscriptions",
        "organizations_url": "https://api.github.com/users/mmgen/orgs",
        "repos_url": "https://api.github.com/users/mmgen/repos",
        "events_url": "https://api.github.com/users/mmgen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mmgen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-20T10:20:15Z"
    },
    {
      "event": "mentioned",
      "id": 1302743437,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTMwMjc0MzQzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1302743437",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-20T10:20:15Z"
    },
    {
      "event": "subscribed",
      "id": 1302743438,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDEzMDI3NDM0Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1302743438",
      "actor": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-20T10:20:15Z"
    },
    {
      "event": "referenced",
      "id": 1303499704,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzMDM0OTk3MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1303499704",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b105fb9634ad9165552464d0d0ec8f5bb77cc3b0",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b105fb9634ad9165552464d0d0ec8f5bb77cc3b0",
      "created_at": "2017-10-20T18:08:24Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-20T18:09:26Z",
      "updated_at": "2017-10-20T18:09:26Z",
      "source": {
        "issue": {
          "id": 267259093,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ3ODYxOTAy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11536",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11536/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11536/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11536/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/11536",
          "number": 11536,
          "state": "closed",
          "state_reason": null,
          "title": "Rename account to label where appropriate",
          "body": "Rename account to label where appropriate\r\n\r\nThis change only updates strings and adds RPC aliases, but should simplify the implementation of address labels in https://github.com/bitcoin/bitcoin/pull/7729, by getting renaming out of the way and letting that change focus on semantics.\r\n\r\nThe difference between accounts and labels is that labels apply only to addresses, while accounts apply to both addresses and transactions (transactions have \"from\" and \"to\" accounts). The code associating accounts with transactions is clumsy and unreliable so we would like get rid of it.\r\n\r\n---\r\n\r\nThere is a rebased version of #7729 atop this PR at https://github.com/ryanofsky/bitcoin/commits/pr/label, see https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-338417139.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/33",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33/labels",
            "id": 2931889,
            "node_id": "MDk6TWlsZXN0b25lMjkzMTg4OQ==",
            "number": 33,
            "state": "closed",
            "title": "0.17.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 122,
            "created_at": "2017-11-22T18:54:09Z",
            "updated_at": "2018-11-28T21:03:57Z",
            "closed_at": "2018-10-14T23:21:13Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11536",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/11536",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/11536.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/11536.patch"
          },
          "closed_at": "2018-03-22T20:28:40Z",
          "created_at": "2017-10-20T18:09:26Z",
          "updated_at": "2021-09-08T12:44:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1304229979,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzMDQyMjk5Nzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1304229979",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cb7ef6fd5951b86fc706322a0c110a79a28d3543",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/cb7ef6fd5951b86fc706322a0c110a79a28d3543",
      "created_at": "2017-10-21T16:43:58Z"
    },
    {
      "event": "commented",
      "id": 338417139,
      "node_id": "MDEyOklzc3VlQ29tbWVudDMzODQxNzEzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/338417139",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-21T17:04:17Z",
      "updated_at": "2018-03-23T00:51:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased this on top of #11536 in https://github.com/ryanofsky/bitcoin/commits/pr/label. Has 2 commits:\r\n\r\n- 6a0d27412d9c1b16e4bdfc406ee1e7b0ee6a2a51 rpc: introduce 'label' API for wallet\r\n- fef41789e8d7293ccfd859bc90fa0a3b2484752d [wallet] Make setlabel idempotent",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-338417139",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "referenced",
      "id": 1305817948,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzMDU4MTc5NDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1305817948",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "62df1688ef91372efec864c93cdc8968bd7493cb",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/62df1688ef91372efec864c93cdc8968bd7493cb",
      "created_at": "2017-10-23T14:55:52Z"
    },
    {
      "event": "referenced",
      "id": 1306175659,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzMDYxNzU2NTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1306175659",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d7e0e284a173a56735f067b75038da3daecc622b",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d7e0e284a173a56735f067b75038da3daecc622b",
      "created_at": "2017-10-23T17:50:14Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2017-10-24T13:23:04Z",
      "updated_at": "2017-10-24T13:23:04Z",
      "source": {
        "issue": {
          "id": 268009530,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTQ4Mzc5ODc2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11552",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11552/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11552/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11552/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/11552",
          "number": 11552,
          "state": "closed",
          "state_reason": null,
          "title": "Improve wallet-accounts test",
          "body": "Add comments and\r\n\r\n- Verify sending to a account causes getaccountaddress to generate new addresses.\r\n- Verify sending to a account causes getreceivedbyaccount to return amount received.\r\n- Verify ways setaccount updates the accounts of existing addresses.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11552",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/11552",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/11552.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/11552.patch"
          },
          "closed_at": "2017-11-09T12:13:48Z",
          "created_at": "2017-10-24T12:19:49Z",
          "updated_at": "2021-09-08T11:30:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1360203104,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNjAyMDMxMDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1360203104",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a8e9ac981aeebcd482277115190374227c8be0b8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/a8e9ac981aeebcd482277115190374227c8be0b8",
      "created_at": "2017-11-27T21:52:01Z"
    },
    {
      "event": "referenced",
      "id": 1366779736,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNjY3Nzk3MzY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1366779736",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d31cc7fcb29f49c5e61ccd3fa23dea3850fea83f",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d31cc7fcb29f49c5e61ccd3fa23dea3850fea83f",
      "created_at": "2017-12-01T00:14:48Z"
    },
    {
      "event": "referenced",
      "id": 1366906117,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNjY5MDYxMTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1366906117",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "93b303cf55bc0370c578be878bc68abb87066b09",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/93b303cf55bc0370c578be878bc68abb87066b09",
      "created_at": "2017-12-01T02:20:14Z"
    },
    {
      "event": "referenced",
      "id": 1366918661,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNjY5MTg2NjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1366918661",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b6753cc2fead013b1ea1442af0acc3f2c356a64a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b6753cc2fead013b1ea1442af0acc3f2c356a64a",
      "created_at": "2017-12-01T02:34:38Z"
    },
    {
      "event": "referenced",
      "id": 1366924347,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNjY5MjQzNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1366924347",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d15bc6857c7a3e50cdd0ca757a0d41273df2c182",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d15bc6857c7a3e50cdd0ca757a0d41273df2c182",
      "created_at": "2017-12-01T02:40:49Z"
    },
    {
      "event": "referenced",
      "id": 1368376582,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDEzNjgzNzY1ODI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1368376582",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8f3f7764e03b89fc46f347377633f2b13c07635f",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/8f3f7764e03b89fc46f347377633f2b13c07635f",
      "created_at": "2017-12-01T20:29:39Z"
    },
    {
      "event": "referenced",
      "id": 1406666281,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MDY2NjYyODE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1406666281",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "52dec73c24ba46946dacc0970437aa33891d7454",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/52dec73c24ba46946dacc0970437aa33891d7454",
      "created_at": "2018-01-02T18:06:04Z"
    },
    {
      "event": "referenced",
      "id": 1409903306,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MDk5MDMzMDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1409903306",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d10545ef080fda50216dc791578b05ee6b1db075",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/d10545ef080fda50216dc791578b05ee6b1db075",
      "created_at": "2018-01-04T16:54:53Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-05T12:27:52Z",
      "updated_at": "2018-01-05T12:27:52Z",
      "source": {
        "issue": {
          "id": 260465815,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTQzMDIxMjQw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11403",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11403/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11403/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11403/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/11403",
          "number": 11403,
          "state": "closed",
          "state_reason": null,
          "title": "SegWit wallet support",
          "body": "This implements a minimum viable implementation of SegWit wallet support, based on top of #11389, and includes part of the functionality from #11089.\r\n\r\nTwo new configuration options are added:\r\n* `-addresstype`, with options `legacy`, `p2sh`, and `bech32`. It controls what kind of addresses are produced by `getnewaddress`, `getaccountaddress`, and `createmultisigaddress`.\r\n* `-changetype`, with the same options, and by default equal to `-addresstype`, that controls what kind of change is used.\r\n\r\nAll wallet private and public keys can be used for any type of address. Support for address types dependent on different derivation paths will need a major overhaul of how our internal detection of outputs work. I expect that that will happen for a next major version.\r\n\r\nThe above also applies to imported keys, as having a distinction there but not for normal operations is a disaster for testing, and probably for comprehension of users. This has some ugly effects, like needing to associate the provided label to `importprivkey` with each style address for the corresponding key.\r\n\r\nTo deal with witness outputs requiring a corresponding redeemscript in wallet, three approaches are used:\r\n* All SegWit addresses created through `getnewaddress` or multisig RPCs explicitly get their redeemscripts added to the wallet file. This means that downgrading after creating a witness address will work, as long as the wallet file is up to date.\r\n* All SegWit keys in the wallet get an _implicit_ redeemscript added, without it being written to the file. This means recovery of an old backup will work, as long as you use new software.\r\n* All keypool keys that are seen used in transactions explicitly get their redeemscripts added to the wallet files. This means that downgrading after recovering from a backup that includes a witness address will work.\r\n\r\nThese approaches correspond to solutions 3a, 1a, and 5a respectively from https://gist.github.com/sipa/125cfa1615946d0c3f3eec2ad7f250a2. As argued there, there is no full solution for dealing with the case where you both downgrade and restore a backup, so that's also not implemented.\r\n\r\n`dumpwallet`, `importwallet`, `importmulti`, `signmessage` and `verifymessage` don't work with SegWit addresses yet. They're remaining TODOs, for this PR or a follow-up. Because of that, several tests unexpectedly run with `-addresstype=legacy` for now.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/30",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/30",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/30/labels",
            "id": 2626187,
            "node_id": "MDk6TWlsZXN0b25lMjYyNjE4Nw==",
            "number": 30,
            "state": "closed",
            "title": "0.16.0",
            "description": "This will be the release of segwit wallet. 🎉 ",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 70,
            "created_at": "2017-07-06T19:58:41Z",
            "updated_at": "2018-03-07T16:28:13Z",
            "closed_at": "2018-03-07T16:28:13Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 91,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11403",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/11403",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/11403.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/11403.patch"
          },
          "closed_at": "2018-01-11T06:56:15Z",
          "created_at": "2017-09-26T01:49:42Z",
          "updated_at": "2022-02-15T10:31:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 355739097,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTczOTA5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355739097",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-06T10:51:35Z",
      "updated_at": "2018-01-06T10:51:35Z",
      "author_association": "MEMBER",
      "body": "Can we haz this for 0.16?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-355739097",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "referenced",
      "id": 1412370133,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MTIzNzAxMzM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1412370133",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "709f61a2774b289496d34c78dfde34d2e4ed0244",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/709f61a2774b289496d34c78dfde34d2e4ed0244",
      "created_at": "2018-01-06T11:09:29Z"
    },
    {
      "event": "referenced",
      "id": 1412370162,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MTIzNzAxNjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1412370162",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "ca202db9f56fc418669b8f39e3af4bb924ef16c1",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/ca202db9f56fc418669b8f39e3af4bb924ef16c1",
      "created_at": "2018-01-06T11:09:39Z"
    },
    {
      "event": "referenced",
      "id": 1412371312,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MTIzNzEzMTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1412371312",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7faf50634128241838ffcaa44b833ee3371ba2b1",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/7faf50634128241838ffcaa44b833ee3371ba2b1",
      "created_at": "2018-01-06T11:15:50Z"
    },
    {
      "event": "commented",
      "id": 355740559,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTc0MDU1OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355740559",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-06T11:22:21Z",
      "updated_at": "2018-01-06T11:22:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Can we haz this for 0.16?\r\n\r\nI think the best way to move this forward would be to review and merge #11536, which gets account -> label renaming out of the way so this PR can be small and simple and doesn't need to be constantly rebased.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-355740559",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 355779506,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTc3OTUwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/355779506",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-06T21:36:20Z",
      "updated_at": "2018-01-06T21:36:20Z",
      "author_association": "MEMBER",
      "body": "0.17, not 0.16. 0.16 is supposed to be the intermediate segwit wallet\nrelease, I'd strongly prefer to not add any other features for it that\npotentially hold it up longer.\n\nOn Jan 6, 2018 11:51, \"Pieter Wuille\" <notifications@github.com> wrote:\n\n> Can we haz this for 0.16?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-355739097>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAHutpkOslEiyC81Ta-E4I1OTix7NPwBks5tH1A8gaJpZM4H1S2Y>\n> .\n>\n",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-355779506",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "demilestoned",
      "id": 1412707925,
      "node_id": "MDE3OkRlbWlsZXN0b25lZEV2ZW50MTQxMjcwNzkyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1412707925",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-07T11:46:34Z",
      "milestone": {
        "title": "0.16.0"
      }
    },
    {
      "event": "milestoned",
      "id": 1412707926,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDE0MTI3MDc5MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1412707926",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-07T11:46:34Z",
      "milestone": {
        "title": "0.17.0"
      }
    },
    {
      "event": "referenced",
      "id": 1419586699,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MTk1ODY2OTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1419586699",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b387136f8b6ce1c1b3dd93b09b86e481533b2d63",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b387136f8b6ce1c1b3dd93b09b86e481533b2d63",
      "created_at": "2018-01-11T11:33:51Z"
    },
    {
      "event": "referenced",
      "id": 1419805903,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MTk4MDU5MDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1419805903",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "85aa8a7d8a4821663cfa633a3fd207ddb715b401",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/85aa8a7d8a4821663cfa633a3fd207ddb715b401",
      "created_at": "2018-01-11T13:50:58Z"
    },
    {
      "event": "referenced",
      "id": 1420316072,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MjAzMTYwNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1420316072",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0e2537eda0cebbb1bce92fc679038c4e5e6c97e3",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/0e2537eda0cebbb1bce92fc679038c4e5e6c97e3",
      "created_at": "2018-01-11T18:16:25Z"
    },
    {
      "event": "referenced",
      "id": 1426293270,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MjYyOTMyNzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1426293270",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4f91d7d7562b728495f4d5659027f0566d3c9c2c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/4f91d7d7562b728495f4d5659027f0566d3c9c2c",
      "created_at": "2018-01-16T14:50:12Z"
    },
    {
      "event": "referenced",
      "id": 1428904888,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0Mjg5MDQ4ODg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1428904888",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "3cafe5db76a1aaa6df7555925eb3698445a38d4c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/3cafe5db76a1aaa6df7555925eb3698445a38d4c",
      "created_at": "2018-01-17T18:43:49Z"
    },
    {
      "event": "commented",
      "id": 358575739,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODU3NTczOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358575739",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-18T08:38:43Z",
      "updated_at": "2018-01-18T08:39:20Z",
      "author_association": "MEMBER",
      "body": "The rebased version seems quite different from this (or at least from the description), yet is relevant in order to understand #11536. Maybe this PR should be closed and replaced?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-358575739",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 358579633,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODU3OTYzMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358579633",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-18T08:54:42Z",
      "updated_at": "2018-01-18T08:55:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> The rebased version seems quite different from this (or at least from the description), yet is relevant in order to understand #11536. Maybe this PR should be closed and replaced?\r\n\r\nThis should not be true. The rebased version Iinked in my comment above https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-338417139, has the exact same code changes as the current version of this PR, plus some additional \"account\" -> \"label\" renames for some \"account\" occurrences missed here. #11536 + #7729 should be a pure superset of #7729.\r\n\r\nIf there are any actual differences that you see, please point them out in #11536 or here so I can fix my branch.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-358579633",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 358584109,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODU4NDEwOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358584109",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-18T09:12:59Z",
      "updated_at": "2018-01-18T09:12:59Z",
      "author_association": "MEMBER",
      "body": "Maybe it's only the description of this PR that's out of date. In particular this list suggests that label RPC commands are a subset of the original account commands:\r\n \r\n<img width=\"675\" alt=\"schermafbeelding 2018-01-18 om 10 10 48\" src=\"https://user-images.githubusercontent.com/10217/35089669-ec82bf90-fc37-11e7-8927-e651faba2364.png\">\r\n\r\nWhereas the actual code and commit messages don't remove any methods.\r\n\r\n",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-358584109",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 358587097,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODU4NzA5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/358587097",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-01-18T09:24:35Z",
      "updated_at": "2018-01-18T09:25:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "The description at the top of this PR is slightly out of date. It should be edited to match the description in the actual commit message, which should be fully up to date.\r\n\r\n> Whereas the actual code and commit messages don't remove any methods.\r\n\r\nI think you are taking \"remove\" in the description too literally. Perhaps it could be rephrased. This PR is adding label functions, not removing existing account functions (that meant to be done later in order to preserve compatibility). When the description says \"remove\" it is just referring to not adding a new label function corresponding to an existing account function.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-358587097",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "referenced",
      "id": 1429985538,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0Mjk5ODU1Mzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1429985538",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a4291c56957fd1254e788184702a85307905c10c",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4291c56957fd1254e788184702a85307905c10c",
      "created_at": "2018-01-18T09:27:16Z"
    },
    {
      "event": "referenced",
      "id": 1430218924,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MzAyMTg5MjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1430218924",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "59da7c220154c8764294786a8c1f3bdc53a62c02",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/59da7c220154c8764294786a8c1f3bdc53a62c02",
      "created_at": "2018-01-18T11:43:23Z"
    },
    {
      "event": "referenced",
      "id": 1430710807,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0MzA3MTA4MDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1430710807",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a87969582ea422fcaaa12410a192ed4194dafe38",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/a87969582ea422fcaaa12410a192ed4194dafe38",
      "created_at": "2018-01-18T16:03:31Z"
    },
    {
      "event": "referenced",
      "id": 1441964721,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0NDE5NjQ3MjE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1441964721",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e001e172923f71e0baf148340ed11bbcd28d9356",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/e001e172923f71e0baf148340ed11bbcd28d9356",
      "created_at": "2018-01-25T16:13:31Z"
    },
    {
      "event": "referenced",
      "id": 1441966034,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0NDE5NjYwMzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1441966034",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "450d39ec20087712447995311e273867ca05cb6d",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/450d39ec20087712447995311e273867ca05cb6d",
      "created_at": "2018-01-25T16:14:08Z"
    },
    {
      "event": "referenced",
      "id": 1454047494,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0NTQwNDc0OTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1454047494",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "44eb4b4122462290953f9b012eabb7b89c55e35d",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/44eb4b4122462290953f9b012eabb7b89c55e35d",
      "created_at": "2018-02-01T22:43:31Z"
    },
    {
      "event": "referenced",
      "id": 1470122325,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0NzAxMjIzMjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1470122325",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "52d6da74fd405efa7dca6091f4562a9598c3a8f1",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/52d6da74fd405efa7dca6091f4562a9598c3a8f1",
      "created_at": "2018-02-12T18:48:57Z"
    },
    {
      "event": "referenced",
      "id": 1470153917,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0NzAxNTM5MTc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1470153917",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "63d296598be7933cc9175534c904d3c160ecbfcc",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/63d296598be7933cc9175534c904d3c160ecbfcc",
      "created_at": "2018-02-12T19:05:48Z"
    },
    {
      "event": "referenced",
      "id": 1474557329,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0NzQ1NTczMjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1474557329",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "435f535222e3bc21865f2283c92b45d7b87756e5",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/435f535222e3bc21865f2283c92b45d7b87756e5",
      "created_at": "2018-02-14T19:45:00Z"
    },
    {
      "event": "referenced",
      "id": 1489293696,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE0ODkyOTM2OTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1489293696",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "4c8e3265b26bd437fa1f9f650e457c5b4bcbad4d",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/4c8e3265b26bd437fa1f9f650e457c5b4bcbad4d",
      "created_at": "2018-02-23T15:21:50Z"
    },
    {
      "event": "referenced",
      "id": 1509170315,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MDkxNzAzMTU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1509170315",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "5217956f1d27b40adcaa8307899d98ce6ff276d8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/5217956f1d27b40adcaa8307899d98ce6ff276d8",
      "created_at": "2018-03-07T15:44:36Z"
    },
    {
      "event": "referenced",
      "id": 1509175211,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MDkxNzUyMTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1509175211",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8e7396f8dd464081949497f648ad0c1d20bd5254",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/8e7396f8dd464081949497f648ad0c1d20bd5254",
      "created_at": "2018-03-07T15:46:23Z"
    },
    {
      "event": "commented",
      "id": 371641622,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTY0MTYyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/371641622",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-08T22:09:20Z",
      "updated_at": "2018-03-08T22:09:35Z",
      "author_association": "MEMBER",
      "body": "Can you add a remark at the top that this (maybe) depends on #11536?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-371641622",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "referenced",
      "id": 1519405479,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MTk0MDU0Nzk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1519405479",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "df650a2c56bbb43ac4ce0b33ae89e8889ec775da",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/df650a2c56bbb43ac4ce0b33ae89e8889ec775da",
      "created_at": "2018-03-13T19:09:51Z"
    },
    {
      "event": "referenced",
      "id": 1519420678,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MTk0MjA2Nzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1519420678",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "10c3a14e9e728dce7467203ca7131c79e3a1ded0",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/10c3a14e9e728dce7467203ca7131c79e3a1ded0",
      "created_at": "2018-03-13T19:17:44Z"
    },
    {
      "event": "referenced",
      "id": 1524266734,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MjQyNjY3MzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1524266734",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "947e86d171f6bf2738be9647a7ea6e0a256e2c7a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/947e86d171f6bf2738be9647a7ea6e0a256e2c7a",
      "created_at": "2018-03-15T20:48:17Z"
    },
    {
      "event": "referenced",
      "id": 1528905147,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1Mjg5MDUxNDc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1528905147",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "dea1bab4e47a61c41d083b7de2740fcf461bbce6",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/dea1bab4e47a61c41d083b7de2740fcf461bbce6",
      "created_at": "2018-03-19T16:18:35Z"
    },
    {
      "event": "referenced",
      "id": 1529230700,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MjkyMzA3MDA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1529230700",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "045eeb887092a631d49194e743859b1da84c1d5d",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/045eeb887092a631d49194e743859b1da84c1d5d",
      "created_at": "2018-03-19T18:38:10Z"
    },
    {
      "event": "referenced",
      "id": 1529233249,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MjkyMzMyNDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1529233249",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "39f5cf82aded7b628d6c8974a46ab0bfc2fdc976",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/39f5cf82aded7b628d6c8974a46ab0bfc2fdc976",
      "created_at": "2018-03-19T18:39:22Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTBkMjc0MTJkOWMxYjE2ZTRiZGZjNDA2ZWUxZTdiMGVlNmEyYTUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a0d27412d9c1b16e4bdfc406ee1e7b0ee6a2a51",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6a0d27412d9c1b16e4bdfc406ee1e7b0ee6a2a51",
      "tree": {
        "sha": "8d1d56ef7d2f830a871a12d2508f249993ef77a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d1d56ef7d2f830a871a12d2508f249993ef77a1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cead84b72d27517338ac3c49eaaed4db07352f41",
          "sha": "cead84b72d27517338ac3c49eaaed4db07352f41",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cead84b72d27517338ac3c49eaaed4db07352f41"
        }
      ],
      "message": "rpc: introduce 'label' API for wallet\n\nAdd label API to wallet RPC.\n\nThis is one step towards #3816 (\"Remove bolt-on account system\") although it doesn't\nactually remove anything yet.\n\nThese initially mirror the account functions, with the following differences:\n\n- These functions aren't DEPRECATED in the help\n- Help mentions 'label' instead of accounts. In the language used, labels are\n  associated with addresses, instead of addresses associated with labels. (unlike\n  with accounts.)\n- Labels have no balance\n  - No balances in `listlabels`\n  - `listlabels` has no minconf or watchonly argument\n- Like in the GUI, labels can be set on any address, not just receiving addreses\n- Unlike accounts, labels can be deleted.\n  Being unable to delete them is a common annoyance (see #1231).\n  Currently only by reassigning all addresses using `setlabel`, but an explicit\n  call `deletelabel` which assigns all address to the default label may make\n  sense.",
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-03-22T20:27:53Z"
      },
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-03-21T15:55:02Z"
      },
      "sha": "6a0d27412d9c1b16e4bdfc406ee1e7b0ee6a2a51"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWY0MTc4OWU4ZDcyOTNjY2ZkODU5YmM5MGZhMGEzYjI0ODQ3NTJk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "tree": {
        "sha": "109e8272d52a6a3369df813d4cef50eb9b2ed2d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/109e8272d52a6a3369df813d4cef50eb9b2ed2d2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a0d27412d9c1b16e4bdfc406ee1e7b0ee6a2a51",
          "sha": "6a0d27412d9c1b16e4bdfc406ee1e7b0ee6a2a51",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6a0d27412d9c1b16e4bdfc406ee1e7b0ee6a2a51"
        }
      ],
      "message": "[wallet] Make setlabel idempotent\n\nPrevent setlabel calls on an address that already has the same label, and which\nis the already the default \"label address\" of that label, from generating a\nnew default address.\n\nThis way calling setlabel on an address that already has the specified label is\na no-op.\n\nChange suggested by Russell Yanofsky <russ@yanofsky.org> in\nhttps://github.com/bitcoin/bitcoin/pull/7729#discussion_r92064042",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-03-22T20:27:53Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-06-12T18:17:23Z"
      },
      "sha": "fef41789e8d7293ccfd859bc90fa0a3b2484752d"
    },
    {
      "event": "referenced",
      "id": 1536536770,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MzY1MzY3NzA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1536536770",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "cead84b72d27517338ac3c49eaaed4db07352f41",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cead84b72d27517338ac3c49eaaed4db07352f41",
      "created_at": "2018-03-22T20:29:09Z"
    },
    {
      "event": "referenced",
      "id": 1536867325,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE1MzY4NjczMjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1536867325",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "fd249e199f8a19079b14c52f1f33897879c45a1b",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/fd249e199f8a19079b14c52f1f33897879c45a1b",
      "created_at": "2018-03-23T00:16:01Z"
    },
    {
      "event": "commented",
      "id": 375504864,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTUwNDg2NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375504864",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-23T00:55:30Z",
      "updated_at": "2018-03-23T00:55:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased PR at https://github.com/ryanofsky/bitcoin/commits/pr/label:\r\n\r\n- 6a0d27412d9c1b16e4bdfc406ee1e7b0ee6a2a51 rpc: introduce 'label' API for wallet\r\n- fef41789e8d7293ccfd859bc90fa0a3b2484752d [wallet] Make setlabel idempotent",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-375504864",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 1537667107,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MTUzNzY2NzEwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1537667107",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-23T11:42:58Z"
    },
    {
      "event": "commented",
      "id": 375633491,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTYzMzQ5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/375633491",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-23T11:43:30Z",
      "updated_at": "2018-03-23T11:43:30Z",
      "author_association": "MEMBER",
      "body": "@ryanofsky Thank you! Replaced the branch with that one.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-375633491",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1537667848,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTUzNzY2Nzg0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1537667848",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-23T11:43:30Z"
    },
    {
      "event": "subscribed",
      "id": 1537667851,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1Mzc2Njc4NTE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1537667851",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-23T11:43:30Z"
    },
    {
      "event": "reviewed",
      "id": 106672390,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA2NjcyMzkw",
      "url": null,
      "actor": null,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-106672390",
      "submitted_at": "2018-03-23T23:06:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-27T14:23:18Z",
      "updated_at": "2018-03-27T14:23:18Z",
      "source": {
        "issue": {
          "id": 308710878,
          "node_id": "MDU6SXNzdWUzMDg3MTA4Nzg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12796",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12796/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12796/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12796/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/12796",
          "number": 12796,
          "state": "closed",
          "state_reason": "completed",
          "title": "Pay-to-self addresses don't display, can't be added to address book",
          "body": "Found in `master c948dc8f4285e27d8c0f3553d9d427b2a7b01b77`\r\n\r\nAn address generated by the wallet for receiving isn't displayed by the address book and can't be added. When the user attempts to add it, an error message is presented saying 'The entered address \"...\" is already in the address book.'\r\n\r\nI'm unsure if this behavior is unintentional or not, but it's pretty confusing.\r\n\r\n### Steps to reproduce\r\n\r\nGenerate a receiving address\r\n\r\n![selection_008](https://user-images.githubusercontent.com/73197/37929024-c764dacc-310c-11e8-80cc-dd2d8127e988.jpg)\r\n\r\nOpen the address book from the send interface. Note that the previously generated address is missing.\r\n\r\n![selection_009](https://user-images.githubusercontent.com/73197/37929056-dbd8a524-310c-11e8-93c0-5916aa1494ac.jpg)\r\n\r\nAttempt to add the previously generated address\r\n\r\n![selection_010](https://user-images.githubusercontent.com/73197/37929097-fa692d38-310c-11e8-9d8b-cd8208ce153e.jpg)\r\n\r\nHit warning\r\n\r\n![selection_011](https://user-images.githubusercontent.com/73197/37929106-017740f6-310d-11e8-83c7-c2a2d1c09f75.jpg)\r\n\r\n\r\n",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 5,
          "closed_at": "2018-03-27T15:06:24Z",
          "created_at": "2018-03-26T19:49:05Z",
          "updated_at": "2021-09-08T12:28:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 107626321,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA3NjI2MzIx",
      "url": null,
      "actor": null,
      "commit_id": "6a0d27412d9c1b16e4bdfc406ee1e7b0ee6a2a51",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK fef41789e8.\r\n\r\nI just noticed that changing or removing a label in the console live updates the Receiving Addresses UI, nice! For a future PR we should figure out what to do with the Receive and Transaction tab \"labels\", as these seem to use an independent mechanism.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-107626321",
      "submitted_at": "2018-03-28T10:47:11Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "commented",
      "id": 376845290,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njg0NTI5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376845290",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-28T10:53:39Z",
      "updated_at": "2018-03-28T10:53:39Z",
      "author_association": "MEMBER",
      "body": "> For a future PR we should figure out what to do with the Receive and Transaction tab \"labels\", as these seem to use an independent mechanism.\r\n\r\nTransaction tab labels use the same mechanism so it would be a matter of listening to a notification and repainting. Receive requests are stored separately, because they have extra metadata besides a label.",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-376845290",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "commented",
      "id": 376847600,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njg0NzYwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/376847600",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-03-28T11:03:02Z",
      "updated_at": "2018-03-28T11:03:02Z",
      "author_association": "MEMBER",
      "body": "Ah yes, I see it. Restarting QT doesn't change or remove a label from Requested payments history for me, as you point out. Switching tabs is enough to update labels in the transactions view.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-376847600",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "reviewed",
      "id": 107700437,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MTA3NzAwNDM3",
      "url": null,
      "actor": null,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Comments inline.\r\n\r\nFeel free to squash my second commit into the first.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#pullrequestreview-107700437",
      "submitted_at": "2018-03-28T15:05:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-03T20:56:26Z",
      "updated_at": "2018-04-03T20:56:26Z",
      "source": {
        "issue": {
          "id": 302095447,
          "node_id": "MDU6SXNzdWUzMDIwOTU0NDc=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12594",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12594/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12594/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12594/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/12594",
          "number": 12594,
          "state": "open",
          "state_reason": null,
          "title": "Add RPC to set transaction comment",
          "body": "I'm trying to merge wallet files together using RPC API calls. It seems that it is not possible to edit the label of a wallet transaction. The GUI appears to be able to do this. I request this as a new feature.\r\n\r\nThere's a difference between labeling the receive/send address and labeling the transaction. This is because there can be multiple transactions to/from the same address. So there's still a need to label transactions in contrast to simply labeling addresses using the accounts feature.",
          "user": {
            "login": "GSPP",
            "id": 12032350,
            "node_id": "MDQ6VXNlcjEyMDMyMzUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/12032350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GSPP",
            "html_url": "https://github.com/GSPP",
            "followers_url": "https://api.github.com/users/GSPP/followers",
            "following_url": "https://api.github.com/users/GSPP/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/GSPP/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/GSPP/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/GSPP/subscriptions",
            "organizations_url": "https://api.github.com/users/GSPP/orgs",
            "repos_url": "https://api.github.com/users/GSPP/repos",
            "events_url": "https://api.github.com/users/GSPP/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/GSPP/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignee": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "pinheadmz",
              "id": 2084648,
              "node_id": "MDQ6VXNlcjIwODQ2NDg=",
              "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/pinheadmz",
              "html_url": "https://github.com/pinheadmz",
              "followers_url": "https://api.github.com/users/pinheadmz/followers",
              "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
              "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
              "repos_url": "https://api.github.com/users/pinheadmz/repos",
              "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "NONE",
          "locked": false,
          "comments": 7,
          "created_at": "2018-03-04T15:39:31Z",
          "updated_at": "2023-05-03T19:35:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 378743979,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODc0Mzk3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378743979",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-04T21:02:00Z",
      "updated_at": "2018-04-04T21:02:00Z",
      "author_association": "MEMBER",
      "body": "@laanwj - it seems like you're struggling to find time to maintain this PR.\r\n\r\nI'd like to push this forwards and make sure it gets in for v0.17. Would you object if I took ownership?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-378743979",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1557441389,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU1NzQ0MTM4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1557441389",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-04T21:02:00Z"
    },
    {
      "event": "subscribed",
      "id": 1557441390,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NTc0NDEzOTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1557441390",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-04T21:02:00Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "2a5A1Ghu1",
        "id": 13294167,
        "node_id": "MDQ6VXNlcjEzMjk0MTY3",
        "avatar_url": "https://avatars.githubusercontent.com/u/13294167?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/2a5A1Ghu1",
        "html_url": "https://github.com/2a5A1Ghu1",
        "followers_url": "https://api.github.com/users/2a5A1Ghu1/followers",
        "following_url": "https://api.github.com/users/2a5A1Ghu1/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/2a5A1Ghu1/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/2a5A1Ghu1/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/2a5A1Ghu1/subscriptions",
        "organizations_url": "https://api.github.com/users/2a5A1Ghu1/orgs",
        "repos_url": "https://api.github.com/users/2a5A1Ghu1/repos",
        "events_url": "https://api.github.com/users/2a5A1Ghu1/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/2a5A1Ghu1/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T04:55:40Z",
      "updated_at": "2018-04-05T04:55:40Z",
      "source": {
        "issue": {
          "id": 311472605,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5NTcyNTcx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12889",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12889/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12889/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12889/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/12889",
          "number": 12889,
          "state": "closed",
          "state_reason": null,
          "title": "doc: add qrencode to brew install instructions (#1)",
          "body": "* [gitian] Re-order keys by owner first name alphabetic order\r\n\r\n* [gitian] Add kallewoof key for signing\r\n\r\n* Simplify Base32 and Base64 conversions\r\n\r\n* CheckMinimalPush comments are prescriptive\r\n\r\n* [rpc] createrawtransaction: Accept sorted outputs\r\n\r\n* qa: Cache only chain and wallet for regtest datadir\r\n\r\n* [wallet] Get rid of CWalletTx default constructor\r\n\r\nNo change in behavior in the normal case. But buggy mapWallet lookups with\r\ninvalid txids will now throw exceptions instead of inserting dummy entries into\r\nthe map, and potentially causing segfaults and other failures.\r\n\r\nThis also makes it a compiler error to use the mapWallet[hash] syntax which\r\ncould create dummy entries.\r\n\r\n* [wallet] Construct CWalletTx objects in CommitTransaction\r\n\r\nConstruct CWalletTx objects in CWallet::CommitTransaction, instead of having\r\ncallers do it. This ensures CWalletTx objects are constructed in a uniform way\r\nand all fields are set.\r\n\r\nThis also makes it possible to avoid confusing and wasteful CWalletTx copies in\r\nhttps://github.com/bitcoin/bitcoin/pull/9381\r\n\r\nThere is no change in behavior.\r\n\r\n* bitcoin-cli: Provide a better error message when bitcoind is not running\r\n\r\nBefore this patch:\r\n\r\n```\r\n$ bitcoin-cli -testnet echo 'hello world'\r\nerror: Could not locate RPC credentials. No authentication cookie could be found, and RPC password is not set.  See -rpcpassword and -stdinrpcpass.  Configuration file: (/root/.bitcoin/bitcoin.conf)\r\n```\r\n\r\nAfter this patch:\r\n\r\n```\r\n$ bitcoin-cli -testnet echo 'hello world'\r\nerror: Could not connect to the server 127.0.0.1:18332\r\n\r\nMake sure the bitcoind server is running and that you are connecting to the correct RPC port.\r\n```\r\n\r\n* Format timestamps using ISO 8601 formatting (e.g. \"2018-02-28T12:34:56Z\")\r\n\r\n* Z is the zone designator for the zero UTC offset.\r\n* T is the delimiter used to separate date and time.\r\n\r\nThis makes it clear for the end-user that the date/time logged is\r\nspecified in UTC and not in the local time zone.\r\n\r\n* scripted-diff: Convert 11 enums into scoped enums (C++11)\r\n\r\n-BEGIN VERIFY SCRIPT-\r\n\r\nsed -i 's/enum DBErrors/enum class DBErrors/g' src/wallet/walletdb.h\r\ngit grep -l DB_ | xargs sed -i 's/DB_\\(LOAD_OK\\|CORRUPT\\|NONCRITICAL_ERROR\\|TOO_NEW\\|LOAD_FAIL\\|NEED_REWRITE\\)/DBErrors::\\1/g'\r\nsed -i 's/^    DBErrors::/    /g' src/wallet/walletdb.h\r\n\r\nsed -i 's/enum VerifyResult/enum class VerifyResult/g' src/wallet/db.h\r\nsed -i 's/\\(VERIFY_OK\\|RECOVER_OK\\|RECOVER_FAIL\\)/VerifyResult::\\1/g' src/wallet/db.cpp\r\n\r\nsed -i 's/enum ThresholdState/enum class ThresholdState/g' src/versionbits.h\r\ngit grep -l THRESHOLD_ | xargs sed -i 's/THRESHOLD_\\(DEFINED\\|STARTED\\|LOCKED_IN\\|ACTIVE\\|FAILED\\)/ThresholdState::\\1/g'\r\nsed -i 's/^    ThresholdState::/    /g' src/versionbits.h\r\n\r\nsed -i 's/enum SigVersion/enum class SigVersion/g' src/script/interpreter.h\r\ngit grep -l SIGVERSION_ | xargs sed -i 's/SIGVERSION_\\(BASE\\|WITNESS_V0\\)/SigVersion::\\1/g'\r\nsed -i 's/^    SigVersion::/    /g' src/script/interpreter.h\r\n\r\nsed -i 's/enum RetFormat {/enum class RetFormat {/g' src/rest.cpp\r\nsed -i 's/RF_\\(UNDEF\\|BINARY\\|HEX\\|JSON\\)/RetFormat::\\1/g' src/rest.cpp\r\nsed -i 's/^    RetFormat::/    /g' src/rest.cpp\r\n\r\nsed -i 's/enum HelpMessageMode {/enum class HelpMessageMode {/g' src/init.h\r\ngit grep -l HMM_ | xargs sed -i 's/HMM_BITCOIN/HelpMessageMode::BITCOIN/g'\r\nsed -i 's/^    HelpMessageMode::/    /g' src/init.h\r\n\r\nsed -i 's/enum FeeEstimateHorizon/enum class FeeEstimateHorizon/g' src/policy/fees.h\r\n\r\nsed -i 's/enum RBFTransactionState/enum class RBFTransactionState/g' src/policy/rbf.h\r\ngit grep -l RBF_ | xargs sed -i 's/RBF_TRANSACTIONSTATE_\\(UNKNOWN\\|REPLACEABLE_BIP125\\|FINAL\\)/RBFTransactionState::\\1/g'\r\nsed -i 's/^    RBFTransactionState::/    /g' src/policy/rbf.h\r\n\r\nsed -i 's/enum BlockSource {/enum class BlockSource {/g' src/qt/clientmodel.h\r\ngit grep -l BLOCK_SOURCE_ | xargs sed -i 's/BLOCK_SOURCE_\\(NONE\\|REINDEX\\|DISK\\|NETWORK\\)/BlockSource::\\1/g'\r\nsed -i 's/^    BlockSource::/    /g' src/qt/clientmodel.h\r\n\r\nsed -i 's/enum FlushStateMode {/enum class FlushStateMode {/g' src/validation.cpp\r\nsed -i 's/FLUSH_STATE_\\(NONE\\|IF_NEEDED\\|PERIODIC\\|ALWAYS\\)/FlushStateMode::\\1/g' src/validation.cpp\r\nsed -i 's/^    FlushStateMode::/    /g' src/validation.cpp\r\n\r\nsed -i 's/enum WitnessMode {/enum class WitnessMode {/g' src/test/script_tests.cpp\r\nsed -i 's/WITNESS_\\(NONE\\|PKH\\|SH\\)/WitnessMode::\\1/g' src/test/script_tests.cpp\r\nsed -i 's/^    WitnessMode::/    /g' src/test/script_tests.cpp\r\n\r\n-END VERIFY SCRIPT-\r\n\r\n* Split up and sanitize CWalletTx serialization\r\n\r\n* Calculate and store the number of bytes required to spend an input\r\n\r\n* Store effective value, fee, and long term fee in CInputCoin\r\n\r\nHave CInputCOin store effective value information. This includes the effective\r\nvalue itself, the fee, and the long term fee for the input\r\n\r\n* Log fatal LevelDB errors more verbosely\r\n\r\n* configure: UniValue 1.0.4 is required for pushKV(, bool)\r\n\r\n* Allow to optional specify the directory for the blocks storage\r\n\r\n* Ubuntu xenial first dependencies\r\n\r\nAdd update and upgrade commands to enable the installation of the first dependencies on ubuntu xenial. If those are not executed some packages can not be found.\r\n\r\n* Split up and sanitize CAccountingEntry serialization\r\n\r\n* rpc: Update createrawtransaction examples\r\n\r\n* qt: Avoid querying unnecessary model data when filtering transactions\r\n\r\n* [qa] util: Remove unused sync_chain\r\n\r\n* Implement Branch and Bound coin selection in a new file\r\n\r\nCreate a new file for coin selection logic and implement the BnB algorithm in it.\r\n\r\n* Add a GetMinimumFeeRate function which is wrapped by GetMinimumFee\r\n\r\n* Remove coinselection.h -> wallet.h circular dependency\r\n\r\nChanges CInputCoin to coinselection and to use CTransactionRef in\r\norder to avoid a circular dependency. Also moves other coin selection\r\nspecific variables out of wallet.h to coinselectoin.h\r\n\r\n* Move output eligibility to a separate function\r\n\r\n* Move current coin selection algorithm to coinselection.{cpp,h}\r\n\r\nMoves the current coin selection algorithm out of SelectCoinsMinConf\r\nand puts it in coinselection.{cpp,h}. The new function, KnapsackSolver,\r\ninstead of taking a vector of COutputs, will take a vector of CInputCoins\r\nthat is prepared by SelectCoinsMinConf.\r\n\r\n* Use a struct for output eligibility\r\n\r\nInstead of specifying 3 parameters, use a struct for those parameters\r\nin order to reduce the number of arguments to SelectCoinsMinConf.\r\n\r\n* Add tests for the Branch and Bound algorithm\r\n\r\n* Move original knapsack solver tests to coinselector_tests.cpp\r\n\r\n* Have SelectCoinsMinConf and SelectCoins use BnB or Knapsack and use it\r\n\r\nAllows SelectCoinsMinConf and SelectCoins be able to switch between\r\nusing BnB or Knapsack for choosing coins.\r\n\r\nHas SelectCoinsMinConf do the preprocessing necessary to support either\r\nBnB or Knapsack. This includes calculating the filtering the effective\r\nvalues for each input.\r\n\r\nUses BnB in CreateTransaction to find an exact match for the output.\r\nIf BnB fails, it will fallback to the Knapsack solver.\r\n\r\n* Benchmark BnB in the worst case where it exhausts\r\n\r\n* Add a test to make sure that negative effective values are filtered\r\n\r\n* travis: Clone depth 1 unless $CHECK_DOC\r\n\r\n* Fix ComputeTimeSmart test failure with -DDEBUG_LOCKORDER\r\n\r\nFailure looks like:\r\n\r\n    Entering test case \"ComputeTimeSmart\"\r\n    test_bitcoin: sync.cpp:100: void potential_deadlock_detected(const std::pair<void*, void*>&, const LockStack&, const LockStack&): Assertion `false' failed.\r\n    unknown location(0): fatal error in \"ComputeTimeSmart\": signal: SIGABRT (application abort requested)\r\n    wallet/test/wallet_tests.cpp(566): last checkpoint\r\n\r\nReproducible with:\r\n\r\n    ./configure --enable-debug\r\n    make -C src test/test_bitcoin && src/test/test_bitcoin --log_level=test_suite --run_test=wallet_tests/ComputeTimeSmart\r\n\r\nHappens due to \"92fabcd443 Add LookupBlockIndex function\" which acquires\r\ncs_main from inside CWallet::ComputeTimeSmart.\r\n\r\n* Merge READWRITEMANY into READWRITE\r\n\r\n* Support deserializing into temporaries\r\n\r\nCurrently, the READWRITE macro cannot be passed any non-const temporaries, as\r\nthe SerReadWrite function only accepts lvalue references.\r\n\r\nDeserializing into a temporary is very common, however. See for example\r\nthings like 's >> VARINT(n)'. The VARINT macro produces a temporary wrapper\r\nthat holds a reference to n.\r\n\r\nFix this by accepting non-const rvalue references instead of lvalue references.\r\nWe don't propagate the rvalue-ness down, as there are no useful optimizations\r\nthat only apply to temporaries.\r\n\r\nThen use this new functionality to get rid of many (but not all) uses of the\r\n'REF' macro (which casts away constness).\r\n\r\n* Apply hardening measurements in bitcoind systemd service file\r\n\r\nAdds typical systemd hardening measurements for network services.\r\n\r\n* Polish interfaces around PeerLogicValidation\r\n\r\n* Make PeerLogicValidation final to prevent deriving from it [1]\r\n* Prevent deletions of NetEventsInterface and CValidationInterface\r\n  objects via a base class pointer\r\n\r\n[1] silences the following compiler warning (from Clang 7.0.0):\r\n\r\n/usr/include/c++/v1/memory:2285:5: error: delete called on non-final 'PeerLogicValidation' that has\r\n      virtual functions but non-virtual destructor [-Werror,-Wdelete-non-virtual-dtor]\r\n    delete __ptr;\r\n    ^\r\n/usr/include/c++/v1/memory:2598:7: note: in instantiation of member function\r\n      'std::__1::default_delete<PeerLogicValidation>::operator()' requested here\r\n      __ptr_.second()(__tmp);\r\n      ^\r\ninit.cpp:201:15: note: in instantiation of member function 'std::__1::unique_ptr<PeerLogicValidation,\r\n      std::__1::default_delete<PeerLogicValidation> >::reset' requested here\r\n    peerLogic.reset();\r\n                  ^\r\n\r\n* Provide relevant error message if datadir is not writable.\r\n\r\n* Remove unused variable in SortForBlock\r\n\r\n* Actually disable BnB when there are preset inputs\r\n\r\nWe don't want to use BnB when there are preset inputs because there\r\nis some weirdness with making that work with using the KnapsackSolver\r\nas the fallback. Currently we say that we haven't used bnb when\r\nthere are preset inputs, but we don't actually disable BnB. This fixes\r\nthat.\r\n\r\n* Do not check for main() in libminiupnpc\r\n\r\nmain() { main(); } causes \"infinite recursion\" compilation warning\r\nwhich with -Werror fails the check.\r\n\r\n* ax_boost_{chrono,unit_test_framework}.m4: take changes from upstream\r\n\r\nApply changes to\r\nbuild-aux/m4/ax_boost_chrono.m4 and\r\nbuild-aux/m4/ax_boost_unit_test_framework.m4\r\nfrom upstream: https://github.com/peti/autoconf-archive\r\n\r\n* Remove redundant checks for MSG_* from configure.ac\r\n\r\nIt is redundant to check for the presence of MSG_NOSIGNAL macro in\r\nconfigure.ac, define HAVE_MSG_NOSIGNAL and then check whether the later\r\nis defined in the source code. Instead we can check directly whether\r\nMSG_NOSIGNAL is defined. Same for MSG_DONTWAIT.\r\n\r\nIn addition to that, the checks we had in configure.ac produce a\r\ncompiler warning about unused variable and thus could fail if\r\n-Werror is present and erroneously proclaim that the macros are\r\nnot available.\r\n\r\n* Test that BnB is not used when there are preset inputs\r\n\r\n* Document RPC method aliasing\r\n\r\nSuggested by Sjors Provoost <sjors@sprovoost.nl> in\r\nhttps://github.com/bitcoin/bitcoin/pull/11536#issuecomment-372820660\r\n\r\n* Add static_assert to prevent VARINT(<signed value>)\r\n\r\nUsing VARINT with signed types is dangerous because negative values will appear\r\nto serialize correctly, but then deserialize as positive values mod 128.\r\n\r\nThis commit changes the VARINT macro to trigger an error by default if called\r\nwith an signed value, and updates broken uses of VARINT to pass a special flag\r\nthat lets them keep working with no change in behavior.\r\n\r\n* test: Use wait_until in tests where time was used for polling\r\n\r\n* test: Use os.path.join consistently in feature_pruning tests\r\n\r\n* [Trivial] Simplify if-else blocks and more descriptive variable naming\r\n\r\n* Append scripts to new test_list array to fix bad assignment\r\n\r\n* wallet: Change output type globals to members\r\n\r\n* QA: Add -blocksdir test\r\n\r\n* [Tests] Move assert_start_raises_init_error method to TestNode\r\n\r\n* [Tests] Require exact match in assert_start_raises_init_eror()\r\n\r\n* Avoiding 'file' function name from python2 with more descriptive variable naming\r\n\r\n* Qt: remove \"new\" button during receive-mode in addressbook\r\n\r\n* [tests] Fix flake8 warnings in feature_block.py\r\n\r\n* [tests] Tidy up feature_block.py\r\n\r\n- move all helper methods to the end\r\n- remove block, create_tx and create_and_sign_tx shortcuts\r\n- remove --runbarelyexpensive option, since it defaults to True and it's\r\nunlikely that anyone ever runs the test with this option set to false.\r\n\r\n* [tests] Add logging to feature_block.py\r\n\r\n* Remove unreachable help conditions\r\n\r\n* Rename account to label where appropriate\r\n\r\nThis change only updates strings and adds RPC aliases, but should simplify the\r\nimplementation of address labels in\r\nhttps://github.com/bitcoin/bitcoin/pull/7729, by getting renaming out of the\r\nway and letting it focus on semantics.\r\n\r\nThe difference between accounts and labels is that labels apply only to\r\naddresses, while accounts apply to both addresses and transactions\r\n(transactions have \"from\" and \"to\" accounts). The code associating accounts\r\nwith transactions is clumsy and unreliable so we would like get rid of it.\r\n\r\n* Rename wallet_accounts.py test\r\n\r\nThis is a separate commit because changing the test at the same time as\r\nrenaming it breaks git (and github) rename detection.\r\n\r\n* qa: Use node.datadir instead of tmpdir in test framework\r\n\r\n* [tests] Change feature_block.py to use BitcoinTestFramework\r\n\r\n* [tests] Improve assert message when wait_until() fails\r\n\r\n* scripted-diff: rename TestNode to TestP2PConn in tests\r\n\r\nSeveral test scripts define a subclass of P2PInterface called TestNode.\r\nThis commit renames those to TestP2PConn since we already have a\r\nTestNode class in the test framework.\r\n\r\n-BEGIN VERIFY SCRIPT-\r\nsed -i s/TestNode/TestP2PConn/ test/functional/*py test/functional/test_framework/comptool.py\r\n_END VERIFY SCRIPT-\r\n\r\n* qa: Allow for partial_match when checking init error\r\n\r\nThis allows the tests to pass on different platforms\r\n\r\n* tests: Test connecting to a non-existing server\r\n\r\n* tests: Test connecting with non-existing RPC cookie file\r\n\r\n* -blocksdir: keep blockindex leveldb database in datadir\r\n\r\n* Remove unnecessary NONNEGATIVE_SIGNED\r\n\r\nSwitch to unsigned encoding, which is backwards compatible and avoids MSVC\r\nerror reported https://github.com/bitcoin/bitcoin/issues/12732\r\n\r\n* use base58 map instead of strchr()\r\n\r\n* Make FastRandomContext support standard C++11 RNG interface\r\n\r\nThis makes it possible to plug it into the various standard C++11 random\r\ndistribution algorithms and other functions like std::shuffle.\r\n\r\n* Fix typos\r\n\r\n* tests: Remove unused argument max_invalid from check_estimates(...)\r\n\r\n* Fix typos\r\n\r\n* Qt: Warn users about invalid-BIP21 URI bitcoin://\r\n\r\n* shuffle selected coins before transaction finalization\r\n\r\n* Replace boost::call_once with std::call_once\r\n\r\n* Add native support for serializing char arrays without FLATDATA\r\n\r\nSupport is added to serialize arrays of type char or unsigned char directly,\r\nwithout any wrappers. All invocations of the FLATDATA wrappers that are\r\nobsoleted by this are removed.\r\n\r\nThis includes a patch by Russell Yanofsky to make char casting type safe.\r\n\r\nThe serialization of CSubNet is changed to serialize a bool directly rather\r\nthan though FLATDATA. This makes the serialization independent of the size\r\nof the bool type (and will use 1 byte everywhere).\r\n\r\n* Move compressor utility functions out of class\r\n\r\n* [config] Remove blockmaxsize option\r\n\r\nThe blockmaxsize option was marked as deprecated in V0.15.1, and code\r\nwas added to convert provided blockmaxsize into blockmaxweight. However,\r\nthis code was incorrectly implemented, and blockmaxsize was silently\r\nignored.\r\n\r\nNo users have complained about blockmaxsize being ignored, so just\r\nremove it in V0.17.\r\n\r\n* Docs: Improve documentation on standard communication channels\r\n\r\nMore information about connection on IRC will hopefully help new\r\ncontributors.\r\n\r\n* shuffle sendmany recipients ordering to shuffle tx outputs\r\n\r\n* add release note for sendmany output shuffling\r\n\r\n* [CI]: bump travis timeout for make check to 50m\r\n\r\n* Inline CKeyStore::AddKey(const CKey &) in CBasicKeyStore\r\n\r\n* Move CKeyStore::cs_KeyStore to CBasicKeyStore\r\n\r\n* Make CTxMemPool::isSpent() const\r\n\r\n* [REST] Handle UTXO retrieval when ignoring the mempool\r\n\r\nCurrent REST API always returns empty UTXO when invoked without `/checkmempool/` URL part.\r\n\r\nAfter the fix:\r\n```\r\n$ curl -s http://localhost:8332/rest/getutxos/0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098-0.json | jq\r\n{\r\n  \"chainHeight\": 514109,\r\n  \"chaintipHash\": \"0000000000000000001fe76d1445e8a6432fd2de04261dc9c5915311dc7ad6de\",\r\n  \"bitmap\": \"1\",\r\n  \"utxos\": [\r\n    {\r\n      \"height\": 1,\r\n      \"value\": 50,\r\n      \"scriptPubKey\": {\r\n        \"asm\": \"0496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858ee OP_CHECKSIG\",\r\n        \"hex\": \"410496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858eeac\",\r\n        \"reqSigs\": 1,\r\n        \"type\": \"pubkey\",\r\n        \"addresses\": [\r\n          \"12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX\"\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nBefore the fix:\r\n```\r\n$ curl -s http://localhost:8332/rest/getutxos/0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098-0.json | jq\r\n{\r\n  \"chainHeight\": 514109,\r\n  \"chaintipHash\": \"0000000000000000001fe76d1445e8a6432fd2de04261dc9c5915311dc7ad6de\",\r\n  \"bitmap\": \"0\",\r\n  \"utxos\": []\r\n}\r\n```\r\n\r\n* Add username and ip logging for RPC method requests\r\n\r\n* Qt: Remove unused method setupAmountWidget(...)\r\n\r\n* Introduce interface for signing providers\r\n\r\nCKeyStore is a rich interface that provides many features, including knowledge\r\nof scripts and pubkeys for solving, private keys for signing, in addition to\r\nwatch-only keys and scripts, and distinguishing lack of keys from them just\r\nbeing encrypted.\r\n\r\nThe signing logic in script/sign does not actually need most of these features.\r\nHere we introduce a simpler interface (SigningProvider) which *only* provides\r\nkeys and scripts. This is actually sufficient for signing.\r\n\r\nIn addtion, we swap the dependency between keystore and script/sign\r\n(keystore now depends on script/script with CKeyStore deriving from\r\nSigningProvider, rather than CKeyStore being the interface that signing\r\nrelies on).\r\n\r\n* Reduce variable scopes\r\n\r\n* Qt: Add wallet selector to debug console\r\n\r\n* Qt: QComboBox::setVisible doesn't work in toolbars, so defer adding it at all until needed\r\n\r\n* Qt: Get wallet name from WalletModel rather than passing it around\r\n\r\n* Qt: When multiple wallets are used, include in notifications the name\r\n\r\n* GUI: RPCConsole: Log wallet changes\r\n\r\n* Qt: show wallet name in send confirmation dlg in case of multiwallet\r\n\r\n* Qt: show wallet name in request dlg in case of multiwallet\r\n\r\n* Qt: hide RPCConsole wallet selector when no wallets are present\r\n\r\n* rpc: Adjust ifdef to avoid unreachable code\r\n\r\n* [Tests] Use blockmaxweight where tests previously had blockmaxsize\r\n\r\n* [wallet] Move wallet init functions into WalletInit class.\r\n\r\n* [wallet] Create wallet init interface.\r\n\r\n* qt: Avoid resetting on resetguisettigs=0\r\n\r\n* do not truncate .dat extension for wallets in gui\r\n\r\n* Change all python files to use Python3\r\n\r\n* init: Fix help message for checkblockindex\r\n\r\n* doc: Refer to witness reserved value as spec. in the BIP\r\n\r\n* doc: Add note about our preference for scoped enumerations (\"enum class\")\r\n\r\n* [wallet] Use global g_wallet_init_interface to init/destroy the wallet.\r\n\r\nThis commit creates a global g_wallet_init_interface, which is created\r\nin bitcoind and bitcoin-qt. g_wallet_init_interface is used to init\r\nand destroy the wallet.\r\n\r\nThis removes the dependency from init.cpp on the wallet library.\r\n\r\n* [wallet] Add dummy wallet init class\r\n\r\n* Fix error in memory usage calculation (unintended integer division)\r\n\r\n* qa: Fix function names in feature_blocksdir\r\n\r\n* Add additional tests for GetBoolArg()\r\n\r\nThis is meant to be an intermediate commit to prove that the next does not\r\nintroduce any changes in the semantics of boolean option parsing.\r\n\r\n* Track negated arguments in the argument paser.\r\n\r\nThis commit adds tracking for negated arguments. This change will be used in a\r\nfuture commit that allows disabling the debug.log file using -nodebuglogfile.\r\n\r\n* test: Make summary row bold-red if any test failed\r\n\r\nMake the summary row of the test runner bold red if any test fails.\r\nThis helps visibility if something fails.\r\n\r\n* Make base58 python contrib code work with python3\r\n\r\n* test: List any failed tests at the end of test_runner output\r\n\r\nChange sorting output to put failed tests at the end of test_runner\r\noutput.\r\n\r\n* [Tests] fix a typo in TestNode.assert_start_raises_init_error()\r\n\r\nAlso, use specific exception for testing TestNode initialization failure.\r\n\r\n* contrib: Fix check-doc script regexes\r\n\r\n* contrib: Remove unused import string\r\n\r\n* init: Remove help text for non-existent -fuzzmessagestest arg\r\n\r\n* Revert \"test: Update trust git root\".\r\n\r\nThis reverts commit 7deba93bdc76616011a9f493cbc203d60084416f.\r\n\r\nThis is neither a \"test\" change, nor should the trusted-git-root\r\nhave been updated - there is a process for expired PGP keys.\r\n\r\n* Add Marco-expired-key-signed-commits to allow-revsig-commits\r\n\r\n* Improve formatting of developer notes\r\n\r\nSummary of changes:\r\n\r\n * Add a TOC to the page\r\n * Make tips and tricks section use h3 headings\r\n * Reformat and clarify some sections\r\n\r\n* Add --with-sanitizers option to configure\r\n\r\nThis enables the use of different compiler sanitizers, coresponding to\r\nthe -fsanitize option in GCC and Clang.\r\n\r\n* [tests] Fix intermittent rpc_net.py failure.\r\n\r\nrpc_net.py would intermittently fail on Travis, probably\r\ndue to assuming that two consecutive RPC calls were atomic.\r\nFix this by only testing that amounts are bounded above and\r\nbelow rather than equal.\r\n\r\n* [contrib] fixup security-check.py Python3 support\r\n\r\n* [contrib] fixup symbol-check.py Python3 support\r\n\r\n* Bugfix: RPC: savemempool: Don't save until LoadMempool() is finished\r\n\r\n* Increase LevelDB max_open_files unless on 32-bit Unix.\r\n\r\nThis change significantly increases IBD performance by increasing the\r\namount of the UTXO index that can remain in memory. To ensure this\r\ndoesn't cause problems in the future, a static_assert on the LevelDB\r\nversion has been added, which must be updated by anyone upgrading\r\nLevelDB.\r\n\r\n* [verify-commits] Add some additional useful documentation.\r\n\r\n* test: Remove travis checkout depth\r\n\r\nTests on branches of non-head commits are failing, because the depth of\r\n1 doesn't allow checking them out.\r\n\r\nRemove `depth` as was the case before fa44af5cd2152a21da9ef3e48c073a668bf2df27,\r\nso that Travis can determine the minimum depth to check out.\r\n\r\n* Fixes Missing QRCode Build\r\n\r\nBuild was missing qr code(qrencode libs) support and brew team no longer supports anything less than macOS 10.11\r\n\r\n* Fixed notes\r\n\r\nFixed notes to reflect that 10.8 is still supported via gitian\r\n\r\n* Rolled Back Tested on\r\n\r\nBelow is a suggestion for future release after EOL is done\r\n\r\n* Works with macOS 10.11 through 10.13 on 64-bit Intel processors only.\r\n\r\n* macOS 10.8 and higher is still supported on [gitian](/contrib) builds\r\n\r\n* Update build-osx.md\r\n\r\nBelow is a suggestion for future release after EOL is done\r\n\r\n* Works with macOS 10.11 through 10.13 on 64-bit Intel processors only.\r\n\r\n* macOS 10.8 and higher is still supported on [gitian](/contrib) builds",
          "user": {
            "login": "2a5A1Ghu1",
            "id": 13294167,
            "node_id": "MDQ6VXNlcjEzMjk0MTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/13294167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/2a5A1Ghu1",
            "html_url": "https://github.com/2a5A1Ghu1",
            "followers_url": "https://api.github.com/users/2a5A1Ghu1/followers",
            "following_url": "https://api.github.com/users/2a5A1Ghu1/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/2a5A1Ghu1/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/2a5A1Ghu1/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/2a5A1Ghu1/subscriptions",
            "organizations_url": "https://api.github.com/users/2a5A1Ghu1/orgs",
            "repos_url": "https://api.github.com/users/2a5A1Ghu1/repos",
            "events_url": "https://api.github.com/users/2a5A1Ghu1/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/2a5A1Ghu1/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12889",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/12889",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/12889.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/12889.patch"
          },
          "closed_at": "2018-04-05T04:57:26Z",
          "created_at": "2018-04-05T04:55:40Z",
          "updated_at": "2021-12-16T14:51:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 378885537,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODg4NTUzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/378885537",
      "actor": {
        "login": "GSPP",
        "id": 12032350,
        "node_id": "MDQ6VXNlcjEyMDMyMzUw",
        "avatar_url": "https://avatars.githubusercontent.com/u/12032350?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GSPP",
        "html_url": "https://github.com/GSPP",
        "followers_url": "https://api.github.com/users/GSPP/followers",
        "following_url": "https://api.github.com/users/GSPP/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GSPP/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GSPP/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GSPP/subscriptions",
        "organizations_url": "https://api.github.com/users/GSPP/orgs",
        "repos_url": "https://api.github.com/users/GSPP/repos",
        "events_url": "https://api.github.com/users/GSPP/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GSPP/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T10:06:41Z",
      "updated_at": "2018-04-05T10:06:41Z",
      "author_association": "NONE",
      "body": "Maybe there should be a call returning all addresses and all labels (a bulk call). If you want to dump all address-label pairs this would involve many RPC calls right now. This bulk call should even (optionally?) include internal addresses such as pool addresses. Simply *all* data. I have had the need many times to reflect over absolutely all wallet contents and such an API call would have been very welcome.",
      "user": {
        "login": "GSPP",
        "id": 12032350,
        "node_id": "MDQ6VXNlcjEyMDMyMzUw",
        "avatar_url": "https://avatars.githubusercontent.com/u/12032350?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/GSPP",
        "html_url": "https://github.com/GSPP",
        "followers_url": "https://api.github.com/users/GSPP/followers",
        "following_url": "https://api.github.com/users/GSPP/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/GSPP/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/GSPP/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/GSPP/subscriptions",
        "organizations_url": "https://api.github.com/users/GSPP/orgs",
        "repos_url": "https://api.github.com/users/GSPP/repos",
        "events_url": "https://api.github.com/users/GSPP/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/GSPP/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-378885537",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:34:57Z",
      "updated_at": "2018-04-05T17:34:57Z",
      "source": {
        "issue": {
          "id": 311701496,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTc5NzQ0ODkz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12892",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12892/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12892/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12892/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/12892",
          "number": 12892,
          "state": "closed",
          "state_reason": null,
          "title": "[wallet] [rpc] introduce 'label' API for wallet",
          "body": "Add label API to wallet RPC.\r\n\r\nThis is one step towards #3816 (\"Remove bolt-on account system\") although it doesn't\r\nactually remove anything yet.\r\n\r\nThese initially mirror the account functions, with the following differences:\r\n\r\n- These functions aren't DEPRECATED in the help\r\n- Help mentions 'label' instead of accounts. In the language used, labels are\r\n  associated with addresses, instead of addresses associated with labels. (unlike\r\n  with accounts.)\r\n- Labels have no balance\r\n  - No balances in `listlabels`\r\n  - `listlabels` has no minconf or watchonly argument\r\n- Like in the GUI, labels can be set on any address, not just receiving addreses\r\n- Unlike accounts, labels can be deleted.\r\n  Being unable to delete them is a common annoyance (see #1231).\r\n  Currently only by reassigning all addresses using `setlabel`, but an explicit\r\n  call `deletelabel` which assigns all address to the default label may make\r\n  sense.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/33",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33/labels",
            "id": 2931889,
            "node_id": "MDk6TWlsZXN0b25lMjkzMTg4OQ==",
            "number": 33,
            "state": "closed",
            "title": "0.17.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 122,
            "created_at": "2017-11-22T18:54:09Z",
            "updated_at": "2018-11-28T21:03:57Z",
            "closed_at": "2018-10-14T23:21:13Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/12892",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/12892",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/12892.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/12892.patch"
          },
          "closed_at": "2018-04-11T09:42:38Z",
          "created_at": "2018-04-05T17:28:35Z",
          "updated_at": "2022-08-16T17:03:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 379017838,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAxNzgzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379017838",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:39:43Z",
      "updated_at": "2018-04-05T17:39:43Z",
      "author_association": "MEMBER",
      "body": "I've opened #12892 to supersede this PR. Thanks for all your work @laanwj !",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-379017838",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1559321349,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU1OTMyMTM0OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559321349",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:39:43Z"
    },
    {
      "event": "subscribed",
      "id": 1559321350,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NTkzMjEzNTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559321350",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:39:43Z"
    },
    {
      "event": "commented",
      "id": 379019946,
      "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAxOTk0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/379019946",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:46:46Z",
      "updated_at": "2018-04-05T17:46:46Z",
      "author_association": "MEMBER",
      "body": "Indeed thanks to @laanwj  for initiating it and coming up with the original version of the code. And thx to @ryanofsky  and @jnewbery for picking it up.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-379019946",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7729"
    },
    {
      "event": "mentioned",
      "id": 1559334800,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU1OTMzNDgwMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559334800",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:46:46Z"
    },
    {
      "event": "subscribed",
      "id": 1559334801,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NTkzMzQ4MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559334801",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:46:47Z"
    },
    {
      "event": "mentioned",
      "id": 1559334803,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU1OTMzNDgwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559334803",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:46:47Z"
    },
    {
      "event": "subscribed",
      "id": 1559334804,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NTkzMzQ4MDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559334804",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:46:47Z"
    },
    {
      "event": "mentioned",
      "id": 1559334806,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MTU1OTMzNDgwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559334806",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:46:47Z"
    },
    {
      "event": "subscribed",
      "id": 1559334808,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDE1NTkzMzQ4MDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559334808",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:46:47Z"
    },
    {
      "event": "closed",
      "id": 1559334817,
      "node_id": "MDExOkNsb3NlZEV2ZW50MTU1OTMzNDgxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1559334817",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-05T17:46:47Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-11T19:00:28Z",
      "updated_at": "2018-04-11T19:00:28Z",
      "source": {
        "issue": {
          "id": 313448027,
          "node_id": "MDU6SXNzdWUzMTM0NDgwMjc=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12952",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12952/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12952/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/12952/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/12952",
          "number": 12952,
          "state": "closed",
          "state_reason": "completed",
          "title": "Remove wallet 'account' API",
          "body": "This issue tracks removing the wallet 'account' API. See issue #3816 for the reasons why this is a good idea. Rather than extend that very old and long issue, I'm opening this to track concrete actions to fully remove the 'account' API.\r\n\r\nActions are:\r\n\r\n- [x] Rename account to label where appropriate (#11536)\r\n- [x] Introduce 'label' API for wallet (~#7729~ #12892)\r\n- [x] (V0.17) Mark 'account' API as deprecated. Wallet functional tests are updated to use `-deprecatedrpc=accounts` to maintain existing behaviour. (~#11497~ #12953)\r\n- [x] Remove `getlabeladdress` RPC method. Keeping this method means we need to keep the `CAccount` internal accounting. (#13060)\r\n- [x] Remove 'account' API from wallet functional tests. (#13075 and #13138)\r\n- [x] (V0.18) Fully remove the 'account' API (#13825)",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 24,
          "closed_at": "2018-08-30T18:53:46Z",
          "created_at": "2018-04-11T19:00:28Z",
          "updated_at": "2022-02-15T11:04:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-04-23T19:28:31Z",
      "updated_at": "2018-04-23T19:28:31Z",
      "source": {
        "issue": {
          "id": 316949386,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTgzNTMyMDA5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13060",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13060/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13060/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/13060/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/13060",
          "number": 13060,
          "state": "closed",
          "state_reason": null,
          "title": "[wallet] [rpc] Remove getlabeladdress RPC",
          "body": "labels are associated with addresses (rather than addresses being\r\nassociated with labels, as was the case with accounts). The\r\ngetlabeladdress does not make sense in this model, so remove it.\r\n\r\ngetaccountaddress is still supported for one release as the accounts\r\nAPI is deprecated.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/33",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/33/labels",
            "id": 2931889,
            "node_id": "MDk6TWlsZXN0b25lMjkzMTg4OQ==",
            "number": 33,
            "state": "closed",
            "title": "0.17.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 122,
            "created_at": "2017-11-22T18:54:09Z",
            "updated_at": "2018-11-28T21:03:57Z",
            "closed_at": "2018-10-14T23:21:13Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/13060",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/13060",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/13060.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/13060.patch"
          },
          "closed_at": "2018-06-11T13:22:13Z",
          "created_at": "2018-04-23T19:21:11Z",
          "updated_at": "2021-09-08T11:54:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1762973765,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE3NjI5NzM3NjU=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1762973765",
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "981db7d8c1566283deee2fe2548c16a7cc534da4",
      "commit_url": "https://api.github.com/repos/HashUnlimited/chaincoin/commits/981db7d8c1566283deee2fe2548c16a7cc534da4",
      "created_at": "2018-07-31T15:03:54Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "HashUnlimited",
        "id": 26601261,
        "node_id": "MDQ6VXNlcjI2NjAxMjYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/HashUnlimited",
        "html_url": "https://github.com/HashUnlimited",
        "followers_url": "https://api.github.com/users/HashUnlimited/followers",
        "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
        "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
        "repos_url": "https://api.github.com/users/HashUnlimited/repos",
        "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2018-07-31T15:04:32Z",
      "updated_at": "2018-07-31T15:04:32Z",
      "source": {
        "issue": {
          "id": 346229477,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjA1MTQ0ODIw",
          "url": "https://api.github.com/repos/chaincoin/chaincoin/issues/86",
          "repository_url": "https://api.github.com/repos/chaincoin/chaincoin",
          "labels_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/86/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/86/comments",
          "events_url": "https://api.github.com/repos/chaincoin/chaincoin/issues/86/events",
          "html_url": "https://github.com/chaincoin/chaincoin/pull/86",
          "number": 86,
          "state": "closed",
          "state_reason": null,
          "title": "Rename account to label where appropriate",
          "body": "Rename account to label where appropriate\r\n\r\nThis change only updates strings and adds RPC aliases, but should simplify the implementation of address labels in https://github.com/bitcoin/bitcoin/pull/7729, by getting renaming out of the way and letting that change focus on semantics.\r\n\r\nThe difference between accounts and labels is that labels apply only to addresses, while accounts apply to both addresses and transactions (transactions have \"from\" and \"to\" accounts). The code associating accounts with transactions is clumsy and unreliable so we would like get rid of it.\r\n\r\n---\r\n\r\nThere is a rebased version of #7729 atop this PR at https://github.com/ryanofsky/bitcoin/commits/pr/label, see https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-338417139.",
          "user": {
            "login": "HashUnlimited",
            "id": 26601261,
            "node_id": "MDQ6VXNlcjI2NjAxMjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/26601261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashUnlimited",
            "html_url": "https://github.com/HashUnlimited",
            "followers_url": "https://api.github.com/users/HashUnlimited/followers",
            "following_url": "https://api.github.com/users/HashUnlimited/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/HashUnlimited/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/HashUnlimited/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/HashUnlimited/subscriptions",
            "organizations_url": "https://api.github.com/users/HashUnlimited/orgs",
            "repos_url": "https://api.github.com/users/HashUnlimited/repos",
            "events_url": "https://api.github.com/users/HashUnlimited/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/HashUnlimited/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/chaincoin/chaincoin/pulls/86",
            "html_url": "https://github.com/chaincoin/chaincoin/pull/86",
            "diff_url": "https://github.com/chaincoin/chaincoin/pull/86.diff",
            "patch_url": "https://github.com/chaincoin/chaincoin/pull/86.patch"
          },
          "closed_at": "2018-07-31T15:04:40Z",
          "created_at": "2018-07-31T15:04:32Z",
          "updated_at": "2018-07-31T15:04:40Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 1950512577,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDE5NTA1MTI1Nzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/1950512577",
      "actor": {
        "login": "lionello",
        "id": 591860,
        "node_id": "MDQ6VXNlcjU5MTg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/591860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lionello",
        "html_url": "https://github.com/lionello",
        "followers_url": "https://api.github.com/users/lionello/followers",
        "following_url": "https://api.github.com/users/lionello/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lionello/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lionello/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lionello/subscriptions",
        "organizations_url": "https://api.github.com/users/lionello/orgs",
        "repos_url": "https://api.github.com/users/lionello/repos",
        "events_url": "https://api.github.com/users/lionello/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lionello/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "77d59004b1a75f7d555edf7d16eebc586b1c7f77",
      "commit_url": "https://api.github.com/repos/enumatech/bitcoin/commits/77d59004b1a75f7d555edf7d16eebc586b1c7f77",
      "created_at": "2018-11-07T01:10:58Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-15T17:42:13Z",
      "updated_at": "2019-11-15T17:42:13Z",
      "source": {
        "issue": {
          "id": 513435493,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzMzMjIzODU5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17283",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17283/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17283/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17283/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17283",
          "number": 17283,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: improve getaddressinfo test coverage, help, code docs",
          "body": "This PR is a continuation of the work in https://github.com/bitcoin/bitcoin/pull/12892.\r\n\r\nMain motivations:\r\n- There is currently no test coverage for the getaddressinfo `labels` response. Coverage here is a prerequisite before deprecating the `label` response or adding multiple labels per address.\r\n- `bitcoin-cli help getaddressinfo` returns a few content errors, difficult-to-read formatting, and no explanation why it returns both `label` and `labels` and how they relate, which can be confusing for application developers.\r\n\r\nChanges by order of commits:\r\n- [x] improve/fix getaddressinfo RPCHelpman layout formatting\r\n- [x] improve/fix getaddressinfo RPCHelpman content\r\n- [x] clarify the `label` and `labels` fields in getaddressinfo RPCHelpman\r\n- [x] update getaddressinfo RPCExamples addresses to bech32\r\n- [x] add getaddressinfo code docs\r\n- [x] add a `listlabels` test assertion in wallet_labels.py\r\n- [x] add missing getaddressinfo `labels` test coverage and improve the existing `label` tests\r\n\r\nHere are gists of the CLI help output:\r\n[`bitcoin-cli help getaddressinfo` before this PR](https://gist.github.com/jonatack/022af5221a85c069780359a22643c810)\r\n[`bitcoin-cli help getaddressinfo` after this PR](https://gist.github.com/jonatack/4ee5f6abc62a3d99269570206a5f90ba)\r\n\r\nIt seems we ought to begin a deprecation process for the getaddressinfo `label` field? If yes, I have a follow-up ready. _--> EDIT: Deprecation follow-ups #17578 and #17585 now build on this PR._",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17283",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17283",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17283.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17283.patch"
          },
          "closed_at": "2019-11-26T16:12:10Z",
          "created_at": "2019-10-28T17:03:44Z",
          "updated_at": "2021-12-16T14:13:14Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 4127573858,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMjc1NzM4NTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4127573858",
      "actor": {
        "login": "xdustinface",
        "id": 35775977,
        "node_id": "MDQ6VXNlcjM1Nzc1OTc3",
        "avatar_url": "https://avatars.githubusercontent.com/u/35775977?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xdustinface",
        "html_url": "https://github.com/xdustinface",
        "followers_url": "https://api.github.com/users/xdustinface/followers",
        "following_url": "https://api.github.com/users/xdustinface/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/xdustinface/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/xdustinface/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/xdustinface/subscriptions",
        "organizations_url": "https://api.github.com/users/xdustinface/orgs",
        "repos_url": "https://api.github.com/users/xdustinface/repos",
        "events_url": "https://api.github.com/users/xdustinface/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/xdustinface/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "685dec4421d266c4d1d7c0f30284b46707ee018e",
      "commit_url": "https://api.github.com/repos/xdustinface/dash/commits/685dec4421d266c4d1d7c0f30284b46707ee018e",
      "created_at": "2020-12-18T00:09:59Z"
    },
    {
      "event": "referenced",
      "id": 4127587020,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMjc1ODcwMjA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4127587020",
      "actor": {
        "login": "xdustinface",
        "id": 35775977,
        "node_id": "MDQ6VXNlcjM1Nzc1OTc3",
        "avatar_url": "https://avatars.githubusercontent.com/u/35775977?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xdustinface",
        "html_url": "https://github.com/xdustinface",
        "followers_url": "https://api.github.com/users/xdustinface/followers",
        "following_url": "https://api.github.com/users/xdustinface/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/xdustinface/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/xdustinface/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/xdustinface/subscriptions",
        "organizations_url": "https://api.github.com/users/xdustinface/orgs",
        "repos_url": "https://api.github.com/users/xdustinface/repos",
        "events_url": "https://api.github.com/users/xdustinface/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/xdustinface/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "32610f0613795517d40ba56383eebcddf3454d3b",
      "commit_url": "https://api.github.com/repos/xdustinface/dash/commits/32610f0613795517d40ba56383eebcddf3454d3b",
      "created_at": "2020-12-18T00:15:58Z"
    },
    {
      "event": "referenced",
      "id": 4127646718,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMjc2NDY3MTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4127646718",
      "actor": {
        "login": "xdustinface",
        "id": 35775977,
        "node_id": "MDQ6VXNlcjM1Nzc1OTc3",
        "avatar_url": "https://avatars.githubusercontent.com/u/35775977?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xdustinface",
        "html_url": "https://github.com/xdustinface",
        "followers_url": "https://api.github.com/users/xdustinface/followers",
        "following_url": "https://api.github.com/users/xdustinface/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/xdustinface/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/xdustinface/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/xdustinface/subscriptions",
        "organizations_url": "https://api.github.com/users/xdustinface/orgs",
        "repos_url": "https://api.github.com/users/xdustinface/repos",
        "events_url": "https://api.github.com/users/xdustinface/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/xdustinface/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2392f03ffad6ab63eb46c5ed4d3c061f22a9eb83",
      "commit_url": "https://api.github.com/repos/xdustinface/dash/commits/2392f03ffad6ab63eb46c5ed4d3c061f22a9eb83",
      "created_at": "2020-12-18T00:41:44Z"
    },
    {
      "event": "referenced",
      "id": 4127672118,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMjc2NzIxMTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4127672118",
      "actor": {
        "login": "xdustinface",
        "id": 35775977,
        "node_id": "MDQ6VXNlcjM1Nzc1OTc3",
        "avatar_url": "https://avatars.githubusercontent.com/u/35775977?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xdustinface",
        "html_url": "https://github.com/xdustinface",
        "followers_url": "https://api.github.com/users/xdustinface/followers",
        "following_url": "https://api.github.com/users/xdustinface/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/xdustinface/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/xdustinface/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/xdustinface/subscriptions",
        "organizations_url": "https://api.github.com/users/xdustinface/orgs",
        "repos_url": "https://api.github.com/users/xdustinface/repos",
        "events_url": "https://api.github.com/users/xdustinface/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/xdustinface/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "409e9ac8da65a918a06757a1849afedbef9eaa42",
      "commit_url": "https://api.github.com/repos/xdustinface/dash/commits/409e9ac8da65a918a06757a1849afedbef9eaa42",
      "created_at": "2020-12-18T00:54:44Z"
    },
    {
      "event": "referenced",
      "id": 4131219606,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMzEyMTk2MDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4131219606",
      "actor": {
        "login": "xdustinface",
        "id": 35775977,
        "node_id": "MDQ6VXNlcjM1Nzc1OTc3",
        "avatar_url": "https://avatars.githubusercontent.com/u/35775977?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xdustinface",
        "html_url": "https://github.com/xdustinface",
        "followers_url": "https://api.github.com/users/xdustinface/followers",
        "following_url": "https://api.github.com/users/xdustinface/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/xdustinface/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/xdustinface/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/xdustinface/subscriptions",
        "organizations_url": "https://api.github.com/users/xdustinface/orgs",
        "repos_url": "https://api.github.com/users/xdustinface/repos",
        "events_url": "https://api.github.com/users/xdustinface/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/xdustinface/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d633b2719138edfb67cd631084219c741ba7c1d3",
      "commit_url": "https://api.github.com/repos/xdustinface/dash/commits/d633b2719138edfb67cd631084219c741ba7c1d3",
      "created_at": "2020-12-18T19:41:28Z"
    },
    {
      "event": "referenced",
      "id": 4138374623,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxMzgzNzQ2MjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4138374623",
      "actor": {
        "login": "xdustinface",
        "id": 35775977,
        "node_id": "MDQ6VXNlcjM1Nzc1OTc3",
        "avatar_url": "https://avatars.githubusercontent.com/u/35775977?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xdustinface",
        "html_url": "https://github.com/xdustinface",
        "followers_url": "https://api.github.com/users/xdustinface/followers",
        "following_url": "https://api.github.com/users/xdustinface/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/xdustinface/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/xdustinface/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/xdustinface/subscriptions",
        "organizations_url": "https://api.github.com/users/xdustinface/orgs",
        "repos_url": "https://api.github.com/users/xdustinface/repos",
        "events_url": "https://api.github.com/users/xdustinface/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/xdustinface/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "e86a0c093a5f108ead3e23b830007d34d4524d91",
      "commit_url": "https://api.github.com/repos/xdustinface/dash/commits/e86a0c093a5f108ead3e23b830007d34d4524d91",
      "created_at": "2020-12-22T03:02:37Z"
    },
    {
      "event": "referenced",
      "id": 4140990401,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQxNDA5OTA0MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4140990401",
      "actor": {
        "login": "xdustinface",
        "id": 35775977,
        "node_id": "MDQ6VXNlcjM1Nzc1OTc3",
        "avatar_url": "https://avatars.githubusercontent.com/u/35775977?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/xdustinface",
        "html_url": "https://github.com/xdustinface",
        "followers_url": "https://api.github.com/users/xdustinface/followers",
        "following_url": "https://api.github.com/users/xdustinface/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/xdustinface/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/xdustinface/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/xdustinface/subscriptions",
        "organizations_url": "https://api.github.com/users/xdustinface/orgs",
        "repos_url": "https://api.github.com/users/xdustinface/repos",
        "events_url": "https://api.github.com/users/xdustinface/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/xdustinface/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "1914effbbb5316ecf933fd24809eae0e67f3d419",
      "commit_url": "https://api.github.com/repos/xdustinface/dash/commits/1914effbbb5316ecf933fd24809eae0e67f3d419",
      "created_at": "2020-12-22T16:58:43Z"
    },
    {
      "event": "referenced",
      "id": 6230055494,
      "node_id": "REFE_lADOABII584IfMMzzwAAAAFzVxpG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6230055494",
      "actor": {
        "login": "gades",
        "id": 4200730,
        "node_id": "MDQ6VXNlcjQyMDA3MzA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4200730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gades",
        "html_url": "https://github.com/gades",
        "followers_url": "https://api.github.com/users/gades/followers",
        "following_url": "https://api.github.com/users/gades/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gades/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gades/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gades/subscriptions",
        "organizations_url": "https://api.github.com/users/gades/orgs",
        "repos_url": "https://api.github.com/users/gades/repos",
        "events_url": "https://api.github.com/users/gades/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gades/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "b9049d5089203f28ba6dc90f34fd203f937a1407",
      "commit_url": "https://api.github.com/repos/cosanta/cosanta-core/commits/b9049d5089203f28ba6dc90f34fd203f937a1407",
      "created_at": "2022-03-12T18:01:39Z"
    },
    {
      "event": "locked",
      "id": 7199012084,
      "node_id": "LOE_lADOABII584IfMMzzwAAAAGtGDT0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7199012084",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T17:03:32Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88665805",
      "pull_request_review_id": 9233413,
      "id": 88665805,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NjY1ODA1",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "would `getnewlabeladdress` be wrong? As-is gave me the impression that this was some static address.\n",
      "created_at": "2016-11-18T14:27:47Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r88665805",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88665805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88665910",
      "pull_request_review_id": 9233413,
      "id": 88665910,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NjY1OTEw",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "perhaps mention `latest unused` or something similar. \n",
      "created_at": "2016-11-18T14:28:21Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r88665910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88665910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88668316",
      "pull_request_review_id": 9233413,
      "id": 88668316,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NjY4MzE2",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 146,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm not as familiar with accounts as others, but is this type of parameter actually going to be used? When would you want to list labels that go certain directions? I have a feeling labels people choose will reflect this already.\n",
      "created_at": "2016-11-18T14:42:10Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r88668316",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88668316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88669423",
      "pull_request_review_id": 9233413,
      "id": 88669423,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4NjY5NDIz",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::string purpose;\n+    if (params.size() > 0)\n+        purpose = params[0].get_str();\n+\n+    std::set<std::string> setLabels;\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& entry, pwalletMain->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose)\n+            setLabels.insert(entry.second.name);\n+    }\n+    UniValue ret(UniValue::VARR);\n+    BOOST_FOREACH(const std::string &name, setLabels)\n+        ret.push_back(name);\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 189,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it also adds it to the address book if previously unknown, correct?\n",
      "created_at": "2016-11-18T14:46:58Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r88669423",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88669423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88887049",
      "pull_request_review_id": 9444753,
      "id": 88887049,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4ODg3MDQ5",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 146,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": 88668316,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The goal of this API is to expose exactly the same functionality that the GUI uses. The GUI distinguishes between different kind of labels (to show sending/receiving addresses), so it should be offered here as well.",
      "created_at": "2016-11-21T12:47:16Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r88887049",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88887049"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88887107",
      "pull_request_review_id": 9444803,
      "id": 88887107,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4ODg3MTA3",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": 88665910,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I still think we should get rid of this.",
      "created_at": "2016-11-21T12:47:43Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r88887107",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88887107"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88887646",
      "pull_request_review_id": 9445301,
      "id": 88887646,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg4ODg3NjQ2",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::string purpose;\n+    if (params.size() > 0)\n+        purpose = params[0].get_str();\n+\n+    std::set<std::string> setLabels;\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& entry, pwalletMain->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose)\n+            setLabels.insert(entry.second.name);\n+    }\n+    UniValue ret(UniValue::VARR);\n+    BOOST_FOREACH(const std::string &name, setLabels)\n+        ret.push_back(name);\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 189,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": 88669423,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Indeed, that is what setting a label does. If there is no labeling information associated with an address it will create that. We don't want to use the term \"address book\" here I think.\r\n",
      "created_at": "2016-11-21T12:51:30Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r88887646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/88887646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92064042",
      "pull_request_review_id": 12573775,
      "id": 92064042,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDkyMDY0MDQy",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::string purpose;\n+    if (params.size() > 0)\n+        purpose = params[0].get_str();\n+\n+    std::set<std::string> setLabels;\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& entry, pwalletMain->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose)\n+            setLabels.insert(entry.second.name);\n+    }\n+    UniValue ret(UniValue::VARR);\n+    BOOST_FOREACH(const std::string &name, setLabels)\n+        ret.push_back(name);\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with an label.\\n\"\n+            \"2. \\\"label\\\"           (string, required) The label to assign to the address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"tabby\\\"\")\n+            + HelpExampleRpc(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    string strLabel;\n+    if (params.size() > 1)\n+        strLabel = AccountFromValue(params[1]);\n+\n+    if (IsMine(*pwalletMain, address.Get()))\n+    {\n+        // Detect when changing the label of an address that is the 'label address' of another label:\n+        // If so, delete the account record for it. Labels, unlike addresses can be deleted,\n+        // and we wouldn't do this, the record would stick around forever.\n+        if (pwalletMain->mapAddressBook.count(address.Get()))\n+        {\n+            string strOldLabel = pwalletMain->mapAddressBook[address.Get()].name;\n+            if (address == GetAccountAddress(strOldLabel))",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 216,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This condition should be changed to `if (strOldLabel != strLabel && address == GetAccountAddress(strOldLabel))`, so calling setlabel on an address which already has the same label will just be a no-op, instead of creating an unexpected side effect where the label's default label address gets discarded.",
      "created_at": "2016-12-12T23:17:30Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r92064042",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/92064042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": null,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108552368",
      "pull_request_review_id": 29591055,
      "id": 108552368,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1MjM2OA==",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::string purpose;\n+    if (params.size() > 0)\n+        purpose = params[0].get_str();\n+\n+    std::set<std::string> setLabels;\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& entry, pwalletMain->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose)\n+            setLabels.insert(entry.second.name);\n+    }\n+    UniValue ret(UniValue::VARR);\n+    BOOST_FOREACH(const std::string &name, setLabels)\n+        ret.push_back(name);\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with an label.\\n\"\n+            \"2. \\\"label\\\"           (string, required) The label to assign to the address.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 192,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is the label optional or required?\r\n\r\nIf it's required update L2675 to `if (fHelp || params.size() != 2)` and L2693-2695 to `std::string strLabel = AccountFromValue(params[1]);`, if optional update the docstring.",
      "created_at": "2017-03-28T22:26:10Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108552368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108552368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3122,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108553186",
      "pull_request_review_id": 29591895,
      "id": 108553186,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1MzE4Ng==",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::string purpose;\n+    if (params.size() > 0)\n+        purpose = params[0].get_str();\n+\n+    std::set<std::string> setLabels;\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& entry, pwalletMain->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose)\n+            setLabels.insert(entry.second.name);\n+    }\n+    UniValue ret(UniValue::VARR);\n+    BOOST_FOREACH(const std::string &name, setLabels)\n+        ret.push_back(name);\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with an label.\\n\"\n+            \"2. \\\"label\\\"           (string, required) The label to assign to the address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"tabby\\\"\")\n+            + HelpExampleRpc(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    string strLabel;\n+    if (params.size() > 1)\n+        strLabel = AccountFromValue(params[1]);\n+\n+    if (IsMine(*pwalletMain, address.Get()))\n+    {\n+        // Detect when changing the label of an address that is the 'label address' of another label:\n+        // If so, delete the account record for it. Labels, unlike addresses can be deleted,\n+        // and we wouldn't do this, the record would stick around forever.\n+        if (pwalletMain->mapAddressBook.count(address.Get()))\n+        {\n+            string strOldLabel = pwalletMain->mapAddressBook[address.Get()].name;\n+            if (address == GetAccountAddress(strOldLabel))\n+                DeleteAccount(strOldLabel);\n+        }\n+        pwalletMain->SetAddressBook(address.Get(), strLabel, \"receive\");\n+    }\n+    else\n+        pwalletMain->SetAddressBook(address.Get(), strLabel, \"send\");",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 222,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Braces please!",
      "created_at": "2017-03-28T22:31:01Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108553186",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108553186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2711,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108553757",
      "pull_request_review_id": 29591895,
      "id": 108553757,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1Mzc1Nw==",
      "diff_hunk": "@@ -2537,13 +2537,13 @@ UniValue getlabeladdress(const UniValue& params, bool fHelp)\n /** Convert CAddressBookData to JSON record.\n  * The verbosity of the output is configurable based on the command.\n  */\n-static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n {\n     UniValue ret(UniValue::VOBJ);\n-    if (includeName)\n+    if (verbose)",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "e21f890df601ead1169fc2b888202e425d2dff72",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Does the order of push_back matter here? Might be cleaner to lump all `if (verbose)` under one branch...",
      "created_at": "2017-03-28T22:34:31Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108553757",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108553757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2543,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108554842",
      "pull_request_review_id": 29591895,
      "id": 108554842,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1NDg0Mg==",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems like L2529-2534 could be a one or two liner, rather than 4 (and maybe get rid of the whitespace).",
      "created_at": "2017-03-28T22:41:28Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108554842",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108554842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3816,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108554974",
      "pull_request_review_id": 29591895,
      "id": 108554974,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1NDk3NA==",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "does a builtin for range loop work here?",
      "created_at": "2017-03-28T22:42:28Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108554974",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108554974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2548,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108555197",
      "pull_request_review_id": 29591895,
      "id": 108555197,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1NTE5Nw==",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 128,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can this not be a for range loop?",
      "created_at": "2017-03-28T22:43:56Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108555197",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108555197"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2617,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108555517",
      "pull_request_review_id": 29591895,
      "id": 108555517,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1NTUxNw==",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::string purpose;\n+    if (params.size() > 0)\n+        purpose = params[0].get_str();\n+\n+    std::set<std::string> setLabels;\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& entry, pwalletMain->mapAddressBook) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 170,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "can use for range?",
      "created_at": "2017-03-28T22:45:55Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108555517",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108555517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2659,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108555561",
      "pull_request_review_id": 29591895,
      "id": 108555561,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1NTU2MQ==",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::string purpose;\n+    if (params.size() > 0)\n+        purpose = params[0].get_str();\n+\n+    std::set<std::string> setLabels;\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& entry, pwalletMain->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose)\n+            setLabels.insert(entry.second.name);\n+    }\n+    UniValue ret(UniValue::VARR);\n+    BOOST_FOREACH(const std::string &name, setLabels)",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 175,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "can use for range?",
      "created_at": "2017-03-28T22:46:07Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108555561",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108555561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2664,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108555711",
      "pull_request_review_id": 29591895,
      "id": 108555711,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1NTcxMQ==",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool includeName, bool includeDestData)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (includeName)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (includeDestData) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::string purpose;\n+    if (params.size() > 0)\n+        purpose = params[0].get_str();",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 167,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "d036fa44112df0c9faf76a1d69767b45a37e391b",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "validate the purpose string?",
      "created_at": "2017-03-28T22:47:12Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108555711",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108555711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2656,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108556412",
      "pull_request_review_id": 29591895,
      "id": 108556412,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1NjQxMg==",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::string purpose;\n+    if (params.size() > 0)\n+        purpose = params[0].get_str();\n+\n+    std::set<std::string> setLabels;\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& entry, pwalletMain->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose)\n+            setLabels.insert(entry.second.name);\n+    }\n+    UniValue ret(UniValue::VARR);\n+    BOOST_FOREACH(const std::string &name, setLabels)\n+        ret.push_back(name);\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with an label.\\n\"\n+            \"2. \\\"label\\\"           (string, required) The label to assign to the address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"tabby\\\"\")\n+            + HelpExampleRpc(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    string strLabel;\n+    if (params.size() > 1)\n+        strLabel = AccountFromValue(params[1]);\n+\n+    if (IsMine(*pwalletMain, address.Get()))\n+    {\n+        // Detect when changing the label of an address that is the 'label address' of another label:",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 210,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "a2557ffb80543af5e92c3db03d257fe594b0d910",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This behavior is probably just to mirror prior behavior, but perhaps a better alternative would be to create a fresh address for the account & allow deleting of account via another mechanism.",
      "created_at": "2017-03-28T22:51:51Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108556412",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108556412"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108556848",
      "pull_request_review_id": 29591895,
      "id": 108556848,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEwODU1Njg0OA==",
      "diff_hunk": "@@ -2497,6 +2503,216 @@ UniValue fundrawtransaction(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue getlabeladdress(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose)\n+        ret.push_back(Pair(\"name\", data.name));\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        BOOST_FOREACH(const PAIRTYPE(std::string, std::string) &item, data.destdata)\n+            ddata.push_back(Pair(item.first, item.second));\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    map<CTxDestination, CAddressBookData>::iterator mi = pwalletMain->mapAddressBook.find(address.Get());\n+    if (mi != pwalletMain->mapAddressBook.end())\n+        return AddressBookDataToJSON((*mi).second, true);\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    string strLabel = AccountFromValue(params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+    {\n+        if (item.second.name == strLabel)\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false)));\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() > 1)\n+        throw runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    std::string purpose;\n+    if (params.size() > 0)\n+        purpose = params[0].get_str();\n+\n+    std::set<std::string> setLabels;\n+    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& entry, pwalletMain->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose)\n+            setLabels.insert(entry.second.name);\n+    }\n+    UniValue ret(UniValue::VARR);\n+    BOOST_FOREACH(const std::string &name, setLabels)\n+        ret.push_back(name);\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const UniValue& params, bool fHelp)\n+{\n+    if (!EnsureWalletIsAvailable(fHelp))\n+        return NullUniValue;\n+\n+    if (fHelp || params.size() < 1 || params.size() > 2)\n+        throw runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with an label.\\n\"\n+            \"2. \\\"label\\\"           (string, required) The label to assign to the address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"tabby\\\"\")\n+            + HelpExampleRpc(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n+    CBitcoinAddress address(params[0].get_str());\n+    if (!address.IsValid())\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+\n+    string strLabel;\n+    if (params.size() > 1)\n+        strLabel = AccountFromValue(params[1]);\n+\n+    if (IsMine(*pwalletMain, address.Get()))",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 208,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "a2557ffb80543af5e92c3db03d257fe594b0d910",
      "in_reply_to_id": null,
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's the correct behavior when address is watchonly?",
      "created_at": "2017-03-28T22:54:19Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r108556848",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/108556848"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2697,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121975430",
      "pull_request_review_id": 44049432,
      "id": 121975430,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTk3NTQzMA==",
      "diff_hunk": "@@ -204,6 +204,7 @@ class CWalletDB\n     bool WriteAccountingEntry(const uint64_t nAccEntryNum, const CAccountingEntry& acentry);\n     bool ReadAccount(const std::string& strAccount, CAccount& account);\n     bool WriteAccount(const std::string& strAccount, const CAccount& account);\n+    bool EraseAccount(const std::string& strAccount);",
      "path": "src/wallet/walletdb.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the comment above may need updating to:\r\n- remove comments about accounting entries (or say they're deprecated)\r\n- comment that 'acc' database entries are for labels.",
      "created_at": "2017-06-14T15:08:15Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r121975430",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121975430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 207,
      "original_line": 207,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121986789",
      "pull_request_review_id": 44049432,
      "id": 121986789,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTk4Njc4OQ==",
      "diff_hunk": "@@ -2923,6 +2928,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(pwallet, strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 119,
      "original_position": 85,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If I'm understanding `AddressBookDataToJSON()` correctly, then the result will also include an array of destdata.",
      "created_at": "2017-06-14T15:47:11Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r121986789",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121986789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3855,
      "original_line": 3855,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121998036",
      "pull_request_review_id": 44049432,
      "id": 121998036,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTk5ODAzNg==",
      "diff_hunk": "@@ -2923,6 +2928,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It'd be nice to eventually rename this function `LabelFromValue()`. That can be done in a follow-up PR.",
      "created_at": "2017-06-14T16:29:40Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r121998036",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121998036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2955,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121998484",
      "pull_request_review_id": 44049432,
      "id": 121998484,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTk5ODQ4NA==",
      "diff_hunk": "@@ -2923,6 +2928,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(pwallet, strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(address.Get());\n+    if (mi != pwallet->mapAddressBook.end()) {\n+        return AddressBookDataToJSON((*mi).second, true);\n+    }\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    for (const std::pair<CBitcoinAddress, CAddressBookData>& item : pwallet->mapAddressBook) {\n+        if (item.second.name == strLabel) {\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false)));\n+        }\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 191,
      "original_position": 157,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: I don't think `An empty string is the same as not providing this argument.` is required",
      "created_at": "2017-06-14T16:31:36Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r121998484",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121998484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3927,
      "original_line": 3927,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121999853",
      "pull_request_review_id": 44049432,
      "id": 121999853,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMTk5OTg1Mw==",
      "diff_hunk": "@@ -2923,6 +2928,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(pwallet, strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(address.Get());\n+    if (mi != pwallet->mapAddressBook.end()) {\n+        return AddressBookDataToJSON((*mi).second, true);\n+    }\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    for (const std::pair<CBitcoinAddress, CAddressBookData>& item : pwallet->mapAddressBook) {\n+        if (item.second.name == strLabel) {\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false)));\n+        }\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string purpose;\n+    if (request.params.size() > 0) {\n+        purpose = request.params[0].get_str();\n+    }\n+\n+    std::set<std::string> setLabels;\n+    for (const std::pair<CTxDestination, CAddressBookData>& entry : pwallet->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose){\n+            setLabels.insert(entry.second.name);\n+        }\n+    }\n+    UniValue ret(UniValue::VARR);\n+    for (const std::string &name : setLabels) {\n+        ret.push_back(name);\n+    }\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with an label.\\n\"\n+            \"2. \\\"label\\\"           (string, required) The label to assign to the address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"tabby\\\"\")\n+            + HelpExampleRpc(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::string strLabel;\n+    if (request.params.size() > 1){\n+        strLabel = AccountFromValue(request.params[1]);\n+    }\n+\n+    if (IsMine(*pwallet, address.Get()))\n+    {\n+        // Detect when changing the label of an address that is the 'label address' of another label:",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 228,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think we should remove the concept of 'label address' and change this section to delete the label when removing the final address from that label.",
      "created_at": "2017-06-14T16:37:41Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r121999853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/121999853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3142,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122002514",
      "pull_request_review_id": 44049432,
      "id": 122002514,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjAwMjUxNA==",
      "diff_hunk": "@@ -2923,6 +2928,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(pwallet, strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(address.Get());\n+    if (mi != pwallet->mapAddressBook.end()) {\n+        return AddressBookDataToJSON((*mi).second, true);\n+    }\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    for (const std::pair<CBitcoinAddress, CAddressBookData>& item : pwallet->mapAddressBook) {\n+        if (item.second.name == strLabel) {\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false)));\n+        }\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string purpose;\n+    if (request.params.size() > 0) {\n+        purpose = request.params[0].get_str();\n+    }\n+\n+    std::set<std::string> setLabels;\n+    for (const std::pair<CTxDestination, CAddressBookData>& entry : pwallet->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose){\n+            setLabels.insert(entry.second.name);\n+        }\n+    }\n+    UniValue ret(UniValue::VARR);\n+    for (const std::string &name : setLabels) {\n+        ret.push_back(name);\n+    }\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with an label.\\n\"\n+            \"2. \\\"label\\\"           (string, required) The label to assign to the address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"tabby\\\"\")\n+            + HelpExampleRpc(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::string strLabel;\n+    if (request.params.size() > 1){",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 222,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What happens if `request.params.size() == 1`? Are you supposed to be able to remove a label using this rpc without a second argument? If so, I think you want to call `pwallet->DelAddressBook`.",
      "created_at": "2017-06-14T16:48:55Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r122002514",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122002514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122259021",
      "pull_request_review_id": 44358863,
      "id": 122259021,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyMjI1OTAyMQ==",
      "diff_hunk": "@@ -3146,7 +3146,7 @@ UniValue setlabel(const JSONRPCRequest& request)\n         if (pwallet->mapAddressBook.count(address.Get()))\n         {\n             std::string strOldLabel = pwallet->mapAddressBook[address.Get()].name;\n-            if (address == GetAccountAddress(pwallet, strOldLabel)) {\n+            if (strOldLabel != strLabel && address == GetAccountAddress(pwallet, strOldLabel)) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "54a9b2d94a3ee59d60a10408d84276609ed5e661",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Note: This change makes calling setlabel on an address which already has the same label a no-op, see https://github.com/bitcoin/bitcoin/pull/7729#discussion_r92064042.",
      "created_at": "2017-06-15T17:12:29Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r122259021",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/122259021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126163817",
      "pull_request_review_id": 48625551,
      "id": 126163817,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjE2MzgxNw==",
      "diff_hunk": "@@ -2922,6 +2927,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(pwallet, strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 94,
      "original_position": 60,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "0e3ef241d18593a9f67d4e5f37c22008cd9dc6b7",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, rename `ddata` to `dest_data`.",
      "created_at": "2017-07-07T14:42:15Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r126163817",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126163817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3830,
      "original_line": 3830,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126164658",
      "pull_request_review_id": 48625551,
      "id": 126164658,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjE2NDY1OA==",
      "diff_hunk": "@@ -152,6 +152,11 @@ UniValue getnewaddress(const JSONRPCRequest& request)\n     return CBitcoinAddress(keyID).ToString();\n }\n \n+void DeleteAccount(CWallet * const pwallet, std::string strAccount)",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "0e3ef241d18593a9f67d4e5f37c22008cd9dc6b7",
      "in_reply_to_id": null,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, shouldn't we follow the convention in new code in favor of consistency? In that case rename `strAccount` to `account_name` for instance?",
      "created_at": "2017-07-07T14:45:19Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r126164658",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126164658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126165814",
      "pull_request_review_id": 48625551,
      "id": 126165814,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjE2NTgxNA==",
      "diff_hunk": "@@ -2923,6 +2928,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(pwallet, strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(address.Get());\n+    if (mi != pwallet->mapAddressBook.end()) {\n+        return AddressBookDataToJSON((*mi).second, true);\n+    }\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    for (const std::pair<CBitcoinAddress, CAddressBookData>& item : pwallet->mapAddressBook) {\n+        if (item.second.name == strLabel) {\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false)));\n+        }\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 191,
      "original_position": 157,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": 121998484,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree with @jnewbery, empty value should be an error then.",
      "created_at": "2017-07-07T14:49:50Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r126165814",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126165814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3927,
      "original_line": 3927,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126167993",
      "pull_request_review_id": 48625551,
      "id": 126167993,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEyNjE2Nzk5Mw==",
      "diff_hunk": "@@ -2923,6 +2928,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(pwallet, strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(address.Get());\n+    if (mi != pwallet->mapAddressBook.end()) {\n+        return AddressBookDataToJSON((*mi).second, true);\n+    }\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    for (const std::pair<CBitcoinAddress, CAddressBookData>& item : pwallet->mapAddressBook) {\n+        if (item.second.name == strLabel) {\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false)));\n+        }\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 191,
      "original_position": 157,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": 121998484,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "BTW, why is this argument needed? I mean, the client can filter the result. IMO pagination is more interesting.",
      "created_at": "2017-07-07T14:58:14Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r126167993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/126167993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3927,
      "original_line": 3927,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145885606",
      "pull_request_review_id": 70751893,
      "id": 145885606,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTg4NTYwNg==",
      "diff_hunk": "@@ -2923,6 +2928,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(pwallet, strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(address.Get());\n+    if (mi != pwallet->mapAddressBook.end()) {\n+        return AddressBookDataToJSON((*mi).second, true);\n+    }\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    for (const std::pair<CBitcoinAddress, CAddressBookData>& item : pwallet->mapAddressBook) {\n+        if (item.second.name == strLabel) {\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false)));\n+        }\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string purpose;\n+    if (request.params.size() > 0) {\n+        purpose = request.params[0].get_str();\n+    }\n+\n+    std::set<std::string> setLabels;\n+    for (const std::pair<CTxDestination, CAddressBookData>& entry : pwallet->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose){\n+            setLabels.insert(entry.second.name);\n+        }\n+    }\n+    UniValue ret(UniValue::VARR);\n+    for (const std::string &name : setLabels) {\n+        ret.push_back(name);\n+    }\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with an label.\\n\"\n+            \"2. \\\"label\\\"           (string, required) The label to assign to the address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"tabby\\\"\")\n+            + HelpExampleRpc(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::string strLabel;\n+    if (request.params.size() > 1){",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 222,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": 122002514,
      "user": {
        "login": "meshcollider",
        "id": 3211283,
        "node_id": "MDQ6VXNlcjMyMTEyODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/meshcollider",
        "html_url": "https://github.com/meshcollider",
        "followers_url": "https://api.github.com/users/meshcollider/followers",
        "following_url": "https://api.github.com/users/meshcollider/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/meshcollider/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/meshcollider/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
        "organizations_url": "https://api.github.com/users/meshcollider/orgs",
        "repos_url": "https://api.github.com/users/meshcollider/repos",
        "events_url": "https://api.github.com/users/meshcollider/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/meshcollider/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there any difference between setting an empty label vs deleting the label?",
      "created_at": "2017-10-20T06:19:21Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r145885606",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145885606"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145927297",
      "pull_request_review_id": 70800087,
      "id": 145927297,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE0NTkyNzI5Nw==",
      "diff_hunk": "@@ -2923,6 +2928,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(pwallet, strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(address.Get());\n+    if (mi != pwallet->mapAddressBook.end()) {\n+        return AddressBookDataToJSON((*mi).second, true);\n+    }\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    for (const std::pair<CBitcoinAddress, CAddressBookData>& item : pwallet->mapAddressBook) {\n+        if (item.second.name == strLabel) {\n+            ret.push_back(Pair(item.first.ToString(), AddressBookDataToJSON(item.second, false)));\n+        }\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string purpose;\n+    if (request.params.size() > 0) {\n+        purpose = request.params[0].get_str();\n+    }\n+\n+    std::set<std::string> setLabels;\n+    for (const std::pair<CTxDestination, CAddressBookData>& entry : pwallet->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose){\n+            setLabels.insert(entry.second.name);\n+        }\n+    }\n+    UniValue ret(UniValue::VARR);\n+    for (const std::string &name : setLabels) {\n+        ret.push_back(name);\n+    }\n+\n+    return ret;\n+}\n+\n+UniValue setlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n+            \"\\nSets the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with an label.\\n\"\n+            \"2. \\\"label\\\"           (string, required) The label to assign to the address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"tabby\\\"\")\n+            + HelpExampleRpc(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CBitcoinAddress address(request.params[0].get_str());\n+    if (!address.IsValid()) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::string strLabel;\n+    if (request.params.size() > 1){",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 222,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": 122002514,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Well if you set all addresses with a certain label to the empty label, that label is effectively deleted. Deleting the label is a shortcut to remove it from all addresses.",
      "created_at": "2017-10-20T10:17:41Z",
      "updated_at": "2018-03-23T11:42:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r145927297",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/145927297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176884083",
      "pull_request_review_id": 106672390,
      "id": 176884083,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njg4NDA4Mw==",
      "diff_hunk": "@@ -290,14 +295,14 @@ UniValue setlabel(const JSONRPCRequest& request)\n \n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"setlabel \\\"address\\\" \\\"label\\\"\\n\"\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"\n             \"\\nSets the label associated with the given address.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"         (string, required) The bitcoin address to be associated with a label.\\n\"\n-            \"2. \\\"label\\\"           (string, required) The label to assign the address to.\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with a label.\\n\"\n+            \"2. \\\"label\\\"           (string, required) The label to assign to the address.\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"tabby\\\"\")\n-            + HelpExampleRpc(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"tabby\\\"\")\n+            + HelpExampleCli(\"setlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"tabby\\\"\")",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 42,
      "original_position": 42,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Unrelated change?\r\n\r\nIf you really wanted to change that `DummyAddress(Params())` would be a better choice.",
      "created_at": "2018-03-23T23:06:26Z",
      "updated_at": "2018-03-23T23:06:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r176884083",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/176884083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 304,
      "original_line": 304,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177707930",
      "pull_request_review_id": 107626321,
      "id": 177707930,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzcwNzkzMA==",
      "diff_hunk": "@@ -208,11 +213,11 @@ UniValue getlabeladdress(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"getlabeladdress \\\"label\\\"\\n\"\n-            \"\\nReturns the current Bitcoin address for receiving payments to this label.\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"label\\\"         (string, required) The label name for the address. It can also be set to the empty string \\\"\\\" to represent the default label. The label does not need to exist, it will be created and a new address created  if there is no label by the given name.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 19,
      "original_position": 19,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "6a0d27412d9c1b16e4bdfc406ee1e7b0ee6a2a51",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm fine with removing this remark, but note that the behavior of creating a new address still exists (though without an address type param). It might make sense to deprecate that behavior in a followup PR, and require `getnewaddress` if `getlabeladdress` doesn't return anything. That also makes the choice of potentially reusing an address more explicit.",
      "created_at": "2018-03-28T10:41:34Z",
      "updated_at": "2018-03-28T10:50:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177707930",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177707930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 213,
      "original_line": 213,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177767690",
      "pull_request_review_id": 107700437,
      "id": 177767690,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc2NzY5MA==",
      "diff_hunk": "@@ -3882,6 +4024,26 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"removeprunedfunds\",                &removeprunedfunds,             {\"txid\"} },\n     { \"wallet\",             \"rescanblockchain\",                 &rescanblockchain,              {\"start_height\", \"stop_height\"} },\n \n+    /** Account functions (deprecated) */\n+    { \"wallet\",             \"getaccountaddress\",                &getlabeladdress,               {\"account\"} },\n+    { \"wallet\",             \"getaccount\",                       &getaccount,                    {\"address\"} },\n+    { \"wallet\",             \"getaddressesbyaccount\",            &getaddressesbyaccount,         {\"account\"} },\n+    { \"wallet\",             \"getaddressinfo\",                   &getaddressinfo,                {\"address\"} },",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 278,
      "original_position": 278,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think `getaddressinfo` should be deprecated. It's not an account rpc",
      "created_at": "2018-03-28T14:24:43Z",
      "updated_at": "2018-03-28T15:05:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177767690",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177767690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4031,
      "original_line": 4031,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177768880",
      "pull_request_review_id": 107700437,
      "id": 177768880,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc2ODg4MA==",
      "diff_hunk": "@@ -290,14 +295,14 @@ UniValue setlabel(const JSONRPCRequest& request)\n \n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"setlabel \\\"address\\\" \\\"label\\\"\\n\"\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 32,
      "original_position": 32,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why rename the arguments/return values to bitcoinaddress everywhere? Seems like a gratuitous API break.\r\n\r\n`address` is used in many RPCs for a bitcoin address. Why not continue that convention? (and if you really must change this, current style guidelines call for snake_case for args)",
      "created_at": "2018-03-28T14:27:40Z",
      "updated_at": "2018-03-28T15:05:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177768880",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177768880"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 298,
      "original_line": 298,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177769646",
      "pull_request_review_id": 107700437,
      "id": 177769646,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc2OTY0Ng==",
      "diff_hunk": "@@ -2923,6 +2928,236 @@ UniValue bumpfee(const JSONRPCRequest& request)\n     return result;\n }\n \n+UniValue getlabeladdress(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabeladdress \\\"label\\\"\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"       (string, required) The label for the address. It can also be set to the empty string \\\"\\\" to represent the default label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\\"bitcoinaddress\\\"   (string) The 'label address' for the label\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabeladdress\", \"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"\\\"\")\n+            + HelpExampleCli(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+            + HelpExampleRpc(\"getlabeladdress\", \"\\\"mylabel\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string strLabel = AccountFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VSTR);\n+\n+    ret = GetAccountAddress(pwallet, strLabel).ToString();\n+    return ret;\n+}\n+\n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 119,
      "original_position": 85,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "21a49c206f839984c9cab3e1dd67aea63f9c2a9c",
      "in_reply_to_id": 121986789,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Comment: https://github.com/bitcoin/bitcoin/pull/7729/files#r121986789 not addressed. Result also includes an array of destdata. Please update help text.\r\n\r\nEDIT: I think we should just drop the `destdata` from the response. It wasn't available in the old account RPCs, and it appears to me that the only place we add to destdata is in saveReceiveRequest().\r\n\r\nWe can always add destdata to the response in a later PR if required.",
      "created_at": "2018-03-28T14:29:32Z",
      "updated_at": "2018-04-04T21:18:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177769646",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177769646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3855,
      "original_line": 3855,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177770329",
      "pull_request_review_id": 107700437,
      "id": 177770329,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc3MDMyOQ==",
      "diff_hunk": "@@ -3809,6 +3816,152 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 117,
      "original_position": 117,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Can we make this RPC return an array? We may want to be able to attach multiple labels to addresses in the future (https://github.com/bitcoin/bitcoin/pull/7729#issuecomment-302854998), and making this RPC return an array will allow us to do that without a breaking API change",
      "created_at": "2018-03-28T14:31:05Z",
      "updated_at": "2018-03-28T15:05:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177770329",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177770329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3853,
      "original_line": 3853,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177771425",
      "pull_request_review_id": 107700437,
      "id": 177771425,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc3MTQyNQ==",
      "diff_hunk": "@@ -3809,6 +3816,152 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    if (!IsValidDestination(dest)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(dest);\n+    if (mi != pwallet->mapAddressBook.end()) {\n+        return AddressBookDataToJSON(mi->second, true);\n+    }\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string strLabel = LabelFromValue(request.params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    for (const std::pair<CTxDestination, CAddressBookData>& item : pwallet->mapAddressBook) {\n+        if (item.second.name == strLabel) {\n+            ret.push_back(Pair(EncodeDestination(item.first), AddressBookDataToJSON(item.second, false)));\n+        }\n+    }\n+    return ret;\n+}\n+\n+UniValue listlabels(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"listlabels ( \\\"purpose\\\" )\\n\"\n+            \"\\nReturns the list of all labels, or labels that are assigned to addresses with a specific purpose.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"purpose\\\"  (string, optional) Address purpose to list labels for ('send','receive'). An empty string is the same as not providing this argument.\\n\"\n+            \"\\nResult:\\n\"\n+            \"[                      (json array of string)\\n\"\n+            \"  \\\"label\\\",  (string) Label name\\n\"\n+            \"  ...\\n\"\n+            \"]\\n\"\n+            \"\\nExamples:\\n\"\n+            \"\\nList all labels\\n\"\n+            + HelpExampleCli(\"listlabels\", \"\") +\n+            \"\\nList labels that have receiving addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"receive\") +\n+            \"\\nList labels that have sending addresses\\n\"\n+            + HelpExampleCli(\"listlabels\", \"send\") +\n+            \"\\nAs json rpc call\\n\"\n+            + HelpExampleRpc(\"listlabels\", \"receive\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string purpose;\n+    if (request.params.size() > 0) {\n+        purpose = request.params[0].get_str();\n+    }\n+\n+    std::set<std::string> setLabels;\n+    for (const std::pair<CTxDestination, CAddressBookData>& entry : pwallet->mapAddressBook) {\n+        if (purpose.empty() || entry.second.purpose == purpose){\n+            setLabels.insert(entry.second.name);\n+        }\n+    }\n+    UniValue ret(UniValue::VARR);\n+    for (const std::string &name : setLabels) {",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 222,
      "original_position": 222,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should we sort the label names before returning?",
      "created_at": "2018-03-28T14:34:02Z",
      "updated_at": "2018-03-28T15:05:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177771425",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177771425"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3958,
      "original_line": 3958,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177776131",
      "pull_request_review_id": 107700437,
      "id": 177776131,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc3NjEzMQ==",
      "diff_hunk": "@@ -3809,6 +3816,152 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"\n+            \"    \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"  Result is null if there is no record for this address.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleRpc(\"getlabel\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    if (!IsValidDestination(dest)) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n+    }\n+\n+    std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(dest);\n+    if (mi != pwallet->mapAddressBook.end()) {\n+        return AddressBookDataToJSON(mi->second, true);\n+    }\n+    return NullUniValue;\n+}\n+\n+UniValue getaddressesbylabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getaddressesbylabel \\\"label\\\"\\n\"\n+            \"\\nReturns the list of addresses assigned the specified label.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"label\\\"  (string, required) The label.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{ (json object with addresses as keys)\\n\"\n+            \"  \\\"bitcoinaddress\\\": { (json object with information about address)\\n\"\n+            \"    \\\"purpose\\\": \\\"string\\\" (string)  Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"  },...\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+            + HelpExampleRpc(\"getaddressesbylabel\", \"\\\"tabby\\\"\")\n+        );\n+\n+    LOCK2(cs_main, pwallet->cs_wallet);\n+\n+    std::string strLabel = LabelFromValue(request.params[0]);\n+\n+    // Find all addresses that have the given label\n+    UniValue ret(UniValue::VOBJ);\n+    for (const std::pair<CTxDestination, CAddressBookData>& item : pwallet->mapAddressBook) {\n+        if (item.second.name == strLabel) {\n+            ret.push_back(Pair(EncodeDestination(item.first), AddressBookDataToJSON(item.second, false)));\n+        }\n+    }",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 175,
      "original_position": 175,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should this throw an error if the label doesn't exist? Currently it returns an empty object.",
      "created_at": "2018-03-28T14:46:59Z",
      "updated_at": "2018-03-28T15:05:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177776131",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177776131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3911,
      "original_line": 3911,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177781021",
      "pull_request_review_id": 107700437,
      "id": 177781021,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc4MTAyMQ==",
      "diff_hunk": "@@ -208,11 +213,11 @@ UniValue getlabeladdress(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"getlabeladdress \\\"label\\\"\\n\"\n-            \"\\nReturns the current Bitcoin address for receiving payments to this label.\\n\"\n+            \"\\nReturns the current 'label address' for this label.\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 17,
      "original_position": 17,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The behaviour for this RPC is weird. If called for a label that doesn't exist, it creates a new label, and then adds a new address as the 'label address' for that label. That's not very intuitive, and I think it's a bad experience (for example if a user typos an existing label name). Can we change this so that the rpc returns an error if called with a non-existent label name?",
      "created_at": "2018-03-28T15:00:30Z",
      "updated_at": "2018-03-28T15:05:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177781021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177781021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177782126",
      "pull_request_review_id": 107700437,
      "id": 177782126,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc4MjEyNg==",
      "diff_hunk": "@@ -15,6 +15,7 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal\n+from collections import defaultdict",
      "path": "test/functional/wallet_labels.py",
      "position": 4,
      "original_position": 4,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: standard library imports before project imports please!",
      "created_at": "2018-03-28T15:03:38Z",
      "updated_at": "2018-03-28T15:05:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177782126",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177782126"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 18,
      "original_line": 18,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177789614",
      "pull_request_review_id": 107727482,
      "id": 177789614,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc4OTYxNA==",
      "diff_hunk": "@@ -290,14 +295,14 @@ UniValue setlabel(const JSONRPCRequest& request)\n \n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n         throw std::runtime_error(\n-            \"setlabel \\\"address\\\" \\\"label\\\"\\n\"\n+            \"setlabel \\\"bitcoinaddress\\\" \\\"label\\\"\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 32,
      "original_position": 32,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": 177768880,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Why rename the arguments/return values to bitcoinaddress everywhere? \r\n\r\nAgree it would be better to stick to `address`, but just as a historical note, this wasn't a \"gratuitious\" API break when it was originally written in 8571fee617aa22a43d73efa2560cd2ddf55c2478, because it preceded #11536, so the `setlabel` RPC was brand new.",
      "created_at": "2018-03-28T15:24:23Z",
      "updated_at": "2018-03-28T15:42:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177789614",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177789614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 298,
      "original_line": 298,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177792185",
      "pull_request_review_id": 107727482,
      "id": 177792185,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc5MjE4NQ==",
      "diff_hunk": "@@ -3809,6 +3816,152 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     return ret;\n }\n \n+/** Convert CAddressBookData to JSON record.\n+ * The verbosity of the output is configurable based on the command.\n+ */\n+static UniValue AddressBookDataToJSON(const CAddressBookData& data, bool verbose)\n+{\n+    UniValue ret(UniValue::VOBJ);\n+    if (verbose) {\n+        ret.push_back(Pair(\"name\", data.name));\n+    }\n+    ret.push_back(Pair(\"purpose\", data.purpose));\n+    if (verbose) {\n+        UniValue ddata(UniValue::VOBJ);\n+        for (const std::pair<std::string, std::string>& item : data.destdata) {\n+            ddata.push_back(Pair(item.first, item.second));\n+        }\n+        ret.push_back(Pair(\"destdata\", ddata));\n+    }\n+    return ret;\n+}\n+\n+UniValue getlabel(const JSONRPCRequest& request)\n+{\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!EnsureWalletIsAvailable(pwallet, request.fHelp)) {\n+        return NullUniValue;\n+    }\n+\n+    if (request.fHelp || request.params.size() != 1)\n+        throw std::runtime_error(\n+            \"getlabel \\\"bitcoinaddress\\\"\\n\"\n+            \"\\nReturns the label associated with the given address.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for label lookup.\\n\"\n+            \"\\nResult:\\n\"\n+            \"  { (json object with information about address)\\n\"",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 117,
      "original_position": 117,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": 177770329,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Can we make this RPC return an array?\r\n\r\nIt might be better to not add a `getlabel` RPC at all but instead just return this information in `getaddressinfo` (recently added in #10583).",
      "created_at": "2018-03-28T15:31:51Z",
      "updated_at": "2018-03-28T15:42:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177792185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177792185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3853,
      "original_line": 3853,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177794866",
      "pull_request_review_id": 107727482,
      "id": 177794866,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc5NDg2Ng==",
      "diff_hunk": "@@ -3882,6 +4024,26 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"removeprunedfunds\",                &removeprunedfunds,             {\"txid\"} },\n     { \"wallet\",             \"rescanblockchain\",                 &rescanblockchain,              {\"start_height\", \"stop_height\"} },\n \n+    /** Account functions (deprecated) */\n+    { \"wallet\",             \"getaccountaddress\",                &getlabeladdress,               {\"account\"} },\n+    { \"wallet\",             \"getaccount\",                       &getaccount,                    {\"address\"} },\n+    { \"wallet\",             \"getaddressesbyaccount\",            &getaddressesbyaccount,         {\"account\"} },\n+    { \"wallet\",             \"getaddressinfo\",                   &getaddressinfo,                {\"address\"} },",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 278,
      "original_position": 278,
      "commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "original_commit_id": "fef41789e8d7293ccfd859bc90fa0a3b2484752d",
      "in_reply_to_id": 177767690,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I don't think getaddressinfo should be deprecated. It's not an account rpc\r\n\r\nGood catch. getaddressinfo should remain where it was above \"getbalance\". It's my fault for accidentally moving it into this section during a rebase.",
      "created_at": "2018-03-28T15:39:33Z",
      "updated_at": "2018-03-28T15:42:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/7729#discussion_r177794866",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/177794866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4031,
      "original_line": 4031,
      "side": "RIGHT"
    }
  ]
}