{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334",
    "id": 387373132,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg3MzczMTMy",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18334",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18334.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18334.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa156999695ddaeb016d8320bee62f8d96679d55",
    "number": 18334,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "test: Add basic test for BIP 37",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This does not add full coverage, but should be a good start and can be extended in the future. Currently, none of the BIP 37 p2p code has test coverage.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-03-12T17:28:32Z",
    "updated_at": "2022-02-15T10:28:35Z",
    "closed_at": "2020-03-30T19:29:51Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-03-30T19:29:51Z",
    "merge_commit_sha": "7e1fc03b185d89f21da1bee2f8b7900d65745b30",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "MarcoFalke:2003-qa37",
      "ref": "2003-qa37",
      "sha": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 207848,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T15:31:58Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "5b4a9f4bdf9d90f29921425e13e50a0076edffab",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T20:20:41Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 161,
    "deletions": 4,
    "changed_files": 4,
    "commits": 1,
    "review_comments": 11,
    "comments": 10
  },
  "events": [
    {
      "event": "labeled",
      "id": 3123922378,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxMjM5MjIzNzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3123922378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-12T17:57:13Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3124013213,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEyNDAxMzIxMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3124013213",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-12T18:22:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3124091812,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEyNDA5MTgxMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3124091812",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-12T18:47:15Z"
    },
    {
      "event": "commented",
      "id": 598413317,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODQxMzMxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/598413317",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-12T20:53:07Z",
      "updated_at": "2020-03-27T07:36:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18446 (test: Add test for wtxid transaction relay by fjahr)\n* #18261 (Erlay: bandwidth-efficient transaction relay protocol by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.<!--2502f1a698b3751726fa55edcda76cd3-->\n\n### Coverage\n\n| Coverage  | Change ([pull 18334](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/18334/total.coverage/index.html), 70f8cf0ac76a483f4e5784bb303e081688206e40) | Reference ([master](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/index.html), e2d36639ca87b980b147047e4e47cf160b2c9406)   |\n|-----------|-------------------------|--------------------|\n| Lines     | +0.1081 %            | 90.0780 %        |\n| Functions | +0.2643 %            | 85.8297 %        |\n| Branches  | +0.0528 %            | 51.6976 %        |\n\n<sup>Updated at: 2020-03-12T20:53:06.964444.</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#issuecomment-598413317",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-20T01:01:20Z",
      "updated_at": "2020-03-20T01:01:20Z",
      "source": {
        "issue": {
          "id": 575726877,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzgzODM3MDY2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18261/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18261",
          "number": 18261,
          "state": "closed",
          "state_reason": null,
          "title": "Erlay: bandwidth-efficient transaction relay protocol",
          "body": "This is an implementation of [Erlay](https://arxiv.org/abs/1905.10518), using primitives in the BIP-330 (see the updated spec [here](https://github.com/naumenkogs/bips/blob/bip_0330_updates/bip-0330.mediawiki)). Please refer to these two to understand the design. My talk on the topic is [here](https://youtu.be/YxsjdIl0034?t=670).\r\n\r\nErlay uses both flooding (announcing using INV messages to all peers) and reconciliation to announce transactions. Flooding is expensive, so Erlay seeks to use it sparingly and in strategic locations - only well-connected publicly reachable nodes flood transactions to other publicly reachable nodes via outbound connections. Since every unreachable node is directly connected to several reachable nodes, this policy ensures that a transaction is quickly propagated to be within one hop from most of the nodes in the network.\r\n\r\nAll transactions not propagated through flooding are propagated through efficient set reconciliation. To do this, every node keeps a reconciliation set for each peer, in which transactions are placed which would have been announced using INV messages absent this protocol. Every 2 seconds every node chooses a peer from its outbound connections in a predetermined order to reconcile with, resulting in both sides learning the transactions known to the other side. After every reconciliation round, the corresponding reconciliation set is cleared.\r\n\r\nI think both paper and the BIP motives the changes, but I'll mention them briefly once again here:\r\n- save 40% of the bandwidth consumed by a node\r\n- increase network connectivity for almost no bandwidth or latency cost\r\n- improves privacy as a side-effect\r\n\r\nObviously looking for review, let's try to start with a high-level concerns, and keep nits for later.\r\n\r\nP.S.\r\nPlease don't be scared of 8,000 LOC added. 7,000 of them is minisketch added as a subtree.\r\n\r\nP.P.S.\r\nMy experiments of running this code live (slightly outdated) with a script to replicate the experiment: [here1](https://github.com/bitcoin/bitcoin/pull/18261#issuecomment-599241490) and [here2](https://github.com/bitcoin/bitcoin/pull/18261#issuecomment-600388543).\r\n",
          "user": {
            "login": "naumenkogs",
            "id": 7975071,
            "node_id": "MDQ6VXNlcjc5NzUwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naumenkogs",
            "html_url": "https://github.com/naumenkogs",
            "followers_url": "https://api.github.com/users/naumenkogs/followers",
            "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
            "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
            "repos_url": "https://api.github.com/users/naumenkogs/repos",
            "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 38,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18261",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18261",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18261.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18261.patch"
          },
          "closed_at": "2021-03-23T22:51:05Z",
          "created_at": "2020-03-04T20:01:31Z",
          "updated_at": "2022-08-16T17:22:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 379042104,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MDQyMTA0",
      "url": null,
      "actor": null,
      "commit_id": "fabf37381c4b62fc057ca0df4e77f2f2deb0e428",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK (obviously, more tests are always good), left two code-review comments",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#pullrequestreview-379042104",
      "submitted_at": "2020-03-22T20:50:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3159674406,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE1OTY3NDQwNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3159674406",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T13:33:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3159683905,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE1OTY4MzkwNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3159683905",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T13:35:51Z"
    },
    {
      "event": "commented",
      "id": 603243555,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzI0MzU1NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603243555",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T13:38:01Z",
      "updated_at": "2020-03-24T13:38:01Z",
      "author_association": "MEMBER",
      "body": "Addressed feedback by @theStack ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#issuecomment-603243555",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334"
    },
    {
      "event": "mentioned",
      "id": 3159693202,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE1OTY5MzIwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3159693202",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T13:38:01Z"
    },
    {
      "event": "subscribed",
      "id": 3159693204,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNTk2OTMyMDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3159693204",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T13:38:01Z"
    },
    {
      "event": "reviewed",
      "id": 380695135,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNjk1MTM1",
      "url": null,
      "actor": null,
      "commit_id": "fa5dbcf25ba59ca1eac08fa079a24cb721da2b60",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "The synchronization approach is more robust now, though it is not used for all of your four subtests yet (see my code-review comment).\r\nJust out of curiousity, how did you create the bloom filter data in practice? Is there like a toolset available for playing around with bloom filters? Or did you go for the manual, programmatic way, i.e. creating `CBloomFilter` instance based on the bitcoind codebase, `insert()`ing the scriptPubKey and hex-dumping the filter's `vData` contents?\r\nRight now, assuming scriptPubKey changes, I as reader of the test wouldn't know a quick way of how to update the data field.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#pullrequestreview-380695135",
      "submitted_at": "2020-03-24T21:20:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
    },
    {
      "event": "commented",
      "id": 603563025,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzU2MzAyNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603563025",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T23:49:21Z",
      "updated_at": "2020-03-24T23:49:21Z",
      "author_association": "MEMBER",
      "body": ">  Just out of curiousity, how did you create the bloom filter data in practice? Is there like a toolset available for playing around with bloom filters? Or did you go for the manual, programmatic way, i.e. creating CBloomFilter instance based on the bitcoind codebase, insert()ing the scriptPubKey and hex-dumping the filter's vData contents?\r\n\r\nI did what you assumed. Instead of hexdump I sent it to a python mininode and made it `print()` the repr.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#issuecomment-603563025",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334"
    },
    {
      "event": "commented",
      "id": 603563323,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzU2MzMyMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/603563323",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-24T23:50:23Z",
      "updated_at": "2020-03-24T23:50:23Z",
      "author_association": "MEMBER",
      "body": "Just to be make sure: This test is not complete and can be extended/improved in the future. Though, I don't have any interest in doing that myself atm. This task will be opened as a good first issue.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#issuecomment-603563323",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE1Njk5OTY5NWRkYWViMDE2ZDgzMjBiZWU2MmY4ZDk2Njc5ZDU1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa156999695ddaeb016d8320bee62f8d96679d55",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa156999695ddaeb016d8320bee62f8d96679d55",
      "tree": {
        "sha": "1bae058d0c4e08422ec41392c063c677158dfb06",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1bae058d0c4e08422ec41392c063c677158dfb06"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 1bae058d0c4e08422ec41392c063c677158dfb06\nparent 2737197ff39f98b0fbdf0fe913c1a7c8ee0f318c\nauthor MarcoFalke <falke.marco@gmail.com> 1584034606 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1585133143 -0400\n\ntest: Add basic test for BIP 37\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiHigwAoVUI1c9QhyHtZPivwVtG7GY3NfX5EivILqGyDVVtMvLbrb1PU8gmBYFt\n3IWb/2NsXx462NCkNG2PszgfY271c+/V96sAylcAPIt5URmH7FrNyuBN8FN+374w\ngWiySI/OQx/KuA/uIFI5ErUD0mZDTHfGI/Pggkr2ELXwxLb6NGQYtHaV9fQ2IVku\nNHy57wO9iZ+srGWH2kL/aUMlthqGGRrpU1wp35a3Nki7xtUVvSVsfNRvKdKbYprq\nAHIfI0hLB+rbKaVdalzA1cx1tkR/aMKpfd6mHngZlif3MMspdOzYarE0wVOW8N15\n1FzNNOG2SMFW4l2r6A7aKNEJZjiLNc7zIuI0lwUC9E32Sl/0re7iTsgCg4haxyIE\nqGrs6xb8ybWZSbJTQp/Lyy1Z9jxBvfkHb/3klkvu4pgRUAx7xrl+P6JYgIDNrN1G\n5hQHpr9EfBeuUFrb61le7EcbhNeuaeTpKWPsOKY/9IkZGZCjM9fT634TePXs59JW\n38tdCrOT\n=mDXL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2737197ff39f98b0fbdf0fe913c1a7c8ee0f318c",
          "sha": "2737197ff39f98b0fbdf0fe913c1a7c8ee0f318c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2737197ff39f98b0fbdf0fe913c1a7c8ee0f318c"
        }
      ],
      "message": "test: Add basic test for BIP 37",
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-25T10:45:43Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-03-12T17:36:46Z"
      },
      "sha": "fa156999695ddaeb016d8320bee62f8d96679d55"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3163426347,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE2MzQyNjM0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3163426347",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-25T10:46:38Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T06:40:23Z",
      "updated_at": "2020-03-27T06:40:23Z",
      "source": {
        "issue": {
          "id": 588821736,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTAwMDg2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18446",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18446/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18446/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18446/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18446",
          "number": 18446,
          "state": "closed",
          "state_reason": null,
          "title": "test: Add test for wtxid transaction relay",
          "body": "Based on #18044 \r\n\r\nThis updates the functional testing framework to the p2p protocol version including wtxid transaction relay (70016) and adds a basic test for wtxid based relay.",
          "user": {
            "login": "fjahr",
            "id": 1322187,
            "node_id": "MDQ6VXNlcjEzMjIxODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fjahr",
            "html_url": "https://github.com/fjahr",
            "followers_url": "https://api.github.com/users/fjahr/followers",
            "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
            "organizations_url": "https://api.github.com/users/fjahr/orgs",
            "repos_url": "https://api.github.com/users/fjahr/repos",
            "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fjahr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18446",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18446",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18446.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18446.patch"
          },
          "closed_at": "2020-06-28T11:19:56Z",
          "created_at": "2020-03-27T01:18:22Z",
          "updated_at": "2022-02-15T10:32:57Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 605360868,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTM2MDg2OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605360868",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-27T23:55:01Z",
      "updated_at": "2020-03-27T23:55:01Z",
      "author_association": "MEMBER",
      "body": "Anything left to do here?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#issuecomment-605360868",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334"
    },
    {
      "event": "commented",
      "id": 605617660,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTYxNzY2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605617660",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T10:51:04Z",
      "updated_at": "2020-03-29T10:51:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Anything left to do here?\r\n\r\nI am still sceptical about the point of the two remaining `.sync_with_ping()`s in the context of this test. Having skimmed through all of its uses in other functional tests, I identified three use-cases for `.sync_with_ping()`:\r\n* ensuring that the version exchange with the test node already happened\r\n* ensuring that messages that have been sent from the test node itself to the peer have been processed, with the following pattern: `peer.send_message(...)`, following `peer.sync_with_ping()`\r\n* checking if a peer is still alive or keeping connections alive, respectively\r\n\r\nIn this test none of this really applies, the `.sync_with_ping()`s just serve as implicit delay, so I'd prefer to make the delay explicit. Thats at least my undestanding of the situation, maybe someone with more experience with the P2P tests can comment here.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#issuecomment-605617660",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334"
    },
    {
      "event": "commented",
      "id": 605624202,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTYyNDIwMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605624202",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T11:50:25Z",
      "updated_at": "2020-03-29T11:50:25Z",
      "author_association": "MEMBER",
      "body": "The rationale is the same, I assume that an \"imaginary\" message (obviously it doesn't exist on the wire, because that would be a bug) can at most take 3 ping-pong round trips. (Assuming also immediate tx relay). I am not sure what I could replace the delay with that would make more sense. If I use a plain `time.sleep`, I wouldn't know what to pass as argument, because I don't know the time it takes for a round trip. Also, with immediate tx relay disabled, I can not predict the poisson delay on top of that.\r\n\r\nI think the best solution is to remove the test, if it is too controversial.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#issuecomment-605624202",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334"
    },
    {
      "event": "commented",
      "id": 605628907,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTYyODkwNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605628907",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T12:31:47Z",
      "updated_at": "2020-03-29T12:32:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fa156999695ddaeb016d8320bee62f8d96679d55 -- more testing coverage is better than less testing coverage\r\n\r\nImprovements can be done in a followup.",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#issuecomment-605628907",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334"
    },
    {
      "event": "commented",
      "id": 605655656,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTY1NTY1Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605655656",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T15:37:40Z",
      "updated_at": "2020-03-29T15:37:40Z",
      "author_association": "MEMBER",
      "body": "@practicalswift I don't want to just merge this as long as there are outstanding concerns from @theStack . I don't know how to address them, so removing that test case temporarily and adding it back when they are figured out would be an option.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#issuecomment-605655656",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334"
    },
    {
      "event": "mentioned",
      "id": 3176021027,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE3NjAyMTAyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176021027",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T15:37:41Z"
    },
    {
      "event": "subscribed",
      "id": 3176021029,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNzYwMjEwMjk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176021029",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T15:37:41Z"
    },
    {
      "event": "mentioned",
      "id": 3176021032,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE3NjAyMTAzMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176021032",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T15:37:41Z"
    },
    {
      "event": "subscribed",
      "id": 3176021034,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNzYwMjEwMzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176021034",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T15:37:41Z"
    },
    {
      "event": "commented",
      "id": 605661086,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTY2MTA4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/605661086",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T16:17:26Z",
      "updated_at": "2020-03-29T16:17:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "@MarcoFalke: It was not my intention to block this PR -- indeed I think _not_ merging this PR would be far worse than having a test with a small synchronization controversy (that only comes from one single person so far). The pattern of `sync_with_ping()`ing the same node more than once in a row for synchronization purposes has never been used so far in any functional tests, which raised my doubts if its the right tool. But with your description of \"at most taking that many ping-pong roundtrips\" it makes a bit more sense to me now. \r\n\r\n(I still think that in an ideal world all those P2P tests should also work with immediate tx relay disabled, but on the other hand I also have no idea how to realize this.)",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#issuecomment-605661086",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18334"
    },
    {
      "event": "mentioned",
      "id": 3176059541,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE3NjA1OTU0MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176059541",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T16:17:26Z"
    },
    {
      "event": "subscribed",
      "id": 3176059543,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxNzYwNTk1NDM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3176059543",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-29T16:17:26Z"
    },
    {
      "event": "merged",
      "id": 3180147973,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzE4MDE0Nzk3Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3180147973",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7e1fc03b185d89f21da1bee2f8b7900d65745b30",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e1fc03b185d89f21da1bee2f8b7900d65745b30",
      "created_at": "2020-03-30T19:29:51Z"
    },
    {
      "event": "closed",
      "id": 3180147991,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzE4MDE0Nzk5MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3180147991",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T19:29:52Z"
    },
    {
      "event": "referenced",
      "id": 3180169014,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMxODAxNjkwMTQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3180169014",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7c914b20abd4ddbd4d8bbe22b807071c7f9a7c5c",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/7c914b20abd4ddbd4d8bbe22b807071c7f9a7c5c",
      "created_at": "2020-03-30T19:34:58Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 3180173831,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQzMTgwMTczODMx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3180173831",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-30T19:36:21Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-31T15:03:43Z",
      "updated_at": "2020-03-31T15:03:43Z",
      "source": {
        "issue": {
          "id": 591184186,
          "node_id": "MDU6SXNzdWU1OTExODQxODY=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18483",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18483/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18483/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18483/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/18483",
          "number": 18483,
          "state": "closed",
          "state_reason": "completed",
          "title": "BIP37: 'getdata' request for filtered blocks is answered with 'merkleblock's even if no filter is set",
          "body": "According to [BIP37](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki#Extensions_to_existing_messages), `getdata` commands with a request for filtered blocks via type `MSG_FILTERED_BLOCK` in the `inv` submessage are only responded to if a filter is set:\r\n\r\n> The getdata command is extended to allow a new type in the inv submessage. The type field can now be MSG_FILTERED_BLOCK (== 3) rather than MSG_BLOCK. **If no filter has been set on the connection, a request for filtered blocks is ignored.** If a filter has been set, a merkleblock message is returned for the requested block hash.\r\n\r\n**Expected behavior**\r\n\r\nWhen no BIP37 filter is set and a we request a filtered block, there should be no response from the node.\r\n\r\n**Actual behavior**\r\n\r\nWhen no BIP37 filter is set and a we request a filtered block, we get a `merkleblock` message in reply.\r\n\r\n**To reproduce**\r\n\r\nThe behaviour can reproduced by adding the following lines to the functional test `p2p_filter.py` (introduced recently with PR https://github.com/bitcoin/bitcoin/pull/18334, commit https://github.com/bitcoin/bitcoin/pull/18334/commits/fa156999695ddaeb016d8320bee62f8d96679d55), that has already a callback implemented which requests filtered blocks as reply to `inv` messages:\r\n```\r\n    # add this lines after filtered P2P connection is added to the node, but before filter is set\r\n    filter_node.merkleblock_received = False\r\n    self.nodes[0].generatetoaddress(1, self.node[0].getnewaddress())[0]\r\n    filter_node.sync_with_ping()\r\n    assert not filter_node.merkleblock_received\r\n```\r\nThe assertion fails, meaning that a merkleblock was indeed received.\r\n\r\n**Possible solution**\r\nLooking at the code in `net_processing.cpp`/`net.h`, it is quite obvious why this happens: the condition to answer to a filtered block request is just whether the (unique) pointer `pfrom->m_tx_relay->pfilter` is set, and this condition is always true. Initially the pointer is set in the constructor of the `struct TxRelay`, pointing to a default-constructed instance of `CBloomFilter`:\r\nhttps://github.com/bitcoin/bitcoin/blob/d52ba21dfff99173abb927bc964ce7ceb711d789/src/net.h#L812\r\nAnd after receiving a `filterclear` message it is also reset to an empty instance again:\r\nhttps://github.com/bitcoin/bitcoin/blob/d52ba21dfff99173abb927bc964ce7ceb711d789/src/net_processing.cpp#L3201\r\nIn the following code, the boolean variable `sendMerkleBlock` will thus _always_ be set to true:\r\nhttps://github.com/bitcoin/bitcoin/blob/d52ba21dfff99173abb927bc964ce7ceb711d789/src/net_processing.cpp#L1500-L1508\r\n\r\nA simple solution would be to just set `pfilter` to `nullptr` initially and after receiving a `filterclear` message. The question is if its worth the change, as the described behaviour is IMHO not harmful at all (it just doesn't fit the description in the BIP37 document, which could be adapted?) and connection bloom filters are deprecated anway and [not recommended to be used due to privacy concerns](https://en.bitcoin.it/wiki/BIP37_privacy_problems). It is noteworthy though that possibly other parts in `net_processing.cpp` assume the test on `pfilter` means \"a bloom filter has been set\", and the fact that this always evaluates to `true` could possibly lead to some unintended behaviour. For example, in the following code part, where a `NodeEvictionCandidate` is created, its member `fBloomFilter` will always be set to true:\r\nhttps://github.com/bitcoin/bitcoin/blob/d52ba21dfff99173abb927bc964ce7ceb711d789/src/net.cpp#L864-L875",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 16,
          "closed_at": "2020-04-20T11:02:16Z",
          "created_at": "2020-03-31T15:03:42Z",
          "updated_at": "2022-02-15T11:15:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarkLTZ",
        "id": 43173987,
        "node_id": "MDQ6VXNlcjQzMTczOTg3",
        "avatar_url": "https://avatars.githubusercontent.com/u/43173987?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarkLTZ",
        "html_url": "https://github.com/MarkLTZ",
        "followers_url": "https://api.github.com/users/MarkLTZ/followers",
        "following_url": "https://api.github.com/users/MarkLTZ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarkLTZ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarkLTZ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarkLTZ/subscriptions",
        "organizations_url": "https://api.github.com/users/MarkLTZ/orgs",
        "repos_url": "https://api.github.com/users/MarkLTZ/repos",
        "events_url": "https://api.github.com/users/MarkLTZ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarkLTZ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-04T12:11:54Z",
      "updated_at": "2020-04-04T12:11:54Z",
      "source": {
        "issue": {
          "id": 593801920,
          "node_id": "MDU6SXNzdWU1OTM4MDE5MjA=",
          "url": "https://api.github.com/repos/litecoinz-core/litecoinz/issues/14",
          "repository_url": "https://api.github.com/repos/litecoinz-core/litecoinz",
          "labels_url": "https://api.github.com/repos/litecoinz-core/litecoinz/issues/14/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/litecoinz-core/litecoinz/issues/14/comments",
          "events_url": "https://api.github.com/repos/litecoinz-core/litecoinz/issues/14/events",
          "html_url": "https://github.com/litecoinz-core/litecoinz/issues/14",
          "number": 14,
          "state": "closed",
          "state_reason": "completed",
          "title": "Bitcoin PR tracking",
          "body": "The main purpose of this issue is to keep track of Pull Requests on Bitcoin since version 0.19.1 identifying those which make a porting LitecoinZ.",
          "user": {
            "login": "MarkLTZ",
            "id": 43173987,
            "node_id": "MDQ6VXNlcjQzMTczOTg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/43173987?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkLTZ",
            "html_url": "https://github.com/MarkLTZ",
            "followers_url": "https://api.github.com/users/MarkLTZ/followers",
            "following_url": "https://api.github.com/users/MarkLTZ/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarkLTZ/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarkLTZ/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarkLTZ/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkLTZ/orgs",
            "repos_url": "https://api.github.com/users/MarkLTZ/repos",
            "events_url": "https://api.github.com/users/MarkLTZ/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarkLTZ/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 1680652548,
              "node_id": "MDU6TGFiZWwxNjgwNjUyNTQ4",
              "url": "https://api.github.com/repos/litecoinz-core/litecoinz/labels/enhancement",
              "name": "enhancement",
              "description": "New feature or request",
              "color": "a2eeef",
              "default": true
            },
            {
              "id": 1680652550,
              "node_id": "MDU6TGFiZWwxNjgwNjUyNTUw",
              "url": "https://api.github.com/repos/litecoinz-core/litecoinz/labels/help%20wanted",
              "name": "help wanted",
              "description": "Extra attention is needed",
              "color": "008672",
              "default": true
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "milestone": {
            "url": "https://api.github.com/repos/litecoinz-core/litecoinz/milestones/5",
            "html_url": "https://github.com/litecoinz-core/litecoinz/milestone/5",
            "labels_url": "https://api.github.com/repos/litecoinz-core/litecoinz/milestones/5/labels",
            "id": 6207680,
            "node_id": "MDk6TWlsZXN0b25lNjIwNzY4MA==",
            "number": 5,
            "state": "closed",
            "title": "v3.0.0",
            "description": "",
            "creator": {
              "login": "MarkLTZ",
              "id": 43173987,
              "node_id": "MDQ6VXNlcjQzMTczOTg3",
              "avatar_url": "https://avatars.githubusercontent.com/u/43173987?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarkLTZ",
              "html_url": "https://github.com/MarkLTZ",
              "followers_url": "https://api.github.com/users/MarkLTZ/followers",
              "following_url": "https://api.github.com/users/MarkLTZ/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarkLTZ/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarkLTZ/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarkLTZ/subscriptions",
              "organizations_url": "https://api.github.com/users/MarkLTZ/orgs",
              "repos_url": "https://api.github.com/users/MarkLTZ/repos",
              "events_url": "https://api.github.com/users/MarkLTZ/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarkLTZ/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 26,
            "created_at": "2020-12-13T12:46:49Z",
            "updated_at": "2020-12-13T12:56:25Z",
            "closed_at": "2020-12-13T12:54:02Z"
          },
          "locked": false,
          "comments": 10,
          "closed_at": "2020-12-13T12:56:10Z",
          "created_at": "2020-04-04T11:24:26Z",
          "updated_at": "2020-12-13T13:34:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-13T15:21:25Z",
      "updated_at": "2020-04-13T15:21:25Z",
      "source": {
        "issue": {
          "id": 595313654,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk5ODEwNDgw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18544",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18544/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18544/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18544/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18544",
          "number": 18544,
          "state": "closed",
          "state_reason": null,
          "title": "net: limit BIP37 filter lifespan (active between 'filterload'..'filterclear')",
          "body": "This PR fixes https://github.com/bitcoin/bitcoin/issues/18483. On the master branch, there is currently _always_ a BIP37 filter set for every peer: if not a specific filter is set through a `filterload` message, a default match-everything filter is instanciated and pointed to via the `CBloomFilter` default constructor; that happens both initially, when the containing structure `TxRelay` is constructed: \r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/c0b389b33516fb3eaaad7c30bd11dba768882a7e/src/net.h#L812\r\n\r\nand after a loaded filter is removed again through a `filterclear` message:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/c0b389b33516fb3eaaad7c30bd11dba768882a7e/src/net_processing.cpp#L3201\r\n\r\nThe behaviour was introduced by commit https://github.com/bitcoin/bitcoin/commit/37c6389c5a0ca63ae3573440ecdfe95d28ad8f07 (an intentional covert fix for [CVE-2013-5700](https://github.com/bitcoin/bitcoin/pull/18515), according to gmaxwell).\r\n\r\nThis default match-everything filter leads to some unintended side-effects:\r\n1. `getdata` request for filtered blocks (i.e. type `MSG_FILTERED_BLOCK`) are always responded to with `merkleblock`s, even if no filter was set by the peer, see issue #18483 (strictly speaking, this is a violation of BIP37) https://github.com/bitcoin/bitcoin/blob/c0b389b33516fb3eaaad7c30bd11dba768882a7e/src/net_processing.cpp#L1504-L1507\r\n2. if a peer sends a `filteradd` message without having loaded a filter via `filterload` before, the intended increasing of the banscore never happens (triggered if `bad` is set to true, a few lines below) https://github.com/bitcoin/bitcoin/blob/c0b389b33516fb3eaaad7c30bd11dba768882a7e/src/net_processing.cpp#L3182-L3186\r\n\r\nThis PR basically activates the `else`-branch code paths for all checks of `pfilter` again (on the master branch, they are dead code) by limiting the pointer's lifespan: instead of always having a filter set, the `pfilter` is only pointing to a `CBloomFilter`-instance after receiving a `filterload` message and the instance is destroyed again (and the pointer nullified) after receiving a `filterclear` message.\r\n\r\nHere is a before/after comparison in behaviour:\r\n| code part / scenario                          |    master branch                   |   PR branch                                          |\r\n| --------------------------------------------- | ---------------------------------- | ---------------------------------------------------- |\r\n| `getdata` processing for `MSG_FILTERED_BLOCK` | always responds with `merkleblock` | only responds if filter was set via `filterload`     |\r\n| `filteradd` processing, no filter was loaded  | nothing                            | peer's banscore increases by 100 (i.e. disconnect)   |\r\n\r\nOn the other code parts where `pfilter` is checked there is no change in the logic behaviour (except that `CBloomFilter::IsRelevantAndUpdate()` is unnecessarily called and immediately returned in the master branch).\r\nNote that the default constructor of `CBloomFilter` is only used for deserializing the received `filterload` message and nowhere else. The PR also contains a functional test checking that sending `getdata` for filtered blocks is ignored by the node if no bloom filter is set. \r\n",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/45",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/45/labels",
            "id": 4914019,
            "node_id": "MDk6TWlsZXN0b25lNDkxNDAxOQ==",
            "number": 45,
            "state": "closed",
            "title": "0.21.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 132,
            "created_at": "2019-12-09T08:39:58Z",
            "updated_at": "2021-01-15T19:50:53Z",
            "closed_at": "2021-01-15T19:50:53Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18544",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18544",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18544.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18544.patch"
          },
          "closed_at": "2020-04-20T11:02:32Z",
          "created_at": "2020-04-06T17:58:57Z",
          "updated_at": "2022-02-15T10:38:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3801570848,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4MDE1NzA4NDg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3801570848",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "887b712b1778917f54033c0e9a3047ce72b80b25",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/887b712b1778917f54033c0e9a3047ce72b80b25",
      "created_at": "2020-09-24T06:23:55Z"
    },
    {
      "event": "locked",
      "id": 6073770712,
      "node_id": "LOE_lADOABII584ik5lJzwAAAAFqBmLY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073770712",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:28:35Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396134933",
      "pull_request_review_id": 379042104,
      "id": 396134933,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEzNDkzMw==",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )",
      "path": "test/functional/p2p_filter.py",
      "position": 32,
      "original_position": 31,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fabf37381c4b62fc057ca0df4e77f2f2deb0e428",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Could add a short comment on what this filter's dimensions are based upon (w.r.t. target parameters number of elements N, false positive rate P)?",
      "created_at": "2020-03-22T20:03:20Z",
      "updated_at": "2020-03-25T10:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r396134933",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396134933"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": 26,
      "original_start_line": 25,
      "start_side": "RIGHT",
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396139141",
      "pull_request_review_id": 379042104,
      "id": 396139141,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjEzOTE0MQ==",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )\n+\n+    def on_inv(self, message):\n+        want = msg_getdata()\n+        for i in message.inv:\n+            # inv messages can only contain TX or BLOCK, so translate BLOCK to FILTERED_BLOCK\n+            if i.type == MSG_BLOCK:\n+                i.type = MSG_FILTERED_BLOCK\n+            want.inv.append(i)\n+        if len(want.inv):\n+            self.send_message(want)\n+\n+    def on_merkleblock(self, message):\n+        self.merkleblock_received = True\n+\n+    def on_tx(self, message):\n+        self.tx_received = True\n+\n+\n+class FilterTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+        self.extra_args = [[\n+            '-peerbloomfilters',\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Add filtered P2P connection to the node')\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+        filter_node.send_message(filter_node.watch_filter_init)\n+        filter_node.sync_with_ping()\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+\n+        self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].generatetoaddress(1, filter_address)\n+        filter_node.sync_with_ping()  # wait for inv\n+        filter_node.sync_with_ping()  # wait for merkleblock",
      "path": "test/functional/p2p_filter.py",
      "position": null,
      "original_position": 74,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fabf37381c4b62fc057ca0df4e77f2f2deb0e428",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This looks fishy, can two consecutive `sync_with_ping()` calls actually help more for synchronization than just one? To my understanding, `sync_with_ping` is only helpful whenever a node is already processing a received message and we want to guarantee that the processing is finished. I don't see how you could \"wait for messages\" with that.\r\nWe neither know that at the start of the first `sync_with_ping()` call the expected _inv_ message from node0 has already arrived, nor that at the second `sync_with_ping()` call _merkleblock_ has arrived (or even getdata was received from node0 before). I had a similar problem while working on https://github.com/bitcoin/bitcoin/pull/17461 (see https://github.com/bitcoin/bitcoin/pull/17461#issuecomment-590772489) with an adequate but still not 100% satisfactory waiting solution.\r\n\r\nTo prove my point, the test fails without the immediate tx relay enabled (which should only serve as speed-up, but not as synchronization mechanism, in my humble opinion).",
      "created_at": "2020-03-22T20:48:52Z",
      "updated_at": "2020-03-25T10:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r396139141",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/396139141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": null,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397156367",
      "pull_request_review_id": 380313714,
      "id": 397156367,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE1NjM2Nw==",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )",
      "path": "test/functional/p2p_filter.py",
      "position": 32,
      "original_position": 31,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fabf37381c4b62fc057ca0df4e77f2f2deb0e428",
      "in_reply_to_id": 396134933,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, extended the comment to state the filter parameters.",
      "created_at": "2020-03-24T13:36:34Z",
      "updated_at": "2020-03-25T10:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r397156367",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397156367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": 26,
      "original_start_line": 25,
      "start_side": "RIGHT",
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397157123",
      "pull_request_review_id": 380314688,
      "id": 397157123,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE1NzEyMw==",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )\n+\n+    def on_inv(self, message):\n+        want = msg_getdata()\n+        for i in message.inv:\n+            # inv messages can only contain TX or BLOCK, so translate BLOCK to FILTERED_BLOCK\n+            if i.type == MSG_BLOCK:\n+                i.type = MSG_FILTERED_BLOCK\n+            want.inv.append(i)\n+        if len(want.inv):\n+            self.send_message(want)\n+\n+    def on_merkleblock(self, message):\n+        self.merkleblock_received = True\n+\n+    def on_tx(self, message):\n+        self.tx_received = True\n+\n+\n+class FilterTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+        self.extra_args = [[\n+            '-peerbloomfilters',\n+            \"-whitelist=noban@127.0.0.1\",  # immediate tx relay\n+        ]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Add filtered P2P connection to the node')\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+        filter_node.send_message(filter_node.watch_filter_init)\n+        filter_node.sync_with_ping()\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+\n+        self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].generatetoaddress(1, filter_address)\n+        filter_node.sync_with_ping()  # wait for inv\n+        filter_node.sync_with_ping()  # wait for merkleblock",
      "path": "test/functional/p2p_filter.py",
      "position": null,
      "original_position": 74,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fabf37381c4b62fc057ca0df4e77f2f2deb0e428",
      "in_reply_to_id": 396139141,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, replaced with `filter_node.wait_for_tx(txid)`, which is a stricter check that also passes when immediate tx relay is disabled.",
      "created_at": "2020-03-24T13:37:38Z",
      "updated_at": "2020-03-25T10:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r397157123",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397157123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": null,
      "original_start_line": 73,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397459811",
      "pull_request_review_id": 380695135,
      "id": 397459811,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ1OTgxMQ==",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter (n=10, fp=0.000001) with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )\n+\n+    def on_inv(self, message):\n+        want = msg_getdata()\n+        for i in message.inv:\n+            # inv messages can only contain TX or BLOCK, so translate BLOCK to FILTERED_BLOCK\n+            if i.type == MSG_BLOCK:\n+                i.type = MSG_FILTERED_BLOCK\n+            want.inv.append(i)\n+        if len(want.inv):\n+            self.send_message(want)\n+\n+    def on_merkleblock(self, message):\n+        self.merkleblock_received = True\n+\n+    def on_tx(self, message):\n+        self.tx_received = True\n+\n+\n+class FilterTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+        self.extra_args = [[\n+            '-peerbloomfilters',\n+            '-whitelist=noban@127.0.0.1',  # immediate tx relay\n+        ]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Add filtered P2P connection to the node')\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+        filter_node.send_message(filter_node.watch_filter_init)\n+        filter_node.sync_with_ping()\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+\n+        self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n+        filter_node.merkleblock_received = False\n+        block_hash = self.nodes[0].generatetoaddress(1, filter_address)[0]\n+        txid = self.nodes[0].getblock(block_hash)['tx'][0]\n+        filter_node.wait_for_tx(txid)\n+        assert filter_node.merkleblock_received\n+\n+        self.log.info('Check that we only receive a merkleblock if the filter does not match a tx in a block')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())\n+        filter_node.sync_with_ping()\n+        filter_node.sync_with_ping()\n+        assert filter_node.merkleblock_received\n+        assert not filter_node.tx_received",
      "path": "test/functional/p2p_filter.py",
      "position": null,
      "original_position": 83,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fa5dbcf25ba59ca1eac08fa079a24cb721da2b60",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think `sync_with_ping()` doesn't help here for reliable synchronization as well, as in theory there could still arrive a new message at the filter node after the asserts (same argumentation as my code-review comment a few lines above). Maybe using `wait_until` on `filter_node.merkleblock_received` would make it more robust?",
      "created_at": "2020-03-24T21:04:15Z",
      "updated_at": "2020-03-25T10:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r397459811",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397459811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": null,
      "original_start_line": 79,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397465360",
      "pull_request_review_id": 380695135,
      "id": 397465360,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ2NTM2MA==",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter (n=10, fp=0.000001) with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )\n+\n+    def on_inv(self, message):\n+        want = msg_getdata()\n+        for i in message.inv:\n+            # inv messages can only contain TX or BLOCK, so translate BLOCK to FILTERED_BLOCK\n+            if i.type == MSG_BLOCK:\n+                i.type = MSG_FILTERED_BLOCK\n+            want.inv.append(i)\n+        if len(want.inv):\n+            self.send_message(want)\n+\n+    def on_merkleblock(self, message):\n+        self.merkleblock_received = True\n+\n+    def on_tx(self, message):\n+        self.tx_received = True\n+\n+\n+class FilterTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+        self.extra_args = [[\n+            '-peerbloomfilters',\n+            '-whitelist=noban@127.0.0.1',  # immediate tx relay\n+        ]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Add filtered P2P connection to the node')\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+        filter_node.send_message(filter_node.watch_filter_init)\n+        filter_node.sync_with_ping()\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+\n+        self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n+        filter_node.merkleblock_received = False\n+        block_hash = self.nodes[0].generatetoaddress(1, filter_address)[0]\n+        txid = self.nodes[0].getblock(block_hash)['tx'][0]\n+        filter_node.wait_for_tx(txid)\n+        assert filter_node.merkleblock_received\n+\n+        self.log.info('Check that we only receive a merkleblock if the filter does not match a tx in a block')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())\n+        filter_node.sync_with_ping()\n+        filter_node.sync_with_ping()\n+        assert filter_node.merkleblock_received\n+        assert not filter_node.tx_received\n+\n+        self.log.info('Check that we not receive a tx if the filter does not match a mempool tx')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 90)\n+        filter_node.sync_with_ping()\n+        filter_node.sync_with_ping()",
      "path": "test/functional/p2p_filter.py",
      "position": 90,
      "original_position": 90,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fa5dbcf25ba59ca1eac08fa079a24cb721da2b60",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think this helps for synchronization here, see code-review comment above.",
      "created_at": "2020-03-24T21:14:52Z",
      "updated_at": "2020-03-25T10:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r397465360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397465360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": 89,
      "original_start_line": 89,
      "start_side": "RIGHT",
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397529298",
      "pull_request_review_id": 380773777,
      "id": 397529298,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUyOTI5OA==",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter (n=10, fp=0.000001) with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )\n+\n+    def on_inv(self, message):\n+        want = msg_getdata()\n+        for i in message.inv:\n+            # inv messages can only contain TX or BLOCK, so translate BLOCK to FILTERED_BLOCK\n+            if i.type == MSG_BLOCK:\n+                i.type = MSG_FILTERED_BLOCK\n+            want.inv.append(i)\n+        if len(want.inv):\n+            self.send_message(want)\n+\n+    def on_merkleblock(self, message):\n+        self.merkleblock_received = True\n+\n+    def on_tx(self, message):\n+        self.tx_received = True\n+\n+\n+class FilterTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+        self.extra_args = [[\n+            '-peerbloomfilters',\n+            '-whitelist=noban@127.0.0.1',  # immediate tx relay\n+        ]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Add filtered P2P connection to the node')\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+        filter_node.send_message(filter_node.watch_filter_init)\n+        filter_node.sync_with_ping()\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+\n+        self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n+        filter_node.merkleblock_received = False\n+        block_hash = self.nodes[0].generatetoaddress(1, filter_address)[0]\n+        txid = self.nodes[0].getblock(block_hash)['tx'][0]\n+        filter_node.wait_for_tx(txid)\n+        assert filter_node.merkleblock_received\n+\n+        self.log.info('Check that we only receive a merkleblock if the filter does not match a tx in a block')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())\n+        filter_node.sync_with_ping()\n+        filter_node.sync_with_ping()\n+        assert filter_node.merkleblock_received\n+        assert not filter_node.tx_received",
      "path": "test/functional/p2p_filter.py",
      "position": null,
      "original_position": 83,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fa5dbcf25ba59ca1eac08fa079a24cb721da2b60",
      "in_reply_to_id": 397459811,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "A wait_until on `filter_node.merkleblock_received` does return immediately when the `        assert filter_node.merkleblock_received` has passed. I don't see how this could help anything.",
      "created_at": "2020-03-24T23:47:51Z",
      "updated_at": "2020-03-25T10:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r397529298",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397529298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": null,
      "original_start_line": 79,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397735934",
      "pull_request_review_id": 381005693,
      "id": 397735934,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzczNTkzNA==",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter (n=10, fp=0.000001) with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )\n+\n+    def on_inv(self, message):\n+        want = msg_getdata()\n+        for i in message.inv:\n+            # inv messages can only contain TX or BLOCK, so translate BLOCK to FILTERED_BLOCK\n+            if i.type == MSG_BLOCK:\n+                i.type = MSG_FILTERED_BLOCK\n+            want.inv.append(i)\n+        if len(want.inv):\n+            self.send_message(want)\n+\n+    def on_merkleblock(self, message):\n+        self.merkleblock_received = True\n+\n+    def on_tx(self, message):\n+        self.tx_received = True\n+\n+\n+class FilterTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+        self.extra_args = [[\n+            '-peerbloomfilters',\n+            '-whitelist=noban@127.0.0.1',  # immediate tx relay\n+        ]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Add filtered P2P connection to the node')\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+        filter_node.send_message(filter_node.watch_filter_init)\n+        filter_node.sync_with_ping()\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+\n+        self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n+        filter_node.merkleblock_received = False\n+        block_hash = self.nodes[0].generatetoaddress(1, filter_address)[0]\n+        txid = self.nodes[0].getblock(block_hash)['tx'][0]\n+        filter_node.wait_for_tx(txid)\n+        assert filter_node.merkleblock_received\n+\n+        self.log.info('Check that we only receive a merkleblock if the filter does not match a tx in a block')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())\n+        filter_node.sync_with_ping()\n+        filter_node.sync_with_ping()\n+        assert filter_node.merkleblock_received\n+        assert not filter_node.tx_received",
      "path": "test/functional/p2p_filter.py",
      "position": null,
      "original_position": 83,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fa5dbcf25ba59ca1eac08fa079a24cb721da2b60",
      "in_reply_to_id": 397459811,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What I meant was removing the `sync_with_ping()`s completely (as they effectively only serve as hidden delays, they don't do anything for reliable synchronization -- the expected messages could in theory still appear after) and replacing the `assert filter_node.merkleblock_received` with a `wait_until`-pendant, similar like you did on the subtests 1 and 4 on the latest force-push (https://github.com/bitcoin/bitcoin/compare/fabf37381c4b62fc057ca0df4e77f2f2deb0e428..fa64441bd7a284a99c0e637e33e6aff690718d75).\r\n\r\nOr did I overlook something and the situation for subtests 2 and 3 is different?",
      "created_at": "2020-03-25T10:05:45Z",
      "updated_at": "2020-03-25T10:46:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r397735934",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397735934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": null,
      "original_start_line": 79,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397760775",
      "pull_request_review_id": 381035073,
      "id": 397760775,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MDc3NQ==",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter (n=10, fp=0.000001) with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )\n+\n+    def on_inv(self, message):\n+        want = msg_getdata()\n+        for i in message.inv:\n+            # inv messages can only contain TX or BLOCK, so translate BLOCK to FILTERED_BLOCK\n+            if i.type == MSG_BLOCK:\n+                i.type = MSG_FILTERED_BLOCK\n+            want.inv.append(i)\n+        if len(want.inv):\n+            self.send_message(want)\n+\n+    def on_merkleblock(self, message):\n+        self.merkleblock_received = True\n+\n+    def on_tx(self, message):\n+        self.tx_received = True\n+\n+\n+class FilterTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+        self.extra_args = [[\n+            '-peerbloomfilters',\n+            '-whitelist=noban@127.0.0.1',  # immediate tx relay\n+        ]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Add filtered P2P connection to the node')\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+        filter_node.send_message(filter_node.watch_filter_init)\n+        filter_node.sync_with_ping()\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+\n+        self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n+        filter_node.merkleblock_received = False\n+        block_hash = self.nodes[0].generatetoaddress(1, filter_address)[0]\n+        txid = self.nodes[0].getblock(block_hash)['tx'][0]\n+        filter_node.wait_for_tx(txid)\n+        assert filter_node.merkleblock_received\n+\n+        self.log.info('Check that we only receive a merkleblock if the filter does not match a tx in a block')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())\n+        filter_node.sync_with_ping()\n+        filter_node.sync_with_ping()\n+        assert filter_node.merkleblock_received\n+        assert not filter_node.tx_received",
      "path": "test/functional/p2p_filter.py",
      "position": null,
      "original_position": 83,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fa5dbcf25ba59ca1eac08fa079a24cb721da2b60",
      "in_reply_to_id": 397459811,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Replaced with `filter_node.wait_for_merkleblock()`.",
      "created_at": "2020-03-25T10:47:13Z",
      "updated_at": "2020-03-25T10:47:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r397760775",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397760775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": null,
      "original_start_line": 79,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397761055",
      "pull_request_review_id": 381035398,
      "id": 397761055,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc2MTA1NQ==",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter (n=10, fp=0.000001) with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )\n+\n+    def on_inv(self, message):\n+        want = msg_getdata()\n+        for i in message.inv:\n+            # inv messages can only contain TX or BLOCK, so translate BLOCK to FILTERED_BLOCK\n+            if i.type == MSG_BLOCK:\n+                i.type = MSG_FILTERED_BLOCK\n+            want.inv.append(i)\n+        if len(want.inv):\n+            self.send_message(want)\n+\n+    def on_merkleblock(self, message):\n+        self.merkleblock_received = True\n+\n+    def on_tx(self, message):\n+        self.tx_received = True\n+\n+\n+class FilterTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+        self.extra_args = [[\n+            '-peerbloomfilters',\n+            '-whitelist=noban@127.0.0.1',  # immediate tx relay\n+        ]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Add filtered P2P connection to the node')\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+        filter_node.send_message(filter_node.watch_filter_init)\n+        filter_node.sync_with_ping()\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+\n+        self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n+        filter_node.merkleblock_received = False\n+        block_hash = self.nodes[0].generatetoaddress(1, filter_address)[0]\n+        txid = self.nodes[0].getblock(block_hash)['tx'][0]\n+        filter_node.wait_for_tx(txid)\n+        assert filter_node.merkleblock_received\n+\n+        self.log.info('Check that we only receive a merkleblock if the filter does not match a tx in a block')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())\n+        filter_node.sync_with_ping()\n+        filter_node.sync_with_ping()\n+        assert filter_node.merkleblock_received\n+        assert not filter_node.tx_received\n+\n+        self.log.info('Check that we not receive a tx if the filter does not match a mempool tx')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 90)\n+        filter_node.sync_with_ping()\n+        filter_node.sync_with_ping()",
      "path": "test/functional/p2p_filter.py",
      "position": 90,
      "original_position": 90,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fa5dbcf25ba59ca1eac08fa079a24cb721da2b60",
      "in_reply_to_id": 397465360,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This can not be replaced with a `wait_for` unless I am mistaken",
      "created_at": "2020-03-25T10:47:41Z",
      "updated_at": "2020-03-25T10:47:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r397761055",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397761055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": 89,
      "original_start_line": 89,
      "start_side": "RIGHT",
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397787108",
      "pull_request_review_id": 381065999,
      "id": 397787108,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc4NzEwOA==",
      "diff_hunk": "@@ -0,0 +1,102 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"\n+Test BIP 37\n+\"\"\"\n+\n+from test_framework.messages import (\n+    MSG_BLOCK,\n+    MSG_FILTERED_BLOCK,\n+    msg_getdata,\n+    msg_filterload,\n+)\n+from test_framework.mininode import (\n+    P2PInterface,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class FilterNode(P2PInterface):\n+    # This is a P2SH watch-only wallet\n+    watch_script_pubkey = 'a914ffffffffffffffffffffffffffffffffffffffff87'\n+    # The initial filter (n=10, fp=0.000001) with just the above scriptPubKey added\n+    watch_filter_init = msg_filterload(\n+        data=\n+        b'@\\x00\\x08\\x00\\x80\\x00\\x00 \\x00\\xc0\\x00 \\x04\\x00\\x08$\\x00\\x04\\x80\\x00\\x00 \\x00\\x00\\x00\\x00\\x80\\x00\\x00@\\x00\\x02@ \\x00',\n+        nHashFuncs=19,\n+        nTweak=0,\n+        nFlags=1,\n+    )\n+\n+    def on_inv(self, message):\n+        want = msg_getdata()\n+        for i in message.inv:\n+            # inv messages can only contain TX or BLOCK, so translate BLOCK to FILTERED_BLOCK\n+            if i.type == MSG_BLOCK:\n+                i.type = MSG_FILTERED_BLOCK\n+            want.inv.append(i)\n+        if len(want.inv):\n+            self.send_message(want)\n+\n+    def on_merkleblock(self, message):\n+        self.merkleblock_received = True\n+\n+    def on_tx(self, message):\n+        self.tx_received = True\n+\n+\n+class FilterTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = False\n+        self.num_nodes = 1\n+        self.extra_args = [[\n+            '-peerbloomfilters',\n+            '-whitelist=noban@127.0.0.1',  # immediate tx relay\n+        ]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.log.info('Add filtered P2P connection to the node')\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+        filter_node.send_message(filter_node.watch_filter_init)\n+        filter_node.sync_with_ping()\n+        filter_address = self.nodes[0].decodescript(filter_node.watch_script_pubkey)['addresses'][0]\n+\n+        self.log.info('Check that we receive merkleblock and tx if the filter matches a tx in a block')\n+        filter_node.merkleblock_received = False\n+        block_hash = self.nodes[0].generatetoaddress(1, filter_address)[0]\n+        txid = self.nodes[0].getblock(block_hash)['tx'][0]\n+        filter_node.wait_for_tx(txid)\n+        assert filter_node.merkleblock_received\n+\n+        self.log.info('Check that we only receive a merkleblock if the filter does not match a tx in a block')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].generatetoaddress(1, self.nodes[0].getnewaddress())\n+        filter_node.sync_with_ping()\n+        filter_node.sync_with_ping()\n+        assert filter_node.merkleblock_received\n+        assert not filter_node.tx_received\n+\n+        self.log.info('Check that we not receive a tx if the filter does not match a mempool tx')\n+        filter_node.merkleblock_received = False\n+        filter_node.tx_received = False\n+        self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 90)\n+        filter_node.sync_with_ping()\n+        filter_node.sync_with_ping()",
      "path": "test/functional/p2p_filter.py",
      "position": 90,
      "original_position": 90,
      "commit_id": "fa156999695ddaeb016d8320bee62f8d96679d55",
      "original_commit_id": "fa5dbcf25ba59ca1eac08fa079a24cb721da2b60",
      "in_reply_to_id": 397465360,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed, `wait_for` is not an option here -- it's always problematic to assert that something was _not_ received, as we never know for sure that it couldn't still come in in the future. I don't know a better way here than to just wait for some arbitrary time between the `.sendtoaddress()` call and the `asserts` :confused:",
      "created_at": "2020-03-25T11:34:42Z",
      "updated_at": "2020-03-25T11:34:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18334#discussion_r397787108",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/397787108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18334"
        }
      },
      "start_line": 89,
      "original_start_line": 89,
      "start_side": "RIGHT",
      "line": 90,
      "original_line": 90,
      "side": "RIGHT"
    }
  ]
}