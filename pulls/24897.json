{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897",
    "id": 911362919,
    "node_id": "PR_kwDOABII5842Uktn",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/24897",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/24897.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/24897.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/50a6320e5760cb8784017d12e3e0c74647bc2233",
    "number": 24897,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "[Draft / POC] Silent Payments",
    "user": {
      "login": "w0xlt",
      "id": 94266259,
      "node_id": "U_kgDOBZ5jkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/w0xlt",
      "html_url": "https://github.com/w0xlt",
      "followers_url": "https://api.github.com/users/w0xlt/followers",
      "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
      "organizations_url": "https://api.github.com/users/w0xlt/orgs",
      "repos_url": "https://api.github.com/users/w0xlt/repos",
      "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/w0xlt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR proposes an early version of [Silent Payment](https://gist.github.com/RubenSomsen/c43b79517e7cb701ebf77eec6dbb46b8) (author:@RubenSomsen).\r\nIn this scheme, the recipient generates a public address, but the sender tweaks the address and the recipient detects the payment by verifying all transactions on the blockchain. An example use case would be private donations.\r\n\r\nThe purpose of this PR is not a final version, but to start the discussion and get benchmarks based on a real implementation.\r\n\r\nThis version is built on top of [#994](https://github.com/bitcoin-core/secp256k1/pull/994) (bitcoin-core/secp256k1) for x-only ECDH support and #23480 (bitcoin/bitcoin) for `rawtr()`. Each new silent transaction detected is stored in wallet as a `rawtr()` descriptor. \r\n\r\nIn this implementation, the sender can tweak the recipient address by passing the `silent_payment` option to send RPC. The transaction output will be different from the address entered.\r\n\r\nFor example `./src/bitcoin-cli -regtest -named send outputs=\"[{\\\"bcrt1pwlh5xuyrpgfunwyww8cfu78yfs2yqyevl7yturavahh5kgxwdd2q5hzgfu\\\": 1.1}]\" fee_rate=1 options=\"{ \\\"silent_payment\\\": true}\"`.\r\n\r\nwill generate `vout` with completely unrelated outputs:\r\n\r\n```\r\n\"vout\": [\r\n    {\r\n      \"value\": 1.10000000,\r\n      \"n\": 0,\r\n      \"scriptPubKey\": {\r\n        \"desc\": \"rawtr(65b19890c5ca40edb816d26f5f48cd9f3ed51121613b1c2405adc1a6dbbc824a)#8myx9tcu\",\r\n        \"address\": \"bcrt1pvkce3yx9efqwmwqk6fh47jxdnuld2yfpvya3cfq94hq6dkausf9qrfjkgz\",\r\n\r\n      }\r\n    },\r\n    {\r\n      \"value\": 2.02499835,\r\n      \"n\": 1,\r\n      \"scriptPubKey\": {\r\n        \"desc\": \"rawtr(c45cb3d500bbf8f0c8841e8e011b008781d826c16ee348edb822c0f97419bc4d)#26hcce63\",\r\n        \"address\": \"bcrt1pc3wt84gqh0u0pjyyr68qzxcqs7qasfkpdm353mdcytq0jaqeh3xsuvlykg\",\r\n      }\r\n    }\r\n  ]\r\n```\r\n\r\nAny wallet, as long as it has access to private keys, can send silent payments. Thus, this excludes watch-only wallets or wallets with external signers .\r\n\r\nBut the recipient's wallet needs a new flag called `SILENT_PAYMENT`. This flag allows an additional scan that verifies that the wallet keys match the silent payment scheme. When it detects a silent payment that belongs to the wallet, it is stored in a `rawtr()` descriptor.\r\n\r\n`./src/bitcoin-cli -regtest -named createwallet wallet_name=\"recipient\" silent_payment=true`\r\n\r\nTherefore, scanning each address for each transaction is potentially prohibitive overhead, so the node can be initialized with `keypool=1` or a descriptor with range [0,1] can be imported into a blank wallet. Until there is more benchmark data, it is the safest option. The proposal recommends one static address.\r\n\r\nI've been running some silent payments on signet using wallets with default keypool and default range, I haven't noticed any relevant performance drops on the signet node.\r\nApparently this implementation is working as expected but I can't guarantee that the scheme is implemented correctly or safely, so I'm opening this PR for reviews, modifications and improvements.\r\n\r\nThere is a new functional test (`test/functional/wallet_silentpayment.py`) that can help to better understand the implementation.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      },
      {
        "id": 61889416,
        "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      },
      {
        "id": 159815356,
        "node_id": "MDU6TGFiZWwxNTk4MTUzNTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream",
        "name": "Upstream",
        "color": "bfd4f2",
        "default": false
      },
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      },
      {
        "id": 1482182044,
        "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
        "name": "Descriptors",
        "description": "",
        "color": "e9f76c",
        "default": false
      }
    ],
    "created_at": "2022-04-17T00:37:23Z",
    "updated_at": "2023-06-27T11:03:39Z",
    "closed_at": "2023-06-05T13:18:14Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "383bd2fce9cdb4c627e3d532a97c76d15d928022",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "w0xlt:silent_payment_021",
      "ref": "silent_payment_021",
      "sha": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 427811926,
        "node_id": "R_kgDOGX_kVg",
        "name": "bitcoin",
        "full_name": "w0xlt/bitcoin",
        "owner": {
          "login": "w0xlt",
          "id": 94266259,
          "node_id": "U_kgDOBZ5jkw",
          "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/w0xlt",
          "html_url": "https://github.com/w0xlt",
          "followers_url": "https://api.github.com/users/w0xlt/followers",
          "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
          "organizations_url": "https://api.github.com/users/w0xlt/orgs",
          "repos_url": "https://api.github.com/users/w0xlt/repos",
          "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/w0xlt/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/w0xlt/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/w0xlt/bitcoin",
        "archive_url": "https://api.github.com/repos/w0xlt/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/w0xlt/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/w0xlt/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/w0xlt/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/w0xlt/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/w0xlt/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/w0xlt/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/w0xlt/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/w0xlt/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/w0xlt/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/w0xlt/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/w0xlt/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/w0xlt/bitcoin/events",
        "forks_url": "https://api.github.com/repos/w0xlt/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/w0xlt/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/w0xlt/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/w0xlt/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/w0xlt/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/w0xlt/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/w0xlt/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/w0xlt/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/w0xlt/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/w0xlt/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/w0xlt/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/w0xlt/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/w0xlt/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/w0xlt/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/w0xlt/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/w0xlt/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:w0xlt/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/w0xlt/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/w0xlt/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/w0xlt/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/w0xlt/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/w0xlt/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/w0xlt/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/w0xlt/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/w0xlt/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/w0xlt/bitcoin/hooks",
        "svn_url": "https://github.com/w0xlt/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 5,
        "watchers_count": 5,
        "size": 225653,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-04-14T07:59:58Z",
        "created_at": "2021-11-14T01:34:01Z",
        "updated_at": "2023-03-22T04:05:43Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2bfe43db164de7382d01c06dbdebf250d35f9f2f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T23:10:54Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 3538,
    "deletions": 141,
    "changed_files": 56,
    "commits": 19,
    "review_comments": 147,
    "comments": 86
  },
  "events": [
    {
      "event": "mentioned",
      "id": 6443966881,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGAFyGh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6443966881",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T00:37:23Z"
    },
    {
      "event": "subscribed",
      "id": 6443966883,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGAFyGj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6443966883",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T00:37:23Z"
    },
    {
      "event": "labeled",
      "id": 6443983252,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGAF2GU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6443983252",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T01:05:55Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 6443983253,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGAF2GV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6443983253",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T01:05:55Z",
      "label": {
        "name": "Descriptors",
        "color": "e9f76c"
      }
    },
    {
      "event": "labeled",
      "id": 6443983254,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGAF2GW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6443983254",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T01:05:55Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 6443983255,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGAF2GX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6443983255",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T01:05:55Z",
      "label": {
        "name": "Upstream",
        "color": "bfd4f2"
      }
    },
    {
      "event": "labeled",
      "id": 6443983256,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGAF2GY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6443983256",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T01:05:55Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 6443983257,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGAF2GZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6443983257",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T01:05:55Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "commented",
      "id": 1100803007,
      "node_id": "IC_kwDOABII585BnOu_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1100803007",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T04:48:51Z",
      "updated_at": "2023-04-14T08:00:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [ghost](https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1101019295), [rajarshimaitra](https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1136199154), [kristapsk](https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1138361638) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#bitcoin-core/gui/650](https://github.com/bitcoin-core/gui/pull/650) (Add Import to Wallet GUI by KolbyML)\n* [#27215](https://github.com/bitcoin/bitcoin/pull/27215) (wallet: Turn `destdata` entries into  `CAddressBookData` fields by achow101)\n* [#26951](https://github.com/bitcoin/bitcoin/pull/26951) (wallet: improve rescan performance 640% by pstratem)\n* [#26858](https://github.com/bitcoin/bitcoin/pull/26858) (wallet: Use defined purposes instead of inlining by aureleoules)\n* [#26840](https://github.com/bitcoin/bitcoin/pull/26840) (refactor: importpubkey, importprivkey, importaddress, importmulti, and importdescriptors rpc by KolbyML)\n* [#26836](https://github.com/bitcoin/bitcoin/pull/26836) (wallet: finish addressbook encapsulation by furszy)\n* [#26728](https://github.com/bitcoin/bitcoin/pull/26728) (wallet: Have the wallet store the key for automatically generated descriptors by achow101)\n* [#26177](https://github.com/bitcoin/bitcoin/pull/26177) (refactor / kernel: Move non-gArgs chainparams functionality to kernel by TheCharlatan)\n* [#26129](https://github.com/bitcoin/bitcoin/pull/26129) (wallet, refactor: FundTransaction(): return out-params as `util::Result` structure by theStack)\n* [#26094](https://github.com/bitcoin/bitcoin/pull/26094) (rpc: Return block hash & height in getbalances, gettransaction and getwalletinfo by aureleoules)\n* [#26076](https://github.com/bitcoin/bitcoin/pull/26076) (Switch hardened derivation marker to h (in normalized descriptors and new wallets) by Sjors)\n* [#26008](https://github.com/bitcoin/bitcoin/pull/26008) (wallet: cache IsMine scriptPubKeys to improve performance of descriptor wallets by achow101)\n* [#25991](https://github.com/bitcoin/bitcoin/pull/25991) (Wallet: Add foreign_outputs metadata to support CoinJoin transactions by luke-jr)\n* [#25907](https://github.com/bitcoin/bitcoin/pull/25907) (wallet: rpc to add automatically generated descriptors by achow101)\n* [#25806](https://github.com/bitcoin/bitcoin/pull/25806) (wallet: group outputs only once, decouple it from Coin Selection by furszy)\n* [#25766](https://github.com/bitcoin/bitcoin/pull/25766) (wallet: Include a signature with encrypted keys to mitigate a wallet scam by achow101)\n* [#25722](https://github.com/bitcoin/bitcoin/pull/25722) (refactor: Use util::Result class for wallet loading by ryanofsky)\n* [#25634](https://github.com/bitcoin/bitcoin/pull/25634) (wallet, tests: Expand and test when the blank wallet flag should be un/set by achow101)\n* [#25620](https://github.com/bitcoin/bitcoin/pull/25620) (wallet: Introduce AddressBookManager by furszy)\n* [#25297](https://github.com/bitcoin/bitcoin/pull/25297) (wallet: group independent db writes on single batched db transaction by furszy)\n* [#25273](https://github.com/bitcoin/bitcoin/pull/25273) (wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction by achow101)\n* [#24914](https://github.com/bitcoin/bitcoin/pull/24914) (wallet: Load database records in a particular order by achow101)\n* [#23561](https://github.com/bitcoin/bitcoin/pull/23561) (BIP324: Handshake prerequisites by dhruv)\n* [#23432](https://github.com/bitcoin/bitcoin/pull/23432) (BIP324: CKey encode/decode to elligator-swift by dhruv)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n* [#22341](https://github.com/bitcoin/bitcoin/pull/22341) (rpc: add getxpub by Sjors)\n* [#19690](https://github.com/bitcoin/bitcoin/pull/19690) (util: improve FindByte() performance by LarryRuane)\n* [#19461](https://github.com/bitcoin/bitcoin/pull/19461) (multiprocess: Add bitcoin-gui -ipcconnect option by ryanofsky)\n* [#19460](https://github.com/bitcoin/bitcoin/pull/19460) (multiprocess: Add bitcoin-wallet -ipcconnect option by ryanofsky)\n* [#10102](https://github.com/bitcoin/bitcoin/pull/10102) (Multiprocess bitcoin by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1100803007",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T05:30:02Z",
      "updated_at": "2022-04-17T05:30:02Z",
      "source": {
        "issue": {
          "id": 1205319723,
          "node_id": "PR_kwDOABII5842Rx2m",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24859",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24859/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24859/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24859/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24859",
          "number": 24859,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Change wallet validation order",
          "body": "In the current code, the database is created before the last validation, which checks that passphrase is set and private keys are disabled.\r\n\r\nTherefore, if this validation fails, it will result in an empty database and the user will not be able to recreate a wallet with the same name and with the correct parameters.\r\n\r\nBehavior on the master branch:\r\n```\r\n$ ./src/bitcoin-cli -regtest -named createwallet wallet_name=\"invalid_wallet_01\" disable_private_keys=true passphrase=\"passphrase\"\r\nerror code: -4\r\nerror message:\r\nPassphrase provided but private keys are disabled. A passphrase is only used to encrypt private keys, so cannot be used for wallets with private keys disabled.\r\n\r\n$ ./src/bitcoin-cli -regtest -named createwallet wallet_name=\"invalid_wallet_01\"\r\nerror code: -4\r\nerror message:\r\nWallet file verification failed. Failed to create database path '/home/w/.bitcoin/regtest/wallets/invalid_wallet'. Database already exists.\r\n```\r\n\r\nBehavior on the PR branch:\r\n```\r\n$ ./src/bitcoin-cli -regtest -named createwallet wallet_name=\"invalid_wallet_02\" disable_private_keys=true passphrase=\"passphrase\"\r\nerror code: -4\r\nerror message:\r\nPassphrase provided but private keys are disabled. A passphrase is only used to encrypt private keys, so cannot be used for wallets with private keys disabled.\r\n\r\n$ ./src/bitcoin-cli -regtest -named createwallet wallet_name=\"invalid_wallet_02\"\r\n{\r\n  \"name\": \"invalid_wallet_01\",\r\n  \"warning\": \"\"\r\n}\r\n```",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24859",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24859",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24859.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24859.patch"
          },
          "closed_at": "2022-04-18T15:30:10Z",
          "created_at": "2022-04-15T06:50:58Z",
          "updated_at": "2023-04-25T14:45:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T06:06:13Z",
      "updated_at": "2022-04-17T06:06:13Z",
      "source": {
        "issue": {
          "id": 1203525439,
          "node_id": "PR_kwDOABII5842MDDS",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24845",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24845/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24845/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24845/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24845",
          "number": 24845,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: return error msg for  \"too-long-mempool-chain\"",
          "body": "Fixes #23144.\r\n\r\nWe currently return a general \"Insufficient funds\" from Coin\r\nSelection when we actually skipped unconfirmed UTXOs that\r\nsurpassed the mempool ancestors limit.\r\n\r\nThis PR make the error clearer by returning:\r\n\"Unconfirmed UTXOs are available, but spending them creates\r\na chain of transactions that will be rejected by the mempool\"\r\n\r\nAlso, added an early return from Coin Selection if the sum of\r\nthe discarded coins decreases the available balance below the\r\ntarget amount.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignee": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "glozow",
              "id": 25183001,
              "node_id": "MDQ6VXNlcjI1MTgzMDAx",
              "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/glozow",
              "html_url": "https://github.com/glozow",
              "followers_url": "https://api.github.com/users/glozow/followers",
              "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
              "organizations_url": "https://api.github.com/users/glozow/orgs",
              "repos_url": "https://api.github.com/users/glozow/repos",
              "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/glozow/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24845",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24845",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24845.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24845.patch"
          },
          "closed_at": "2023-03-23T15:54:35Z",
          "created_at": "2022-04-13T16:25:15Z",
          "updated_at": "2023-05-27T01:51:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T09:21:36Z",
      "updated_at": "2022-04-17T09:21:36Z",
      "source": {
        "issue": {
          "id": 1177327381,
          "node_id": "PR_kwDOABII5840113Z",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24644",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24644/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24644/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24644/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24644",
          "number": 24644,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: add tracepoints and algorithm information to coin selection",
          "body": "Tracepoints can be useful for coin selection as they would allow us to observe what is being selected, selection parameters, and calculation results. So this PR adds 4 new tracepoints:\r\n\r\n1. After `SelectCoins` returns in order to observe the `SelectionResult`\r\n2. After the first `CreateTransactionInternal` to observe the created transaction\r\n3. Prior to the second `CreateTransactionInternal` to notify that the optimistic avoid partial spends selection is occurring\r\n4. After the second `CreateTransactionInternal` to observe the created transaction and inform which solution is being used.\r\n\r\nThis PR also adds an algorithm enum to `SelectionResult` so that the first tracepoint will be able to report which algorithm was used to produce that result.\r\n\r\nThe primary use case for these tracepoints is in running coin selection simulations. The script I use to run these simulations use these tracepoints in order to gather data on the algorithm used and the calculated waste.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24644",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24644",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24644.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24644.patch"
          },
          "closed_at": "2022-04-26T18:16:54Z",
          "created_at": "2022-03-22T21:28:03Z",
          "updated_at": "2023-04-30T09:59:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T13:46:09Z",
      "updated_at": "2022-04-17T13:46:09Z",
      "source": {
        "issue": {
          "id": 1113708993,
          "node_id": "PR_kwDOABII584xjLwg",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24149",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24149/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24149/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24149/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24149",
          "number": 24149,
          "state": "closed",
          "state_reason": null,
          "title": "Signing support for Miniscript Descriptors",
          "body": "This makes the Miniscript descriptors solvable.\r\n\r\nNote this introduces signing support for much more complex scripts than the wallet was previously able to solve, and the whole tooling isn't provided for a complete Miniscript integration in the wallet. Particularly, the PSBT<->Miniscript integration isn't entirely covered in this PR.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/56",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/56",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/56/labels",
            "id": 7733968,
            "node_id": "MI_kwDOABII584AdgLQ",
            "number": 56,
            "state": "closed",
            "title": "25.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 38,
            "created_at": "2022-03-03T18:51:29Z",
            "updated_at": "2023-05-25T13:24:42Z",
            "closed_at": "2023-05-25T13:24:42Z"
          },
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24149",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24149",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24149.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24149.patch"
          },
          "closed_at": "2023-02-16T10:01:57Z",
          "created_at": "2022-01-25T10:31:23Z",
          "updated_at": "2023-02-17T11:43:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T13:50:10Z",
      "updated_at": "2022-04-17T13:50:10Z",
      "source": {
        "issue": {
          "id": 1113706429,
          "node_id": "PR_kwDOABII584xjLNS",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24148/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24148",
          "number": 24148,
          "state": "closed",
          "state_reason": null,
          "title": "Miniscript support in Output Descriptors",
          "body": "This adds Miniscript support for Output Descriptors without any signing logic (yet). See the OP of #24147 for a description of Miniscript and a rationale of having it in Bitcoin Core.\r\nOn its own, this PR adds \"watchonly\" support for Miniscript descriptors in the descriptor wallet. A follow-up adds signing support.\r\n\r\nA minified corpus of Miniscript Descriptors for the `descriptor_parse` fuzz target is available at https://github.com/bitcoin-core/qa-assets/pull/92.\r\nThe Miniscript descriptors used in the unit tests here and in #24149 were cross-tested against the Rust implementation at https://github.com/rust-bitcoin/rust-miniscript.\r\n\r\nThis PR contains code and insights from Pieter Wuille.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24148",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24148",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24148.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24148.patch"
          },
          "closed_at": "2022-07-14T18:54:47Z",
          "created_at": "2022-01-25T10:29:02Z",
          "updated_at": "2022-09-08T13:07:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T16:52:59Z",
      "updated_at": "2022-04-17T16:52:59Z",
      "source": {
        "issue": {
          "id": 1042666928,
          "node_id": "PR_kwDOABII584t_2tt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23417",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23417/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23417/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23417/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23417",
          "number": 23417,
          "state": "closed",
          "state_reason": null,
          "title": "wallet, spkm: Move key management from DescriptorScriptPubKeyMan to wallet level KeyManager",
          "body": "This PR changes DescriptorScriptPubKeyMan to no longer handle relevant keys directly. Instead all keys for all DescriptorSPKMs will be handled by a new `KeyManager` class which exists within `CWallet` (a reference to it is passed to each DescriptorSPKM). This allows us to have a concept of a wallet HD key for descriptor wallets. This makes it easier to add new single key descriptors that use the same HD master key as the rest of the autogenerated descriptors (e.g. for taproot). Multisigs will also be easier as an xpub belonging to the wallet can be exported without needing to do weird things like descriptor introspection and guessing about which descriptor's key to use.\r\n\r\n`KeyManager` is a class which handles all of the keys for DescriptorSPKMs. It contains the maps that hold the keys, deals with writing those keys to disk, and handles their encryption. Encryption keys are still managed by `CWallet` but provided to `KeyManager` through the `WalletStorage` interface. Signing is still done through `DescriptorScriptPubKeyMan::SignTransaction` however this will fetch the keys from `KeyManager` rather than storing keys in the DescriptorSPKM to be used.\r\n\r\nThis change is backwards compatible. Although `KeyManager` writes and uses keys in new `keyman_key` and `keyman_ckey` records, it will still write keys for each descriptor in `walletdescriptorkey` and `walletdescriptorckey` records. This allows a descriptor wallet created using this change to be opened by 22.0 and 0.21. Additionally, wallets created with older software will automatically be upgraded to using the `KeyManager` at first loading. This is done in the background and does not require any user interaction (i.e. no passphrase required).",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 24,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23417",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23417",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23417.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23417.patch"
          },
          "closed_at": "2022-12-19T22:35:38Z",
          "created_at": "2021-11-02T18:11:16Z",
          "updated_at": "2022-12-19T22:35:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T18:47:06Z",
      "updated_at": "2022-04-17T18:47:06Z",
      "source": {
        "issue": {
          "id": 969809743,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzExODMzMTUx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22693",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22693/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22693/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22693/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22693",
          "number": 22693,
          "state": "open",
          "state_reason": null,
          "title": "RPC/Wallet: Add \"use_txids\" to output of getaddressinfo",
          "body": "(Non-GUI part of https://github.com/bitcoin-core/gui/pull/562, but without the bloom stuff)",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22693",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22693",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22693.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22693.patch"
          },
          "created_at": "2021-08-13T00:19:27Z",
          "updated_at": "2023-07-06T19:10:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T19:32:01Z",
      "updated_at": "2022-04-17T19:32:01Z",
      "source": {
        "issue": {
          "id": 930266556,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Njc3OTg5MzM4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22341/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22341",
          "number": 22341,
          "state": "open",
          "state_reason": null,
          "title": "rpc: add getxpub",
          "body": "Depends on #26728\r\n\r\nThis PR introduces a new wallet RPC `getxpub`. It takes a BIP32 path as argument and returns the xpub, along with the master key fingerprint.\r\n\r\nTo test this PR:\r\n\r\n* create a regular descriptor wallet\r\n* call `getxpub m/86h/0h/0h`\r\n* call `listdescriptors`, compare the xpub in the `tr()` descriptor with the previous step\r\n\r\n## Bigger picture\r\n\r\nThis paves the way for using Bitcoin Core as one signer in a multisig setup. It simplifies the proposed flow in #22067.\r\n\r\nThe eventual flow would be:\r\n1. Create a blank wallet with a seed (either with no descriptors, or where its single key descriptors are not `active`, so they don't get used when calling `getnewaddress`). \r\n2. Call `getxpub m/87h/0h/0h` (as suggested in [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki))\r\n3. (Manually, with Specter or with a simple Python utility - TBD): craft a multisig descriptor containing this xpub\r\n4. Call `importdescriptors` which will allow the import if its own fingerprint is recognized (and after checking the xpub)\r\n5. The usual flow with `getnewaddress`, `send` and `walletprocesspsbt` (and their GUI equivalents)\r\n\r\nThis PR makes step (2) possible.\r\n\r\nStep (1) would require a followup, because blank wallets currently can't have a seed. Step 4 would also require a followup,  so that `importdescriptors` treats an `xpub` as if it was an `xpriv`, after checking that it can derive the xpub from the seed (that matches the fingerprint)\r\n\r\nOn the GUI side a wizard could perform the above steps and guide the user, where they either:\r\n* export their own xpub and then import a descriptor from somewhere else (performing some sanity checks); or\r\n* import xpub(s) from other wallets, compose a multisig and get the descriptors for export; or\r\n* get xpub(s) from connected hardware devices and configure a multisig (with or without a key on their machine)",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22341",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22341",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22341.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22341.patch"
          },
          "created_at": "2021-06-25T15:12:03Z",
          "updated_at": "2023-08-01T13:23:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T20:09:44Z",
      "updated_at": "2022-04-17T20:09:44Z",
      "source": {
        "issue": {
          "id": 889894970,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjQzMDAwOTM1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21928",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21928/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21928/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21928/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21928",
          "number": 21928,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: allow toggling external_signer flag",
          "body": "Currently `WALLET_FLAG_EXTERNAL_SIGNER` is just a precaution. This PR makes the flag mutable so it can be toggled with `setwalletflag`. There's a warning that in the future it may no longer be possible to toggle. This might be the case if we need to store additional device specific data in the wallet payload.\r\n\r\nRationale for this PR is to make it a bit easier to switch between tooling, e.g. to \"upgrade\" a regular watch-only wallet created by Specter to work with Core hardware wallet support directly.",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21928",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21928",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21928.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21928.patch"
          },
          "closed_at": "2023-01-10T11:06:35Z",
          "created_at": "2021-05-12T09:48:43Z",
          "updated_at": "2023-01-10T11:06:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T20:30:10Z",
      "updated_at": "2022-04-17T20:30:10Z",
      "source": {
        "issue": {
          "id": 859102448,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NjE2MjM3MjM2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21702",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21702/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21702/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21702/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/21702",
          "number": 21702,
          "state": "closed",
          "state_reason": null,
          "title": "Implement BIP-119 Validation (CheckTemplateVerify)",
          "body": "This is an implementation of  [BIP-119 OP_CHECKTEMPLATEVERIFY](https://github.com/bitcoin/bips/blob/master/bip-0119.mediawiki).  It has been rebased on top of Taproot / ST. The specification has been otherwise unrevised since publication nearly a year and half ago.\r\n\r\nMinus tests and deployment, it's about 180 LOC.\r\n\r\nThis branch activates against regtest so you can test on your local node.\r\n\r\nThis PR includes standardness rules for a bare single CTV Hash script, which has applications for congestion control. Other than that there is limited support for bare scripts using CTV, although the patches to #16766 lay the groundwork for better wallet support with proper IsTrusted parents scanning, which can be amended later to handle chains of irrefutable transactions.\r\n\r\n----\r\n\r\nYou can learn more about the design of BIP-119 at https://utxos.org/. In particular I recommend the workshop transcript and slides https://utxos.org/workshops/ for a thorough review of how CTV works.\r\n\r\nYou can stress test CTV for complex examples by trying out the Sapio compiler: learn.sapio-lang.org. There is also some support for CTV in miniscript via the [Sapio Rust Miniscript Fork](https://github.com/sapio-lang/rust-miniscript). \r\n\r\nDiscussion welcome at ##ctv-bip-review in Libera.\r\n\r\n\r\n----\r\n\r\n\r\nIf you would like to connect to a signet, I operate one you can connect to with the parameters below.\r\n\r\n```\r\n[signet]\r\nsignetchallenge=512102946e8ba8eca597194e7ed90377d9bbebc5d17a9609ab3e35e706612ee882759351ae \r\naddnode=50.18.75.225\r\n```\r\nYou may also wish to have the below parameters for things to work nicely:\r\n```\r\nserver = 1\r\ntxindex=1\r\nrpcport=18332\r\nrpcworkqueue=1000\r\nfallbackfee=0.0002\r\nminrelaytxfee=0\r\n```",
          "user": {
            "login": "JeremyRubin",
            "id": 886523,
            "node_id": "MDQ6VXNlcjg4NjUyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeremyRubin",
            "html_url": "https://github.com/JeremyRubin",
            "followers_url": "https://api.github.com/users/JeremyRubin/followers",
            "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
            "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
            "repos_url": "https://api.github.com/users/JeremyRubin/repos",
            "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 192202000,
              "node_id": "MDU6TGFiZWwxOTIyMDIwMDA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus",
              "name": "Consensus",
              "color": "009800",
              "default": false
            },
            {
              "id": 749416508,
              "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
              "name": "Up for grabs",
              "color": "99a810",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 77,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21702",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/21702",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/21702.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/21702.patch"
          },
          "closed_at": "2022-12-17T04:06:25Z",
          "created_at": "2021-04-15T17:36:54Z",
          "updated_at": "2022-12-17T04:06:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-17T21:41:47Z",
      "updated_at": "2022-04-17T21:41:47Z",
      "source": {
        "issue": {
          "id": 764895200,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTM4NzUyMjQ5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20640",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20640/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20640/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20640/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20640",
          "number": 20640,
          "state": "closed",
          "state_reason": null,
          "title": "wallet, refactor: return out-params of CreateTransaction() as optional struct",
          "body": "The method `CWallet::CreateTransaction` currently returns several values in the form of out-parameters:\r\n* the actual newly created transaction (`CTransactionRef& tx`)\r\n* its required fee (`CAmount& nFeeRate`)\r\n* the position of the change output (`int& nChangePosInOut`) -- as the name suggests, this is both an in- and out-param\r\n\r\nBy returning these values in an optional structure (which returns no value a.k.a. `std::nullopt` if an error occured), the interfaces is shorter, cleaner (requested change position is now in-param and can be passed by value) and callers don't have to create dummy variables for results that they are not interested in. \r\n\r\nNote that the names of the replaced out-variables were kept in `CreateTransactionInternal` to keep the diff minimal. Also, the fee calculation data (`FeeCalculation& fee_calc_out`) would be another candidate to put into the structure, but `FeeCalculation` is currently an opaque data type in the wallet interface and I think it should stay that way.\r\n\r\nAs a potential follow-up, I think it would make sense to also do the same refactoring for `CWallet::FundTransaction`, which has a very similar parameter structure.\r\n\r\nSuggested by laanwj in https://github.com/bitcoin/bitcoin/pull/20588#issuecomment-739838428.",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20640",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20640",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20640.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20640.patch"
          },
          "closed_at": "2022-05-17T10:05:17Z",
          "created_at": "2020-12-13T04:03:13Z",
          "updated_at": "2023-05-17T10:02:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1101019295,
      "node_id": "IC_kwDOABII585BoDif",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1101019295",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-18T01:54:27Z",
      "updated_at": "2022-04-18T01:54:27Z",
      "author_association": "NONE",
      "body": "Concept ACK",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1101019295",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "reviewed",
      "id": 944439250,
      "node_id": "PRR_kwDOABII5844Sv_S",
      "url": null,
      "actor": null,
      "commit_id": "b97fee2f445d396fdb62d4468c214320745519be",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-944439250",
      "submitted_at": "2022-04-18T14:08:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "labeled",
      "id": 6449252802,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGAZ8nC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6449252802",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-18T17:21:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6451610447,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGAi8NP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6451610447",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-19T03:26:55Z"
    },
    {
      "event": "unlabeled",
      "id": 6451681710,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAGAjNmu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6451681710",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-19T03:47:46Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1102990584,
      "node_id": "IC_kwDOABII585Bvkz4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1102990584",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-19T19:06:43Z",
      "updated_at": "2022-04-19T19:06:43Z",
      "author_association": "MEMBER",
      "body": "Need some way to avoid users trying to send a silent payment to a wallet that doesn't support it... am I missing something?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1102990584",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1103548839,
      "node_id": "IC_kwDOABII585BxtGn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103548839",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T07:12:21Z",
      "updated_at": "2022-04-20T07:26:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "@luke-jr Yes, it will need to be further discussed if this concept proves to be valid.\r\n\r\nIn this PR, all descriptor wallets support silent transactions as the `SILENT_PAYMENT` flag can be enabled or disabled at any time. The `rescanblockchain` RPC can be used to retrieve previous silent payments.\r\n\r\nAs only Taproot addresses can be used for silent payments and only descriptor wallets support Taproot, this may suffice, but it certainly needs further discussion.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1103548839",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 6460624377,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGBFU35",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6460624377",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T07:12:21Z"
    },
    {
      "event": "subscribed",
      "id": 6460624387,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGBFU4D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6460624387",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T07:12:21Z"
    },
    {
      "event": "commented",
      "id": 1103635123,
      "node_id": "IC_kwDOABII585ByCKz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1103635123",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T08:45:49Z",
      "updated_at": "2022-04-20T08:45:49Z",
      "author_association": "NONE",
      "body": ">Need some way to avoid users trying to send a silent payment to a wallet that doesn't support it\r\n\r\n@luke-jr When the recipient publishes their silent payment address, it needs to be clear that it is not a regular taproot address. The address format should be distinct. The tweaked silent payment address that is generated by the sender and is ultimately committed on-chain should be indistinguishable from a regular taproot output.\r\n\r\n>only Taproot addresses can be used for silent payments\r\n\r\n@w0xlt Note that nothing about the silent payment scheme is exclusive to taproot, but regardless I do think it's good to limit the specifications to creating taproot outputs only as it encourages taproot use and means transactions without taproot outputs (albeit hopefully rare in the eventual future) don't need to be scanned.",
      "user": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1103635123",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 6461256541,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGBHvNd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6461256541",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T08:45:49Z"
    },
    {
      "event": "subscribed",
      "id": 6461256548,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGBHvNk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6461256548",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T08:45:49Z"
    },
    {
      "event": "mentioned",
      "id": 6461256557,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGBHvNt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6461256557",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T08:45:49Z"
    },
    {
      "event": "subscribed",
      "id": 6461256564,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGBHvN0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6461256564",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T08:45:49Z"
    },
    {
      "event": "commented",
      "id": 1104252903,
      "node_id": "IC_kwDOABII585B0Y_n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1104252903",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-20T18:00:24Z",
      "updated_at": "2022-04-20T18:00:24Z",
      "author_association": "MEMBER",
      "body": ">When the recipient publishes their silent payment address, it needs to be clear that it is not a regular taproot address. The address format should be distinct. \r\n\r\nBut I don't see that in this current spec/code?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1104252903",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "sanket1729",
        "id": 6881849,
        "node_id": "MDQ6VXNlcjY4ODE4NDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sanket1729",
        "html_url": "https://github.com/sanket1729",
        "followers_url": "https://api.github.com/users/sanket1729/followers",
        "following_url": "https://api.github.com/users/sanket1729/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sanket1729/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sanket1729/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
        "organizations_url": "https://api.github.com/users/sanket1729/orgs",
        "repos_url": "https://api.github.com/users/sanket1729/repos",
        "events_url": "https://api.github.com/users/sanket1729/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sanket1729/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-22T18:16:10Z",
      "updated_at": "2022-04-22T18:16:10Z",
      "source": {
        "issue": {
          "id": 1109525819,
          "node_id": "I_kwDOABII585CIgU7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24114",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24114/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24114/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24114/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/24114",
          "number": 24114,
          "state": "open",
          "state_reason": null,
          "title": "Feature discussion: partial descriptors/miniscript",
          "body": "So far, we effectively have two levels of \"solvability\" in descriptors:\r\n* `addr()` and `raw()` which can encode scriptPubKey with effectively no solvability information at all\r\n* Everything else, which encodes scriptPubKeys that are fully solvable.\r\n\r\nI've long held that there shouldn't be any level in between, in the sense that you shouldn't be using a descriptor if you don't know everything about its construction. I'm starting to think that's not a tenable position:\r\n* Already, key origin information - which may be no less critical than other parts of descriptors for certain roles - is optional. There is no way to force that information to be included, because it may not exist (for non-BIP32-derived keys, for example), but it may also simply be omitted.\r\n* #23480 proposes the introduction of a descriptor like `tr()`, except it encodes the post-tweak key rather than the inner key. This too may be because the information doesn't exist, but it cannot prevent situations where it is simply omitted.\r\n* It has been suggested before (e.g. https://github.com/bitcoin/bitcoin/pull/21365#issuecomment-793027851) to permit `tr()` descriptors to contain hashes for omitted script subtrees. That too could represent non-existent information (Merkle path entries that are chosen rather than actual hashes), or omitted information. And it is useful - there are certainly scenarios where one might want to participate in, and sign for, taproot outputs for which certain subtrees are not known.\r\n* If we're going to accept that the previous 3 examples will occur, we might as well bite the bullet and also add a way to encode \"pkh with known keyhash, but not known key\".\r\n\r\nIf all these mechanisms become permitted in descriptors (and miniscript), we get the nice logistical benefit of being able to represent all information extracted from PSBT/SPKM/scripts/... into a descriptor regardless of what is present or missing. I believe this would logistically simplify things later on too: Miniscript would not need separate instantiations for its descriptor-decoding use case and its signing/solving use case. Perhaps even further out, this can mean that many fields in `SignatureData` are replaced with just a descriptor object (everything except signatures/preimages), and the signing logic becomes a descriptor method.\r\n\r\nStraw man proposal:\r\n* Do #23480 (adding `rawtr(KEY)`), for P2TR outputs with specified tweaked key, but no specified internal key or script tree.\r\n* Add a `rawnode(HEX)` fragment, only usable inside P2TR script tree expressions, indicating a tree node with specified hash, but no specified subtree.\r\n* Add a `rawpkh(HEX)` fragment, usable wherever `pkh(KEY)` is usable, indicating a PKH script (`DUP HASH160 <hex> EQUALVERIFY CHECKSIG`), without specified public key. Post-miniscript this would also add a `rawpk_h(HEX)` fragment, corresponding to `pk_h(KEY)`.\r\n\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "created_at": "2022-01-20T16:39:22Z",
          "updated_at": "2022-07-18T02:05:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6481919314,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGCWj1S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6481919314",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-22T22:45:18Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-23T18:21:24Z",
      "updated_at": "2022-04-23T18:21:24Z",
      "source": {
        "issue": {
          "id": 1057850480,
          "node_id": "PR_kwDOABII584uvS9g",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23549",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23549/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23549/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23549/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23549",
          "number": 23549,
          "state": "closed",
          "state_reason": null,
          "title": "Add scanblocks RPC call (attempt 2)",
          "body": "Revives #20664. All feedback from the previous PR has either been responded to inline or incorporated here.\r\n\r\n---\r\n\r\nMajor changes from Jonas' PR:\r\n- consolidated arguments for scantxoutset/scanblocks\r\n- substantial cleanup of the functional test\r\n\r\nHere's the range-diff (`git range-diff master jonasschnelli/2020/12/filterblocks_rpc jamesob/2021-11-scanblocks`): https://gist.github.com/jamesob/aa4a975344209f0316444b8de2ec1d18\r\n\r\n### Original PR description\r\n\r\n> The `scanblocks` RPC call allows one to get relevant blockhashes from a set of descriptors by scanning all blockfilters in a given range.\r\n> \r\n> **Example:**\r\n> \r\n> `scanblocks start '[\"addr(<bitcoin_address>)\"]' 661000` (returns relevant blockhashes for `<bitcoin_address>` from blockrange 661000->tip)\r\n> \r\n> ## Why is this useful?\r\n> **Fast wallet rescans**: get the relevant blocks and only rescan those via `rescanblockchain getblockheader(<hash>)[height] getblockheader(<hash>)[height])`. A future PR may add an option to allow to provide an array of blockhashes to `rescanblockchain`.\r\n> \r\n> **prune wallet rescans**: (_needs additional changes_): together with a call to fetch blocks from the p2p network if they have been pruned, it would allow to rescan wallets back to the genesis block in pruned mode (relevant #15946).\r\n> \r\n> **SPV mode** (_needs additional changes_): it would be possible to build the blockfilterindex from the p2p network (rather then deriving them from the blocks) and thus allow some sort of hybrid-SPV mode with moderate bandwidth consumption (related #9483)\r\n\r\n\r\n",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23549",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23549",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23549.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23549.patch"
          },
          "closed_at": "2022-10-13T14:49:29Z",
          "created_at": "2021-11-18T21:56:52Z",
          "updated_at": "2022-10-13T18:20:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-23T20:06:00Z",
      "updated_at": "2022-04-23T20:06:00Z",
      "source": {
        "issue": {
          "id": 983140832,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NzIyNzY4MTc5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22838/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/22838",
          "number": 22838,
          "state": "open",
          "state_reason": null,
          "title": "descriptors: Be able to specify change and receiving in a single descriptor string",
          "body": "It is convenient to have a descriptor which specifies both receiving and change addresses in a single string. However, as discussed in https://github.com/bitcoin/bitcoin/issues/17190#issuecomment-895515768, it is not feasible to use a generic multipath specification like BIP 88 due to combinatorial blow up and that it would result in unexpected descriptors.\r\n\r\nTo resolve that problem, this PR proposes a targeted solution which allows only a single pair of 2 derivation indexes to be inserted in the place of a single derivation index. So instead of two descriptor `wpkh(xpub.../0/0/*)` and `wpkh(xpub.../0/1/*)` to represent receive and change addresses, this could be written as `wpkh(xpub.../0/<0;1>/*)`. The multipath specifier is of the form `<NUM;NUM>`. Each `NUM` can have its own hardened specifier, e.g. `<0;1h>` is valid. The multipath specifier can also only appear in one path index in the derivation path.\r\n\r\nThis results in the parser returning two descriptors. The first descriptor uses the first `NUM` in all pairs present, and the second uses the second `NUM`. In our implementation, if a multipath descriptor is not provided, a pair is still returned, but the second element is just `nullptr`.\r\n\r\nThe wallet will not output the multipath descriptors (yet). Furthermore, when a multipath descriptor is imported, it is expanded to the two descriptors and each imported on its own, with the second descriptor being implicitly for internal (change) addresses. There is no change to how the wallet stores or outputs descriptors (yet).\r\n\r\nNote that the path specifier is different from what was proposed. It uses angle brackets and the semicolon because these are unused characters available in the character set and I wanted to avoid conflicts with characters already in use in descriptors.\r\n\r\nCloses #17190 ",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 32,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22838",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/22838",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/22838.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/22838.patch"
          },
          "created_at": "2021-08-30T19:46:34Z",
          "updated_at": "2023-08-01T13:03:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-25T00:58:49Z",
      "updated_at": "2022-04-25T00:58:49Z",
      "source": {
        "issue": {
          "id": 1213672368,
          "node_id": "PR_kwDOABII5842rzKg",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24959",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24959/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24959/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24959/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24959",
          "number": 24959,
          "state": "closed",
          "state_reason": null,
          "title": "Remove not needed clang-format off comments",
          "body": "It seems odd to disable clang-format and force manual formatting when there is no need for it. So remove the clang-format comments and other unneeded comments.\r\n\r\nCan be reviewed with `--word-diff-regex=. --ignore-all-space`\r\n\r\nLooks like this was initially added in commit d9d79576f423cd9c5cef4547c7e3648dbb339460 to accommodate a linter that has since been removed and replaced by a functional test.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24959",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24959",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24959.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24959.patch"
          },
          "closed_at": "2022-04-26T13:11:58Z",
          "created_at": "2022-04-24T14:37:11Z",
          "updated_at": "2023-04-27T09:57:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 6501193553,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGDgFdR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6501193553",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-26T18:42:38Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6510495765,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGEDkgV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6510495765",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T22:16:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6510520368,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGEDqgw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6510520368",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-27T22:23:41Z"
    },
    {
      "event": "unlabeled",
      "id": 6510892748,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAGEFFbM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6510892748",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-28T00:14:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-28T02:03:41Z",
      "updated_at": "2022-04-28T02:03:41Z",
      "source": {
        "issue": {
          "id": 1217464291,
          "node_id": "PR_kwDOABII58424Xp6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25003",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25003/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25003/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25003/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25003",
          "number": 25003,
          "state": "closed",
          "state_reason": null,
          "title": "tracing: fix `coin_selection:aps_create_tx_internal` calling logic",
          "body": "According to the documentation, the tracepoint `coin_selection:aps_create_tx_internal` \"Is called when the second `CreateTransactionInternal` with Avoid Partial Spends enabled completes.\"\r\n\r\nCurrently it is only called if the second call to `CreateTransactionInternal` succeeds, i.e. the third parameter is always `true` and we don't get notified in the case that it fails. This PR fixes this by moving the tracepoint call and the `use_aps` boolean variable outside the if body.\r\n",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25003",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25003",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25003.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25003.patch"
          },
          "closed_at": "2022-05-26T17:50:16Z",
          "created_at": "2022-04-27T14:44:25Z",
          "updated_at": "2023-05-26T10:03:47Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6511707821,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGEIMat",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6511707821",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-28T03:52:44Z"
    },
    {
      "event": "commented",
      "id": 1111735167,
      "node_id": "IC_kwDOABII585CQ7t_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1111735167",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-28T04:32:28Z",
      "updated_at": "2022-04-28T04:32:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Need some way to avoid users trying to send a silent payment to a wallet that doesn't support it... am I missing something?\r\n\r\nit's worse than that, AFAIU the address needs to support it not just the wallet -- E.g., what if the Tr key is a NUMS point?\r\n\r\nWorth making a new address type / format so that you never mix the two.",
      "user": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1111735167",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-28T11:22:04Z",
      "updated_at": "2022-04-28T11:22:04Z",
      "source": {
        "issue": {
          "id": 1048473150,
          "node_id": "PR_kwDOABII584uR1eW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23475",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23475/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23475/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23475/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23475",
          "number": 23475,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: add config to prioritize a solution that doesn't create change in coin selection ",
          "body": "Based on #22009, Bitcoin Core execute all the coin selection algorithms and decide what solution will be used based on the waste metric. However, some users may prefer a solution that doesn't create change (privacy reason). This PR adds a config option to prioritize the BnB solution in `send` and `fundrawtransaction`.  ",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23475",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23475",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23475.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23475.patch"
          },
          "closed_at": "2023-03-23T20:27:31Z",
          "created_at": "2021-11-09T11:06:02Z",
          "updated_at": "2023-03-23T20:27:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-04-29T01:00:54Z",
      "updated_at": "2022-04-29T01:00:54Z",
      "source": {
        "issue": {
          "id": 1146268991,
          "node_id": "PR_kwDOABII584zQLtw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24410",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24410/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24410/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24410/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24410",
          "number": 24410,
          "state": "closed",
          "state_reason": null,
          "title": "[kernel 2a/n] Split hashing/index `GetUTXOStats` codepaths, decouple from `coinstatsindex`",
          "body": "Part of: #24303\r\nDepends on: #24322\r\n\r\nThe `GetUTXOStats` function has 2 codepaths:\r\n  - One which queries the `CoinStatsIndex` for the UTXO hash\r\n  - One which actually performs the hashing\r\n\r\nFor `libbitcoinkernel`, the only place where we call `GetUTXOStats` is in `PopulateAndValidateSnapshots`, which uses the `SHA256D` hash, and is therefore unable to use the `CoinStatsIndex` since that only provides `MuHash` hashes. Not that I think indices necessarily belong in `libbitcoinkernel` anyway.\r\n\r\nThis PR separates these 2 aforementioned codepaths of `GetUTXOStats`, uses the hashing codepath in `PopulateAndValidateSnapshots`, and removes the need to link in `index/coinstatsindex.cpp` and `node/coinstats.cpp`.\r\n\r\n-----\r\n\r\nLogistically, this PR:\r\n- Extracts out the `index_requested` and `hash_type` members of `CoinStats`, which served as \"in-params\" to `GetUTXOStats` embedded within the `CoinStats` struct. This allows `CoinStats` to only consist of \"out-param\" members, and be returned by `GetUTXOStats` without needing to be an \"in-out\" param\r\n- Introduce the purely virtual `UTXOHashers` class, with 3 implementations: `SHA256DHasher`, `MuHashHasher`, and `NullHasher`. These replace the existing template-based polymorphism.\r\n- Split `GetUTXOStats` into:\r\n    - `CalculateUTXOStatsWithHasher(UTXOHasher&, ...)`, and\r\n    - `LookupUTXOStatsWithIndex(CoinStatsIndex&, ...)`\r\n- Use `CalculateUTXOStatsWithHasher` directly where appropriate (`src/validation.cpp` and `src/fuzz`)\r\n- Move `GetUTXOStats` to `rpc/blockchain`, which is the only place that depends on `GetUTXOStats`'s weird fallback behaviour\r\n- Move `LookupUTXOStatsWithIndex` to `index/coinstatsindex`\r\n\r\nCode organization:\r\n- `src/`\r\n  - `kernel/` → only contains the hashing codepath\r\n    - `coinstats.cpp` → hashing codepath implementations\r\n    - `coinstats.h` → header for `kernel/coinstats.cpp`\r\n  - `index/` → only contains the index codepath\r\n    - `coinstatsindex.cpp` → index codepath implementations\r\n    - `coinstatsindex.h`\r\n  - `validation.cpp` → only uses the hashing codepath\r\n  - `rpc/blockchain.cpp` → uses both the hashing and index codepath, old `GetUTXOStats` fallback logic moved here as static\r\n  - `test/fuzz/coins_view.cpp` → only uses the hashing codepath\r\n\r\n\r\nTODOs:\r\n- [x] Commit messages could be fleshed out more\r\n\r\nWould love any feedback!",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24410",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24410",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24410.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24410.patch"
          },
          "closed_at": "2022-05-24T12:43:54Z",
          "created_at": "2022-02-21T22:16:08Z",
          "updated_at": "2022-10-04T08:09:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6558943265,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGG8Ygh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6558943265",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-05T19:01:58Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-07T08:23:39Z",
      "updated_at": "2022-05-07T08:23:39Z",
      "source": {
        "issue": {
          "id": 1166781352,
          "node_id": "PR_kwDOABII5840UWxr",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24539",
          "number": 24539,
          "state": "open",
          "state_reason": null,
          "title": "Add a \"tx output spender\" index",
          "body": "This PR adds a new \"tx output spender\" index, which allows users to query which tx spent a given outpoint with the `gettxspendingprevout` RPC call that was added by https://github.com/bitcoin/bitcoin/pull/24408.\r\n\r\nSuch an index would be extremely useful for Lightning, and probably for most layer-2 protocols that rely on chains of unpublished transactions.\r\n\r\nCode may need additional tests, but I wanted to collect ACKs/NACKs first (I'm aware that new indexes are not necessarily welcome additions)\r\n\r\nI chose to store an outpoint (32 + 4 bytes) -> txid (32 bytes) index (so -txospenderindex requires -txindex) rather than a outpoint -> disk pos index.",
          "user": {
            "login": "sstone",
            "id": 1573866,
            "node_id": "MDQ6VXNlcjE1NzM4NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sstone",
            "html_url": "https://github.com/sstone",
            "followers_url": "https://api.github.com/users/sstone/followers",
            "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
            "organizations_url": "https://api.github.com/users/sstone/orgs",
            "repos_url": "https://api.github.com/users/sstone/repos",
            "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sstone/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24539",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24539.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24539.patch"
          },
          "created_at": "2022-03-11T19:32:41Z",
          "updated_at": "2023-07-15T10:36:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6568525549,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGHg77t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6568525549",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-08T11:17:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6568860896,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGHiNzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6568860896",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-08T16:51:37Z"
    },
    {
      "event": "commented",
      "id": 1128022340,
      "node_id": "IC_kwDOABII585DPEFE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1128022340",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T18:54:50Z",
      "updated_at": "2022-05-16T18:54:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "@luke-jr @JeremyRubin  Thanks for the comments. The current version deliberately does not implement a new address/descriptor format. This requires a separate discussion and changes in wallet behavior. And it doesn't make sense to start a discussion about it before the scheme proves itself valid in a viable time.\r\n\r\nCurrently the main focus is to validate the scheme and verify that the performance is viable.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1128022340",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 6618627192,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGKgDx4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6618627192",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T18:54:51Z"
    },
    {
      "event": "subscribed",
      "id": 6618627203,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGKgDyD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6618627203",
      "actor": {
        "login": "JeremyRubin",
        "id": 886523,
        "node_id": "MDQ6VXNlcjg4NjUyMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/JeremyRubin",
        "html_url": "https://github.com/JeremyRubin",
        "followers_url": "https://api.github.com/users/JeremyRubin/followers",
        "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
        "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
        "repos_url": "https://api.github.com/users/JeremyRubin/repos",
        "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T18:54:51Z"
    },
    {
      "event": "mentioned",
      "id": 6618627212,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGKgDyM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6618627212",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T18:54:51Z"
    },
    {
      "event": "subscribed",
      "id": 6618627215,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGKgDyP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6618627215",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T18:54:51Z"
    },
    {
      "event": "commented",
      "id": 1128022502,
      "node_id": "IC_kwDOABII585DPEHm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1128022502",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-16T18:55:01Z",
      "updated_at": "2022-05-16T18:57:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "I created a short and simple tutorial on how to make silent payments on signet.\r\nhttps://gist.github.com/w0xlt/72390ded95dd797594f80baba5d2e6ee",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1128022502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "labeled",
      "id": 6623885050,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGK0Hb6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6623885050",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-17T12:06:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6655617221,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGMtKjF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6655617221",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-22T03:16:43Z"
    },
    {
      "event": "unlabeled",
      "id": 6655684786,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAGMtbCy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6655684786",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-22T05:15:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1134907552,
      "node_id": "IC_kwDOABII585DpVCg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1134907552",
      "actor": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T16:47:40Z",
      "updated_at": "2022-05-23T16:47:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "@w0xlt I am sorry if this is documented somewhere, but how do you determine which input carries the public key for ECDH?",
      "user": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1134907552",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 6662733264,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGNIT3Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6662733264",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T16:47:40Z"
    },
    {
      "event": "subscribed",
      "id": 6662733270,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGNIT3W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6662733270",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T16:47:40Z"
    },
    {
      "event": "commented",
      "id": 1135241506,
      "node_id": "IC_kwDOABII585Dqmki",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1135241506",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T23:36:46Z",
      "updated_at": "2022-05-23T23:43:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "@prusnak It s not well documented as well as being discussed.\r\n\r\nIn the current implementation, for simplicity, [only the first input is used.](https://github.com/w0xlt/bitcoin/blob/8f616acf868bbc75b31bf5170c40fd9957c08e91/src/wallet/spend.cpp#L665)\r\n\r\nThere is a suggestion by @RubenSomsen  to use a hash of all inputs. This would make silent payments compatible with coinjoins.\r\n\r\nThis is a possibility of change if the current version proves viable, since there shouldn't be much difference in performance between the two versions.\r\n\r\nI posted some estimates [here](https://gist.github.com/RubenSomsen/c43b79517e7cb701ebf77eec6dbb46b8?permalink_comment_id=4172737#gistcomment-4172737).",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1135241506",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 6664742337,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGNP-XB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6664742337",
      "actor": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T23:36:46Z"
    },
    {
      "event": "subscribed",
      "id": 6664742340,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGNP-XE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6664742340",
      "actor": {
        "login": "prusnak",
        "id": 42201,
        "node_id": "MDQ6VXNlcjQyMjAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/prusnak",
        "html_url": "https://github.com/prusnak",
        "followers_url": "https://api.github.com/users/prusnak/followers",
        "following_url": "https://api.github.com/users/prusnak/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/prusnak/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/prusnak/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
        "organizations_url": "https://api.github.com/users/prusnak/orgs",
        "repos_url": "https://api.github.com/users/prusnak/repos",
        "events_url": "https://api.github.com/users/prusnak/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/prusnak/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T23:36:46Z"
    },
    {
      "event": "mentioned",
      "id": 6664742345,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGNP-XJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6664742345",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T23:36:46Z"
    },
    {
      "event": "subscribed",
      "id": 6664742348,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGNP-XM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6664742348",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-23T23:36:46Z"
    },
    {
      "event": "reviewed",
      "id": 982957038,
      "node_id": "PRR_kwDOABII5846lrvu",
      "url": null,
      "actor": null,
      "commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-982957038",
      "submitted_at": "2022-05-24T10:15:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "labeled",
      "id": 6669211928,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGNhBkY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6669211928",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-24T13:39:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 983337626,
      "node_id": "PRR_kwDOABII5846nIqa",
      "url": null,
      "actor": null,
      "commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/24897/commits/8f616acf868bbc75b31bf5170c40fd9957c08e91\r\n\r\nI have tested the code by following the steps shared in https://gist.github.com/w0xlt/72390ded95dd797594f80baba5d2e6ee\r\n\r\nSilent payment address: `dig -t txt alice.silentbitco.in +short`\r\n\r\n![frame](https://user-images.githubusercontent.com/94559964/170059850-43905f78-668f-4bea-aa9d-0eb732a4d337.png)\r\n\r\n\r\n\r\n\r\nTx: https://explorer.bc-2.jp/tx/296d4a6e4383886d3ccca9c103c6216fd1cdebb2915b890bf6c04304c04aae8b?expand\r\n\r\n\r\n",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-983337626",
      "submitted_at": "2022-05-24T14:27:29Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "commented",
      "id": 1136199154,
      "node_id": "IC_kwDOABII585DuQXy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1136199154",
      "actor": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-24T17:07:14Z",
      "updated_at": "2022-05-24T17:07:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Huge Concept ACK.. \r\n\r\nThis is amazing.. 🔥🔥🔥🔥",
      "user": {
        "login": "rajarshimaitra",
        "id": 36541669,
        "node_id": "MDQ6VXNlcjM2NTQxNjY5",
        "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rajarshimaitra",
        "html_url": "https://github.com/rajarshimaitra",
        "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
        "following_url": "https://api.github.com/users/rajarshimaitra/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rajarshimaitra/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rajarshimaitra/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
        "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
        "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
        "events_url": "https://api.github.com/users/rajarshimaitra/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1136199154",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1138004570,
      "node_id": "IC_kwDOABII585D1JJa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138004570",
      "actor": {
        "login": "a5an0",
        "id": 207713,
        "node_id": "MDQ6VXNlcjIwNzcxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/207713?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/a5an0",
        "html_url": "https://github.com/a5an0",
        "followers_url": "https://api.github.com/users/a5an0/followers",
        "following_url": "https://api.github.com/users/a5an0/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/a5an0/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/a5an0/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/a5an0/subscriptions",
        "organizations_url": "https://api.github.com/users/a5an0/orgs",
        "repos_url": "https://api.github.com/users/a5an0/repos",
        "events_url": "https://api.github.com/users/a5an0/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/a5an0/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-26T00:12:43Z",
      "updated_at": "2022-05-26T00:12:43Z",
      "author_association": "NONE",
      "body": "I followed the tutorial and it worked great on signet",
      "user": {
        "login": "a5an0",
        "id": 207713,
        "node_id": "MDQ6VXNlcjIwNzcxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/207713?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/a5an0",
        "html_url": "https://github.com/a5an0",
        "followers_url": "https://api.github.com/users/a5an0/followers",
        "following_url": "https://api.github.com/users/a5an0/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/a5an0/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/a5an0/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/a5an0/subscriptions",
        "organizations_url": "https://api.github.com/users/a5an0/orgs",
        "repos_url": "https://api.github.com/users/a5an0/repos",
        "events_url": "https://api.github.com/users/a5an0/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/a5an0/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1138004570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1138361638,
      "node_id": "IC_kwDOABII585D2gUm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1138361638",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-05-26T09:54:10Z",
      "updated_at": "2022-05-26T09:54:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1138361638",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "reviewed",
      "id": 985996807,
      "node_id": "PRR_kwDOABII5846xR4H",
      "url": null,
      "actor": null,
      "commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-985996807",
      "submitted_at": "2022-05-26T11:06:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "commented",
      "id": 1144921702,
      "node_id": "IC_kwDOABII585EPh5m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1144921702",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-02T14:18:43Z",
      "updated_at": "2022-06-02T14:18:43Z",
      "author_association": "MEMBER",
      "body": "Very cool! It's nice to be able to test this concept with \"real\" demo software. I'll share some thoughts about the concept on the mailinglist or gist. Will focus on the implementation here.\r\n\r\nI was able to send to signet coins to myself. Here's the public key: `tb1p0ykcmjxv26utyntns8ryn70at9t38zkdta9fj3zrrnpnczuddxvqf8qwac`\r\n\r\nMy first thought was that it may be better (initially) to implement silent payments as a standalone tool that uses the Bitcoin Core RPC.\r\n\r\nHowever, given that this implementation requires a new index, I don't know how practical that is. Getting a new index added to Bitcoin Core however is also not easy (https://bitcoincore.reviews/14053). The light at the end the tunnel here would be a plugin system for indexes, which should be possible once process separation is complete. See #24230. That will take a while though.\r\n\r\nAnother reason for building a separate tool that uses the RPC is that this proposal has a pretty big resource need, something that the project may not want to commit to anytime soon. The sending side is not resource intensive though, so perhaps that is easier to get in.\r\n\r\nLimiting the scope of this implementation to taproot makes sense. Limiting it to the first input seems brittle however, hopefully it's not too difficult to scan them all. Other implementations might order the input coins differently. Also, if you go for the approach of building an external tool that uses the RPC, then you can could use `send` with 1 fixed input and have the wallet automatically select the other coins. But in that case the RPC gives no guarantee which position the input will end up (it might be the first in practice atm).\r\n\r\nIn case the proposal is modified to consider _all_ inputs, keep in mind that this makes coin selection (slightly) more complicated. The wallet has to decide, before it knows the output address, which inputs to use. That would involve some surgery in the way coin selection is integrated in the wallet. When implemented as an external tool, you would probably make two calls to send: one with a dummy destination and automatic coin selection to get the coins, and then one with manual coin selection and the real destination. But that's not pretty, and won't work if the wallet has a combination of taproot and non-taproot coins, because you currently can't tell coin selection to only use taproot inputs.\r\n\r\nImporting a descriptor with a shorter range than the keypool size has no effect afaik, it's just treated as a descriptor with range 0-1000. We could change that behavior, so that a descriptor imported with a fixed range is not expanded unless you re-import it. Not sure if that's ideal, cc @achow101. Another option might be to make the keypool configurable per wallet, though that also feels a bit meh. A user may have multiple wallets, not all of which use this feature, so relying on a global keypool=1 setting is not ideal. And a factor 1000 slower scanning seems suboptimal.\r\n\r\nAnother approach could be that a silent_payment wallet only ever generates 1 key, perhaps with a new `silent(pk)` descriptor type. That might also make it easier for `getnewaddress` to spit out something that's not actually an address. See https://gist.github.com/RubenSomsen/c43b79517e7cb701ebf77eec6dbb46b8?permalink_comment_id=4177027#gistcomment-4177027 for discussion around what format the silent payment public key should be communicated in.\r\n\r\nIdeally the scriptPubKeys are stored in the silent(pk) descriptor. This would make `getaddressinfo` return the right descriptor. In that case `getnewaddress` should always fail, because the addresses are not known in advance. You'd need another way to communicate the public key. The easiest hack might be to return it as public-key version of the silent(pk) descriptor, so the user can find it with either `listdescriptors` or `getaddressinfo` on any received payment.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1144921702",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 6728813144,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGREYpY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6728813144",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-02T14:18:44Z"
    },
    {
      "event": "subscribed",
      "id": 6728813150,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGREYpe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6728813150",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-02T14:18:44Z"
    },
    {
      "event": "reviewed",
      "id": 993257629,
      "node_id": "PRR_kwDOABII5847M-id",
      "url": null,
      "actor": null,
      "commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-993257629",
      "submitted_at": "2022-06-02T14:18:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 6741203951,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGRzpvv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6741203951",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-04T05:11:17Z"
    },
    {
      "event": "unlabeled",
      "id": 6741267123,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAGRz5Kz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6741267123",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-04T06:01:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-04T15:55:40Z",
      "updated_at": "2022-06-04T15:55:40Z",
      "source": {
        "issue": {
          "id": 1260256447,
          "node_id": "PR_kwDOABII5845Fj6p",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25273/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25273",
          "number": 25273,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Pass through transaction locktime and preset input sequences and scripts to CreateTransaction",
          "body": "Currently `FundTransaction` handles transaction locktime and preset input data by extracting the selected inputs and change output from `CreateTransaction`'s results. This means that `CreateTransaction` is actually unaware of any user desired locktime or sequence numbers. This can have an effect on whether and how anti-fee-sniping works.\r\n\r\nThis PR makes `CreateTransaction` aware of the locktime and preset input data by providing them to `CCoinControl`. `CreateTransasction` will then set the sequences, scriptSigs, scriptWItnesses, and locktime as appropriate if they are specified. This allows `FundTransaction` to actually use `CreateTransaction`'s result directly instead of having to extract the parts of it that it wants.\r\n\r\nAdditionally `FundTransaction` will return a `CreateTransactionResult` as `CreateTransaction` does instead of having several output parameters. Lastly, instead of using `-1` as a magic number for the change output position, the change position is changed to be an optional with no value set indicating no desired change output position (when provided as an input parameter) or no change output present (in the result).",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25273",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25273",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25273.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25273.patch"
          },
          "created_at": "2022-06-03T18:58:15Z",
          "updated_at": "2023-08-01T12:18:05Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-04T15:58:07Z",
      "updated_at": "2022-06-04T15:58:07Z",
      "source": {
        "issue": {
          "id": 1259958660,
          "node_id": "PR_kwDOABII5845EmFj",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25272",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25272/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25272/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25272/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25272",
          "number": 25272,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: guard and alert about a wallet invalid state during chain sync",
          "body": "Follow-up work to my comment in #25239.\r\n\r\nGuarding and alerting the user about a wallet invalid state during chain synchronization.\r\n\r\n#### Explanation\r\nif the `AddToWallet` tx write fails, the method returns a wtx `nullptr` without removing the recently added transaction from the wallet's map.\r\n\r\nWhich makes that `AddToWalletIfInvolvingMe` return false (even when the tx is on the wallet's map already), --> which makes `SyncTransaction` skip the `MarkInputsDirty` call --> which leads to a wallet invalid state where the inputs of this new transaction are not marked dirty, while the transaction that spends them still exist on the in-memory wallet tx map.\r\n\r\nPlus, as we only store the arriving transaction inside `AddToWalletIfInvolvingMe` when we synchronize/scan block/s from the chain and nowhere else, it makes sense to treat the transaction db write error as a runtime error to notify the user about the problem. Otherwise, the user will lose all the not stored transactions after a wallet shutdown (without be able to recover them automatically on the next startup because the chain sync would be above the block where the txs arrived).\r\n\r\nNote:\r\nOn purpose, the first commit adds test coverage for it. Showing how the wallet can end up in an invalid state. The second commit corrects it with the proposed solution.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25272",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25272",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25272.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25272.patch"
          },
          "closed_at": "2022-08-02T18:07:00Z",
          "created_at": "2022-06-03T14:06:15Z",
          "updated_at": "2023-05-27T01:50:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-04T16:51:18Z",
      "updated_at": "2022-06-04T16:51:18Z",
      "source": {
        "issue": {
          "id": 1248806079,
          "node_id": "PR_kwDOABII5844e2kY",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25218",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25218/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25218/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25218/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25218",
          "number": 25218,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: introduce generic 'Result' class and connect it to CreateTransaction and GetNewDestination",
          "body": "Based on a common function signature pattern that we have all around the sources:\r\n```cpp\r\nbool doSomething(arg1, arg2, arg3, arg4, &result_obj, &error_string) {\r\n    // do something...\r\n    if (error) {\r\n        error_string = \"something bad happened\";\r\n        return false;\r\n    }\r\n\r\n    result = goodResult;\r\n    return true;\r\n}\r\n```\r\n\r\nIntroduced a generic class `BResult` that encapsulate the function boolean result, the result object (in case of having it) and, in case of failure, the string error reason.\r\n\r\nObtaining in this way cleaner function signatures and removing boilerplate code:\r\n\r\n```cpp\r\nBResult<Obj> doSomething(arg1, arg2, arg3, arg4) {\r\n    // do something...\r\n    if (error) return \"something bad happened\";\r\n\r\n    return goodResult;\r\n}\r\n```\r\n\r\nSame cleanup applies equally to the function callers' side as well. There is no longer need to add the error string and the result object declarations before calling the function:\r\n\r\nBefore:\r\n```cpp\r\nObj result_obj;\r\nstd::string error_string;\r\nif (!doSomething(arg1, arg2, arg3, arg4, result_obj, error_string)) {\r\n    LogPrintf(\"Error: %s\", error_string);\r\n}\r\nreturn result_obj;\r\n```\r\n\r\nNow:\r\n```cpp\r\nBResult<Obj> op_res = doSomething(arg1, arg2, arg3, arg4);\r\nif (!op_res) {\r\n    LogPrintf(\"Error: %s\", op_res.GetError());\r\n}\r\nreturn op_res.GetObjResult();\r\n```\r\n\r\n### Initial Implementation:\r\n\r\nHave connected this new concept to two different flows for now:\r\n\r\n1) The `CreateTransaction` flow. --> 7ba2b87c\r\n2) The `GetNewDestination` flow. --> bcee0912\r\n\r\nHappy note: even when introduced a new class into the sources, the amount of lines removed is almost equal to added ones :).\r\n\r\nExtra note: this work is an extended version (and a decoupling) of the work that is inside #24845 (which does not contain the `GetNewDestination` changes nor the inclusion of the `FeeCalculation` field inside `CreatedTransactionResult`).",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 33,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25218",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25218",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25218.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25218.patch"
          },
          "closed_at": "2022-07-12T11:58:05Z",
          "created_at": "2022-05-25T22:17:56Z",
          "updated_at": "2023-05-27T01:51:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1146890220,
      "node_id": "IC_kwDOABII585EXCfs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1146890220",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-05T21:57:57Z",
      "updated_at": "2022-06-06T01:36:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "@Sjors @kristapsk @1440000bytes Thanks for reviews and tests.  I addressed your suggestions in the last force-push.\r\n\r\n@Sjors  I agree that using a separate wallet/tool ​​for silent payments can be a good solution.\r\nI initially considered this option, but it would imply re-implementing the scan logic. The tool must be able to request and de-serialize blocks and the UTXO Set to scan coins.\r\nSo a new branch appeared to be the simplest way to implement a proof of concept.\r\n\r\n> In case the proposal is modified to consider all inputs, keep in mind that this makes coin selection (slightly) more complicated.\r\n\r\nYes. There are some tradeoffs involving how to use inputs for ECDH. I don't think there's a way to accept every type of input, as seen in https://github.com/bitcoin/bitcoin/pull/24897/commits/178e39d804a092016abe9650a1cde085173d6795.\r\n\r\nExample:\r\n```c++\r\nif (whichType == TxoutType::NONSTANDARD ||\r\n    whichType == TxoutType::MULTISIG ||\r\n    whichType == TxoutType::WITNESS_UNKNOWN ) {\r\n        return false;\r\n    }\r\n```\r\n\r\n> given that this implementation requires a new index,\r\n\r\nThis index just speeds up the transaction verification. This is not necessary for Silent Payments, although in this particular implementation it is required for UX purposes. I'm getting some metrics to see if it can be removed and still have a good user experience.\r\n\r\n> relying on a global keypool=1 setting is not ideal.\r\n\r\nYes. This is just for testing and should not be required in an eventual final version.\r\n\r\n> Another approach could be that a silent_payment wallet only ever generates 1 key, perhaps with a new silent(pk) descriptor type. \r\n\r\nI think this is the best solution. This would imply changing the `getnewaddress` RPC to always return the same address for this `silent` descriptor and allowing a non-ranged descriptor to be active.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1146890220",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 6749292936,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGSSgmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6749292936",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-05T21:57:58Z"
    },
    {
      "event": "subscribed",
      "id": 6749292937,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGSSgmJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6749292937",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-05T21:57:58Z"
    },
    {
      "event": "mentioned",
      "id": 6749292938,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGSSgmK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6749292938",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-05T21:57:58Z"
    },
    {
      "event": "subscribed",
      "id": 6749292940,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGSSgmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6749292940",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-05T21:57:58Z"
    },
    {
      "event": "mentioned",
      "id": 6749292943,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGSSgmP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6749292943",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-05T21:57:58Z"
    },
    {
      "event": "subscribed",
      "id": 6749292945,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGSSgmR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6749292945",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-05T21:57:58Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-08T01:02:11Z",
      "updated_at": "2022-06-08T01:02:11Z",
      "source": {
        "issue": {
          "id": 1263730107,
          "node_id": "PR_kwDOABII5845REBZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25297",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25297/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25297/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25297/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25297",
          "number": 25297,
          "state": "open",
          "state_reason": null,
          "title": "wallet: group independent db writes on single batched db transaction",
          "body": "The block connection process, same as many other wallet processes, contains plenty individual db writes.\r\n\r\nThis PR batches all the db transaction that occurs along each wallet workflow. Dumping all the information to disk at once atomically at the end of the process.\r\n\r\nThen, for BDB, fixed places where we are flushing to db directly on individual writes. e.g we do it in the in the chain sync/scan process, when an output that belongs to the wallet is found if the address is not inside the address book. \r\n\r\nPlus, in several places across the wallet flows, we create new `WalletBatch` objects. Which, internally, mean: Increasing the db references number, try to open the db and, for SQLite, setup and bind the statements.\r\nThis PR avoids all this overhead by sharing the same db handler instance through each entire workflow.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25297",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25297",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25297.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25297.patch"
          },
          "created_at": "2022-06-07T18:55:49Z",
          "updated_at": "2023-05-15T12:01:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-09T20:26:46Z",
      "updated_at": "2022-06-09T20:26:46Z",
      "source": {
        "issue": {
          "id": 1262107189,
          "node_id": "PR_kwDOABII5845Lk6j",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25287",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25287/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25287/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25287/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25287",
          "number": 25287,
          "state": "closed",
          "state_reason": null,
          "title": "logging: threshold log level",
          "body": "Overview: This PR allows logs below the threshold severity level to be ignored (a continuation of #24464).\r\n\r\nNotable changes:\r\n* Deduplicate identical code in `LogCategoryToStr` and `LogCategories` (addresses https://github.com/bitcoin/bitcoin/pull/24464#discussion_r880665834)\r\n* Threshold log level:\r\n  * Introduce a global threshold log level that will allow the logger to ignore logs that are below the threshold level (defaults to `Levels::info`)\r\n    * User can configure this with `-loglevel=<level>` (ie: `-loglevel=warning`)\r\n  * Introduce a category-specific threshold log level that overrides the global threshold log level. Category-specific log level will only apply to the category supplied in the configuration\r\n    * User can configure this with `-loglevel=<category>:<level>` (ie: `-loglevel=net:warning`)\r\n\r\n**Testing**:\r\n\r\nGlobal log level:\r\n```shell\r\n# global log level = info (default)\r\n$ ./src/bitcoind -signet\r\n$ grep -o \"net:debug\" ~/.bitcoin/signet/debug.log | wc -l\r\n0\r\n\r\n# global log level = debug\r\n$ ./src/bitcoind -signet -loglevel=debug\r\n$ grep -o \"net:debug\" ~/.bitcoin/signet/debug.log | wc -l\r\n4\r\n```",
          "user": {
            "login": "klementtan",
            "id": 49265907,
            "node_id": "MDQ6VXNlcjQ5MjY1OTA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/49265907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/klementtan",
            "html_url": "https://github.com/klementtan",
            "followers_url": "https://api.github.com/users/klementtan/followers",
            "following_url": "https://api.github.com/users/klementtan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/klementtan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/klementtan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/klementtan/subscriptions",
            "organizations_url": "https://api.github.com/users/klementtan/orgs",
            "repos_url": "https://api.github.com/users/klementtan/repos",
            "events_url": "https://api.github.com/users/klementtan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/klementtan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25287",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25287",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25287.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25287.patch"
          },
          "closed_at": "2022-07-02T05:10:41Z",
          "created_at": "2022-06-06T17:01:08Z",
          "updated_at": "2023-02-02T12:33:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-06-25T03:41:08Z",
      "updated_at": "2022-06-25T03:41:08Z",
      "source": {
        "issue": {
          "id": 1283938285,
          "node_id": "PR_kwDOABII5846UrmL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25465",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25465/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25465/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25465/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25465",
          "number": 25465,
          "state": "closed",
          "state_reason": null,
          "title": "build: remove boost library detection",
          "body": "We no longer link against any Boost libraries, so don't need to detect them, or set any Boost related LDFLAGS. Removing this from the macro also allows cleaning up some code in our configure.\r\n\r\nGuix Build:\r\n```bash\r\ne1ca070d085115767415121f3be8d8fa29547c9df633f9782b168a00753e995a  guix-build-db648e8ccc69/output/aarch64-linux-gnu/SHA256SUMS.part\r\nfb4d229a71d64aef9de4a0301fad3d9ee5937025807a0e101f4cc0e20cf942b2  guix-build-db648e8ccc69/output/aarch64-linux-gnu/bitcoin-db648e8ccc69-aarch64-linux-gnu-debug.tar.gz\r\n5241bb543617df5e64584741b402117a3b9e7015a423507fd6c529ad397b13a5  guix-build-db648e8ccc69/output/aarch64-linux-gnu/bitcoin-db648e8ccc69-aarch64-linux-gnu.tar.gz\r\neb4ba0914e9a38b3804c062ffd47f4d49dc996ea249c5cdbf64a349f73f59555  guix-build-db648e8ccc69/output/arm-linux-gnueabihf/SHA256SUMS.part\r\n497d1c0d03d52cc6469acf4c61f224e7567c2601b64df3fe5888374e3416d868  guix-build-db648e8ccc69/output/arm-linux-gnueabihf/bitcoin-db648e8ccc69-arm-linux-gnueabihf-debug.tar.gz\r\n86daab76f41581b752a5a786c5be1b094c14b25cdc8f4090f323b914118884ff  guix-build-db648e8ccc69/output/arm-linux-gnueabihf/bitcoin-db648e8ccc69-arm-linux-gnueabihf.tar.gz\r\ne8e2c58948a29b0286d17d7dfb89c81234ab28b98f44c2e1d70034da5ce9b8fc  guix-build-db648e8ccc69/output/arm64-apple-darwin/SHA256SUMS.part\r\nd8f0e791cce42db0741afbb7ec23e251a40ec30f8e1e7fef0d1afc364ce32e9b  guix-build-db648e8ccc69/output/arm64-apple-darwin/bitcoin-db648e8ccc69-arm64-apple-darwin-unsigned.dmg\r\nee85b5b7942dc3361a3b05a395e271d54215f76fb67fc3c30144b089da374cd7  guix-build-db648e8ccc69/output/arm64-apple-darwin/bitcoin-db648e8ccc69-arm64-apple-darwin-unsigned.tar.gz\r\n72efbe40e3d033165871a8e8b4719c73a085ffc17a3198bf1191e5d22dec8c3a  guix-build-db648e8ccc69/output/arm64-apple-darwin/bitcoin-db648e8ccc69-arm64-apple-darwin.tar.gz\r\n0d86d3a303669235b91b4edbd6a5248dff65e31af3f3830cc8bdc116a2637e64  guix-build-db648e8ccc69/output/dist-archive/bitcoin-db648e8ccc69.tar.gz\r\n0f2371e331d97df50c65714ada6918565d8698637a78c7c97ba254dd5b3cc4b3  guix-build-db648e8ccc69/output/powerpc64-linux-gnu/SHA256SUMS.part\r\n1447777f7adababc6fddad3349ac435744abef35cd30b673c62621718441ca01  guix-build-db648e8ccc69/output/powerpc64-linux-gnu/bitcoin-db648e8ccc69-powerpc64-linux-gnu-debug.tar.gz\r\n3bf1e90df4d7fab18159ffd039dd1fa7e5251b0bdca020afd851fb7cd189cfd2  guix-build-db648e8ccc69/output/powerpc64-linux-gnu/bitcoin-db648e8ccc69-powerpc64-linux-gnu.tar.gz\r\n67ebc32843eb83a08468496c24750ab56bfdb259eb9004732be13427da5dbbc1  guix-build-db648e8ccc69/output/powerpc64le-linux-gnu/SHA256SUMS.part\r\n0da5fad78ab854f62db57a2f44b6ffecbf2b3e9de34b81681c66e28100a209ae  guix-build-db648e8ccc69/output/powerpc64le-linux-gnu/bitcoin-db648e8ccc69-powerpc64le-linux-gnu-debug.tar.gz\r\ne96a41287040d13da4738dde43dd7283356b8af10b535b15b212da702aa7f0af  guix-build-db648e8ccc69/output/powerpc64le-linux-gnu/bitcoin-db648e8ccc69-powerpc64le-linux-gnu.tar.gz\r\nb54a48e03e76672008445a174078e92a149dd9e4ce0c896b013162a6221b3abe  guix-build-db648e8ccc69/output/riscv64-linux-gnu/SHA256SUMS.part\r\nb7fea8fe4c1baecff28c45fa514ec34338a7f0e04a7f58b8cb5493932242c221  guix-build-db648e8ccc69/output/riscv64-linux-gnu/bitcoin-db648e8ccc69-riscv64-linux-gnu-debug.tar.gz\r\n775d406d4a2b1fa1750ae1924cf2f67de7d89dbf0044dc7ab08d3908812fff2e  guix-build-db648e8ccc69/output/riscv64-linux-gnu/bitcoin-db648e8ccc69-riscv64-linux-gnu.tar.gz\r\na1dcd8c95517e8b98d8584eed00b561582b74a68a1b3d06efd86d5322186b21e  guix-build-db648e8ccc69/output/x86_64-apple-darwin/SHA256SUMS.part\r\n952ea47428b9bcadb809fb02a56347a9f8b29f09eba4edf67a157f7cc4ec9a57  guix-build-db648e8ccc69/output/x86_64-apple-darwin/bitcoin-db648e8ccc69-x86_64-apple-darwin-unsigned.dmg\r\nadb226a702e24962d263edf2e95100508d6728b4dd93a5d6098c37a5721c2bcc  guix-build-db648e8ccc69/output/x86_64-apple-darwin/bitcoin-db648e8ccc69-x86_64-apple-darwin-unsigned.tar.gz\r\nfd389c11cce919c53e4aeccb0e5d1ee1d12b1d9f6987a3317c4b254c3ca03387  guix-build-db648e8ccc69/output/x86_64-apple-darwin/bitcoin-db648e8ccc69-x86_64-apple-darwin.tar.gz\r\nc76314a9194733790533bbfefa7e6a234307aaa252989c2b3fd19191ae286c57  guix-build-db648e8ccc69/output/x86_64-linux-gnu/SHA256SUMS.part\r\n5e2b023b62b77709f30d545705a61826e96ddcfea4c24cde83fe2b98010262e1  guix-build-db648e8ccc69/output/x86_64-linux-gnu/bitcoin-db648e8ccc69-x86_64-linux-gnu-debug.tar.gz\r\na3e9dcb58aa8554cdeb211461976087b724cd81157517a9f1e00b1a73d74ab9b  guix-build-db648e8ccc69/output/x86_64-linux-gnu/bitcoin-db648e8ccc69-x86_64-linux-gnu.tar.gz\r\nd6733313b8f262b214c28d44d8ee644a2435cb4da90555b30e20dbf3807b6660  guix-build-db648e8ccc69/output/x86_64-w64-mingw32/SHA256SUMS.part\r\nbc4b269f5b89200537d7175492ae31ab87eb4a1da86c1ade968a7bbdc472c5bf  guix-build-db648e8ccc69/output/x86_64-w64-mingw32/bitcoin-db648e8ccc69-win64-debug.zip\r\nccd83eb4c9ab0df288935ab655cd71b00525b57f82c8b9d7a4d1a08325d26aac  guix-build-db648e8ccc69/output/x86_64-w64-mingw32/bitcoin-db648e8ccc69-win64-setup-unsigned.exe\r\n91ee20dfbaa923066379ea22f3e3a85a52f5b323877b44c19ccec6300d25cd41  guix-build-db648e8ccc69/output/x86_64-w64-mingw32/bitcoin-db648e8ccc69-win64-unsigned.tar.gz\r\n595baf193e0955436c4f2e5047e6842434bb4273b03c9d74e5c90972dde812f4  guix-build-db648e8ccc69/output/x86_64-w64-mingw32/bitcoin-db648e8ccc69-win64.zip\r\n```",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25465",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25465",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25465.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25465.patch"
          },
          "closed_at": "2023-01-28T15:55:41Z",
          "created_at": "2022-06-24T16:20:16Z",
          "updated_at": "2023-01-28T15:56:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-01T17:06:44Z",
      "updated_at": "2022-07-01T17:06:44Z",
      "source": {
        "issue": {
          "id": 1043863646,
          "node_id": "PR_kwDOABII584uDOCP",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23432",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23432/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23432/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23432/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23432",
          "number": 23432,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: CKey encode/decode to elligator-swift",
          "body": "This PR adds the ability to encode `CPubKey` objects to their pseudorandom elligator-swift representation. Depends on https://github.com/bitcoin-core/secp256k1/pull/1129.\r\n\r\nThe first 2 commits enable the availability of that upstream code and will be removed once https://github.com/bitcoin-core/secp256k1/pull/1129 is merged. Only last 3 commits need review here.",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 159815356,
              "node_id": "MDU6TGFiZWwxNTk4MTUzNTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream",
              "name": "Upstream",
              "color": "bfd4f2",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23432",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23432",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23432.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23432.patch"
          },
          "closed_at": "2023-04-18T00:39:36Z",
          "created_at": "2021-11-03T17:14:42Z",
          "updated_at": "2023-04-18T00:39:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 6977561609,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGf5SQJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6977561609",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-12T13:16:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7005250382,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGhi6NO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7005250382",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-15T23:24:18Z"
    },
    {
      "event": "commented",
      "id": 1186019639,
      "node_id": "IC_kwDOABII585GsTk3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186019639",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-15T23:24:33Z",
      "updated_at": "2022-07-15T23:24:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1186019639",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1186036654,
      "node_id": "IC_kwDOABII585GsXuu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186036654",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T00:24:07Z",
      "updated_at": "2022-07-16T00:24:07Z",
      "author_association": "NONE",
      "body": "> Rebased.\r\n\r\nwhy is CI failing?",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1186036654",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "unlabeled",
      "id": 7005437256,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAGhjn1I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7005437256",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T01:07:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T01:43:17Z",
      "updated_at": "2022-07-16T01:43:17Z",
      "source": {
        "issue": {
          "id": 1306015823,
          "node_id": "PR_kwDOABII5847eEyL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25620",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25620/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25620/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25620/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25620",
          "number": 25620,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Introduce AddressBookManager",
          "body": "Finishing the encapsulation work started in #25337. Please review https://github.com/bitcoin/bitcoin/pull/26836 first.\r\n\r\n#### Context\r\n\r\nWe are currently using the address book for different purposes and features in the wallet such us:\r\n\r\n1) Store and retrieve own receive addresses with a label.\r\n2) Store and retrieve external addresses with a label.\r\n3) Store and retrieve payment requests.\r\n4) Mark addresses/destinations as 'used' if they appear on the blockchain (part of the “avoid re-use” feature).\r\n5) Know whether an output is a change or not based on the encoded script.\r\n\r\nSome of these points aren’t well known by many because this code has been spread and obfuscated across the wallet’s sources. (and created in a Frankenstein style).\r\n\r\n#### PR Goals\r\n\r\nEncapsulate the address book functionalities into its own `AddressBookManager` class, so we are able to distinguish properly the address book responsibilities and capabilities.\r\n\r\nBe able to decouple the address book dependency on the wallet’s main mutex (up to a certain point, because we are still using the same db connection).\r\n\r\nClean up the wallet sources further.\r\n\r\nBe able to unit/fuzz test the address book manager implementation isolated from the wallet flows.\r\n\r\nAnd create a new class that can be easily upgraded/replaced, and even different implementations can be used in parallel in different local wallets, by just providing a different manager instance to the wallet in the constructor.\r\n\r\n#### Next steps\r\n\r\nAfter this PR, will be working on improve the ‘change output’ flow which, at least for now, is strictly connected to this process (goal will be to remove the strict dependency).\r\n\r\n#### Pending work (still under WIP, almost there)\r\n\r\n* [ ] Add manager class description.\r\n* [ ] Clean CAddressBookData.\r\n* [ ] Cover the class with unit tests.\r\n* [ ] Double-check commits order.\r\n* [ ] Add addrbook purposes enum.\r\n* [ ] Make cs_addrbook RecursiveMutex a Mutex?\r\n",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25620",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25620",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25620.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25620.patch"
          },
          "created_at": "2022-07-15T13:06:04Z",
          "updated_at": "2023-07-11T01:47:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1186053310,
      "node_id": "IC_kwDOABII585Gsby-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186053310",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T01:49:29Z",
      "updated_at": "2022-07-16T06:46:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "@1440000bytes this PR is built on top of https://github.com/bitcoin/bitcoin/pull/23480 and https://github.com/bitcoin-core/secp256k1/pull/994, which have not yet been merged.\r\n\r\n~~One of the error is the same as #23480, which occurs in `wallet_taproot.py`. This is failing almost every CI check, but not on my machine (Ubuntu 21.10).~~\r\nRegarding the error in`wallet_taproot.py`, I suggested the solution in https://github.com/bitcoin/bitcoin/pull/23480#issuecomment-1186014033, but had forgotten to commit it here. This error has now been fixed.\r\n\r\nThe other error is a lint error about manually merging #994. I'm still not sure how to fix this lint error.\r\n\r\nEDIT: The only error now is the lint error mentioned above. From what I understand from the file `test/lint/git-subtree-check.sh`, this is because the `src/secp256k1` subtree is compared with the master branch of https://github.com/bitcoin-core/secp256k1  and as it is different, it results in an error.\r\n\r\nIf so, this error will remain until https://github.com/bitcoin-core/secp256k1/pull/994 is merged.\r\n\r\nAnyway, it's a lint error (formatting basically). Does not affect functionality.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1186053310",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7005491001,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGhj085",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7005491001",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T01:49:29Z"
    },
    {
      "event": "subscribed",
      "id": 7005491003,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGhj087",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7005491003",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T01:49:29Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T02:01:03Z",
      "updated_at": "2022-07-16T02:01:03Z",
      "source": {
        "issue": {
          "id": 1302783338,
          "node_id": "PR_kwDOABII5847TWiW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25601",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25601/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25601/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25601/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25601",
          "number": 25601,
          "state": "closed",
          "state_reason": null,
          "title": "util: Make `BResult` error a generic type instead of only `bilingual_str`",
          "body": "This PR makes `BResult` error a generic type instead of only `bilingual_str` and changes the class name to `StructuredResult` as `BResut` is not related to the purpose of the class.\r\n\r\nThe motivation is that some methods, like `src/wallet/wallet.h:{RestoreWallet(...),CreateWallet(...),LoadWallet(...)}` have more output parameters than just `bilingual_str& error` such as `DatabaseStatus& status` and `std::vector<bilingual_str>& warnings`.\r\n\r\nWith a generic template for error, it will be possible to create a struct that has `bilingual_str& error` and `DatabaseStatus& status`, for example, and use it in `StructuredResult`.\r\n\r\nBuilt on top of #25594",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25601",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25601",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25601.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25601.patch"
          },
          "closed_at": "2022-08-03T04:15:11Z",
          "created_at": "2022-07-13T01:20:46Z",
          "updated_at": "2022-08-03T04:15:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7005523546,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGhj85a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7005523546",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T02:03:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7005597665,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGhkO_h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7005597665",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T03:11:47Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7005686658,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGhkkuC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7005686658",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T04:52:51Z"
    },
    {
      "event": "commented",
      "id": 1186093975,
      "node_id": "IC_kwDOABII585GsluX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186093975",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T05:29:49Z",
      "updated_at": "2022-07-16T05:29:49Z",
      "author_association": "MEMBER",
      "body": ">Another approach could be that a silent_payment wallet only ever generates 1 key, perhaps with a new silent(pk) descriptor type. That might also make it easier for getnewaddress to spit out something that's not actually an address. \r\n\r\nHow would you apply a label and determine who the sender is?\r\n\r\nAlso, being non-reversible from the UTXO doesn't make it any less of an address...",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1186093975",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1186097589,
      "node_id": "IC_kwDOABII585Gsmm1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186097589",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T06:03:36Z",
      "updated_at": "2022-07-16T06:06:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "@luke-jr Not sure if I understand your question, but this scheme doesn't change anything regarding the sender/recipient relationship.\r\nThe sender will know the tweaked address and the recipient will know where the coins are coming from.\r\n\r\nWhat this proposal prevents is external observers from knowing or tracking how many coins or transactions a public address has.\r\nAnd it also prevents reuse of a public address (as it happens in on-chain donations, for example).",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1186097589",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7005745850,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGhkzK6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7005745850",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T06:03:36Z"
    },
    {
      "event": "subscribed",
      "id": 7005745851,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGhkzK7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7005745851",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T06:03:37Z"
    },
    {
      "event": "commented",
      "id": 1186209556,
      "node_id": "IC_kwDOABII585GtB8U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186209556",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T14:46:49Z",
      "updated_at": "2022-07-16T14:46:49Z",
      "author_association": "MEMBER",
      "body": ">Not sure if I understand your question, but this scheme doesn't change anything regarding the sender/recipient relationship.\r\nThe sender will know the tweaked address and the recipient will know where the coins are coming from.\r\n\r\nThe recipient knows who the sender is and the purpose of the transaction, based on the address the bitcoins were sent to. If `getnewaddress` gave the same address every call, it would be impossible to tell the difference between them.\r\n\r\n>And it also prevents reuse of a public address (as it happens in on-chain donations, for example).\r\n\r\nI thought the whole point was to make reuse of such an address safe?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1186209556",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1186216119,
      "node_id": "IC_kwDOABII585GtDi3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186216119",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T15:14:18Z",
      "updated_at": "2022-07-16T15:25:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "> If `getnewaddress` gave the same address every call\r\n\r\nYou can label the tweaked address. It is part of the wallet. The `rawtr(pk)` descriptor is normally added to wallet.\r\n\r\n> I thought the whole point was to make reuse of such an address safe?\r\n\r\nYes. That's the point. The same address will be tweaked on every transaction \r\n\r\nAs I understand it, the purpose of SP is primarily to increase privacy in a situation where you need to publicly post an address and anyone can send coins to it.\r\n\r\nIf you need more control to categorize each address by payer, an HD wallet is better.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1186216119",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1186219581,
      "node_id": "IC_kwDOABII585GtEY9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186219581",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T15:31:08Z",
      "updated_at": "2022-07-16T15:31:08Z",
      "author_association": "MEMBER",
      "body": ">You can label the tweaked address. It is part of the wallet.\r\n\r\nThat seems like a bad design... it should show the silent address.\r\n\r\nBut more importantly, for the recipient to set a label, he has to know what it's for _first_....\r\n\r\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1186219581",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1186221029,
      "node_id": "IC_kwDOABII585GtEvl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1186221029",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-16T15:37:21Z",
      "updated_at": "2022-07-16T15:37:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> it should show the silent address. \r\n\r\nThis can be done. The wallet knows that a certain transaction / address was found by verifying SP.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1186221029",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "reviewed",
      "id": 1041092565,
      "node_id": "PRR_kwDOABII584-Dc_V",
      "url": null,
      "actor": null,
      "commit_id": "1e2c0760a611253fa2dc0261fab6795ef02dc7d7",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "reACK https://github.com/bitcoin/bitcoin/pull/24897/commits/1e2c0760a611253fa2dc0261fab6795ef02dc7d7",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1041092565",
      "submitted_at": "2022-07-17T08:19:37Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-18T20:07:08Z",
      "updated_at": "2022-07-18T20:07:08Z",
      "source": {
        "issue": {
          "id": 1308298704,
          "node_id": "PR_kwDOABII5847ljBw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25634",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25634/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25634/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25634/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25634",
          "number": 25634,
          "state": "closed",
          "state_reason": null,
          "title": "wallet, tests: Expand and test when the blank wallet flag should be un/set",
          "body": "The `blank` wallet flag is used to indicate that the wallet intentionally does not have any keys, scripts, or descriptors, and it prevents the automatic generation of those things for such a wallet. Once the wallet contains any of those data, it is unnecessary, and possibly incorrect, to have `blank` set. This PR fixes a few places where this was not properly happening. It also adds a test for this unset behavior.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25634",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25634",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25634.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25634.patch"
          },
          "closed_at": "2023-06-14T13:31:06Z",
          "created_at": "2022-07-18T17:37:00Z",
          "updated_at": "2023-06-23T16:00:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-20T23:29:44Z",
      "updated_at": "2022-07-20T23:29:44Z",
      "source": {
        "issue": {
          "id": 1049392340,
          "node_id": "PR_kwDOABII584uU3Vp",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23480",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23480/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23480/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23480/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23480",
          "number": 23480,
          "state": "closed",
          "state_reason": null,
          "title": "Add rawtr() descriptor for P2TR with specified (tweaked) output key",
          "body": "It may be useful to be able to represent P2TR outputs in descriptors whose script tree and/or internal key aren't known. This PR does that, by adding a `rawtr(KEY)` descriptor, where the KEY represents the output key directly. If the private key corresponding to that output key is known, it also permits signing with it.\r\n\r\nI'm not convinced this is desirable, but presumably \"tr(KEY)\" sounds more intended for direct use than \"rawtr(KEY)\".",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23480",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23480",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23480.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23480.patch"
          },
          "closed_at": "2022-08-09T20:36:25Z",
          "created_at": "2021-11-10T04:33:10Z",
          "updated_at": "2022-08-09T20:36:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T18:24:49Z",
      "updated_at": "2022-07-21T18:24:49Z",
      "source": {
        "issue": {
          "id": 1313204802,
          "node_id": "PR_kwDOABII58472hm-",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25665/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25665",
          "number": 25665,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Add util::Result failure values, multiple error and warning messages",
          "body": "Add `util::Result` support for returning more error information and make use of it in [LoadChainstate method](https://github.com/bitcoin/bitcoin/pull/25665/commits/584e3fa4ea8ca15b3a8b46e023f218c5e0ed73b0) as an initial application. Followup PR [#25722](https://github.com/bitcoin/bitcoin/pull/25722) uses it more broadly to return errors and warnings from wallet loading functions as well.\r\n\r\nThis change adds two major features to the result class:\r\n\r\n- For better error handling, adds the ability to return a value on failure, not just a value on success. This is a key missing feature that makes the result class not useful for functions like `LoadChainstate()` which produce different errors that need to be handled differently [^1].\r\n\r\n[^1]: Ability to return error values was actually present in the original implementation of [#25218](https://github.com/bitcoin/bitcoin/pull/25218), but unfortunately removed in later iterations.\r\n\r\n- For better error reporting, adds the ability to return warning messages and multiple errors, not just a single error string. This provides a way for functions to report errors and warnings in a standard way, and simplifies interfaces:\r\n\r\n    ```diff\r\n    -virtual std::unique_ptr<Wallet> loadWallet(const std::string& name, bilingual_str& error, std::vector<bilingual_str>& warnings) = 0;\r\n    +virtual util::Result<std::unique_ptr<Wallet>> loadWallet(const std::string& name) = 0;\r\n    ```\r\n\r\n    ```diff\r\n    -std::unique_ptr<WalletDatabase> MakeDatabase(const fs::path& path, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error);\r\n    +util::Result<std::unique_ptr<WalletDatabase>, DatabaseError> MakeDatabase(const fs::path& path, const DatabaseOptions& options);\r\n   ```\r\n\r\nThis change also makes some more minor improvements:\r\n\r\n- Smaller type size. `util::Result<int>` is 16 bytes, and `util::Result<void>` is 8 bytes. Previously both were 72 bytes.\r\n\r\n- Broader type compatibility. Supports noncopyable and nonmovable success and error types.\r\n\r\n### Alternatives & design notes\r\n\r\nThe main goal for the `util::Result` class is to provide a standard way for functions to report error and warnings strings. The interface tries to make it easy to provide detailed error feedback to end users, without cluttering code or making it harder to return other result information. There have been multiple iterations of the design using different internal representations and providing different capabilities:\r\n\r\n|   | Representation (approximate)                   | Notes |\r\n|---|------------------------------------------------|-------|\r\n| _(1)_ | `tuple<T,optional<bilingual_str>>`        | Original #25218 implementation in da98fd2efc1a6b9c6e876cf3e227a8c2e9a10827. Good capabilities, but larger type size. Supports error standardized error reporting and customized error handling with failure values. |\r\n| _(2)_ | `variant<T,bilingual_str>`                | Final #25218 implementation in 7a45c33d1f8a758850cf8e7bd6ad508939ba5c0d. No support for returning failure values so not useful in many cases.\r\n| _(3)_ | `variant<monostate,T,F>`                 | Pending #25601 implementation that allows choosing whether to use standardized error reporting or return custom failure values, but doesn't support having both at the same time, like approaches _(1)_, _(4)_, _(5)_, _(6)_ do. |\r\n | _(4)_ | `tuple<variant<T,F>,bilingual_str>`      | Original #25608 implementation in c29d3008de9314dd463ed08e8bff39fe55324498. Basically the same as _(1)_ except it uses separate success and failure types instead of the same type. Using separate success and failure types makes the result class a little less flexible but can help avoid some ambiguity and inconsistent result states. |\r\n| _(5)_ | `tuple<T,optional<bilingual_str>>`        | Final #25608 implementation in dd91f294206ac87b213d23bb76656a0a5f0f4781. Essentially the same as original implementation _(1)_ except has some usability improvements. |\r\n| _(6)_ | `tuple<T,unique_ptr<tuple<F,bilingual_str>>` | Pending #25665 implementation (this PR). Supports returning failure values, uses separate success and failure types to avoid ambiguity, uses `unique_ptr` to reduce result type size, and avoids heap allocation in the happy path. |\r\n\r\n### Prior discussions & history\r\n\r\n- _furszy_ introduced a `BResult` class providing a standard error reporting mechanism in [#25218](https://github.com/bitcoin/bitcoin/pull/25218). It was renamed to `util::Result` in [#25721](https://github.com/bitcoin/bitcoin/pull/25721) but kept the same representation and capabilities.\r\n\r\n- _MarcoFalke_ suggested using `BResult` for the `LoadChainstate` function in [#25308 (comment)](https://github.com/bitcoin/bitcoin/pull/25308#issuecomment-1181674645). Inability to use `BResult` there due to lack of support for failure values led to initial work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _w0xlt_ wrote a `StructuredResult` class in [#25308](https://github.com/bitcoin/bitcoin/pull/25601) adding the ability to return failure values but sacrificing standard error reporting, which led to more work on [#25608](https://github.com/bitcoin/bitcoin/pull/25608).\r\n\r\n- _martinus_ suggested a space optimization in [#25608 (comment)](https://github.com/bitcoin/bitcoin/pull/25608#discussion_r921049409) that also made it easier to support distinct failure & success types, leading to [#25665](https://github.com/bitcoin/bitcoin/pull/25665) as a replacement for [#25608](https://github.com/bitcoin/bitcoin/pull/25608).",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25665",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25665",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25665.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25665.patch"
          },
          "created_at": "2022-07-21T12:46:09Z",
          "updated_at": "2023-08-02T23:22:34Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-21T18:32:10Z",
      "updated_at": "2022-07-21T18:32:10Z",
      "source": {
        "issue": {
          "id": 1312870497,
          "node_id": "PR_kwDOABII58471YW6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25660",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25660/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25660/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25660/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25660",
          "number": 25660,
          "state": "closed",
          "state_reason": null,
          "title": "Revert \"build: remove some no-longer-needed var unexporting from conf…",
          "body": "Building with depends implies exporting of the `PKG_CONFIG_PATH` and `PKG_CONFIG_LIBDIR` environment variables: https://github.com/bitcoin/bitcoin/blob/d1e42659bbdd8da170542d8c638242cd94f71a7d/depends/config.site.in#L87-L93\r\n\r\nTo use `--config-cache` option, as we do in CI, requires that \"they must be unexported at the end of `configure.ac`\".",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25660",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25660",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25660.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25660.patch"
          },
          "closed_at": "2022-07-24T00:07:18Z",
          "created_at": "2022-07-21T08:22:33Z",
          "updated_at": "2023-07-27T10:17:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-23T08:59:23Z",
      "updated_at": "2022-07-23T08:59:23Z",
      "source": {
        "issue": {
          "id": 1059245454,
          "node_id": "PR_kwDOABII584uzo7R",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23561",
          "number": 23561,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Handshake prerequisites",
          "body": "Depends on #25361 for some constants, and on https://github.com/bitcoin-core/secp256k1/pull/1129 for ellswift integrated XDH but can be reviewed independently. Only the last 5 commits belong to this PR.\r\n\r\nThis PR adds xonly [ECDH](https://gist.github.com/dhruv/5b1275751bc98f3b64bcafce7876b489#Initial_handshake) and [HKDF](https://gist.github.com/dhruv/5b1275751bc98f3b64bcafce7876b489#keys-and-session-id-derivation) key derivation code for BIP324. Unit, bench and fuzz tests are included.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23561",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23561",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23561.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23561.patch"
          },
          "closed_at": "2023-04-18T08:50:23Z",
          "created_at": "2021-11-20T22:50:38Z",
          "updated_at": "2023-04-18T08:50:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1050258564,
      "node_id": "PRR_kwDOABII584-mayE",
      "url": null,
      "actor": null,
      "commit_id": "1e2c0760a611253fa2dc0261fab6795ef02dc7d7",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1050258564",
      "submitted_at": "2022-07-26T01:22:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T20:53:45Z",
      "updated_at": "2022-07-27T20:53:45Z",
      "source": {
        "issue": {
          "id": 1320033494,
          "node_id": "PR_kwDOABII5848NBt5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25722/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25722",
          "number": 25722,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Use util::Result class for wallet loading",
          "body": "**This is based on #25665.** The non-base commits are:\r\n\r\n- [`1a540b591c74` refactor: Use util::Result class for wallet loading](https://github.com/bitcoin/bitcoin/pull/25722/commits/1a540b591c742594cca285ef9b8b16c6d8507d58)\r\n\r\n---\r\n\r\nWallet loading functions up and down the stack have lots of error and warning parameters, and return error information in different ways. This PR makes them uniformly return `util::Result`, without changing behavior.",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25722",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25722.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25722.patch"
          },
          "created_at": "2022-07-27T19:26:58Z",
          "updated_at": "2023-08-02T15:08:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-27T20:55:49Z",
      "updated_at": "2022-07-27T20:55:49Z",
      "source": {
        "issue": {
          "id": 1320033247,
          "node_id": "PR_kwDOABII5848NBqe",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25721/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25721",
          "number": 25721,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Replace BResult with util::Result",
          "body": "Rename `BResult` class to `util::Result` and update the class interface to be more compatible with `std::optional` and with a full-featured result class implemented in https://github.com/bitcoin/bitcoin/pull/25665. Motivation for this change is to update existing `BResult` usages now so they don't have to change later when more features are added in https://github.com/bitcoin/bitcoin/pull/25665.\r\n\r\nThis change makes the following improvements originally implemented in https://github.com/bitcoin/bitcoin/pull/25665:\r\n\r\n- More explicit API. Drops potentially misleading `BResult` constructor that treats any bilingual string argument as an error. Adds `util::Error` constructor so it is never ambiguous when a result is being assigned an error or non-error value.\r\n\r\n- Better type compatibility. Supports `util::Result<bilingual_str>` return values to hold translated messages which are not errors.\r\n\r\n- More standard and consistent API. `util::Result` supports most of the same operators and methods as `std::optional`. `BResult` had a less familiar interface with `HasRes`/`GetObj`/`ReleaseObj` methods. The Result/Res/Obj naming was also not internally consistent.\r\n\r\n- Better code organization. Puts `src/util/` code in the `util::` namespace so naming reflects code organization and it is obvious where the class is coming from. Drops \"B\" from name because it is undocumented what it stands for (bilingual?)\r\n\r\n- Has unit tests.\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25721",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25721",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25721.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25721.patch"
          },
          "closed_at": "2022-08-05T13:36:19Z",
          "created_at": "2022-07-27T19:26:41Z",
          "updated_at": "2022-08-09T06:13:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-07-30T02:06:31Z",
      "updated_at": "2022-07-30T02:06:31Z",
      "source": {
        "issue": {
          "id": 1243856335,
          "node_id": "PR_kwDOABII5844Oka6",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25183",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25183/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25183/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25183/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25183",
          "number": 25183,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Filter inputs by type during CoinSelection ",
          "body": "This PR adds a filter to the CoinControl to select only specific utxos by type. It allows the `fundrawtransaction` and `walletcreatefundedpsbt` rpc calls to filter inputs by type.\r\n\r\nCloses #25181.\r\n\r\n",
          "user": {
            "login": "aureleoules",
            "id": 22493292,
            "node_id": "MDQ6VXNlcjIyNDkzMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aureleoules",
            "html_url": "https://github.com/aureleoules",
            "followers_url": "https://api.github.com/users/aureleoules/followers",
            "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
            "organizations_url": "https://api.github.com/users/aureleoules/orgs",
            "repos_url": "https://api.github.com/users/aureleoules/repos",
            "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aureleoules/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25183",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25183",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25183.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25183.patch"
          },
          "closed_at": "2022-12-08T12:22:12Z",
          "created_at": "2022-05-21T03:44:14Z",
          "updated_at": "2022-12-08T12:22:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7103147065,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGnYWw5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7103147065",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-01T16:33:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7103985900,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGnbjjs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7103985900",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-01T18:44:18Z"
    },
    {
      "event": "labeled",
      "id": 7112364828,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGn7hMc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7112364828",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-02T18:37:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7114438208,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGoDbZA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7114438208",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T00:16:28Z"
    },
    {
      "event": "unlabeled",
      "id": 7114546583,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAGoD12X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7114546583",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-03T00:54:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 7136138971,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGpWNbb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7136138971",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-05T13:56:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7151122608,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGqPXiw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7151122608",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T00:00:10Z"
    },
    {
      "event": "unlabeled",
      "id": 7151472180,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAGqQs40",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7151472180",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T01:41:18Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T05:46:16Z",
      "updated_at": "2022-08-09T05:46:16Z",
      "source": {
        "issue": {
          "id": 1332409874,
          "node_id": "PR_kwDOABII584817t0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25806/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25806",
          "number": 25806,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: group outputs only once, decouple it from Coin Selection",
          "body": "The idea originates from https://github.com/bitcoin/bitcoin/pull/24845#issuecomment-1130310321.\r\n\r\nNote:\r\nFor clarity, it's recommended to start reviewing from the end result to understand the structure of the flow.\r\n\r\n#### GroupOutputs function rationale:\r\nIf \"Avoid Partial Spends\" is enabled, the function gathers outputs with the same script together inside a container. So Coin Selection can treats them as if them were just one possible input and either select them all or not select them. \r\n\r\n#### How the Inputs Fetch + Selection process roughly works:\r\n\r\n```\r\n1. Fetch user’s manually selected inputs.\r\n2. Fetch wallet available coins (walks through the entire wallet txes map) and insert them into a set of vectors (each vector store outputs from a single type).\r\n3. Coin Selection Process:\r\n   Call `AttemptSelection` 8 times. Each of them expands the coin eligibility filter (accepting a larger subset of coins in the calculation) until it founds a solutions or completely fails if no solutions gets founds after the 8 rounds.\r\n\r\n   Each `AttemptSelection` call performs the following actions:\r\n     - For each output type supported by the wallet (P2SH, P2PK, P2WPKH, P2WSH and a combination of all of them):\r\n       Call ‘ChooseSelectionResult’ providing the respective, filtered by type, coins vector. Which:\r\n           I. Groups the outputs vector twice (one for positive only and a second one who includes the negative ones as well).\r\n              - GroupOutputs walks-through the entire inputted coins vector one time at least, + more if we are avoiding partial spends, to generate a vector of OutputGroups.\r\n           II. Then performs every coin selection algorithm using the recently created vector of OutputGroup: (1) BnB, (2) knapsack and (3) SRD.\r\n           III. Then returns the best solution out of them.\r\n```\r\n\r\nWe perform the general operation of gathering outputs, with the same script, into a single container inside:\r\nEach coins selection attempt (8 times —> each coin eligibility filter), for each of the outputs vector who were filtered by type (plus another one joining all the outputs as well if needed), twice (one for the positive only outputs effective value and a second one for all of them).\r\n\r\nSo, in the worst case scenario where no solution is found after the 8 Coin Selection attempts, the `GroupOutputs` function is called 80 times (8 * 5 * 2).\r\n\r\n#### Improvements:\r\n\r\nThis proposal streamlines the process so that the output groups, filtered by coin eligibility and type, are created in a single loop outside of the Coin Selection Process. \r\n\r\nThe new process is as follows:\r\n\r\n```\r\n1. Fetch user’s manually selected inputs.\r\n2. Fetch wallet available coins.\r\n3. Group outputs by each coin eligibility filter and each different output type found.\r\n4. Coin Selection Process: \r\n   Call AttemptSelection 8 times. Each of them expands the coin eligibility filter (accepting different output groups) until it founds a solutions or completely fails if no solutions gets founds after the 8 rounds.\r\n   \r\n   Each ‘AttemptSelection’ call performs the following actions:\r\n      - For each output type supported by the wallet (P2SH, P2PK, P2WPKH, P2WSH and all of them):\r\n          A. Call ‘ChooseSelectionResult’ providing the respective, filtered by type, output group. Which:\r\n             I. Performs every coin selection algorithm using the provided vector of OutputGroup: (1) BnB, (2) knapsack and (3) SRD.\r\n             II. Then returns the best solution out of them.\r\n```\r\n\r\nExtra Note:\r\nThe next steps after this PR will be to:\r\n1) Merge `AvailableCoins` and `GroupOutputs` processes.\r\n2) Skip entire coin selection rounds if no new coins are added into the subsequent round.\r\n3) Remove global feerates from the OutputGroup class.\r\n4) Remove secondary \"grouped\" tx creation from `CreateTransactionInternal` by running Coin Selection results over the aps grouped outputs vs non-aps ones.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25806",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25806",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25806.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25806.patch"
          },
          "closed_at": "2023-03-06T23:52:42Z",
          "created_at": "2022-08-08T21:19:07Z",
          "updated_at": "2023-05-27T01:47:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T05:52:00Z",
      "updated_at": "2022-08-09T05:52:00Z",
      "source": {
        "issue": {
          "id": 1330861136,
          "node_id": "PR_kwDOABII5848wztq",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25796",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25796/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25796/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25796/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25796",
          "number": 25796,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: add `descriptorprocesspsbt` rpc",
          "body": "This PR implements an RPC called `descriptorprocesspsbt`. This RPC is based off of `walletprocesspsbt`, but instead of interacting with the wallet to update, sign and finalize a psbt, it instead accepts an array of output descriptors and uses that information along with information from the mempool, txindex, and the utxo set to do so. `utxoupdatepsbt` also updates a psbt in this manner, but doesn't sign or finalize it. Because of this overlap, a helper function that is added in this PR is called by both `utxoupdatepsbt` and `descriptorprocesspsbt`. Whether or not the helper function signs a psbt is dictated by if the HidingSigningProvider passed to it contains any private information. There is also a test added in this PR for this new RPC that uses p2wsh, p2wpkh, and legacy outputs. \r\nEdit: see https://github.com/bitcoin/bitcoin/pull/25796#issuecomment-1228830963",
          "user": {
            "login": "ishaanam",
            "id": 75942586,
            "node_id": "MDQ6VXNlcjc1OTQyNTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ishaanam",
            "html_url": "https://github.com/ishaanam",
            "followers_url": "https://api.github.com/users/ishaanam/followers",
            "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
            "organizations_url": "https://api.github.com/users/ishaanam/orgs",
            "repos_url": "https://api.github.com/users/ishaanam/repos",
            "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ishaanam/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignee": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "achow101",
              "id": 3782274,
              "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
              "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/achow101",
              "html_url": "https://github.com/achow101",
              "followers_url": "https://api.github.com/users/achow101/followers",
              "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
              "organizations_url": "https://api.github.com/users/achow101/orgs",
              "repos_url": "https://api.github.com/users/achow101/repos",
              "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/achow101/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25796",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25796",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25796.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25796.patch"
          },
          "closed_at": "2023-05-22T15:28:29Z",
          "created_at": "2022-08-06T22:27:59Z",
          "updated_at": "2023-05-22T16:56:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 7159275772,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGqueD8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7159275772",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-09T22:40:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7159921895,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGqw7zn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7159921895",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T02:12:58Z"
    },
    {
      "event": "unlabeled",
      "id": 7160043867,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAGqxZlb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7160043867",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-10T02:51:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7197294456,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGs_f94",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7197294456",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T13:30:14Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T20:37:06Z",
      "updated_at": "2022-08-16T20:37:06Z",
      "source": {
        "issue": {
          "id": 1322119635,
          "node_id": "PR_kwDOABII5848T94k",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25734",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25734/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25734/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25734/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25734",
          "number": 25734,
          "state": "closed",
          "state_reason": null,
          "title": "wallet, refactor: #24584 follow-ups",
          "body": "This PR is to address follow-ups for #24584, specifically:\r\n\r\n* Remove redundant, hard-to-read code by adding a new `OutputType` and adding shuffle, erase, and push_back methods for `CoinsResult`\r\n* Add missing `BOOST_ASSERT` to unit test\r\n* Ensure functional test only runs if using descriptor wallets\r\n* Improve readability of `AttemptSelection` by removing triple-nested if statement\r\n\r\nNote for reviewers: commit `refactor: add new helper methods` should throw an \"unused function warning\"; the function is used in the next commit. Also, commit `wallet: switch to new shuffle, erase, push_back` will fail to compile, but this is fixed in the next commit with a scripted-diff. the commits are separate like this (code change then scripted-diff) to improve legibility.\r\n",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25734",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25734",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25734.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25734.patch"
          },
          "closed_at": "2022-08-17T00:00:45Z",
          "created_at": "2022-07-29T11:16:21Z",
          "updated_at": "2022-08-18T19:49:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-16T20:43:00Z",
      "updated_at": "2022-08-16T20:43:00Z",
      "source": {
        "issue": {
          "id": 1320863837,
          "node_id": "PR_kwDOABII5848PxGI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25729",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25729/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25729/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25729/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25729",
          "number": 25729,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Check max transaction weight in CoinSelection",
          "body": "This PR is an attempt to fix #5782.\r\n\r\nI have added 4 test scenarios, 3 of them provided here https://github.com/bitcoin/bitcoin/issues/5782#issuecomment-73819058 (slightly modified to use a segwit wallet).\r\n\r\nHere are my benchmarks : \r\n## PR\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        1,466,341.00 |              681.97 |    0.6% |   11,176,762.00 |    3,358,752.00 |  3.328 |   1,897,839.00 |    0.3% |      0.02 | `CoinSelection`\r\n\r\n## Master\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        1,526,029.00 |              655.30 |    0.5% |   11,142,188.00 |    3,499,200.00 |  3.184 |   1,994,156.00 |    0.2% |      0.02 | `CoinSelection`",
          "user": {
            "login": "aureleoules",
            "id": 22493292,
            "node_id": "MDQ6VXNlcjIyNDkzMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aureleoules",
            "html_url": "https://github.com/aureleoules",
            "followers_url": "https://api.github.com/users/aureleoules/followers",
            "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
            "organizations_url": "https://api.github.com/users/aureleoules/orgs",
            "repos_url": "https://api.github.com/users/aureleoules/repos",
            "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aureleoules/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25729",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25729",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25729.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25729.patch"
          },
          "closed_at": "2022-12-06T17:09:51Z",
          "created_at": "2022-07-28T12:33:06Z",
          "updated_at": "2023-01-12T11:51:43Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1217295752,
      "node_id": "IC_kwDOABII585IjnWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1217295752",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T00:09:55Z",
      "updated_at": "2022-08-17T00:09:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "This PR has been updated with a new silent payment version, which eliminates some manual steps from the previous version (such as the need to set the `keypool` to avoid costly multi-key scan).\r\n\r\nThis is achieved by using a new descriptor type (`sp()`) that has no range and contains exactly one key.\r\n\r\nExample: `sp(cQq73sG9....JD51uaRD)#9llg6xjm`\r\n\r\nThis descriptor introduces a new type of output:  `silent-payment`. This output type returns a standard Taproot script (Segwit V1), but with HRP changed from `bc` to  `sp` on the mainnet (or `tsp` on testnet and signet).\r\n\r\nThis output type will always generate the same address (unless another `sp` descriptor is enabled on the same wallet).\r\n\r\n```bash\r\n$ ./src/bitcoin-cli -signet getnewaddress '' 'silent-payment'\r\ntsp1pfmjyl7ecpmx8yf8cu6g3ez36jy7s9mzuh5pdnal3k0n588uzgmfs4s4fws\r\n```\r\n\r\nTo create a silent transaction, simply use the silent payment address as one of the outputs. \r\nThe `send` RPC will automatically identify and tweak it.\r\n\r\nThe transaction can contain multiple outputs, combining silent and standard addresses.\r\n\r\nI have written a step by step signet tutorial so reviewers can test this new version easily.\r\nhttps://gist.github.com/w0xlt/a7b498ac1ff14b8c292a22be789bd93f",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1217295752",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "labeled",
      "id": 7201393534,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGtPIt-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7201393534",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T00:44:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T03:56:41Z",
      "updated_at": "2022-08-17T03:56:41Z",
      "source": {
        "issue": {
          "id": 666560839,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDU3MzgyMzM0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19602",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19602/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19602/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19602/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19602",
          "number": 19602,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Migrate legacy wallets to descriptor wallets",
          "body": "This PR adds a new `migratewallet` RPC which migrates a legacy wallet to a descriptor wallet. Migrated wallets will need a new backup. If a wallet has watchonly stuff in it, a new watchonly descriptor wallet will be created containing those watchonly things. The related transactions, labels, and descriptors for those watchonly things will be removed from the original wallet. Migrated wallets will not have any of the legacy things be available for fetching from `getnewaddress` or `getrawchangeaddress`. Wallets that have private keys enabled will have newly generated descriptors. Wallets with private keys disabled will not have any active `ScriptPubKeyMan`s.\r\n\r\nFor the basic HD wallet case of just generated keys, in addition to the standard descriptor wallet descriptors using the master key derived from the pre-existing hd seed, the migration will also create 3 descriptors for each HD chain in: a ranged combo external, a ranged combo internal, and a single key combo for the seed (the seed is a valid key that we can receive coins at!). The migrated wallet will then have newly generated descriptors as the active `ScriptPubKeyMan`s. This is equivalent to creating a new descriptor wallet and importing the 3 descriptors for each HD chain. For wallets containing non-HD keys, each key will have its own combo descriptor.\r\n\r\nThere are also tests.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": false,
          "comments": 50,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19602",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19602",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19602.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19602.patch"
          },
          "closed_at": "2022-09-01T19:44:11Z",
          "created_at": "2020-07-27T20:22:25Z",
          "updated_at": "2023-03-13T22:00:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7205718132,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGtfoh0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7205718132",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T12:47:57Z"
    },
    {
      "event": "unlabeled",
      "id": 7205976720,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAGtgnqQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7205976720",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T13:20:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1218022393,
      "node_id": "IC_kwDOABII585ImYv5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218022393",
      "actor": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T13:37:45Z",
      "updated_at": "2022-08-17T13:37:45Z",
      "author_association": "NONE",
      "body": "is the idea of a scanning key included in this? I would have expected `sp(...)` to contain 64 bytes (two xonly keys).",
      "user": {
        "login": "LLFourn",
        "id": 3734083,
        "node_id": "MDQ6VXNlcjM3MzQwODM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3734083?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LLFourn",
        "html_url": "https://github.com/LLFourn",
        "followers_url": "https://api.github.com/users/LLFourn/followers",
        "following_url": "https://api.github.com/users/LLFourn/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/LLFourn/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/LLFourn/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/LLFourn/subscriptions",
        "organizations_url": "https://api.github.com/users/LLFourn/orgs",
        "repos_url": "https://api.github.com/users/LLFourn/repos",
        "events_url": "https://api.github.com/users/LLFourn/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/LLFourn/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218022393",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1218159758,
      "node_id": "IC_kwDOABII585Im6SO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218159758",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T15:24:59Z",
      "updated_at": "2022-08-17T15:24:59Z",
      "author_association": "NONE",
      "body": "I think there is a use case for multiple SP addresses and this is probably what @luke-jr meant. Let's say I work on two Open Source projects. I could post the same SP address for both but it'd be nicer to post a separate SP address for each. Then I would be able to determine how much people appreciate each project. Perhaps most donations go only to one of them so I should focus on that one? It may be an advanced use case but a very reasonable one. I'd myself definitely prefer this over having one address.",
      "user": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218159758",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7207057078,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGtkva2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207057078",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T15:24:59Z"
    },
    {
      "event": "subscribed",
      "id": 7207057091,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGtkvbD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207057091",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T15:24:59Z"
    },
    {
      "event": "commented",
      "id": 1218217369,
      "node_id": "IC_kwDOABII585InIWZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218217369",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:03:06Z",
      "updated_at": "2022-08-17T16:03:06Z",
      "author_association": "MEMBER",
      "body": "Many people don't receive only donations. If you have multiple clients, you need a different address for each so you know who is paying you.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218217369",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1218217431,
      "node_id": "IC_kwDOABII585InIXX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218217431",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:03:09Z",
      "updated_at": "2022-08-17T16:03:09Z",
      "author_association": "NONE",
      "body": "@Kixunil 2 wallets (different silent payment address) for 2 projects would also make sense ",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218217431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7207386164,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGtl_w0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207386164",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:03:09Z"
    },
    {
      "event": "subscribed",
      "id": 7207386167,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGtl_w3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207386167",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:03:09Z"
    },
    {
      "event": "commented",
      "id": 1218220136,
      "node_id": "IC_kwDOABII585InJBo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218220136",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:05:32Z",
      "updated_at": "2022-08-17T16:05:32Z",
      "author_association": "NONE",
      "body": "> Many people don't receive only donations. If you have multiple clients, you need a different address for each so you know who is paying you.\r\n\r\n@luke-jr client could share txid in which he sent the payment ",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218220136",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7207403568,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGtmEAw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207403568",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:05:32Z"
    },
    {
      "event": "subscribed",
      "id": 7207403577,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGtmEA5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207403577",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:05:32Z"
    },
    {
      "event": "commented",
      "id": 1218231718,
      "node_id": "IC_kwDOABII585InL2m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218231718",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:16:15Z",
      "updated_at": "2022-08-17T16:16:15Z",
      "author_association": "NONE",
      "body": "@luke-jr indeed, though you could already send a different xpub to each client and avoid some scanning costs. SP address may be nicer though, not sure.\r\n\r\n@1440000bytes yes, those hacks are available but I'd prefer to avoid such hacks because they significantly degrade UX.",
      "user": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218231718",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7207480209,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGtmWuR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207480209",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:16:15Z"
    },
    {
      "event": "subscribed",
      "id": 7207480215,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGtmWuX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207480215",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:16:15Z"
    },
    {
      "event": "mentioned",
      "id": 7207480220,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGtmWuc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207480220",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:16:15Z"
    },
    {
      "event": "subscribed",
      "id": 7207480224,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGtmWug",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207480224",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:16:15Z"
    },
    {
      "event": "commented",
      "id": 1218245487,
      "node_id": "IC_kwDOABII585InPNv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218245487",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:28:50Z",
      "updated_at": "2022-08-17T16:28:50Z",
      "author_association": "NONE",
      "body": "> @1440000bytes yes, those hacks are available but I'd prefer to avoid such hacks because they significantly degrade UX.\r\n\r\nNot sure I would consider it hack because it makes things simple. Even BIP 47 has one reusable code per wallet so I would find it confusing to have multiple silent payment address in the same wallet. Although no strong opinion and won't mind anything as long as silent payment address is available in core.",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218245487",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7207564810,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGtmrYK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207564810",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:28:50Z"
    },
    {
      "event": "subscribed",
      "id": 7207564820,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGtmrYU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7207564820",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:28:50Z"
    },
    {
      "event": "commented",
      "id": 1218258776,
      "node_id": "IC_kwDOABII585InSdY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218258776",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T16:41:56Z",
      "updated_at": "2022-08-17T16:41:56Z",
      "author_association": "NONE",
      "body": "* May make spending funds together impossible/difficult\r\n* Managing multiple wallets is PITA\r\n* Sending txid is just more work for humans that computers could do instead\r\n\r\nI think these are enough reasons to at least support multiple addresses in *descriptors* and leaving it up to wallets to decide whether to provide support for more than one in GUI/CLI/...",
      "user": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218258776",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7208663012,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGtq3fk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7208663012",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T19:23:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7209138500,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGtsrlE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7209138500",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T20:45:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7209606241,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGtudxh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7209606241",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T22:36:12Z"
    },
    {
      "event": "commented",
      "id": 1218576871,
      "node_id": "IC_kwDOABII585IogHn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218576871",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T22:55:22Z",
      "updated_at": "2022-08-17T22:55:22Z",
      "author_association": "MEMBER",
      "body": "> client could share txid in which he sent the payment\r\n\r\nAnyone could claim to have sent it. There is still no proof-of-sender in Bitcoin, and it doesn't look like anyone is working on it.\r\n\r\nEven if it were possible, it'd still be a pain - this kind of thing should \"just work\" and label transactions, without extra steps from the users.\r\n\r\n>Even BIP 47 has one reusable code per wallet\r\n\r\nBIP 47 was a bad design that shouldn't be implemented nor imitated...\r\n\r\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218576871",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1218630414,
      "node_id": "IC_kwDOABII585IotMO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218630414",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T23:20:59Z",
      "updated_at": "2022-08-17T23:20:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "The default behavior for most descriptors is to be ranged and therefore support multiple addresses.\r\nIf the idea is to have multiple `sp` addresses, a ranged `sp` version is sufficient (and is easier to implement than the current version).\r\n\r\nThe decision to use a rangeless descriptor is for validation purposes.\r\nVerification of silent payments is costly. And if the user inadvertently generates multiple `sp` addresses, the overhead can be prohibitive.\r\nUntil there are more reliable statistics on how many `sp` addresses a node (even on a raspberrey) can process (from mempool and when loading wallets), I think it's prudent to keep only one active address per wallet.\r\n\r\nThe label issue shouldn't be complicated, I think. \r\nUTXO can inherit the same label assigned to the `sp` address or descriptor.\r\nI can work on that in the next iteration.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218630414",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1218641521,
      "node_id": "IC_kwDOABII585Iov5x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1218641521",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T23:26:41Z",
      "updated_at": "2022-08-17T23:28:53Z",
      "author_association": "NONE",
      "body": ">I think there is a use case for multiple SP addresses\r\n\r\n@Kixunil good point about wanting to identify the reason for the payment. Naively, the issue is that two keys means twice the scanning, but an interesting alternative would be to simply use the same key (assuming you're OK with using the same identity) but add a public identifier `f` to it when tweaking. So instead of `hash(i*X)*G + X` you get `hash(i*X)*G + X + f*G `. This means every additional \"address\" only costs one additional ECC addition when scanning (relatively cheap compared to doing ECC multiplications).\r\n\r\nThe main downside with this is that `f` becomes crucial for recovering from backup. If we set `f` as an index (0, 1, 2, 3...) then you'd only have to remember how many \"addresses\" you issued (and perhaps overshoot when unsure) to ensure recovery of funds, though of course you'd rather also remember which index is associated with what payment reason.\r\n\r\nAbsolute worst case scenario you could even do something similar to the gap limit where you scan the full history (not just the UTXO set so you don't miss spent outputs) with a default max index of e.g. 100, and then if you find out most of them are in use, you scan the next 100, etc. Costly, but thorough, and only needed as a last resort.",
      "user": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218641521",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7209772831,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAGtvGcf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7209772831",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T23:26:42Z"
    },
    {
      "event": "subscribed",
      "id": 7209772836,
      "node_id": "SE_lADOABII585H5eBJzwAAAAGtvGck",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7209772836",
      "actor": {
        "login": "Kixunil",
        "id": 1178779,
        "node_id": "MDQ6VXNlcjExNzg3Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1178779?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Kixunil",
        "html_url": "https://github.com/Kixunil",
        "followers_url": "https://api.github.com/users/Kixunil/followers",
        "following_url": "https://api.github.com/users/Kixunil/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Kixunil/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Kixunil/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Kixunil/subscriptions",
        "organizations_url": "https://api.github.com/users/Kixunil/orgs",
        "repos_url": "https://api.github.com/users/Kixunil/repos",
        "events_url": "https://api.github.com/users/Kixunil/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Kixunil/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-17T23:26:42Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-18T21:26:08Z",
      "updated_at": "2022-08-18T21:26:08Z",
      "source": {
        "issue": {
          "id": 1343552131,
          "node_id": "PR_kwDOABII5849aokZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25869",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25869/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25869/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25869/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25869",
          "number": 25869,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: remove UNKNOWN type from OUTPUT_TYPES array",
          "body": "Fixing https://github.com/bitcoin/bitcoin/pull/25734#discussion_r949502998 ->  https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=50329\r\n\r\nThe `OUTPUT_TYPES` array contain the known active output types only.\r\nAnd it's solely used to create/walk-through the active spkms.\r\n\r\nSo, no need to add the `UNKNOWN` type here.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25869",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25869",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25869.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25869.patch"
          },
          "closed_at": "2022-08-19T16:02:00Z",
          "created_at": "2022-08-18T19:49:04Z",
          "updated_at": "2023-05-27T01:47:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T12:47:49Z",
      "updated_at": "2022-08-19T12:47:49Z",
      "source": {
        "issue": {
          "id": 1344171175,
          "node_id": "PR_kwDOABII5849crWA",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25872",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25872/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25872/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25872/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25872",
          "number": 25872,
          "state": "closed",
          "state_reason": null,
          "title": "Fix issues when calling std::move(const&)",
          "body": "Passing a symbol to `std::move` that is marked `const` is a no-op, which can be fixed in two ways:\r\n\r\n* Remove the `const`, or\r\n* Remove the `std::move`",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25872",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25872",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25872.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25872.patch"
          },
          "closed_at": "2022-08-31T07:38:44Z",
          "created_at": "2022-08-19T09:12:17Z",
          "updated_at": "2022-09-01T16:13:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 7224067201,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGuloSB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7224067201",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-19T17:51:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7225716841,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAGur7Bp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7225716841",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-20T01:59:14Z"
    },
    {
      "event": "unlabeled",
      "id": 7225733072,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAGur-_Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7225733072",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-20T02:14:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T01:18:33Z",
      "updated_at": "2022-08-23T01:18:33Z",
      "source": {
        "issue": {
          "id": 1347108338,
          "node_id": "PR_kwDOABII5849mUDu",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25907/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25907",
          "number": 25907,
          "state": "open",
          "state_reason": null,
          "title": "wallet: rpc to add automatically generated descriptors",
          "body": "It is useful to have a RPC that can create and add the automatically generated descriptors (that are normally made during creation) to a wallet. This is especially useful when a new default descriptor has been implemented as it allows wallets created before that time to quickly and easily add that type of descriptor.\r\n\r\nIn particular, descriptor wallets created before Taproot was implemented can use the new `createwalletdescriptor` RPC in order to get a Taproot descriptor.\r\n\r\nFurthermore, to keep the newly generated descriptor in line with the existing descriptors, this PR uses #26728 as it exposes a \"wallet extended key\" for us (in addition to upgrading wallets implemented prior to have a wallet xpub). The newly generated descriptors will use the \"wallet extended key\" stored in `CWallet` that PR adds.\r\n\r\n`createwalletdescriptor` is generic and so it can also be used with the other address types. Of course, it given the same wallet extended key, address type, and internal-ness, it will create the same descriptor. So some refactoring has been done in order to detect that the same descriptor is about to be created, and to avoid overwriting any existing descriptors.\r\n\r\nTo be able to use `createwalletdescriptor` with the other address types, we need a way to change the wallet extended key, and so `sethdseed` has been updated and enabled for descriptor wallets. As with legacy wallets, when called without parameters, it will generate a new random master key for the wallet. It can also take a xprv and set that as the master key. It still takes a BIP 32 seed as WIF or as hex as we do for legacy wallets. The seed will be transformed into and stored as a BIP 32 extended key. The latter is to give us greater compatibility with other wallets which often produce non-WIF HD seeds.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25907",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25907",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25907.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25907.patch"
          },
          "created_at": "2022-08-22T23:17:45Z",
          "updated_at": "2023-08-01T11:47:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 7294756909,
      "node_id": "LE_lADOABII585H5eBJzwAAAAGyzSgt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7294756909",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-31T09:30:54Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1233819035,
      "node_id": "IC_kwDOABII585JipWb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1233819035",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T06:45:37Z",
      "updated_at": "2022-09-01T06:45:37Z",
      "author_association": "NONE",
      "body": "> This PR has been updated with a new silent payment version, which eliminates some manual steps from the previous version (such as the need to set the `keypool` to avoid costly multi-key scan).\r\n> \r\n> This is achieved by using a new descriptor type (`sp()`) that has no range and contains exactly one key.\r\n> \r\n> Example: `sp(cQq73sG9....JD51uaRD)#9llg6xjm`\r\n> \r\n> This descriptor introduces a new type of output: `silent-payment`. This output type returns a standard Taproot script (Segwit V1), but with HRP changed from `bc` to `sp` on the mainnet (or `tsp` on testnet and signet).\r\n> \r\n> This output type will always generate the same address (unless another `sp` descriptor is enabled on the same wallet).\r\n> \r\n> ```shell\r\n> $ ./src/bitcoin-cli -signet getnewaddress '' 'silent-payment'\r\n> tsp1pfmjyl7ecpmx8yf8cu6g3ez36jy7s9mzuh5pdnal3k0n588uzgmfs4s4fws\r\n> ```\r\n> \r\n> To create a silent transaction, simply use the silent payment address as one of the outputs. The `send` RPC will automatically identify and tweak it.\r\n> \r\n> The transaction can contain multiple outputs, combining silent and standard addresses.\r\n> \r\n> I have written a step by step signet tutorial so reviewers can test this new version easily. https://gist.github.com/w0xlt/a7b498ac1ff14b8c292a22be789bd93f\r\n\r\nTested the new version and everything worked fine except scanning UTXO set: https://gist.github.com/w0xlt/a7b498ac1ff14b8c292a22be789bd93f?permalink_comment_id=4286510#gistcomment-4286510\r\n\r\nI have updated the steps I followed here in tutorial section: https://silentbitco.in/\r\n\r\nUpdated the new silent payment address in DNS as TXT record: [`tsp1pkr8e083j7vp0w82ry5s53rz3t26yf0p8dzg7gqs53r6y399kyw4qa8z52y`](https://mxtoolbox.com/SuperTool.aspx?action=txt%3aalice.silentbitco.in)\r\n\r\n---\r\n\r\nSuggestion: We could add a new RPC command to create silent payment address instead of using `getnewaddress`. So the CLI command would look like this:\r\n\r\n```\r\n$ bitcoin-cli getspaddress\r\n```",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1233819035",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7317778274,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG0LG9i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7317778274",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-04T01:52:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7317788093,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG0LJW9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7317788093",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-04T02:08:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7317870742,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG0LdiW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7317870742",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-04T03:44:02Z"
    },
    {
      "event": "unlabeled",
      "id": 7317906702,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAG0LmUO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7317906702",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-04T03:59:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7317934640,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG0LtIw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7317934640",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-04T04:22:38Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-08T18:30:56Z",
      "updated_at": "2022-09-08T18:30:56Z",
      "source": {
        "issue": {
          "id": 1363250311,
          "node_id": "PR_kwDOABII584-cCAO",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26021",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26021/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26021/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26021/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26021",
          "number": 26021,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: bugfix, load a wallet with an unknown/corrupt descriptor causes a fatal error",
          "body": "Fixes #26015\r\n\r\nIf the descriptor entry is unrecognized (due a soft downgrade) or corrupt, the\r\nunserialization fails and `LoadWallet`, instead of stop there and return the error,\r\ncontinues reading all the db records. As other records tied to the unrecognized\r\nor corrupt descriptor are scanned, a fatal error is being thrown.\r\n\r\nThis fixes it by catching the descriptor parse failure and return which wallet failed.\r\nLogging its name/path, so the user can remove it from the settings file, to prevent\r\nits load at startup.\r\n\r\nNote: added the test in a separate file intentionally.\r\nWill continue adding coverage for the wallet load process in follow-up PRs.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/54",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/54/labels",
            "id": 7150037,
            "node_id": "MI_kwDOABII584AbRnV",
            "number": 54,
            "state": "closed",
            "title": "24.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 159,
            "created_at": "2021-09-14T08:27:02Z",
            "updated_at": "2022-11-29T15:44:44Z",
            "closed_at": "2022-11-29T15:44:44Z"
          },
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26021",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26021",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26021.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26021.patch"
          },
          "closed_at": "2022-09-13T15:52:52Z",
          "created_at": "2022-09-06T12:59:37Z",
          "updated_at": "2023-05-27T01:47:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 7378354211,
      "node_id": "LE_lADOABII585H5eBJzwAAAAG3yMAj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7378354211",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T16:35:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1245687307,
      "node_id": "IC_kwDOABII585KP64L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245687307",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T16:56:20Z",
      "updated_at": "2022-09-13T16:56:56Z",
      "author_association": "NONE",
      "body": "@w0xlt can you rebase? \r\n\r\n> The purpose of this PR is not a final version, but to start the discussion and get benchmarks based on a real implementation.\r\n\r\n> T> his version is built on top of https://github.com/bitcoin-core/secp256k1/pull/994 (bitcoin-core/secp256k1) for x-only ECDH support and https://github.com/bitcoin/bitcoin/pull/23480 (bitcoin/bitcoin) for rawtr(). Each new silent transaction detected is stored in wallet as a rawtr() descriptor.\r\n\r\nCan you confirm this is one of the version that can be used for bitcoin?",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1245687307",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7378493821,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG3yuF9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7378493821",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T16:56:21Z"
    },
    {
      "event": "subscribed",
      "id": 7378493834,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG3yuGK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7378493834",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T16:56:21Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T20:56:21Z",
      "updated_at": "2022-09-13T20:56:21Z",
      "source": {
        "issue": {
          "id": 1268397893,
          "node_id": "PR_kwDOABII5845gosZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25344",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25344/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25344/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25344/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25344",
          "number": 25344,
          "state": "closed",
          "state_reason": null,
          "title": "New `outputs` argument for `bumpfee`/`psbtbumpfee`",
          "body": "This implements a modification of the proposal in #22007: instead of **adding** outputs to the set of outputs in the original transaction, the outputs given by `outputs` argument **completely replace** the outputs in the original transaction. \r\n\r\nAs noted below, this makes it easier to \"cancel\" a transaction or to reduce the amounts in the outputs, which is not the case with the original proposal in #22007, but it seems from the discussion in this PR that the **replace** behavior is more desirable than **add** one.",
          "user": {
            "login": "rodentrabies",
            "id": 7646953,
            "node_id": "MDQ6VXNlcjc2NDY5NTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7646953?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rodentrabies",
            "html_url": "https://github.com/rodentrabies",
            "followers_url": "https://api.github.com/users/rodentrabies/followers",
            "following_url": "https://api.github.com/users/rodentrabies/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/rodentrabies/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/rodentrabies/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/rodentrabies/subscriptions",
            "organizations_url": "https://api.github.com/users/rodentrabies/orgs",
            "repos_url": "https://api.github.com/users/rodentrabies/repos",
            "events_url": "https://api.github.com/users/rodentrabies/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/rodentrabies/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 29,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25344",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25344",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25344.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25344.patch"
          },
          "closed_at": "2023-02-16T18:48:01Z",
          "created_at": "2022-06-11T23:49:29Z",
          "updated_at": "2023-02-17T10:11:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-13T22:57:18Z",
      "updated_at": "2022-09-13T22:57:18Z",
      "source": {
        "issue": {
          "id": 1167366626,
          "node_id": "PR_kwDOABII5840WLLa",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24545",
          "number": 24545,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Enable v2 P2P encrypted transport",
          "body": "This PR brings together all other BIP324 PRs and enables v2 encrypted P2P transport.\r\n\r\nBuilds on top of PRs: #25361, #23233, #23561, #23432. It looks like there's a lot of commits, but **only the last 12 commits belong in this PR**. The rest will be merged with upstream PRs.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).\r\n\r\nBIP324 is [here](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki).\r\n\r\n### Running a v2 node\r\n#### Get the code\r\n```\r\ngit remote add bip324 git@github.com:dhruv/bitcoin.git\r\ngit fetch bip324\r\ngit checkout bip324/bip324-enable\r\n```\r\n\r\n#### Build for your OS\r\n\r\nFollow the appropriate instructions [here](https://github.com/bitcoin/bitcoin/blob/master/doc/README.md)\r\n\r\n#### Run the node\r\n\r\n```\r\nsrc/bitcoind -conf=CONFIG_FILE -v2transport=1\r\n```\r\n\r\n#### Connect with a friend's v2 node\r\n```\r\nsrc/bitcoin-cli -conf=CONFIG_FILE addnode \"FRIEND_IP:FRIEND_PORT\" \"add\" true\r\n```\r\nThe last parameter(`p2p_v2:true`) signals to your node that the peer is running a v2 supportive client and we should attempt to make an encrypted P2P connection (you're simulating the `NODE_P2P_V2` service flag advertisement manually). Should that fail however (say because the peer told you mistakenly, lied, etc.), this code will downgrade the connection to unencrypted v1 transport.\r\n\r\n### Things you are helpful to test\r\n\r\n* If your friend's node is a v2 node, you can see with wireshark that the bytes are pseudorandom (the easiest way to confirm this is that with a v1 connection, wireshark will tell you it has detected a Bitcoin connection and it'll even parse out the metadata like message type, etc; with v2, wireshark has no idea -- of course that _could_ be because wireshark does simply not know v2, but it is because the bytestream is pseudorandom)\r\n* Compare the v2 encrypted session id exposed via `getpeerinfo` as `v2_session_id` with your friend.\r\n* Add another peer that is actually v1, but try `addnode` still indicating v2 support. You should see with wireshark that after a failed attempt at a v2 handshake, the connection is downgraded to unencrypted v1 and wireshark can parse it.\r\n\r\nI've been told there are v2 nodes running at (happy to update the list as more people run persistent v2 nodes; message me and I'll add it here):\r\n```\r\nbe.anyone.eu.org\r\nrp7k2go3s5lyj3fnj6zn62ktarlrsft2ohlsxkyd7v3e3idqyptvread.onion:8333\r\njdcoysubtxazi7dketpyb5rnjorvxad4onftveohash2pdwkgw4bvnqd.onion:8333\r\nxci6cphki2pdb5qe7axzrcxcxabkbm24z4zlv2hn4ziy6grquqco2kyd.onion:8333\r\nslvtesfgg3mkksqqzh67al4sq6dx3rhlzqepa4ny7jonzuckg6msf3id.onion:8333\r\ngifm4fnj3vua664xhgeanx5fnpco3txkqy4amr4txbfsciiyrkxpf2qd.onion:8333\r\n300:5ecb:6b8a:d837::3:8333\r\n300:5ecb:6b8a:d837::a6d6:8333\r\n2001:470:1f1a:365::2:8333\r\n2001:470:1f1b:365:aa20:66ff:fe3f:1909:8333\r\n184.74.240.157:8533\r\n95.179.145.232:8333\r\n```",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 47,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24545",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24545",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24545.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24545.patch"
          },
          "closed_at": "2023-05-06T11:14:46Z",
          "created_at": "2022-03-12T18:43:06Z",
          "updated_at": "2023-05-06T11:14:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7395302834,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG4y12y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7395302834",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T13:59:43Z"
    },
    {
      "event": "unlabeled",
      "id": 7395979536,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAG41bEQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7395979536",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T15:12:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7398153482,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG49t0K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7398153482",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-15T20:31:54Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-16T11:22:52Z",
      "updated_at": "2022-09-16T11:22:52Z",
      "source": {
        "issue": {
          "id": 1375810043,
          "node_id": "I_kwDOABII585SATH7",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26108",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26108/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26108/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26108/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/26108",
          "number": 26108,
          "state": "closed",
          "state_reason": "completed",
          "title": "ci ERROR: Commit: Failed to commit latest coinstatsindex state",
          "body": "This error happened in a push in https://github.com/bitcoin/bitcoin/pull/24897\r\n\r\nI pushed the code again `git commit --amend` and didn't happen.\r\nIt seems to be intermittent.\r\n\r\nhttps://cirrus-ci.com/task/6073485217759232?logs=ci#L3237\r\n\r\n```\r\n2022-09-15T14:46:12.481366Z (mocktime: 2020-08-31T15:34:12Z) [coinstatsindex] [util/system.h:50] [error] ERROR: Commit: Failed to commit latest coinstatsindex state\r\n...\r\nSUMMARY: ThreadSanitizer: data race on vptr (ctor/dtor vs virtual call) src/index/base.cpp:69:1 in BaseIndex::~BaseIndex()\r\n```",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "closed_at": "2022-09-16T11:57:23Z",
          "created_at": "2022-09-16T11:22:52Z",
          "updated_at": "2022-09-16T15:09:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-17T04:49:05Z",
      "updated_at": "2022-09-17T04:49:05Z",
      "source": {
        "issue": {
          "id": 1373335829,
          "node_id": "PR_kwDOABII584-9qkD",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26094",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26094/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26094/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26094/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26094",
          "number": 26094,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Return block hash & height in getbalances, gettransaction and getwalletinfo",
          "body": "Reopens #18570 and closes #18567.\r\nI have rebased the original PR.\r\nNot sure why the original got closed as it was about to get merged.\r\n",
          "user": {
            "login": "aureleoules",
            "id": 22493292,
            "node_id": "MDQ6VXNlcjIyNDkzMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aureleoules",
            "html_url": "https://github.com/aureleoules",
            "followers_url": "https://api.github.com/users/aureleoules/followers",
            "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
            "organizations_url": "https://api.github.com/users/aureleoules/orgs",
            "repos_url": "https://api.github.com/users/aureleoules/repos",
            "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aureleoules/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26094",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26094",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26094.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26094.patch"
          },
          "closed_at": "2023-05-02T15:51:07Z",
          "created_at": "2022-09-14T17:21:15Z",
          "updated_at": "2023-05-02T15:51:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-17T15:42:02Z",
      "updated_at": "2022-09-17T15:42:02Z",
      "source": {
        "issue": {
          "id": 1372085879,
          "node_id": "PR_kwDOABII584-5efF",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26082",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26082/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26082/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26082/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26082",
          "number": 26082,
          "state": "open",
          "state_reason": null,
          "title": "RPC/Wallet: Access wallets via interfaces::Wallet",
          "body": "This is a minimal \"step 1\" to migrating wallet RPC methods to access via the abstract interfaces. Only trivial methods are ported at this stage.\r\n\r\nLong term goal is to support different actual wallet classes (in particular, core-lighting wallets) which won't have remotely the same internals as Bitcoin Core wallets.",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26082",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26082",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26082.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26082.patch"
          },
          "created_at": "2022-09-13T22:51:51Z",
          "updated_at": "2023-05-07T00:14:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1250335151,
      "node_id": "IC_kwDOABII585Khpmv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1250335151",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-18T15:48:37Z",
      "updated_at": "2022-09-18T15:48:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "@1440000bytes Done.\r\n\r\nI am not sure I understand your question. The idea of current implementation is to be used with Bitcoin.\r\nI'm evaluating the possibility of including more than one `sp` address per wallet, but that would be a future change .",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1250335151",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7409110431,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG5ng2f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7409110431",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-18T15:48:37Z"
    },
    {
      "event": "subscribed",
      "id": 7409110436,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG5ng2k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7409110436",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-18T15:48:37Z"
    },
    {
      "event": "commented",
      "id": 1250336244,
      "node_id": "IC_kwDOABII585Khp30",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1250336244",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-18T15:55:21Z",
      "updated_at": "2022-09-18T15:55:21Z",
      "author_association": "NONE",
      "body": "Sorry I forgot to mention 'mainnet' after bitcoin. Wanted to know if this version is good enough for mainnet and what else could be done to get more reviews and eventually get this merged before v25.0",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1250336244",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T07:49:11Z",
      "updated_at": "2022-09-20T07:49:11Z",
      "source": {
        "issue": {
          "id": 1378661201,
          "node_id": "PR_kwDOABII584_PH3H",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26129",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26129/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26129/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26129/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26129",
          "number": 26129,
          "state": "closed",
          "state_reason": null,
          "title": "wallet, refactor: FundTransaction(): return out-params as `util::Result` structure",
          "body": "This PR cleans up the interfaces of the `FundTransaction` functions by returning the out-parameters (fee, change output, error) as `util::Result` with a newly created structure `FundedTransactionResult`. It can be seen as a late follow-up to #20640 which did a similar operation to the `CreateTransaction{Internal}` functions. Note that there are actually two functions `FundTransaction` with the same name:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/0b02ce914e8594e8938e527c91c07f57def4e943/src/wallet/spend.h#L160\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/0b02ce914e8594e8938e527c91c07f57def4e943/src/wallet/rpc/spend.cpp#L489\r\n\r\nOnly the first returns an error and hence needs to be wrapped into `util::Result`, the other one can directly return the result structure.",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26129",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26129",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26129.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26129.patch"
          },
          "closed_at": "2023-04-25T15:58:15Z",
          "created_at": "2022-09-20T00:13:21Z",
          "updated_at": "2023-04-25T15:58:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-20T15:41:12Z",
      "updated_at": "2022-09-20T15:41:12Z",
      "source": {
        "issue": {
          "id": 1360707418,
          "node_id": "PR_kwDOABII584-TvTS",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25991",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25991/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25991/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25991/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25991",
          "number": 25991,
          "state": "open",
          "state_reason": null,
          "title": "Wallet: Add foreign_outputs metadata to support CoinJoin transactions",
          "body": "Fixes #14136\r\n\r\nDoes not fix GUI (can be done in GUI-side PR afterward)",
          "user": {
            "login": "luke-jr",
            "id": 1095675,
            "node_id": "MDQ6VXNlcjEwOTU2NzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luke-jr",
            "html_url": "https://github.com/luke-jr",
            "followers_url": "https://api.github.com/users/luke-jr/followers",
            "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
            "organizations_url": "https://api.github.com/users/luke-jr/orgs",
            "repos_url": "https://api.github.com/users/luke-jr/repos",
            "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/luke-jr/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25991",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25991",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25991.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25991.patch"
          },
          "created_at": "2022-09-03T00:49:20Z",
          "updated_at": "2023-07-31T01:09:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-22T20:36:31Z",
      "updated_at": "2022-09-22T20:36:31Z",
      "source": {
        "issue": {
          "id": 1190718755,
          "node_id": "PR_kwDOABII5841iE9Z",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24742",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24742/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24742/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24742/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24742",
          "number": 24742,
          "state": "open",
          "state_reason": null,
          "title": "build: prune Boost headers in depends",
          "body": "The Boost 1.81.0 tarball is ~`118`mb, and expands to much larger than that, however we end up with ~`150`mb of headers copied into the `/include/boost` dir in depends. This is a lot by itself, and even more when it's `170`mb * 9 (HOSTS for a guix build).\r\n\r\nWith the changes in this PR, we end up with ~`50`mb of Boost headers in depends, which with some creative patching/pruning, could be trimmed even further. i.e sometimes you end up pulling in an entire boost module, because of a single include in another header we use, but in code that we don't actually need. In other cases there are deprecated headers which are still being used, which could be removed if the modules we care about stopped using them. I will open some PRs upstream to try and improve that situation, ie: https://github.com/boostorg/multi_index/pull/57.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24742",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24742",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24742.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24742.patch"
          },
          "created_at": "2022-04-02T19:24:22Z",
          "updated_at": "2023-05-31T16:25:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T16:21:14Z",
      "updated_at": "2022-09-24T16:21:14Z",
      "source": {
        "issue": {
          "id": 1384719233,
          "node_id": "PR_kwDOABII584_iyfL",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26177/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26177",
          "number": 26177,
          "state": "closed",
          "state_reason": null,
          "title": "refactor / kernel: Move non-gArgs chainparams functionality to kernel",
          "body": "This pull request is part of the `libbitcoinkernel` project https://github.com/bitcoin/bitcoin/issues/24303 https://github.com/bitcoin/bitcoin/projects/18 and more specifically its \"Step 2: Decouple most non-consensus code from libbitcoinkernel\". dongcarl is the original author of this patchset, these commits were taken from https://github.com/dongcarl/bitcoin/tree/2022-03-libbitcoinkernel-chainparams-args-only. \r\n\r\n#### Context \r\n\r\nThe bitcoin kernel library currently relies on code containing user configurations through the `ArgsManager`. This is not optimal, since as a stand-alone library it should not rely on bitcoind's argument parsing logic. Instead, its interfaces should accept control and options structs that control the kernel library's desired configuration.\r\n\r\n\r\nSimilar work towards decoupling the `ArgsManager` from the kernel has been done in \r\nhttps://github.com/bitcoin/bitcoin/pull/25290, https://github.com/bitcoin/bitcoin/pull/25487, https://github.com/bitcoin/bitcoin/pull/25527 and https://github.com/bitcoin/bitcoin/pull/25862.\r\n\r\n#### Changes\r\n\r\nBy moving the `CChainParams` class definition into the kernel and giving it new factory functions `CChainParams::{RegTest,SigNet,Main,TestNet}`it can be constructed without an `ArgsManager` reference, unlike the current factory function `CreateChainParams`.\r\n\r\nThe first few commits remove uses of `ArgsManager` within `CChainParams`. Then the `CChainParams` definition is moved to a new file in the `kernel/` subdirectory.\r\n\r\n\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26177",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26177",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26177.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26177.patch"
          },
          "closed_at": "2023-03-16T13:56:49Z",
          "created_at": "2022-09-24T15:42:36Z",
          "updated_at": "2023-03-17T15:30:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-24T23:13:07Z",
      "updated_at": "2022-09-24T23:13:07Z",
      "source": {
        "issue": {
          "id": 1364381194,
          "node_id": "PR_kwDOABII584-fwqX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26032",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26032/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26032/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26032/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26032",
          "number": 26032,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: skip R-value signature grinding for external signers",
          "body": "When producing a dummy signature for the purpose of estimating the transaction fee, do not assume an external signer performs R-value grinding on the signature.\r\n\r\nIn particular, this avoids a scenario where the fee rate is 1 sat / vbyte and a transaction with a 72 byte signature is not accepted into our mempool.\r\n\r\nSuggested testing:\r\n1. On master, launch with `-signet` and create an external signer wallet using e.g. a Trezor and HWI, see [guide](https://github.com/bitcoin/bitcoin/blob/master/doc/external-signer.md#example-usage) (with the GUI it should \"just work\" once you have the HWI path configured).\r\n2. Create a few addresses and fund them from the faucet: https://signet.bc-2.jp/ (wait for confirmation)\r\n3. Create another address, and now send the entire wallet to it, set the fee to 1 sat/byte\r\n4. Most likely this transaction never gets broadcast and you won't see it on the [signet explorer](https://explorer.bc-2.jp) \r\n\r\n5. With this PR, try again.\r\n6. Check the explorer and inspect the transaction. Each input witness starts with either `30440220` (R has 32 bytes) or `30440221` (R has 33 bytes). See this explainer for [DER encoding](https://bitcoin.stackexchange.com/questions/92680/what-are-the-der-signature-and-sec-format).\r\n\r\nFixes #26030 ",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 19,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26032",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26032",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26032.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26032.patch"
          },
          "closed_at": "2023-02-27T17:38:08Z",
          "created_at": "2022-09-07T09:38:01Z",
          "updated_at": "2023-03-01T09:13:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7489439059,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG-Z8VT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7489439059",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T18:35:57Z"
    },
    {
      "event": "mentioned",
      "id": 7489516605,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-aPQ9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7489516605",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T18:47:48Z"
    },
    {
      "event": "subscribed",
      "id": 7489516611,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-aPRD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7489516611",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T18:47:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7489715399,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG-a_zH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7489715399",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T19:17:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7489823184,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG-baHQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7489823184",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T19:34:09Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7489907091,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG-bumT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7489907091",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T19:47:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7490004721,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG-cGbx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490004721",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T20:02:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7490431327,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG-dulf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490431327",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T21:07:56Z"
    },
    {
      "event": "mentioned",
      "id": 7490498949,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-d_GF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490498949",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T21:19:52Z"
    },
    {
      "event": "subscribed",
      "id": 7490498954,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-d_GK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490498954",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T21:19:52Z"
    },
    {
      "event": "mentioned",
      "id": 7490498968,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-d_GY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490498968",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T21:19:52Z"
    },
    {
      "event": "subscribed",
      "id": 7490498974,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-d_Ge",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490498974",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T21:19:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7490603015,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAG-eYgH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490603015",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T21:40:52Z"
    },
    {
      "event": "commented",
      "id": 1262857525,
      "node_id": "IC_kwDOABII585LRa01",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1262857525",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T21:57:47Z",
      "updated_at": "2022-09-29T21:57:47Z",
      "author_association": "MEMBER",
      "body": "@1440000bytes This isn't even close to ready for review yet... It still needs at least a BIP and support for generating multiple addresses. And the secp256k1 changes also haven't been merged yet, much less included in the version Bitcoin Core uses.\r\n\r\n>Suggestion: We could add a new RPC command to create silent payment address instead of using getnewaddress.\r\n\r\nWhy? `getnewaddress` is the correct thing to use here...",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1262857525",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7490679127,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-erFX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490679127",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T21:57:47Z"
    },
    {
      "event": "subscribed",
      "id": 7490679131,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-erFb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490679131",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T21:57:47Z"
    },
    {
      "event": "commented",
      "id": 1262862099,
      "node_id": "IC_kwDOABII585LRb8T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1262862099",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:03:47Z",
      "updated_at": "2022-09-29T23:26:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "This new version addresses most (or all) requests made in PR so far:\r\n\r\n. Implements the new scheme suggested by @RubenSomsen that allows multiple silent addresses per wallet with minimal overhead.\r\n. Implements a new RPC to retrieve silent addresses (suggested by @1440000bytes), which allows users to assign different labels to different addresses. That way, the user knows which silent address the UTXO came from (as suggested by @luke-jr).\r\n\r\nExample:\r\n\r\n```bash\r\n./src/bitcoin-cli -signet -rpcwallet=\"receiver\" getspaddress\r\ntsp001pjgcwd9p6f2rcgf35dlgvj77h2afylg6lp5cdn0cztrk4k54w99kqxn48tq\r\n\r\n# This will return the same address as above (both have no label)\r\n./src/bitcoin-cli -signet -rpcwallet=\"receiver\" getspaddress\r\ntsp001pjgcwd9p6f2rcgf35dlgvj77h2afylg6lp5cdn0cztrk4k54w99kqxn48tq\r\n\r\n# New label, new address\r\n./src/bitcoin-cli -signet -rpcwallet=\"receiver\" getspaddress 'donation'\r\ntsp011pjgcwd9p6f2rcgf35dlgvj77h2afylg6lp5cdn0cztrk4k54w99kq80t7lt \r\n```\r\n\r\nIn this new scheme, the address has a new field called identifier, which tells the receiver and sender how to tweak the address correctly.\r\n\r\nIf the receiver, for whatever reason, doesn't know which identifiers have been used, there is no problem. The wallet can scan all identifiers from 0 to 99. Currently, only 100 different identifiers per wallet are allowed. This limit, however, can be increased at any time in the future.\r\n\r\nUnlike address formats so far, `sp` addresses are not script-related and may eventually include any additional information needed, such as an expiration timestamp (or block height). That way, users don't have to track the address indefinitely.\r\n\r\nAs usual I wrote a step by step tutorial:\r\nhttps://gist.github.com/w0xlt/c81277ae8677b6c0d3dd073893210875",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1262862099",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7490707661,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-eyDN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490707661",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:03:47Z"
    },
    {
      "event": "subscribed",
      "id": 7490707668,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-eyDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490707668",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:03:48Z"
    },
    {
      "event": "mentioned",
      "id": 7490707673,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-eyDZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490707673",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:03:48Z"
    },
    {
      "event": "subscribed",
      "id": 7490707675,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-eyDb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490707675",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:03:48Z"
    },
    {
      "event": "mentioned",
      "id": 7490707682,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-eyDi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490707682",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:03:48Z"
    },
    {
      "event": "subscribed",
      "id": 7490707692,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-eyDs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490707692",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:03:48Z"
    },
    {
      "event": "commented",
      "id": 1262865155,
      "node_id": "IC_kwDOABII585LRcsD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1262865155",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:08:02Z",
      "updated_at": "2022-09-29T22:08:02Z",
      "author_association": "NONE",
      "body": "> @1440000bytes This isn't even close to ready for review yet... It still needs at least a BIP and support for generating multiple addresses. And the secp256k1 changes also haven't been merged yet, much less included in the version Bitcoin Core uses.\r\n> \r\n> > Suggestion: We could add a new RPC command to create silent payment address instead of using getnewaddress.\r\n> \r\n> Why? `getnewaddress` is the correct thing to use here...\r\n\r\nI respect for your review. At least we know whats needed for bitcoin core/knots  to use this.",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1262865155",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7490727273,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-e21p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490727273",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:08:03Z"
    },
    {
      "event": "subscribed",
      "id": 7490727281,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-e21x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490727281",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:08:03Z"
    },
    {
      "event": "commented",
      "id": 1262869408,
      "node_id": "IC_kwDOABII585LRdug",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1262869408",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:12:07Z",
      "updated_at": "2022-09-29T22:12:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "@1440000bytes This new push addresses all requests made so far, but as @luke-jr said, there is still a long way to go before this PR is merged (if at all). https://github.com/bitcoin-core/secp256k1/pull/994 needs to be merged first.\r\n\r\n> Why? getnewaddress is the correct thing to use here...\r\n\r\nI accepted the suggestion of @1440000bytes because `getspaddress` will not necessarily return a new address. If the user repeats the label, the address will be the same, so `getnewaddress` does not exactly represent the expected behavior.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1262869408",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7490744646,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-e7FG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490744646",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:12:08Z"
    },
    {
      "event": "subscribed",
      "id": 7490744649,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-e7FJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490744649",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:12:08Z"
    },
    {
      "event": "mentioned",
      "id": 7490744654,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-e7FO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490744654",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:12:08Z"
    },
    {
      "event": "subscribed",
      "id": 7490744662,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-e7FW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490744662",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:12:08Z"
    },
    {
      "event": "commented",
      "id": 1262900646,
      "node_id": "IC_kwDOABII585LRlWm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1262900646",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:41:42Z",
      "updated_at": "2022-09-29T22:43:17Z",
      "author_association": "NONE",
      "body": "> @1440000bytes This new push addresses all requests made so far, but as @luke-jr said, there is still a long way to go before this PR is merged (if at all). [bitcoin-core/secp256k1#994](https://github.com/bitcoin-core/secp256k1/pull/994) needs to be merged first.\r\n> \r\n> > Why? getnewaddress is the correct thing to use here...\r\n> \r\n> I accepted the suggestion of @1440000bytes because `getspaddress` will not necessarily return a new address. If the user repeats the label, the address will be the same, so `getnewaddress` does not exactly represent the expected behavior.\r\n\r\nI dont want this as another \"proof of concept\"\r\n\r\nUsers need privacy right now and it will be an inspiration when core wallet does it with something like silent payment. We don't need to share bitcoin address on social media.\r\n\r\nRoss https://twitter.com/raw_avocado/status/1575110869809143808 got it wrong with opsec by sharing email address on bitcointalk. Lot of users were tracked because they shared bitcoin address on social media. Lets fix this partially by allowing the users to share a silent payment address.   ",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1262900646",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7490862678,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-fX5W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490862678",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:41:42Z"
    },
    {
      "event": "subscribed",
      "id": 7490862683,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-fX5b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490862683",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:41:42Z"
    },
    {
      "event": "mentioned",
      "id": 7490862688,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-fX5g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490862688",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:41:42Z"
    },
    {
      "event": "subscribed",
      "id": 7490862690,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-fX5i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490862690",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:41:42Z"
    },
    {
      "event": "commented",
      "id": 1262907414,
      "node_id": "IC_kwDOABII585LRnAW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1262907414",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T22:45:46Z",
      "updated_at": "2022-09-29T22:45:46Z",
      "author_association": "NONE",
      "body": "You can try this as well: https://github.com/bitcoin-inquisition/bitcoin/pulls",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1262907414",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1262921393,
      "node_id": "IC_kwDOABII585LRqax",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1262921393",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T23:07:28Z",
      "updated_at": "2022-09-29T23:07:28Z",
      "author_association": "MEMBER",
      "body": ">This new version addresses most (or all) requests made in PR so far:\r\n\r\nI just finished going over the BIPs PRs and didn't see one for this yet.\r\n\r\n>In this new scheme, the address has a new field called identifier, which tells the receiver and sender how to set the address correctly.\r\n\r\nWouldn't this allow someone who obtains two addresses, to determine they are both for the same wallet? Seems like a major privacy problem.\r\n\r\n> Currently, only 100 different identifiers per wallet are allowed. This limit, however, can be increased at any time in the future.\r\n\r\nAny limit seems problematic, but 100 is definitely too few.\r\n\r\n>>Why? getnewaddress is the correct thing to use here...\r\n\r\n>I accepted the suggestion of @1440000bytes because getspaddress will not necessarily return a new address. If the user repeats the label, the address will be the same, so getnewaddress does not exactly represent the expected behavior.\r\n\r\nI see, that makes sense. `getaccountaddress` used to do something similar. We no longer have accounts, but maybe a more generic name `getreusableaddress` would be better. (I assume `getnewaddress` can also be used still?)\r\n",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1262921393",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7490950494,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG-ftVe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490950494",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T23:07:28Z"
    },
    {
      "event": "subscribed",
      "id": 7490950496,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG-ftVg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7490950496",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-29T23:07:28Z"
    },
    {
      "event": "reviewed",
      "id": 1126966227,
      "node_id": "PRR_kwDOABII585DLCPT",
      "url": null,
      "actor": null,
      "commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Left some code review nits/minor I found while looking at the code.\r\nNo need to address them now as I think this still needs conceptual review and benchmarking.\r\nWill review and test this PR further later.",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1126966227",
      "submitted_at": "2022-09-30T16:15:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-01T04:29:02Z",
      "updated_at": "2022-10-01T04:29:02Z",
      "source": {
        "issue": {
          "id": 1387484303,
          "node_id": "PR_kwDOABII584_rkDm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26186",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26186/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26186/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26186/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26186",
          "number": 26186,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Sanitize label name in various RPCs with tests",
          "body": "The following RPCs did not sanitize the optional label name:\r\n- importprivkey\r\n- importaddress\r\n- importpubkey\r\n- importmulti\r\n- importdescriptors\r\n- listsinceblock\r\n\r\nThus is was possible to import an address with a label `*` which should not be possible.\r\nThe wildcard label is used for backwards compatibility in the `listtransactions` rpc.\r\nI added test coverage for these RPCs.",
          "user": {
            "login": "aureleoules",
            "id": 22493292,
            "node_id": "MDQ6VXNlcjIyNDkzMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aureleoules",
            "html_url": "https://github.com/aureleoules",
            "followers_url": "https://api.github.com/users/aureleoules/followers",
            "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
            "organizations_url": "https://api.github.com/users/aureleoules/orgs",
            "repos_url": "https://api.github.com/users/aureleoules/repos",
            "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aureleoules/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignee": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "achow101",
              "id": 3782274,
              "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
              "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/achow101",
              "html_url": "https://github.com/achow101",
              "followers_url": "https://api.github.com/users/achow101/followers",
              "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
              "organizations_url": "https://api.github.com/users/achow101/orgs",
              "repos_url": "https://api.github.com/users/achow101/repos",
              "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/achow101/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26186",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26186",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26186.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26186.patch"
          },
          "closed_at": "2023-01-10T22:32:11Z",
          "created_at": "2022-09-27T10:06:48Z",
          "updated_at": "2023-01-12T11:51:48Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-01T04:39:43Z",
      "updated_at": "2022-10-01T04:39:43Z",
      "source": {
        "issue": {
          "id": 1384676881,
          "node_id": "PR_kwDOABII584_ireu",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26174",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26174/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26174/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26174/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26174",
          "number": 26174,
          "state": "open",
          "state_reason": null,
          "title": "rpc, wallet: add ability to retrieve all address book entries",
          "body": "As far as I know, there is currently no way to retrieve all address book entries via RPC.\r\nThis functionality can be added by slightly modifying the `getaddressesbylabel` and making the `label` parameter optional.\r\n\r\nPR:\r\n```bash\r\n./src/bitcoin-cli -regtest getaddressesbylabel\r\n{\r\n  \"bcrt1q23d9qmeqrmdfazp79e5xavpgrzqmmtjf7k2p7u\": {\r\n    \"label\": \"label03\",\r\n    \"purpose\": \"receive\"\r\n  },\r\n  \"bcrt1pynqgl3mh8qmwj496nfg6ucxd8jw0wz3rz7jtf4s4v6e9zv6a4cnqdcl79k\": {\r\n    \"label\": \"label02\",\r\n    \"purpose\": \"receive\"\r\n  },\r\n  \"bcrt1pty99hxsx7trd53ul7lhl4ee82ggqslyq54mg5mte5wv8nfu7xxfqcf0pzz\": {\r\n    \"label\": \"label01\",\r\n    \"purpose\": \"receive\"\r\n  }\r\n}\r\n```\r\n\r\nOn master branch, it is not possible to run that RPC without passing a label parameter.",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26174",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26174",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26174.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26174.patch"
          },
          "created_at": "2022-09-24T13:38:13Z",
          "updated_at": "2023-06-25T01:18:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1265364454,
      "node_id": "IC_kwDOABII585La-3m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265364454",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T12:24:38Z",
      "updated_at": "2022-10-03T12:24:38Z",
      "author_association": "MEMBER",
      "body": "> Currently, only 100 different identifiers per wallet are allowed. This limit, however, can be increased at any time in the future.\r\n\r\nThis identifier is encoded in the sp address, isn't it sensitive information to leak?\r\nAny limit seems too low, especially 100. Can't the identifier be encoded using a CompactSize?",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1265364454",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1266160442,
      "node_id": "IC_kwDOABII585LeBM6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1266160442",
      "actor": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T22:53:04Z",
      "updated_at": "2022-10-03T22:53:04Z",
      "author_association": "NONE",
      "body": "> This identifier is encoded in the sp address, isn't it sensitive information to leak?\r\n\r\nA common feature of these stealth address schemes (BIP47, BIP351) is that a static identifier may be safely associated with your identity without loss of privacy.",
      "user": {
        "login": "clarkmoody",
        "id": 1562417,
        "node_id": "MDQ6VXNlcjE1NjI0MTc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1562417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/clarkmoody",
        "html_url": "https://github.com/clarkmoody",
        "followers_url": "https://api.github.com/users/clarkmoody/followers",
        "following_url": "https://api.github.com/users/clarkmoody/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/clarkmoody/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/clarkmoody/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/clarkmoody/subscriptions",
        "organizations_url": "https://api.github.com/users/clarkmoody/orgs",
        "repos_url": "https://api.github.com/users/clarkmoody/repos",
        "events_url": "https://api.github.com/users/clarkmoody/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/clarkmoody/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1266160442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1266165856,
      "node_id": "IC_kwDOABII585LeChg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1266165856",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T22:57:28Z",
      "updated_at": "2022-10-03T22:57:28Z",
      "author_association": "MEMBER",
      "body": "But that's not correct. If someone acquires both, they now know they pay to the same wallet.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1266165856",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1266193417,
      "node_id": "IC_kwDOABII585LeJQJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1266193417",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T23:26:40Z",
      "updated_at": "2022-10-03T23:36:14Z",
      "author_association": "NONE",
      "body": "There seems to be some confusion about the function of the [identifier](https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1218641521). Its function is *not* to create more than one identity, but to be able to distinguish why someone paid you. For example, when the same entity is raising money on behalf of two different charities and wants to know for which of the two charities the sender intended their donation.\r\n\r\nTo be absolutely clear, the payments that appear on-chain are still absolutely unlinkable by a third party observer, nor are they able to tell which identifier was used.\r\n\r\nIn cases where you don't want people to know that you're the same entity, the identifier is insufficient – you'll need a completely separate Silent Payment address which (roughly) doubles your scanning efforts, so it's much more costly in terms of performance.\r\n\r\n",
      "user": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1266193417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T23:35:48Z",
      "updated_at": "2022-10-03T23:35:48Z",
      "source": {
        "issue": {
          "id": 1395216330,
          "node_id": "PR_kwDOABII585AFMRG",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26238",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26238/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26238/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26238/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26238",
          "number": 26238,
          "state": "closed",
          "state_reason": null,
          "title": "clang-tidy: fixup named argument comments",
          "body": "Fix comments so they are checked/consistent.\r\nFix incorrect comments.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26238",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26238",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26238.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26238.patch"
          },
          "closed_at": "2022-12-06T11:06:58Z",
          "created_at": "2022-10-03T19:27:58Z",
          "updated_at": "2022-12-06T11:07:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T23:40:06Z",
      "updated_at": "2022-10-03T23:40:06Z",
      "source": {
        "issue": {
          "id": 1394891848,
          "node_id": "PR_kwDOABII585AEGSC",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26235",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26235/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26235/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26235/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26235",
          "number": 26235,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: move *index constants out of validation",
          "body": "Move `*index` default constants out of `validation.h`.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26235",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26235",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26235.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26235.patch"
          },
          "closed_at": "2022-10-04T10:38:01Z",
          "created_at": "2022-10-03T15:04:02Z",
          "updated_at": "2022-11-08T21:49:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1266210990,
      "node_id": "IC_kwDOABII585LeNiu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1266210990",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-03T23:45:43Z",
      "updated_at": "2022-10-03T23:45:43Z",
      "author_association": "MEMBER",
      "body": "This is a serious privacy leak that no other invoice address format has right now (maybe Lightning? not sure), and is not generally expected/known.",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1266210990",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1266243366,
      "node_id": "IC_kwDOABII585LeVcm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1266243366",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T00:26:31Z",
      "updated_at": "2022-10-04T00:31:10Z",
      "author_association": "NONE",
      "body": "@luke-jr I suspect we're not yet on the same page. Could you be specific about what you think is being leaked? Essentially all that is happening is that the person who is getting paid is publicly saying \"you could send me money for purpose A or purpose B, so please tweak the final address a bit so I know for which purpose you sent me money\". The resulting on-chain address is still completely unrecognizable by outside parties.\r\n\r\nSo essentially all that is happening is that a few extra secret bits of information are being transmitted to the recipient along with the payment. There is no impact on privacy other than the fact that the recipient voluntarily made a statement about how it would interpret those bits.\r\n\r\nOf course this is not equivalent to having a completely separate identity on which you could get paid, but that is not its purpose. I.e. the difference is A says pay me for X, B says pay me for Y, and A might be the same person as B but nobody knows, or A saying pay me for X or Y so we know the same person will receive the funds no matter if you pay for X or Y. Both are useful. One is more flexible than the other, but also more computationally expensive.",
      "user": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1266243366",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7511869481,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG_vggp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7511869481",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T00:26:31Z"
    },
    {
      "event": "subscribed",
      "id": 7511869492,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG_vgg0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7511869492",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T00:26:31Z"
    },
    {
      "event": "commented",
      "id": 1266257861,
      "node_id": "IC_kwDOABII585LeY_F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1266257861",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T00:43:03Z",
      "updated_at": "2022-10-04T00:43:03Z",
      "author_association": "MEMBER",
      "body": "In your example earlier, charity A does not necessarily want to leak that it is using the same service as charity B. Throughout Bitcoin's history, there has never been any leak of such relationships between invoice addresses. It would be very unexpected, especially for it to be introduced with a privacy improvement!",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1266257861",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1266268257,
      "node_id": "IC_kwDOABII585Lebhh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1266268257",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T00:57:14Z",
      "updated_at": "2022-10-04T00:57:14Z",
      "author_association": "NONE",
      "body": "@luke-jr I agree it is a communication challenge to explain such a feature to users, but I hope you see now that it can be of benefit when used correctly. I also agree that this idea is not adequate in cases where you do not want people to know that the same entity is receiving money for separate purposes.\r\n\r\nAnother example which may be more clear: maybe you're a known open source developer who is openly working on multiple projects and you want to distinguish for which of these projects your supporters are donating.",
      "user": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1266268257",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7512000514,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG_wAgC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7512000514",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T00:57:14Z"
    },
    {
      "event": "subscribed",
      "id": 7512000517,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG_wAgF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7512000517",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T00:57:14Z"
    },
    {
      "event": "commented",
      "id": 1266336785,
      "node_id": "IC_kwDOABII585LesQR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1266336785",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T03:08:55Z",
      "updated_at": "2022-10-04T03:08:55Z",
      "author_association": "MEMBER",
      "body": "@RubenSomsen I agree it may have use cases, but if the user asks for a new address, they should get a new address, not a variation of an existing one. (Unless they explicitly ask for a variation, which I would suggest doing in a followup PR since it necessarily adds a new API and concept)",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1266336785",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7512431405,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG_xpst",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7512431405",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T03:08:55Z"
    },
    {
      "event": "subscribed",
      "id": 7512431411,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG_xpsz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7512431411",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T03:08:55Z"
    },
    {
      "event": "commented",
      "id": 1266654402,
      "node_id": "IC_kwDOABII585Lf5zC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1266654402",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T09:22:20Z",
      "updated_at": "2022-10-04T09:22:20Z",
      "author_association": "NONE",
      "body": "@luke-jr I agree it may not be a good idea to refer to the same pubkey/identity + different identifier as a \"new address\" if that sets the wrong expectations for users. Thanks for clarifying.",
      "user": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1266654402",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7514466785,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAG_5anh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7514466785",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T09:22:21Z"
    },
    {
      "event": "subscribed",
      "id": 7514466789,
      "node_id": "SE_lADOABII585H5eBJzwAAAAG_5anl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7514466789",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T09:22:21Z"
    },
    {
      "event": "labeled",
      "id": 7515772630,
      "node_id": "LE_lADOABII585H5eBJzwAAAAG_-ZbW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7515772630",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-04T11:59:23Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7522030827,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHAWRTr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7522030827",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T04:57:06Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7522035403,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHAWSbL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7522035403",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T04:58:26Z"
    },
    {
      "event": "unlabeled",
      "id": 7522554922,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAHAYRQq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7522554922",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T07:00:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1268335783,
      "node_id": "IC_kwDOABII585LmUSn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1268335783",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T11:53:45Z",
      "updated_at": "2022-10-05T11:53:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "@aureleoules Thanks for the detailed review. I addressed all the suggestions.\r\n\r\n> the user asks for a new address, they should get a new address\r\n\r\n@luke-jr as mentioned earlier, that's why a new RPC was created instead of using `getnewaddress`, just so the user doesn't think a new address will be generated.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1268335783",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7524527358,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHAfyz-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7524527358",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T11:53:46Z"
    },
    {
      "event": "subscribed",
      "id": 7524527366,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHAfy0G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7524527366",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T11:53:46Z"
    },
    {
      "event": "mentioned",
      "id": 7524527375,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHAfy0P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7524527375",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T11:53:46Z"
    },
    {
      "event": "subscribed",
      "id": 7524527382,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHAfy0W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7524527382",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T11:53:46Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T22:24:51Z",
      "updated_at": "2022-10-05T22:24:51Z",
      "source": {
        "issue": {
          "id": 1291738864,
          "node_id": "PR_kwDOABII5846ud-Q",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25526",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25526/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25526/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25526/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25526",
          "number": 25526,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: avoid double keypool TopUp() call on descriptor wallets",
          "body": "Found it while was digging over a `getnewaddress` timeout on the functional test suite.\r\n\r\n### Context:\r\n\r\nWe are calling `TopUp()` twice in the following flows for descriptor wallets:\r\n\r\nA) `CWallet::GetNewDestination`:\r\n   1) Calls spk_man->TopUp()\r\n   2) Calls spk_man->GetNewDestination() --> which, after the basic script checks, calls TopUp() again.\r\n\r\nB) `CWallet::GetReservedDestination`:\r\n   1) Calls spk_man->TopUp()\r\n   2) Calls spk_man->GetReservedDestination() --> which calls to GetNewDestination (which calls to TopUp again).\r\n\r\n\r\n### Changes:\r\n\r\nMove `TopUp()` responsibility from the wallet class to each scriptpubkeyman.\r\nSo each spkm can decide to call it or not after perform the basic checks\r\nfor the new destination request.\r\n\r\n\r\nAside from that, remove the unused `nAccountingEntryNumber` wallet field. And a duplicated descriptor type check in `GetNewDestination`",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25526",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25526",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25526.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25526.patch"
          },
          "closed_at": "2022-10-13T15:28:47Z",
          "created_at": "2022-07-01T18:58:16Z",
          "updated_at": "2023-05-27T01:49:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T23:50:11Z",
      "updated_at": "2022-10-05T23:50:11Z",
      "source": {
        "issue": {
          "id": 1207463736,
          "node_id": "PR_kwDOABII5842Yh4P",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24914",
          "number": 24914,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Load database records in a particular order",
          "body": "Currently when we load a wallet, we just iterate through all of the records in the database and add them completely statelessly. However we have some records which do rely on other records being loaded before they are. To deal with this, we use `CWalletScanState` to hold things temporarily until all of the records have been read and then we load the stateful things.\r\n\r\nHowever this can be slow, and with some future improvements, can cause some pretty drastic slowdowns to retain this pattern. So this PR changes the way we load records by choosing to load the records in a particular order. This lets us do things such as loading a descriptor record, then finding and loading that descriptor's cache and key records. In the future, this will also let us use `IsMine` when loading transactions as then `IsMine` will actually be working as we now always load keys and descriptors before transactions.\r\n\r\nIn order to get records of a specific type, this PR includes some refactors to how we do database cursors. Functionality is also added to retrieve a cursor that will give us records beginning with a specified prefix.\r\n\r\nLastly, one thing that iterating the entire database let us do was to find unknown records. However even if unknown records were found, we would not do anything with this information except output a number in a log line. With this PR, we would no longer be aware of any unknown records. This does not change functionality as we don't do anything with unknown records, and having unknown records is not an error. Now we would just not be aware that unknown records even exist.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24914",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24914",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24914.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24914.patch"
          },
          "closed_at": "2023-06-27T23:03:39Z",
          "created_at": "2022-04-18T21:18:28Z",
          "updated_at": "2023-06-27T23:03:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-06T18:44:48Z",
      "updated_at": "2022-10-06T18:44:48Z",
      "source": {
        "issue": {
          "id": 1057566159,
          "node_id": "PR_kwDOABII584uubvE",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23544",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23544/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23544/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23544/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23544",
          "number": 23544,
          "state": "closed",
          "state_reason": null,
          "title": "rpc, wallet: addhdseed, infer seed when importing descriptor with xpub ",
          "body": "Builds on top of #25907 and one commit from #22341.\r\n\r\nFirst this PR introduces a descriptor wallet RPC `addhdseed`. Similar to its legacy wallet counterpart `sethdseed` it either generates a fresh random seed, for use on a blank wallet, or the user can provide a WIF. Unlike `sethdseed` this RPC call does not add keys / fill the keypool.\r\n\r\nThis allows a user to create a blank wallet (`createwallet`), provide it with a seed (`addhdseed`) and then craft custom descriptors. (An alternative approach would to add a `nodescriptors` argument to `createwallet`, but this RPC seems useful anyway)\r\n\r\nAn example use case of this is setting up a multisig between Core and a hardware wallet. After adding the seed to an otherwise empty wallet, the user would call `getxpub m/87'/0'/0'`. They would then combine this `xpub` and origin info with the one from their hardware wallet (e.g. using `hwi --fingerprint .... getxpub m/87'/0'/0'`  and craft a descriptor like `wsh(sorted_multi(2, [...../87'/0'/0']our_xpub, [..../87'/0'/0']their_xpub))`, and import that. The resulting wallet will be able to sign its part of the transaction.\r\n\r\nThe second part of this PR enables to ability descriptors, such as in the multisig example above, in such a way that any `fingerprint` + `xpub` that is covered by our hd seed(s) can be signed for.",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 1482182044,
              "node_id": "MDU6TGFiZWwxNDgyMTgyMDQ0",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Descriptors",
              "name": "Descriptors",
              "description": "",
              "color": "e9f76c",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23544",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23544",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23544.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23544.patch"
          },
          "closed_at": "2023-08-01T14:15:20Z",
          "created_at": "2021-11-18T16:40:53Z",
          "updated_at": "2023-08-01T14:15:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7557950063,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHCfSpv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7557950063",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T00:45:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7558084686,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHCfzhO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7558084686",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T01:24:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7558485597,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHChVZd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7558485597",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T03:22:54Z"
    },
    {
      "event": "commented",
      "id": 1274178546,
      "node_id": "IC_kwDOABII585L8mvy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1274178546",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T07:01:33Z",
      "updated_at": "2022-10-11T07:01:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Silent Payment v4 (coinjoin support added)\r\n\r\nChanges:\r\n\r\n. Silent payments now use all inputs to create transactions. Previously, they only used the first input. This change increases privacy and makes silent payments compatible with coinjoin.\r\n\r\n. `getspaddress` RPC renamed to `getsilentaddress` for clarity\r\n\r\n. Added support for silent payment in PSBT via `walletcreatefundedpsbt` RPC.\r\n\r\n. Added a new index scheme (which stores the sum of input public keys for each transaction). The previous index `bitcoin/signet/indexes/silentpaymentindex` should be removed as it is no longer compatible with this new version.\r\n\r\nFor reviewers:\r\n\r\nNow, silent payments use the scheme `hash(i1*X + i2*X + i3*X + ...)*G + X == hash(x*(I1+I2+I3+...))*G + X`, as described here: https://gist.github.com/RubenSomsen/c43b79517e7cb701ebf77eec6dbb46b8#variant-using-all-inputs\r\n\r\nAs inputs can be Taproot, this introduced a new issue as `bitcoin-core/secp256k1` does not support x-only public key sum (perhaps due to missing prefix byte).\r\n\r\nI opened a new PR https://github.com/bitcoin-core/secp256k1/pull/1143 to add a function to convert from x-only to compressed public key with even y. This is the solution being used by the current silent payment implementation.\r\n\r\nTutorial updated: https://gist.github.com/w0xlt/c81277ae8677b6c0d3dd073893210875",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1274178546",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T07:21:15Z",
      "updated_at": "2022-10-11T07:21:15Z",
      "source": {
        "issue": {
          "id": 1392389303,
          "node_id": "PR_kwDOABII584_75JQ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26213",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26213/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26213/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26213/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26213",
          "number": 26213,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Strict type checking for RPC boolean parameters",
          "body": null,
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26213",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26213",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26213.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26213.patch"
          },
          "closed_at": "2022-12-10T09:58:55Z",
          "created_at": "2022-09-30T12:46:09Z",
          "updated_at": "2022-12-10T12:08:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1274611407,
      "node_id": "IC_kwDOABII585L-QbP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1274611407",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T12:30:31Z",
      "updated_at": "2022-10-11T12:33:33Z",
      "author_association": "MEMBER",
      "body": "How about returning a JSON object with some warnings for new labels to explicit that new labels are not new identities?\r\n\r\n<details>\r\n<summary>Example</summary>\r\n\r\n```bash\r\n./src/bitcoin-cli -testnet -rpcwallet=sp1 getsilentaddress client1 \r\n{\r\n  \"address\": \"tsp071pp809z56vwvyqhwc4fsjq8vhjw6yyguzv2u9hnwt3jvyl2ha49nwqtsc8w9\",\r\n  \"index\": 7,\r\n  \"label\": \"client1\",\r\n  \"warnings\": \"This address is not a new identity. It is a re-use of an existing identity with a different label.\"\r\n}\r\n./src/bitcoin-cli -testnet -rpcwallet=sp1 getsilentaddress client1\r\n{\r\n  \"address\": \"tsp071pp809z56vwvyqhwc4fsjq8vhjw6yyguzv2u9hnwt3jvyl2ha49nwqtsc8w9\",\r\n  \"label\": \"client1\",\r\n  \"index\": 7\r\n}\r\n./src/bitcoin-cli -testnet -rpcwallet=sp1 getsilentaddress client2\r\n{\r\n  \"address\": \"tsp081pp809z56vwvyqhwc4fsjq8vhjw6yyguzv2u9hnwt3jvyl2ha49nwqyqkdah\",\r\n  \"index\": 8,\r\n  \"label\": \"client2\",\r\n  \"warnings\": \"This address is not a new identity. It is a re-use of an existing identity with a different label.\"\r\n}\r\n./src/bitcoin-cli -testnet -rpcwallet=sp1 getsilentaddress client2\r\n{\r\n  \"address\": \"tsp081pp809z56vwvyqhwc4fsjq8vhjw6yyguzv2u9hnwt3jvyl2ha49nwqyqkdah\",\r\n  \"label\": \"client2\",\r\n  \"index\": 8\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>Code diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/wallet/rpc/addresses.cpp b/src/wallet/rpc/addresses.cpp\r\nindex 1f8621d48..cd6165cef 100644\r\n--- a/src/wallet/rpc/addresses.cpp\r\n+++ b/src/wallet/rpc/addresses.cpp\r\n@@ -110,10 +110,14 @@ RPCHelpMan getsilentaddress()\r\n     if (!request.params[0].isNull())\r\n         label = LabelFromValue(request.params[0]);\r\n \r\n+    UniValue obj(UniValue::VOBJ);\r\n     for (auto const& [key, val] : pwallet->m_silent_address_book)\r\n     {\r\n         if (val.m_label == label) {\r\n-            return val.m_address;\r\n+            obj.pushKV(\"address\", val.m_address);\r\n+            obj.pushKV(\"label\", val.m_label);\r\n+            obj.pushKV(\"index\", key);\r\n+            return obj;\r\n         }\r\n     }\r\n \r\n@@ -128,7 +132,16 @@ RPCHelpMan getsilentaddress()\r\n         throw JSONRPCError(RPC_WALLET_KEYPOOL_RAN_OUT, util::ErrorString(op_dest).original);\r\n     }\r\n \r\n-    return EncodeDestination(*op_dest, silent_payment, current_index);\r\n+    const auto address{EncodeDestination(*op_dest, silent_payment, current_index)};\r\n+\r\n+    obj.pushKV(\"address\", address);\r\n+    obj.pushKV(\"index\", current_index);\r\n+    obj.pushKV(\"label\", label);\r\n+    if (current_index > 0) {\r\n+        obj.pushKV(\"warnings\", \"This address is not a new identity. It is a re-use of an existing identity with a different label.\");\r\n+    }\r\n+\r\n+    return obj;\r\n },\r\n     };\r\n }\r\n```\r\n\r\n</details>",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1274611407",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "reviewed",
      "id": 1137407003,
      "node_id": "PRR_kwDOABII585Dy3Qb",
      "url": null,
      "actor": null,
      "commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Left some more code-review comments.\r\n\r\nI also tested the following scenario:\r\n- Create regular wallet\r\n- Generate some coins to it\r\n- Create SP wallet\r\n- Send payment from regular wallet to SP address\r\n- SP wallet correctly shows the coins received\r\n- Send back from SP wallet to regular wallet\r\n- Regular wallet shows the coins received\r\n\r\nI also tested the same scenario from an SP wallet to another SP wallet and it worked successfully.",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1137407003",
      "submitted_at": "2022-10-11T13:29:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T17:26:31Z",
      "updated_at": "2022-10-11T17:26:31Z",
      "source": {
        "issue": {
          "id": 1404167542,
          "node_id": "PR_kwDOABII585Ai8fh",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26293",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26293/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26293/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26293/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26293",
          "number": 26293,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: move interfaces/* to common/interfaces/*",
          "body": "This came up in #26196: https://github.com/bitcoin/bitcoin/pull/26196#issuecomment-1268533492. Opening this as a draft for the minute, to point to from another PR.\r\n\r\nUltimately the goal here (aside from common quite possibly being a better home for this code) is to move the Boost Signals2 using code out of libbitcoin_util, which is/will be used by the kernel.\r\n\r\nWhen this is done, we can drop `$(BOOST_CPPFLAGS)` from libbitcoin_util (last commit).",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26293",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26293",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26293.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26293.patch"
          },
          "closed_at": "2022-10-13T05:18:05Z",
          "created_at": "2022-10-11T07:51:42Z",
          "updated_at": "2022-10-13T18:54:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7566849790,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHDBPb-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7566849790",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T22:42:52Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-11T22:55:45Z",
      "updated_at": "2022-10-11T22:55:45Z",
      "source": {
        "issue": {
          "id": 1238159102,
          "node_id": "PR_kwDOABII58437rQt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25152",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25152/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25152/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25152/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25152",
          "number": 25152,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Split util/system into exception, shell, and fs-specific files",
          "body": "This is an attempt to significantly improve code organization while making changes as simple as possible to review.\r\n\r\nHere I split four files out of `util/system`:\r\n* `util/exception`, holding `PrintExceptionContinue`\r\n* `util/shell`, holding `ShellEscape`, `runCommand`\r\n* `util/fs`, holding various file, folder, and path-specific functions (building on `fs.h` and `filesystem`)\r\n* `util/args`, holding `ArgsManager` and related functions\r\n\r\nThe goal was to minimize review burden, so I made an effort to minimize the diffs and only modify the code when it was easy to confirm that the change would not have negative consequences.\r\n\r\nThat said, sourcing all of the windows-related headers was not straightforward, so I expect I'll need to touch this up to correct any issues there.",
          "user": {
            "login": "Empact",
            "id": 5470,
            "node_id": "MDQ6VXNlcjU0NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Empact",
            "html_url": "https://github.com/Empact",
            "followers_url": "https://api.github.com/users/Empact/followers",
            "following_url": "https://api.github.com/users/Empact/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Empact/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Empact/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
            "organizations_url": "https://api.github.com/users/Empact/orgs",
            "repos_url": "https://api.github.com/users/Empact/repos",
            "events_url": "https://api.github.com/users/Empact/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Empact/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25152",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25152",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25152.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25152.patch"
          },
          "closed_at": "2023-03-14T11:37:18Z",
          "created_at": "2022-05-17T06:52:25Z",
          "updated_at": "2023-03-14T11:37:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1275433767,
      "node_id": "IC_kwDOABII585MBZMn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1275433767",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T00:31:40Z",
      "updated_at": "2022-10-12T00:31:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "@aureleoules Thanks. Great suggestion to improve the UX regarding `getsilentaddress`. I added you as co-author in https://github.com/bitcoin/bitcoin/pull/24897/commits/35701eff890f5cff02af3e8c59b20f2948153b5f.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1275433767",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7567230582,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHDCsZ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7567230582",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T00:31:41Z"
    },
    {
      "event": "subscribed",
      "id": 7567230587,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHDCsZ7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7567230587",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T00:31:41Z"
    },
    {
      "event": "reviewed",
      "id": 1138561292,
      "node_id": "PRR_kwDOABII585D3REM",
      "url": null,
      "actor": null,
      "commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Thanks for the co-author! @w0xlt \r\n\r\nI was playing around with the code and tried benchmarking, here's a benchmark for `SumXOnlyPublicKeys` if you want to include it in this PR: \r\n\r\n<details>\r\n<summary>SumXOnlyPublicKeys benchmark</summary>\r\n\r\n```diff\r\ndiff --git a/src/Makefile.bench.include b/src/Makefile.bench.include\r\nindex e1e206687..91650b621 100644\r\n--- a/src/Makefile.bench.include\r\n+++ b/src/Makefile.bench.include\r\n@@ -45,6 +45,7 @@ bench_bench_bitcoin_SOURCES = \\\r\n   bench/rollingbloom.cpp \\\r\n   bench/rpc_blockchain.cpp \\\r\n   bench/rpc_mempool.cpp \\\r\n+  bench/silentpayment.cpp \\\r\n   bench/strencodings.cpp \\\r\n   bench/util_time.cpp \\\r\n   bench/verify_script.cpp\r\ndiff --git a/src/bench/silentpayment.cpp b/src/bench/silentpayment.cpp\r\nnew file mode 100644\r\nindex 000000000..1cd5455b9\r\n--- /dev/null\r\n+++ b/src/bench/silentpayment.cpp\r\n@@ -0,0 +1,68 @@\r\n+// Copyright (c) 2022 The Bitcoin Core developers\r\n+// Distributed under the MIT software license, see the accompanying\r\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n+\r\n+#include <bench/bench.h>\r\n+\r\n+#include <random.h>\r\n+#include <secp256k1.h>\r\n+#include <secp256k1_ecdh.h>\r\n+#include <secp256k1_extrakeys.h>\r\n+#include <silentpayment.h>\r\n+#include <test/util/setup_common.h>\r\n+\r\n+static XOnlyPubKey gen_key(secp256k1_context* ctx) {\r\n+    unsigned char seckey[32];\r\n+    GetRandBytes(seckey);\r\n+\r\n+    secp256k1_pubkey pubkey;\r\n+    int return_val = secp256k1_ec_pubkey_create(ctx, &pubkey, seckey);\r\n+    assert(return_val);\r\n+\r\n+    secp256k1_xonly_pubkey xonly_pubkey;\r\n+    return_val = secp256k1_xonly_pubkey_from_pubkey(ctx, &xonly_pubkey, nullptr, &pubkey);\r\n+    assert(return_val);\r\n+\r\n+    unsigned char xonly_pubkey_bytes[32];\r\n+    return_val = secp256k1_xonly_pubkey_serialize(ctx, xonly_pubkey_bytes, &xonly_pubkey);\r\n+    assert(return_val);\r\n+\r\n+    return XOnlyPubKey(xonly_pubkey_bytes);\r\n+}\r\n+\r\n+static void SumXOnlyPublicKeys(benchmark::Bench& bench, int key_count)\r\n+{\r\n+    auto ctx = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\r\n+    std::vector<XOnlyPubKey> sender_x_only_public_keys;\r\n+    for (int i = 0; i < key_count; i++) {\r\n+        sender_x_only_public_keys.push_back(gen_key(ctx));\r\n+    }\r\n+\r\n+    bench.run([&] {\r\n+        silentpayment::Recipient::SumXOnlyPublicKeys(sender_x_only_public_keys);\r\n+    });\r\n+\r\n+    secp256k1_context_destroy(ctx);\r\n+}\r\n+\r\n+static void SumXOnlyPublicKeys_1(benchmark::Bench& bench)\r\n+{\r\n+    SumXOnlyPublicKeys(bench, 1);\r\n+}\r\n+static void SumXOnlyPublicKeys_10(benchmark::Bench& bench)\r\n+{\r\n+    SumXOnlyPublicKeys(bench, 10);\r\n+}\r\n+static void SumXOnlyPublicKeys_100(benchmark::Bench& bench)\r\n+{\r\n+    SumXOnlyPublicKeys(bench, 100);\r\n+}\r\n+static void SumXOnlyPublicKeys_1000(benchmark::Bench& bench)\r\n+{\r\n+    SumXOnlyPublicKeys(bench, 1000);\r\n+}\r\n+\r\n+BENCHMARK(SumXOnlyPublicKeys_1);\r\n+BENCHMARK(SumXOnlyPublicKeys_10);\r\n+BENCHMARK(SumXOnlyPublicKeys_100);\r\n+BENCHMARK(SumXOnlyPublicKeys_1000);\r\n```\r\n\r\n</details>\r\n\r\nAlso, why did you move `src/wallet/silentpayment.cpp` to `src/silentpayment.cpp`?",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1138561292",
      "submitted_at": "2022-10-12T08:45:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "commented",
      "id": 1276160738,
      "node_id": "IC_kwDOABII585MEKri",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276160738",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T13:17:23Z",
      "updated_at": "2022-10-12T13:17:23Z",
      "author_association": "MEMBER",
      "body": "Also, I think it could be nice to have a way to list all generated silent addresses with their respective label, to quickly find the payment address for an existing client for example. Such as:\r\n```sh\r\n$ ./src/bitcoin-cli -regtest listsilentaddresses\r\n{\r\n  \"wallet_name\": \"my_sp_wallet\",\r\n  \"silent_addresses\": [\r\n\t{\r\n\t\t\"address\": \"sprt041plqhqd9t33wty9l3l86rpx82pmh7sny9qlhq9ypatxvwnq2rxyfgqrj43fq\",\r\n\t\t\"label\": \"Client 1\",\r\n\t\t\"identifier: 4\r\n\t},\r\n\t{\r\n\t\t\"address\": \"sprt051plqhqd9t33wty9l3l86rpx82pmh7sny9qlhq9ypatxvwnq2rxyfgqzwtgat\",\r\n\t\t\"label\": \"Client 2\",\r\n\t\t\"identifier: 5\r\n\t},\r\n\t{\r\n\t\t\"address\": \"sprt061plqhqd9t33wty9l3l86rpx82pmh7sny9qlhq9ypatxvwnq2rxyfgqprq2gk\",\r\n\t\t\"label\": \"Donations\",\r\n\t\t\"identifier: 6\r\n\t},\r\n\t...\r\n  ]\r\n}\r\n```\r\n\r\nI hope this feature is not too premature for this PR.",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1276160738",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "convert_to_draft",
      "id": 7574621596,
      "node_id": "CTDE_lADOABII585H5eBJzwAAAAHDe42c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7574621596",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-12T19:12:31Z"
    },
    {
      "event": "labeled",
      "id": 7582966818,
      "node_id": "LE_lADOABII585H5eBJzwAAAAHD-uQi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7582966818",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-13T16:07:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7595460928,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHEuYlA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595460928",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-15T20:11:04Z"
    },
    {
      "event": "unlabeled",
      "id": 7595564797,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAHEux79",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595564797",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-15T22:08:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7595655709,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHEvIId",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595655709",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T00:11:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7595664105,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHEvKLp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595664105",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T00:20:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7595706903,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHEvUoX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595706903",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T01:13:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7595816917,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHEvvfV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595816917",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T03:45:34Z"
    },
    {
      "event": "commented",
      "id": 1279893291,
      "node_id": "IC_kwDOABII585MSZ8r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1279893291",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T05:05:32Z",
      "updated_at": "2022-10-16T05:05:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "@aureleoules Thanks for all the suggestions and the benchmark file. I've added it (and given you authorship) as it's crucial to determine the feasibility of this scheme. I also added the `ECDHPerformance_10_100` method as ECDH is the most expensive operation (which until this PR was not used by Bitcoin Core - see f66beaa534aa42341a3c3030024a13ae9078c04c).\r\n\r\nI also implemented the `listsilentaddresses` RPC. Really great suggestion.\r\n\r\n> Also, why did you move src/wallet/silentpayment.cpp to src/silentpayment.cpp?\r\n\r\nI removed `silentpayment.{cpp,h}` from wallet folder because it is also used in index and RPC `scantxoutset` (which is not related to wallet). So this was introducing a wallet dependency on these classes.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1279893291",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7595871391,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHEv8yf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595871391",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T05:05:32Z"
    },
    {
      "event": "subscribed",
      "id": 7595871392,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHEv8yg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595871392",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T05:05:32Z"
    },
    {
      "event": "commented",
      "id": 1279893592,
      "node_id": "IC_kwDOABII585MSaBY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1279893592",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T05:08:24Z",
      "updated_at": "2022-10-16T19:22:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "This new push implements a new cryptographic scheme (also suggested by @RubenSomsen) that eliminates the need for PR https://github.com/bitcoin-core/secp256k1/pull/994 and https://github.com/bitcoin-core/secp256k1/pull/1143.\r\n\r\nThe new scheme basically works as follows:\r\n. If the keys used for silent payments generate a public key with odd y, then negate them when performing ECDH.\r\n. For x-only pubkeys, add 2 in front before running ECDH (so it becomes a public key with even y). \r\n. Tweak the original keys, not the negated ones.\r\n\r\n@1440000bytes This way, now all CI checks are passing successfully as the `secp256k1` lib is the same as the master branch.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1279893592",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7595873435,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHEv9Sb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595873435",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T05:08:25Z"
    },
    {
      "event": "subscribed",
      "id": 7595873437,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHEv9Sd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595873437",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T05:08:25Z"
    },
    {
      "event": "mentioned",
      "id": 7595873440,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHEv9Sg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595873440",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T05:08:25Z"
    },
    {
      "event": "subscribed",
      "id": 7595873442,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHEv9Si",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7595873442",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T05:08:25Z"
    },
    {
      "event": "commented",
      "id": 1280055958,
      "node_id": "IC_kwDOABII585MTBqW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1280055958",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-16T20:57:57Z",
      "updated_at": "2022-10-16T20:57:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "I forgot to mention that any previous index of `silentpayment` needs to be removed as it is not compatible with the last push.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1280055958",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-18T01:07:52Z",
      "updated_at": "2022-10-18T01:07:52Z",
      "source": {
        "issue": {
          "id": 675845695,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDY1MjU5MDEx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19690/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19690",
          "number": 19690,
          "state": "closed",
          "state_reason": null,
          "title": "util: improve FindByte() performance",
          "body": "This PR is strictly a performance improvement; there is no functional change. The `CBufferedFile::FindByte()` method searches for the next occurrence of the given byte in the file. Currently, this is done by explicitly inspecting each byte in turn. This PR takes advantage of `std::find()` to do the same more efficiently, improving its CPU runtime by a factor of about 25 in typical use. ",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 41,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19690",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19690",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19690.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19690.patch"
          },
          "closed_at": "2023-05-10T21:51:01Z",
          "created_at": "2020-08-10T03:49:28Z",
          "updated_at": "2023-05-10T21:51:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1147617433,
      "node_id": "PRR_kwDOABII585EZ0CZ",
      "url": null,
      "actor": null,
      "commit_id": "9fde79224621421245737d99f9be6c2b5a6c4ac2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1147617433",
      "submitted_at": "2022-10-19T15:50:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "commented",
      "id": 1284401633,
      "node_id": "IC_kwDOABII585Mjmnh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284401633",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T18:18:20Z",
      "updated_at": "2022-10-19T18:18:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "thanks for PoC'ing an implementation on this, @w0xlt ! in the comments on https://gist.github.com/RubenSomsen/c43b79517e7cb701ebf77eec6dbb46b8 you mention having a gist with steps for testing (https://gist.github.com/w0xlt/a7b498ac1ff14b8c292a22be789bd93f) but this link appears to be dead. do you have an updated link for testing?",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1284401633",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7624253673,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHGcODp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7624253673",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T18:18:20Z"
    },
    {
      "event": "subscribed",
      "id": 7624253704,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHGcOEI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7624253704",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T18:18:20Z"
    },
    {
      "event": "commented",
      "id": 1284413041,
      "node_id": "IC_kwDOABII585MjpZx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284413041",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T18:28:54Z",
      "updated_at": "2022-10-19T19:11:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi @josibake I removed old versions of the tutorial when the implementation and interface changed.\r\nThe current url is https://gist.github.com/w0xlt/c81277ae8677b6c0d3dd073893210875.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1284413041",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7624325960,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHGcftI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7624325960",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T18:28:54Z"
    },
    {
      "event": "subscribed",
      "id": 7624325971,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHGcftT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7624325971",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T18:28:55Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-21T13:27:57Z",
      "updated_at": "2022-10-21T13:27:57Z",
      "source": {
        "issue": {
          "id": 1332190397,
          "node_id": "PR_kwDOEEET9c481L0T",
          "url": "https://api.github.com/repos/bitcoin-core/gui/issues/650",
          "repository_url": "https://api.github.com/repos/bitcoin-core/gui",
          "labels_url": "https://api.github.com/repos/bitcoin-core/gui/issues/650/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin-core/gui/issues/650/comments",
          "events_url": "https://api.github.com/repos/bitcoin-core/gui/issues/650/events",
          "html_url": "https://github.com/bitcoin-core/gui/pull/650",
          "number": 650,
          "state": "open",
          "state_reason": null,
          "title": "Add Import to Wallet GUI",
          "body": "This PR does a few things\r\n- Refactors importmulti and importdescripters RPC code\r\n- Adds functions to interfaces\r\n- Adds GUI's for importpubkey, importprivkey, importaddress, importmulti, and importdescriptors RPCs\r\n- Adds QT Tests for all 5 import GUI's\r\n\r\n#### Things to get this merged\r\n- [ ] get the refactor merge on https://github.com/bitcoin/bitcoin/pull/26840\r\n- [ ] after that is done I will split the GUI PR into (importpubkey, importprivkey, importaddress), importmulti, importdescriptors each PR will have its respective tests. I will rebase to remove the commit for the refactor in those PR's it is in this PR so people can test. This is for easier code review\r\n\r\nThe dialogs are located under File -> Import to Wallet...\r\nThe options vary based on what is supported with your specific wallet type.\r\n\r\n| Dialogs are Located  |  Import Public Key Dialog  |\r\n|---|---|\r\n| ![image](https://user-images.githubusercontent.com/31669092/183477017-0423b0db-f84c-4729-9a73-b47544d88aaf.png)  | ![image](https://user-images.githubusercontent.com/31669092/183477129-0c212955-bbf3-4bc9-8089-cf2c1da7644d.png)  |\r\n\r\n| Import Private Key Dialog  | Import Address Dialog  |\r\n|---|---|\r\n|![image](https://user-images.githubusercontent.com/31669092/183477391-84ea6224-e7f5-4fba-a830-2e7fe3effcec.png)   |  ![image](https://user-images.githubusercontent.com/31669092/183477525-c3ba8cdc-ae0f-4113-8e0b-86db548f1e33.png) |\r\n\r\n| Import Multi Dialog scriptPubKey Tab  | Import Multi Dialog Descriptor Tab  |\r\n|---|---|\r\n| ![image](https://user-images.githubusercontent.com/31669092/183477928-232be9c4-fd64-4a20-91ba-00ebe41d66a6.png)  | ![image](https://user-images.githubusercontent.com/31669092/183478127-0b3c8aed-54d9-4fb4-a583-0a6bb5a46d28.png)  |\r\n\r\n|  Import Descriptors Dialog  |\r\n|---|\r\n|  ![image](https://user-images.githubusercontent.com/31669092/183478374-7f9c174d-0067-4812-9556-9e34e813b362.png) |\r\n\r\nFor Range before I had a lineedit with placeholders begin and end, @achow101 suggested I used QSpinBox, but it doesn't have placeholder text. So Currently if both are default value it counts as no input. It would look very nice if I implemented a custom QAbstractSpinBox with placeholder text, but I am not sure if it is overkill for this PR.",
          "user": {
            "login": "KolbyML",
            "id": 31669092,
            "node_id": "MDQ6VXNlcjMxNjY5MDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/31669092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KolbyML",
            "html_url": "https://github.com/KolbyML",
            "followers_url": "https://api.github.com/users/KolbyML/followers",
            "following_url": "https://api.github.com/users/KolbyML/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/KolbyML/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/KolbyML/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/KolbyML/subscriptions",
            "organizations_url": "https://api.github.com/users/KolbyML/orgs",
            "repos_url": "https://api.github.com/users/KolbyML/repos",
            "events_url": "https://api.github.com/users/KolbyML/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/KolbyML/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 2927906211,
              "node_id": "MDU6TGFiZWwyOTI3OTA2MjEx",
              "url": "https://api.github.com/repos/bitcoin-core/gui/labels/Wallet",
              "name": "Wallet",
              "description": "",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5353934559,
              "node_id": "LA_kwDOEEET9c8AAAABPx6O3w",
              "url": "https://api.github.com/repos/bitcoin-core/gui/labels/CI%20failed",
              "name": "CI failed",
              "color": "ededed",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin-core/gui/pulls/650",
            "html_url": "https://github.com/bitcoin-core/gui/pull/650",
            "diff_url": "https://github.com/bitcoin-core/gui/pull/650.diff",
            "patch_url": "https://github.com/bitcoin-core/gui/pull/650.patch"
          },
          "created_at": "2022-08-08T17:43:21Z",
          "updated_at": "2023-08-02T19:58:01Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1287543056,
      "node_id": "IC_kwDOABII585MvlkQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1287543056",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-21T23:57:35Z",
      "updated_at": "2022-10-23T14:24:11Z",
      "author_association": "NONE",
      "body": "> This new push implements a new cryptographic scheme (also suggested by @RubenSomsen) that eliminates the need for PR [bitcoin-core/secp256k1#994](https://github.com/bitcoin-core/secp256k1/pull/994) and [bitcoin-core/secp256k1#1143](https://github.com/bitcoin-core/secp256k1/pull/1143).\r\n> \r\n> The new scheme basically works as follows: . If the keys used for silent payments generate a public key with odd y, then negate them when performing ECDH. . For x-only pubkeys, add 2 in front before running ECDH (so it becomes a public key with even y). . Tweak the original keys, not the negated ones.\r\n> \r\n> @1440000bytes This way, now all CI checks are passing successfully as the `secp256k1` lib is the same as the master branch.\r\n\r\nStill waiting for response particularly about the last question :  https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021003.html",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1287543056",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7644326772,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHHoyt0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7644326772",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-21T23:57:35Z"
    },
    {
      "event": "subscribed",
      "id": 7644326775,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHHoyt3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7644326775",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-21T23:57:35Z"
    },
    {
      "event": "mentioned",
      "id": 7644326778,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHHoyt6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7644326778",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-21T23:57:36Z"
    },
    {
      "event": "subscribed",
      "id": 7644326780,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHHoyt8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7644326780",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-21T23:57:36Z"
    },
    {
      "event": "commented",
      "id": 1288031174,
      "node_id": "IC_kwDOABII585MxcvG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1288031174",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-23T07:05:15Z",
      "updated_at": "2022-10-23T07:05:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "@1440000bytes I haven't accessed ML for a while.\r\n\r\nI replied to the email, but regarding the last question: the warning was suggested by @aureleoules in https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1276160738 and the reason was a discussion in this PR about users thinking that each address would come from a different key and not the same key.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1288031174",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7647824856,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHH2IvY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7647824856",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-23T07:05:16Z"
    },
    {
      "event": "subscribed",
      "id": 7647824858,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHH2Iva",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7647824858",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-23T07:05:16Z"
    },
    {
      "event": "mentioned",
      "id": 7647824862,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHH2Ive",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7647824862",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-23T07:05:16Z"
    },
    {
      "event": "subscribed",
      "id": 7647824865,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHH2Ivh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7647824865",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-23T07:05:16Z"
    },
    {
      "event": "commented",
      "id": 1290758076,
      "node_id": "IC_kwDOABII585M72e8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1290758076",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-25T15:34:47Z",
      "updated_at": "2022-10-25T15:36:58Z",
      "author_association": "MEMBER",
      "body": "> In cases where you don't want people to know that you're the same entity, the identifier is insufficient – you'll need a completely separate Silent Payment address which (roughly) doubles your scanning efforts, so it's much more costly in terms of performance.\r\n\r\nIf #25957 gets merged, would this still be an issue? If I'm not mistaken, the double-scanning efforts problem mostly apply when importing a backup of an sp descriptor or syncing the wallet when the chain is out-of-date of many blocks. Which is not often done, with #25957 the issue should be mitigated anyway?\r\nSo, would it be reasonable to implement both the identifier feature and the multi-sp-identity feature per wallet for those who wish/need full privacy?\r\n\r\n--\r\n\r\nAlso, rescanning a sp descriptor makes `bitcoind` crash with the following assert:\r\n> bitcoind: wallet/wallet.cpp:1315: bool wallet::CWallet::VerifySilentPayment(const CTransaction &, std::vector<std::tuple<CKey, int32_t>> &): Assertion `xOnlyPubKey.IsFullyValid()' failed.\r\n\r\nTo reproduce:\r\n```\r\n./src/bitcoind -testnet -silentpaymentindex\r\n./src/bitcoin-cli -testnet -named createwallet wallet_name=sp_crash silent_payment=true\r\n./src/bitcoin-cli -testnet -rpcwallet=sp_crash importdescriptors '[{\r\n      \"desc\": \"sp(cTXUgq3oC65nkmWjN8Q1eg1wsMPZBr526Ynfecpy4XmKtztjomrg)#vshe5dpl\", \r\n      \"timestamp\": 1607448174,\r\n      \"active\": true,\r\n      \"internal\": false,\r\n      \"next\": 0\r\n}]'\r\n```\r\n\r\nAny `sp` descriptor seems to lead to the crash.\r\n\r\nI haven't debugged the issue but my guess is that the scanning process encountered a taproot output with an invalid `xOnlyPubKey` in the block close to the timestamp `1607448174` (~2020-12-08), which should just be skipped instead of being asserted valid?",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1290758076",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1292871814,
      "node_id": "IC_kwDOABII585ND6iG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1292871814",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T02:13:01Z",
      "updated_at": "2022-10-27T02:14:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "@aureleoules thanks for testing. They are really helpful.\r\nThe problematic output is https://blockstream.info/testnet/address/tb1pqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqkqqqqqqqqqkkkkkkf5,  whose scriptPubKey is `51200000000000000000000000000000000000000000000000000000000000000000`.\r\n\r\nI didn't know it's a valid Taproot script as the public key is invalid. The code assumes that if `TxoutType whichType = Solver(vout.scriptPubKey, solutions);` returned a `TxoutType::WITNESS_V1_TAPROOT`, both the script and the public key are valid.\r\n\r\nBut the public key in the above scriptPubKey is evidently false.\r\n\r\nI will change this validation and release a new version with the new address format, described in https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1001990248.\r\n\r\nRegarding #25957, I think it's incompatible with Silent Payments, which needs to tweak the keys for each transaction. AFAIK, there is no way to combine the silent payment scheme with Golomb-coded sets.\r\n\r\n",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1292871814",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7678107767,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHJpqB3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7678107767",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T02:13:01Z"
    },
    {
      "event": "subscribed",
      "id": 7678107770,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHJpqB6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7678107770",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T02:13:02Z"
    },
    {
      "event": "commented",
      "id": 1292901949,
      "node_id": "IC_kwDOABII585NEB49",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1292901949",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T02:58:34Z",
      "updated_at": "2022-10-27T02:58:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "The following change will allow importing the descriptor.\r\n\r\n> wallet/wallet.cpp:1315\r\n```diff\r\n-        assert(xOnlyPubKey.IsFullyValid());\r\n+        if (!xOnlyPubKey.IsFullyValid()) {\r\n+            continue;\r\n+       }\r\n```\r\n\r\nIt might be better to use `-rpcclienttimeout=0` when importing or scanning `sp` descriptors.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1292901949",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7693759870,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHKlXV-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7693759870",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-28T18:14:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7693786169,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHKldw5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7693786169",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-28T18:18:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7693871891,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHKlysT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7693871891",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-28T18:33:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7693958548,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHKmH2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7693958548",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-28T18:48:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7694573681,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHKoeBx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7694573681",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-28T20:18:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7695997082,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHKt5ia",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7695997082",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-29T01:41:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7696205169,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHKusVx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7696205169",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-29T03:59:16Z"
    },
    {
      "event": "commented",
      "id": 1295745114,
      "node_id": "IC_kwDOABII585NO4Ba",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1295745114",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-29T06:00:29Z",
      "updated_at": "2022-10-29T06:00:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "The last push proposes and implements a new address format.\r\nThe previous format was: `HRP + 00 (two digits) + V1 Segwit address (bech32m)`\r\n\r\nBut there is no need for a segwit script, as detailed in https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1002654972. A silent payment address only needs to expose the public key and identifier.\r\nSo the new format is:\r\n\r\n`HRP + identifier (variable length) + compressed public key (both identifier and pubkey are in bech32m format)`\r\n\r\nThe reason to use the compressed public key instead of the x-only pubkey is to save an operation and simplify the code.\r\nIf x-only pubkey were used instead of compressed public key, it would be necessary to check if the private key generates a public key with odd y and negates it if so.\r\nExposing the prefix byte in the public key makes this unnecessary.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1295745114",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-29T08:42:07Z",
      "updated_at": "2022-10-29T08:42:07Z",
      "source": {
        "issue": {
          "id": 652547610,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTk1Mjk3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19461/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
          "number": 19461,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-gui -ipcconnect option",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\n**This is based on #10102 + #19460.** The non-base commits are:\r\n\r\n- [`5f91aa3d8b47` multiprocess: Add bitcoin-gui -ipcconnect option](https://github.com/bitcoin/bitcoin/pull/19461/commits/5f91aa3d8b47cee97e625c3b5689a37dbd941eff)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-gui` that connects the GUI to an existing `bitcoin-node` process already running in the background instead of spawning a new `bitcoin-node` process. This allows the GUI to be started and stopped independently of the node. By default with this change, `bitcoin-gui` will check if a `<datadir>/sockets/node.sock` socket exists and try to connect to that. If that doesn't work, it will spawn a new node process and start up the same way it did before this PR.\r\n\r\nThe default `bitcoin-gui` connect option is `-ipcconnect=auto`, which tries to connect if possible as described above, and spawns a new `bitcoin-node` process if not possible. Other supported options are `-noipcconnect` to never connect to an existing node and always spawn a new one, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nWith this PR, basic functionality works and gui instances can connect and disconnect from a running node. But there are rough edges: If a gui process doesn't shut down cleanly, the node can see unhandled IpcExceptions, and if node command line options are passed to `bitcoin-gui` and `bitcoin-gui` connects to an exiting bitcoin-node process instead of spawning a new one, the node options will be silently ignored. \r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19461",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19461",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19461.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19461.patch"
          },
          "created_at": "2020-07-07T19:00:11Z",
          "updated_at": "2023-05-30T16:04:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-29T08:46:15Z",
      "updated_at": "2022-10-29T08:46:15Z",
      "source": {
        "issue": {
          "id": 652543635,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTkyMDUz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19460/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
          "number": 19460,
          "state": "open",
          "state_reason": null,
          "title": "multiprocess: Add bitcoin-wallet -ipcconnect option",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\n**This is based on #10102.** The non-base commits are:\r\n\r\n- [`bbefbd3c199b` multiprocess: Add -ipcconnect and -ipcbind options](https://github.com/bitcoin/bitcoin/pull/19460/commits/bbefbd3c199b189188d6427b4564b17477c6d50e)\r\n\r\n---\r\n\r\nBuilding on #10102, this adds an `-ipcconnect` option to `bitcoin-wallet` and an `-ipcbind` option to `bitcoin-node` (both enabled by default in multiprocess builds) so bitcoin node will listen on a `<datadir>/sockets/node.sock` unix socket, and `bitcoin-wallet` will connect to it.\r\n\r\nThe idea is that `bitcoin-wallet` can be extended in the future to have some online functionality. For example, there could be a `bitcoin-wallet sync` command that will update balances and sync latest transactions to an unloaded wallet, or a `bitcoin-wallet serve` subcommand that loads a wallet and serves RPC requests, or a `bitcoin-wallet shell` subcommand that allows running RPC methods interactively like the GUI console, or just general support for `bitcoin-wallet <rpc method> <rpc params>` invocations suggested https://github.com/bitcoin/bitcoin/pull/13926#issuecomment-455187379.\r\n\r\nThis PR is small and doesn't do much. The only visible change is that `bitcoin-wallet` now checks whether a node socket exists on startup and prints \"Connected to IPC address\" if it can connect it it.\r\n\r\nThe default `bitcoin-wallet` connect option is `-ipcconnect=auto`, which connects if possible as described above, and proceeds offline if not possible. Other supported options are `-noipcconnect` to disable ipc, `-ipcconnect` to require a connection and fail if it can't be established, and `-ipcconnect=unix:<socket>` to require a connection and use a custom socket path.\r\n\r\nThese changes require multiprocess support and this PR has no effect unless bitcoin is configured with `--enable-multiprocess` as described in [doc/multiprocess.md](https://github.com/bitcoin/bitcoin/blob/master/doc/multiprocess.md)\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19460",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19460",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19460.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19460.patch"
          },
          "created_at": "2020-07-07T18:53:19Z",
          "updated_at": "2023-05-30T16:04:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-29T10:12:34Z",
      "updated_at": "2022-10-29T10:12:34Z",
      "source": {
        "issue": {
          "id": 217385623,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MTEyODQ2NDMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10102/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
          "number": 10102,
          "state": "open",
          "state_reason": null,
          "title": "Multiprocess bitcoin",
          "body": "This PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/projects/10).\r\n\r\n---\r\n\r\nThis PR adds an `--enable-multiprocess` configure option which builds new `bitcoin-node`, `bitcoin-wallet`, and `bitcoin-gui` executables with relevant functionality isolated into different processes. See [doc/design/multiprocess.md](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/doc/design/multiprocess.md) for usage details and future plans.\r\n\r\nThe change is implemented by adding a new [`Init`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/init.h) interface that spawns new wallet and node subprocesses that can be controlled over a [socketpair](http://man7.org/linux/man-pages/man2/socketpair.2.html) by calling [`Node`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/node.h), [`Wallet`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/wallet.h), and [`ChainClient`](https://github.com/ryanofsky/bitcoin/blob/pr/ipc/src/interfaces/chain.h) methods. When running with split processes, you can see the IPC messages going back and forth in `-debug=1` output. Followup PR's #19460 and #19461 add `-ipcbind` and `-ipcconnect` options that allow more flexibility in how processes are connected.\r\n\r\nThe IPC protocol used is Cap'n Proto, but this could be swapped out for another protocol. Cap'n Proto types and libraries are only accessed in the [src/ipc/capnp/](https://github.com/ryanofsky/bitcoin/tree/pr/ipc/src/ipc/capnp) directory, and not in any public headers or other parts of bitcoin code.\r\n\r\n---\r\n\r\nSlides from a presentation describing this change are available on [google drive](https://docs.google.com/presentation/d/1AeJ-7gD-dItUgs5yH-HoEzLvXaEWe_2ZiGUUxYIXcws/edit). Demo code used in the presentation was from an older version this PR (tag [ipc.21](https://github.com/ryanofsky/bitcoin/releases/tag/pr%2Fipc.21), [commits](https://github.com/ryanofsky/bitcoin/compare/master...pr/ipc.21)).\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 78,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10102",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/10102",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/10102.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/10102.patch"
          },
          "created_at": "2017-03-27T21:48:26Z",
          "updated_at": "2023-06-21T07:40:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1161566117,
      "node_id": "PRR_kwDOABII585FPBel",
      "url": null,
      "actor": null,
      "commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Left some additional code review comments.\r\n\r\n-- \r\n\r\nI deleted the old `silentpaymentindex`, re-compiled with the new changes and ran `./src/bitcoind -testnet -silentpaymentindex`\r\nand got\r\n```\r\n2022-10-31T10:22:33Z Syncing silentpaymentindex with block chain from height 2377655\r\nbitcoind: silentpayment.cpp:276: std::variant<CPubKey, XOnlyPubKey> silentpayment::ExtractPubkeyFromInput(const Coin &, const CTxIn &): Assertion `scriptWitness.stack.at(1).size() == 33' failed.\r\n```",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1161566117",
      "submitted_at": "2022-10-31T10:24:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "commented",
      "id": 1296911815,
      "node_id": "IC_kwDOABII585NTU3H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1296911815",
      "actor": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-31T10:49:13Z",
      "updated_at": "2022-10-31T10:49:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think this is very cool work and hopefully will be added to some ecosystem wallets in future but unsure whether it should be included in the scope for the Core wallet (the Core wallet is already attempting to do a lot e.g. complex scripting support and has been subject to a number of significant re-architectures recently). I guess that decision falls to the maintainers and long term contributors of the Core wallet as if this is merged it will need to be maintained by them. Scope creep is hard to push back on especially when the work is genuinely promising and interesting but it has to be done sometimes unfortunately.\r\n\r\nPerhaps the wallet scope discussion can happen (if it needs to happen) in an issue as to not disrupt the review of this PR. ",
      "user": {
        "login": "michaelfolkson",
        "id": 16323900,
        "node_id": "MDQ6VXNlcjE2MzIzOTAw",
        "avatar_url": "https://avatars.githubusercontent.com/u/16323900?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/michaelfolkson",
        "html_url": "https://github.com/michaelfolkson",
        "followers_url": "https://api.github.com/users/michaelfolkson/followers",
        "following_url": "https://api.github.com/users/michaelfolkson/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/michaelfolkson/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/michaelfolkson/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
        "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
        "repos_url": "https://api.github.com/users/michaelfolkson/repos",
        "events_url": "https://api.github.com/users/michaelfolkson/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1296911815",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "commented",
      "id": 1296923395,
      "node_id": "IC_kwDOABII585NTXsD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1296923395",
      "actor": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-31T11:01:00Z",
      "updated_at": "2022-10-31T11:01:36Z",
      "author_association": "NONE",
      "body": "> I think this is very cool work and hopefully will be added to some ecosystem wallets in future but unsure whether it should be included in the scope for the Core wallet (the Core wallet is already attempting to do a lot e.g. complex scripting support and has been subject to a number of significant re-architectures recently). I guess that decision falls to the maintainers and long term contributors of the Core wallet as if this is merged it will need to be maintained by them. Scope creep is hard to push back on especially when the work is genuinely promising and interesting but it has to be done sometimes unfortunately.\r\n> \r\n> Perhaps the wallet scope discussion can happen (if it needs to happen) in an issue as to not disrupt the review of this PR.\r\n\r\nThis is a basic feature that should exist in every bitcoin wallet.\r\n\r\nI appreciate the specs by @RubenSomsen, code by @w0xlt and respect all the reviewers.\r\n\r\nWould love to see this merged and available in v25.0 so that every bitcoin core user can share their silent payment address on social media and accept payments with privacy.",
      "user": {
        "login": "ghost",
        "id": 10137,
        "node_id": "MDQ6VXNlcjEwMTM3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ghost",
        "html_url": "https://github.com/ghost",
        "followers_url": "https://api.github.com/users/ghost/followers",
        "following_url": "https://api.github.com/users/ghost/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ghost/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ghost/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
        "organizations_url": "https://api.github.com/users/ghost/orgs",
        "repos_url": "https://api.github.com/users/ghost/repos",
        "events_url": "https://api.github.com/users/ghost/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ghost/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1296923395",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7703192054,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHLJWH2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7703192054",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-31T11:01:01Z"
    },
    {
      "event": "subscribed",
      "id": 7703192068,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHLJWIE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7703192068",
      "actor": {
        "login": "RubenSomsen",
        "id": 9066803,
        "node_id": "MDQ6VXNlcjkwNjY4MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9066803?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/RubenSomsen",
        "html_url": "https://github.com/RubenSomsen",
        "followers_url": "https://api.github.com/users/RubenSomsen/followers",
        "following_url": "https://api.github.com/users/RubenSomsen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/RubenSomsen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/RubenSomsen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/RubenSomsen/subscriptions",
        "organizations_url": "https://api.github.com/users/RubenSomsen/orgs",
        "repos_url": "https://api.github.com/users/RubenSomsen/repos",
        "events_url": "https://api.github.com/users/RubenSomsen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/RubenSomsen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-31T11:01:01Z"
    },
    {
      "event": "mentioned",
      "id": 7703192088,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHLJWIY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7703192088",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-31T11:01:01Z"
    },
    {
      "event": "subscribed",
      "id": 7703192096,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHLJWIg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7703192096",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-31T11:01:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7708998405,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHLffsF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7708998405",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T00:15:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7710027828,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHLjbA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7710027828",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T04:30:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7710258541,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHLkTVt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7710258541",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T05:31:09Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-02T14:08:55Z",
      "updated_at": "2022-11-02T14:08:55Z",
      "source": {
        "issue": {
          "id": 1371447307,
          "node_id": "PR_kwDOABII584-3WMd",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26076",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26076/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26076/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26076/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26076",
          "number": 26076,
          "state": "closed",
          "state_reason": null,
          "title": "Switch hardened derivation marker to h",
          "body": "This makes it easier to handle descriptor strings manually, especially when importing from another Bitcoin Core wallet.\r\n\r\nFor example the `importdescriptors` RPC call is easiest to use `h` as the marker: `'[\"desc\": \".../0h/...\"]'`, avoiding the need for escape characters. With this change `listdescriptors` will use `h`, so you can copy-paste the result, without having to add escape characters or switch `'` to 'h' manually.\r\n\r\nBoth markers can still be parsed.\r\n\r\nThe `hdkeypath` field in `getaddressinfo` is also impacted by this change, except for legacy wallets. The latter is to prevent accidentally breaking ancient software that uses our legacy wallet. \r\n\r\nSee discussion in #15740",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26076",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26076",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26076.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26076.patch"
          },
          "closed_at": "2023-05-08T17:32:07Z",
          "created_at": "2022-09-13T13:19:21Z",
          "updated_at": "2023-05-15T16:01:12Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1305678284,
      "node_id": "IC_kwDOABII585N0xHM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1305678284",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-07T14:13:41Z",
      "updated_at": "2022-11-07T14:13:41Z",
      "author_association": "MEMBER",
      "body": "I can no longer use `sendtoaddress` nor  `generatetoaddress` to send coins to an sp address:\r\n```bash\r\n./src/bitcoin-cli -regtest -named -rpcwallet=test sendtoaddress address=sprt1qgqqygu4ws7ggfa3sewh5zmr9pthrklqvllh7d97z8ufx6eskyw25tp8af8hwk amount=1 fee_rate=25\r\nerror code: -5\r\nerror message:\r\nInvalid Bitcoin address: sprt1qgqqygu4ws7ggfa3sewh5zmr9pthrklqvllh7d97z8ufx6eskyw25tp8af8hwk\r\n```\r\nIt used to work in 62c0c18a69559270a0a420fc48e88d50a632062c at least.\r\n\r\nI verified that the `importdescriptors` issue mentioned above is fixed and can also now sync the `silentpaymentindex`.",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1305678284",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-09T16:07:57Z",
      "updated_at": "2022-11-09T16:07:57Z",
      "source": {
        "issue": {
          "id": 1437426087,
          "node_id": "PR_kwDOABII585CR2K-",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26462",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26462/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26462/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26462/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26462",
          "number": 26462,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: fix crash on loading descriptor wallet containing legacy key type entries",
          "body": "Loading a descriptor wallet currently leads to a segfault if a legacy key type entry is present that can be deserialized successfully and needs SPKman-interaction. To reproduce with a \"cscript\" entry (see second commit for details):\r\n\r\n```\r\n$ ./src/bitcoin-cli createwallet crashme\r\n$ ./src/bitcoin-cli unloadwallet crashme\r\n$ sqlite3 ~/.bitcoin/wallets/crashme/wallet.dat\r\nSQLite version 3.38.2 2022-03-26 13:51:10\r\nEnter \".help\" for usage hints.\r\nsqlite> INSERT INTO main VALUES(x'07637363726970740000000000000000000000000000000000000000', x'00');\r\n$ ./src/bitcoin-cli loadwallet crashme\r\n\r\n--- bitcoind output: ---\r\n2022-11-06T13:51:01Z Using SQLite Version 3.38.2\r\n2022-11-06T13:51:01Z Using wallet /home/honey/.bitcoin/wallets/crashme\r\n2022-11-06T13:51:01Z init message: Loading wallet…\r\n2022-11-06T13:51:01Z [crashme] Wallet file version = 10500, last client version = 249900\r\n\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nBackground: In the wallet key-value-loading routine, most legacy type entries require a `LegacyScriptPubKeyMan` instance after successful deserialization. On a descriptor wallet, creating that (via method `GetOrCreateLegacyScriptPubKeyMan`) fails and then leads to a null-pointer dereference crash. E.g. for CSCRIPT: https://github.com/bitcoin/bitcoin/blob/50422b770a40f5fa964201d1e99fd6b5dc1653ca/src/wallet/walletdb.cpp#L589-L594\r\n\r\n\r\n~~This PR fixes this by simply ignoring legacy entries if the wallet flags indicate that we have a descriptor wallet. The second commits adds a regression test to the descriptor wallet's functional test (fortunately Python includes sqlite3 support in the standard library).~~\r\n\r\n~~Probably it would be even better to throw a warning to the user if unexpected legacy entries are found in descriptor wallets, but I think as a first mitigation everything is obvisouly better than crashing. As far as I'm aware, descriptor wallets created/migrated by Bitcoin Core should never end up in a state containing legacy type entries though.~~\r\n\r\nThis PR fixes this by throwing an error if legacy entries are found in descriptor wallets on loading.",
          "user": {
            "login": "theStack",
            "id": 91535,
            "node_id": "MDQ6VXNlcjkxNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/theStack",
            "html_url": "https://github.com/theStack",
            "followers_url": "https://api.github.com/users/theStack/followers",
            "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
            "organizations_url": "https://api.github.com/users/theStack/orgs",
            "repos_url": "https://api.github.com/users/theStack/repos",
            "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/theStack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26462",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26462",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26462.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26462.patch"
          },
          "closed_at": "2022-12-05T22:38:07Z",
          "created_at": "2022-11-06T14:36:17Z",
          "updated_at": "2023-08-02T18:35:31Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7785898281,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHQE2Ep",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7785898281",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T18:15:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7785984736,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHQFLLg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7785984736",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T18:26:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7786040997,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHQFY6l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7786040997",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T18:34:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7786085128,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHQFjsI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7786085128",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T18:41:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7786137452,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHQFwds",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7786137452",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T18:49:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7786257760,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHQGN1g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7786257760",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T19:05:35Z"
    },
    {
      "event": "commented",
      "id": 1310945480,
      "node_id": "IC_kwDOABII585OI3DI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310945480",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T21:46:29Z",
      "updated_at": "2022-11-10T21:46:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "@aureleoules Thanks for the continuous testing. \r\nThe reason `sendtoaddress` was not able to recognize the sp address is that this is no longer a segwit script.\r\nSince the last push, the address format is `identifier + pubkey` but in the last version it has changed again as described in the comment below.\r\nI also implemented sp support for `sendmany` and `sendtoaddress` in this version.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1310945480",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7787305449,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHQKNnp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7787305449",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T21:46:29Z"
    },
    {
      "event": "subscribed",
      "id": 7787305458,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHQKNny",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7787305458",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T21:46:29Z"
    },
    {
      "event": "commented",
      "id": 1310949739,
      "node_id": "IC_kwDOABII585OI4Fr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1310949739",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-10T21:49:44Z",
      "updated_at": "2022-11-10T21:53:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "New update:\r\n\r\n. This new version implements a new scheme, which uses two keys (scan and spend keys). This scheme allows watch-only wallets for silent payments.\r\n\r\n. It also implements a new address format `HRP + spend x-only pubkey + scan x-only pubkey`, as specified in https://gist.github.com/RubenSomsen/c43b79517e7cb701ebf77eec6dbb46b8#scanning-key. Example:\r\n\r\n```bash\r\n$ ./src/bitcoin-cli -regtest getsilentaddress 'donation'\r\n{\r\n  \"address\": \"sprt1mx0828tmms6v4dzjvwyp8w3aus350k9fthlrj8v8zxmp9w2tf88l3kqh6rr98xx05mv444npzkj9j7wrxzj9tc7v0w7jl0xhpc6wzpc0l5gcq\",\r\n  \"label\": \"donation\",\r\n  \"identifier\": 1\r\n}\r\n\r\n$ ./src/bitcoin-cli -regtest decodesilentaddress \"sprt1mx0828tmms6v4dzjvwyp8w3aus350k9fthlrj8v8zxmp9w2tf88l3kqh6rr98xx05mv444npzkj9j7wrxzj9tc7v0w7jl0xhpc6wzpc0l5gcq\"\r\n{\r\n  \"address\": \"sprt1mx0828tmms6v4dzjvwyp8w3aus350k9fthlrj8v8zxmp9w2tf88l3kqh6rr98xx05mv444npzkj9j7wrxzj9tc7v0w7jl0xhpc6wzpc0l5gcq\",\r\n  \"scan_pubkey\": \"d99e751d7bdc34cab452638813ba3de42347d8a95dfe391d8711b612b94b49cf\",\r\n  \"spend_pubkey\": \"f8d817d0c65398cfa6d95ad66115a45979c330a455e3cc7bbd2fbcd70e34e107\",\r\n  \"label\": \"donation\",\r\n  \"identifier\": 1\r\n}\r\n```\r\n\r\n. Adds support for silent payment in `sendmany` and `sendtoaddress`\r\n\r\n. Improvements in `silentpayment.{cpp,h}`. This class no longer manages `secp256k1_context` itself and no longer interacts directly with  `secp256k1` library.\r\n\r\n. Silent watch-only wallets have not yet been implemented. Some architectural improvements are needed first.\r\n\r\nSupported commands (RPC) so far:\r\n. send\r\n. walletcreatefundedpsbt\r\n. sendmany\r\n. sendtoaddress\r\n. scantxoutset\r\n",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1310949739",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 7794566558,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHQl6We",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7794566558",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-11T19:29:30Z"
    },
    {
      "event": "subscribed",
      "id": 7794566565,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHQl6Wl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7794566565",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-11T19:29:30Z"
    },
    {
      "event": "commented",
      "id": 1314506955,
      "node_id": "IC_kwDOABII585OWcjL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1314506955",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-14T22:45:34Z",
      "updated_at": "2022-11-14T22:45:34Z",
      "author_association": "MEMBER",
      "body": "I was able to fully sync the silentpaymentindex on `mainnet` and `testnet` (respective size 23M and 1.2M).\r\nI also ran the following steps:\r\n- Create SP wallet\r\n- Send coins to it\r\n- Export SP descriptor in new wallet\r\n- Check balances match\r\n\r\nAnd I imported an sp descriptor on `mainnet` and `testnet` with timestamp 0 successfully.\r\n\r\nWill test further later.",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1314506955",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-29T19:59:39Z",
      "updated_at": "2022-11-29T19:59:39Z",
      "source": {
        "issue": {
          "id": 1467243567,
          "node_id": "PR_kwDOABII585D2F4R",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26596",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26596/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26596/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26596/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26596",
          "number": 26596,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Migrate legacy wallets to descriptor wallets without requiring BDB",
          "body": "Currently migrating to descriptor wallets requires having BDB available. In order to remove BDB from the project, we need to be able to do these migrations without BDB. This PR adds `BerkeleyRODatabase` which is an independent implementation of a BDB file parser. It can be used to read uncorrupted BDB files and extract all of their records. This is used for both the wallettool's `dump` command, and `migratewallet`.\r\n\r\nBased on #26606 ",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26596",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26596",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26596.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26596.patch"
          },
          "created_at": "2022-11-28T23:46:50Z",
          "updated_at": "2023-08-02T13:41:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 7959807361,
      "node_id": "LE_lADOABII585H5eBJzwAAAAHacQWB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7959807361",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-05T22:51:26Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8040586341,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHfQZxl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8040586341",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T19:33:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8040688786,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHfQyyS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8040688786",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T19:49:15Z"
    },
    {
      "event": "unlabeled",
      "id": 8041354288,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAHfTVQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8041354288",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-14T20:40:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-15T00:52:19Z",
      "updated_at": "2022-12-15T00:52:19Z",
      "source": {
        "issue": {
          "id": 1493365643,
          "node_id": "PR_kwDOABII585FRc85",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26691",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26691/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26691/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26691/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26691",
          "number": 26691,
          "state": "closed",
          "state_reason": null,
          "title": "Update secp256k1 subtree to libsecp256k1 version 0.2.0",
          "body": "Now that libsecp256k1 has a release (https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021271.html), update the subtree to match it.\r\n\r\nThe changes themselves are not very impactful for Bitcoin Core, but include:\r\n* It's no longer needed to specify whether contexts are for signing or verification or both (all contexts support everything), so make use of that in this PR.\r\n* Verification operations can use the static context now, removing the need for some infrastructure in pubkey.cpp to make sure a context exists.\r\n* Most modules are now enabled by default, so we can drop explicit enabling for them.\r\n* CI improvements (in particular, MSVC and more recent MacOS)\r\n* Introduction of an internal int128 type, which has no effect for GCC/Clang builds, but enables 128-bit multiplication in MSVC, giving a ~20% speedup there (but still slower than GCC/Clang).\r\n* Release process changes (process documentation, changelog, ...).\r\n",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/56",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/56",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/56/labels",
            "id": 7733968,
            "node_id": "MI_kwDOABII584AdgLQ",
            "number": 56,
            "state": "closed",
            "title": "25.0",
            "description": "",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 38,
            "created_at": "2022-03-03T18:51:29Z",
            "updated_at": "2023-05-25T13:24:42Z",
            "closed_at": "2023-05-25T13:24:42Z"
          },
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26691",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26691",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26691.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26691.patch"
          },
          "closed_at": "2023-01-13T09:41:23Z",
          "created_at": "2022-12-13T04:50:18Z",
          "updated_at": "2023-01-13T09:41:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-15T01:14:59Z",
      "updated_at": "2022-12-15T01:14:59Z",
      "source": {
        "issue": {
          "id": 1483331058,
          "node_id": "PR_kwDOABII585Et4-s",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26656",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26656/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26656/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26656/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26656",
          "number": 26656,
          "state": "closed",
          "state_reason": null,
          "title": "tests: Improve runtime of some tests when `--enable-debug`",
          "body": "When configured with `--enable-debug`, many tests become dramatically slower. These slow downs are particularly noticed in tests that generate a lot of blocks in separate calls, make a lot of RPC calls, or send a lot of data from the test framework's P2P connection. This PR aims to improve the runtime of some of the slower tests and improve the overall runtime of the test runner. This has improved the runtime of the test runner from ~400s to ~140s on my computer.\r\n\r\nThe slowest test by far was `wallet_import_rescan.py`. This was taking ~320s. Most of that time was spent waiting for blocks to be mined and then synced to the other nodes. It was generating a new block for every new transaction it was creating in a setup loop. However it is not necessary to have one tx per block. By mining a block only every 10 txs, the runtime is improved to ~61s.\r\n\r\nThe second slowest test was `feature_fee_estimation.py`. This test spends most of its time waiting for RPCs to respond. I was able to improve its runtime by batching RPC requests. This has improved the runtime from ~201s to ~140s.\r\n\r\nIn `feature_taproot.py`, the test was constructing a Python `CScript` using a very large list of `OP_CHECKSIG`s. The constructor for the Python implementation of `CScript` was iterating this list in order to create a `bytes` from it even though a `bytes` could be created from it without iterating. By making the `bytes` before passing it into the constructor, we are able to improve this test's runtime from ~131s to ~106s.\r\n\r\nAlthough `interface_rpc.py` was not typically a slow test, I found that it would occasionally have a super long runtime. It typically takes ~7s, but I have observed it taking >400s to run on occasion. This longer runtime occurs more often when `--enable-debug`. This long runtime was caused by the \"exceeding work queue\" test which is really just trying to trigger a race condition. In this test, it would create a few threads and try an RPC in a loop in the hopes that eventually one of the RPCs would be added to the work queue while another was processing. It used `getrpcinfo` for this, but this function is fairly fast. I believe what was happening was that with `--enable-debug`, all of the code for receiving the RPC would often take longer to run than the RPC itself, so the majority of the requests would succeed, until we got lucky after 10's of thousands of requests. By changing this to use a slow RPC, the race condition can be triggered more reliably, and much sooner as well. I've used `waitfornewblock` with a 500ms timeout. This improves the runtime to ~3s consistently.\r\n\r\nThe last test I've changed was `rpc_packages.py`. This test was one of the higher runtime variability tests. The main source of this variation appears to be waiting for the test node to relay a transaction to the test framework's P2P connection. By whitelisting that peer, the variability is reduced to nearly 0.\r\n\r\nLastly, I've reordered the tests in `test_runner.py` to account for the slower runtimes when configured with `--enable-debug`. Some of the slow tests I've looked at were listed as being fast which was causing overall `test_runner.py` runtime to be extended. This change makes the test runner's runtime be bounded by the slowest test (currently `feature_fee_estimation.py` with my usual config (`-j 60`).",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26656",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26656",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26656.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26656.patch"
          },
          "closed_at": "2022-12-19T09:16:38Z",
          "created_at": "2022-12-08T01:38:12Z",
          "updated_at": "2022-12-19T09:16:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-15T01:26:53Z",
      "updated_at": "2022-12-15T01:26:53Z",
      "source": {
        "issue": {
          "id": 1477184609,
          "node_id": "PR_kwDOABII585EYIGU",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26642",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26642/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26642/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26642/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26642",
          "number": 26642,
          "state": "closed",
          "state_reason": null,
          "title": "clang-tidy: Add more `performance-*` checks and related fixes",
          "body": null,
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 27,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26642",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26642",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26642.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26642.patch"
          },
          "closed_at": "2023-03-27T13:36:52Z",
          "created_at": "2022-12-05T18:40:46Z",
          "updated_at": "2023-03-27T13:56:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-15T07:26:29Z",
      "updated_at": "2022-12-15T07:26:29Z",
      "source": {
        "issue": {
          "id": 782505298,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTUyMDQ5MjI1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20892",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20892/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20892/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20892/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20892",
          "number": 20892,
          "state": "open",
          "state_reason": null,
          "title": "tests: Run both descriptor and legacy tests within a single test invocation",
          "body": "Instead of having the tests only do one type or the other, depending on command line arguments, these tests should be running with both types of wallets. Any test that calls `add_wallet_options` will be run for each wallet type that it specifies a wallet option for if none are give in the command line. If a particular wallet is specified with `--legacy-wallet` or `--descriptors`, the options are still respected.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 16,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20892",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20892",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20892.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20892.patch"
          },
          "created_at": "2021-01-09T03:50:55Z",
          "updated_at": "2023-08-02T17:47:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-16T02:56:10Z",
      "updated_at": "2022-12-16T02:56:10Z",
      "source": {
        "issue": {
          "id": 1484730364,
          "node_id": "PR_kwDOABII585Ey4qu",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26661",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26661/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26661/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26661/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26661",
          "number": 26661,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Coin Selection, return accurate error messages",
          "body": "Work decoupled from #25806, which cleanup and improves the Coin Selection flow further.\r\n\r\nAdding the capability to propagate specific error messages from the Coin Selection process to the user.\r\nInstead of always returning the general \"Insufficient funds\" message which is not always accurate to what happened internally.\r\nLetting us instruct the user how to proceed under certain circumstances.\r\n\r\nThe following error messages were added:\r\n\r\n1) If the selection result exceeds the maximum transaction weight,\r\n   we now will return: \r\n-> \"The inputs size exceeds the maximum weight. Please try sending\r\na smaller amount or manually consolidating your wallet's UTXOs\".\r\n\r\n2) If the user pre-selected inputs and disallowed the automatic coin\r\n   selection process (no other inputs are allowed), we now will\r\n   return: \r\n-> \"The preselected coins total amount does not cover the transaction\r\ntarget. Please allow other inputs to be automatically selected or include\r\nmore coins manually\".\r\n\r\n3) The double-counted preset inputs during Coin Selection error will now\r\nthrow an \"internal bug detected\" message instead of crashing the node.\r\n\r\nThe essence of this work comes from several comments:\r\n1. https://github.com/bitcoin/bitcoin/pull/26560#discussion_r1037395665\r\n2. https://github.com/bitcoin/bitcoin/pull/25729#discussion_r940619491\r\n3. https://github.com/bitcoin/bitcoin/pull/25269#pullrequestreview-1135240825\r\n4. https://github.com/bitcoin/bitcoin/issues/23144 (which is connected to #24845)",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26661",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26661",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26661.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26661.patch"
          },
          "closed_at": "2023-01-03T23:54:02Z",
          "created_at": "2022-12-08T14:13:27Z",
          "updated_at": "2023-05-27T01:46:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-17T13:33:34Z",
      "updated_at": "2022-12-17T13:33:34Z",
      "source": {
        "issue": {
          "id": 1191033673,
          "node_id": "PR_kwDOABII5841jAnn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24748/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24748",
          "number": 24748,
          "state": "open",
          "state_reason": null,
          "title": "test/BIP324: functional tests for v2 P2P encryption",
          "body": "This PR introduces support for v2 P2P encryption(BIP 324) in the existing functional test framework and adds functional tests for the same.\r\n\r\nIt's built on top of:\r\n* #24545 \r\n* #24005\r\n\r\nThe first 2 commits help the CI pass since the secp256k1 subtree directory is touched by the parent PR 24545.\r\nThe next 2 commits bring in the mentioned parent PRs. They'll all be removed when the parent PRs get merged.\r\n\r\n### commits overview\r\n1. Introducing cryptographic constructs(HKDF, ECDH, ChaCha20, Poly1305, FSChaCha20 and FSChaCha20Poly1305) in the test framework to help with P2P encryption.\r\n2. Performing v2 P2P encryption in a v2 connection.\r\n    * introduces a new class `EncryptedP2PState` to store the keys, functions for performing the initial v2 handshake and encryption/decryption.\r\n    * this class is used by `P2PConnection` in inbound/outbound connections to perform the initial v2 handshake before the v1 version handshake. Only after the initial v2 handshake is performed do application layer P2P messages(version, verack etc..) get exchanged. (in a v2 connection)\r\n    * the encrypted P2P messages follow a different format - 3 byte length + 1-13 byte message_type + payload + 16 byte MAC\r\n    * includes support for testing decoy messages and v2 connection downgrade(using false advertisement - when a v2 node makes an outbound connection to a node which doesn't support v2 but is advertised as v2 by some malicious\r\nintermediary)\r\n\r\n### run the tests\r\n* functional test - `test/functional/p2p_v2_encrypted.py` `test/functional/p2p_v2_earlykeyresponse.py`\r\n\r\nI'm also super grateful to @ dhruv for his really valuable feedback on this branch.",
          "user": {
            "login": "stratospher",
            "id": 44024636,
            "node_id": "MDQ6VXNlcjQ0MDI0NjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44024636?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stratospher",
            "html_url": "https://github.com/stratospher",
            "followers_url": "https://api.github.com/users/stratospher/followers",
            "following_url": "https://api.github.com/users/stratospher/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/stratospher/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/stratospher/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/stratospher/subscriptions",
            "organizations_url": "https://api.github.com/users/stratospher/orgs",
            "repos_url": "https://api.github.com/users/stratospher/repos",
            "events_url": "https://api.github.com/users/stratospher/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/stratospher/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24748",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24748",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24748.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24748.patch"
          },
          "created_at": "2022-04-03T20:14:51Z",
          "updated_at": "2023-08-01T18:12:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8067566817,
      "node_id": "LE_lADOABII585H5eBJzwAAAAHg3Uzh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8067566817",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-19T09:35:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8169908494,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHm9ukO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8169908494",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-06T14:52:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8170098142,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHm-c3e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8170098142",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-06T15:17:09Z"
    },
    {
      "event": "unlabeled",
      "id": 8170611885,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAHnAaSt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8170611885",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-06T16:26:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-06T21:02:39Z",
      "updated_at": "2023-01-06T21:02:39Z",
      "source": {
        "issue": {
          "id": 1522557576,
          "node_id": "PR_kwDOABII585G0Yzm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26836",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26836/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26836/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26836/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26836",
          "number": 26836,
          "state": "open",
          "state_reason": null,
          "title": "wallet: simplify addressbook migration process",
          "body": "Decoupled the initial commits from #25620 and went further over few other points.\r\n\r\n1) Finish [#25337](https://github.com/bitcoin/bitcoin/pull/25337) goal of encapsulating the addressbook code into the wallet class.\r\n2) Code improvements to `CWallet::DelAddressBook` and `Wallet::SetAddrBookWithDB` methods.\r\n3) DB batch operations and flow simplification for the address book migration process.\r\n4) Expanded coverage for address book migration process.\r\n\r\nThis will also allow decoupling the address book dependency on the wallet’s main mutex for reading. RPC commands such `getaddressbylabel` and similars will be able to run `cs_wallet` lock free.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 8,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26836",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26836",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26836.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26836.patch"
          },
          "created_at": "2023-01-06T13:05:27Z",
          "updated_at": "2023-07-23T01:00:42Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-06T21:34:44Z",
      "updated_at": "2023-01-06T21:34:44Z",
      "source": {
        "issue": {
          "id": 1511927201,
          "node_id": "PR_kwDOABII585GQOhR",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26758",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26758/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26758/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26758/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26758",
          "number": 26758,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Add `performance-no-automatic-move` clang-tidy check",
          "body": "Split from bitcoin/bitcoin#26642 as [requested](https://github.com/bitcoin/bitcoin/pull/26642#discussion_r1054673201).\r\n\r\nFor the problem description see https://clang.llvm.org/extra/clang-tidy/checks/performance/no-automatic-move.html.\r\n\r\nThe following types are affected:\r\n- `std::pair<CAddress, NodeSeconds>`\r\n- `std::vector<CAddress>`\r\n- `UniValue`, also see bitcoin/bitcoin#25429\r\n- `QColor`\r\n- `CBlock`\r\n- `MempoolAcceptResult`\r\n- `std::shared_ptr<CWallet>`\r\n- `std::optional<SelectionResult>`\r\n- `CTransactionRef`, which is `std::shared_ptr<const CTransaction>`\r\n",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26758",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26758",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26758.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26758.patch"
          },
          "closed_at": "2023-01-11T15:22:13Z",
          "created_at": "2022-12-27T15:47:53Z",
          "updated_at": "2023-01-12T15:01:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-06T21:36:07Z",
      "updated_at": "2023-01-06T21:36:07Z",
      "source": {
        "issue": {
          "id": 1511435068,
          "node_id": "PR_kwDOABII585GOkOp",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26756",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26756/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26756/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26756/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26756",
          "number": 26756,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Replace `GetBalance()` logic with `AvailableCoins()`",
          "body": "This PR proposes a solution for https://github.com/bitcoin/bitcoin/issues/26500 by changing the `AvailableCoins()` function to calculate values by status (`TRUSTED`, `UNTRUSTED_PENDING` and `IMMATURE`) and ownership (`MINE`, `WATCH_ONLY`), eliminating the `GetBalance()` logic.\r\n\r\nThe downside is that the cache is no longer used. Not sure about the performance implication, but if the approach is OK, caching can also be used with this solution.\r\n\r\nThis approach also fixes the bug mentioned at the end of the `wallet_abandonconflict.py` file.",
          "user": {
            "login": "w0xlt",
            "id": 94266259,
            "node_id": "U_kgDOBZ5jkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/w0xlt",
            "html_url": "https://github.com/w0xlt",
            "followers_url": "https://api.github.com/users/w0xlt/followers",
            "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
            "organizations_url": "https://api.github.com/users/w0xlt/orgs",
            "repos_url": "https://api.github.com/users/w0xlt/repos",
            "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/w0xlt/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26756",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26756",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26756.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26756.patch"
          },
          "closed_at": "2023-05-03T14:43:16Z",
          "created_at": "2022-12-27T04:58:13Z",
          "updated_at": "2023-05-03T14:43:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-06T21:48:16Z",
      "updated_at": "2023-01-06T21:48:16Z",
      "source": {
        "issue": {
          "id": 1503703234,
          "node_id": "PR_kwDOABII585F0rVt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26728/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26728",
          "number": 26728,
          "state": "open",
          "state_reason": null,
          "title": "wallet: Have the wallet store the key for automatically generated descriptors",
          "body": "The wallet currently does not know the master key that was used to generate the automatically generated descriptors. This makes it difficult to add new automatically generated descriptors when new ones are introduced. So instead of losing this information after the descriptors are created, have `CWallet` store it.\r\n\r\nThis allows us to have a `getxpub` command which is useful for those who need a simple way to get an xpub from a wallet. `getxpub` can also take a boolean parameter to indicate whether it should also output the corresponding xprv.\r\n\r\nSupercedes #23417",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26728",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26728.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26728.patch"
          },
          "created_at": "2022-12-19T22:31:05Z",
          "updated_at": "2023-08-01T13:04:19Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-07T06:55:50Z",
      "updated_at": "2023-01-07T06:55:50Z",
      "source": {
        "issue": {
          "id": 1523382830,
          "node_id": "PR_kwDOABII585G3Hol",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26840",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26840/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26840/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26840/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26840",
          "number": 26840,
          "state": "open",
          "state_reason": null,
          "title": "refactor: importpubkey, importprivkey, importaddress, importmulti, and importdescriptors rpc",
          "body": "This is a wallet rpc refactor from my gui pr https://github.com/bitcoin-core/gui/pull/650\r\n\r\nI was told by a contributor I should make a pr here for anything not in src/qt except for makefile/.ui stuff\r\n\r\nSo this pr refactors the RPC code so that it can be used through interfaces so there isn't a ton of code duplication more details would be in my bitcoin-core/gui pr.\r\n\r\nFor context this is apart of my Summer of Bitcoin project achow101 was my mentor.\r\n",
          "user": {
            "login": "KolbyML",
            "id": 31669092,
            "node_id": "MDQ6VXNlcjMxNjY5MDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/31669092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KolbyML",
            "html_url": "https://github.com/KolbyML",
            "followers_url": "https://api.github.com/users/KolbyML/followers",
            "following_url": "https://api.github.com/users/KolbyML/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/KolbyML/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/KolbyML/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/KolbyML/subscriptions",
            "organizations_url": "https://api.github.com/users/KolbyML/orgs",
            "repos_url": "https://api.github.com/users/KolbyML/repos",
            "events_url": "https://api.github.com/users/KolbyML/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/KolbyML/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26840",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26840",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26840.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26840.patch"
          },
          "created_at": "2023-01-07T01:24:33Z",
          "updated_at": "2023-07-23T00:55:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-09T21:04:08Z",
      "updated_at": "2023-01-09T21:04:08Z",
      "source": {
        "issue": {
          "id": 1525922049,
          "node_id": "PR_kwDOABII585G_oZW",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26858",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26858/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26858/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26858/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26858",
          "number": 26858,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Use defined purposes instead of inlining",
          "body": "Based on this comment https://github.com/bitcoin/bitcoin/pull/26761#discussion_r1062447532.\r\n\r\nThis PR stores the currently inlined address purposes as constants and use them accordingly.",
          "user": {
            "login": "aureleoules",
            "id": 22493292,
            "node_id": "MDQ6VXNlcjIyNDkzMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aureleoules",
            "html_url": "https://github.com/aureleoules",
            "followers_url": "https://api.github.com/users/aureleoules/followers",
            "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
            "organizations_url": "https://api.github.com/users/aureleoules/orgs",
            "repos_url": "https://api.github.com/users/aureleoules/repos",
            "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aureleoules/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26858",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26858",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26858.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26858.patch"
          },
          "closed_at": "2023-03-26T00:12:06Z",
          "created_at": "2023-01-09T16:30:06Z",
          "updated_at": "2023-03-26T00:12:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8196631941,
      "node_id": "LE_lADOABII585H5eBJzwAAAAHojq2F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8196631941",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-10T23:03:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-11T15:58:32Z",
      "updated_at": "2023-01-11T15:58:32Z",
      "source": {
        "issue": {
          "id": 1527562431,
          "node_id": "PR_kwDOABII585HFH95",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26865",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26865/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26865/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26865/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26865",
          "number": 26865,
          "state": "closed",
          "state_reason": null,
          "title": "[PoC] Integrate SonarCloud",
          "body": "This is a proof of concept that integrates SonarCloud in the CI.\r\nSonarCloud is a static code analyzer that could help us catch bugs and improve code quality, so I think this would be a great addition to the CI. It can provide PR diff analysis.\r\nThe code in this PR doesn't currently work because it requires a Sonarcloud account along with a token.\r\n\r\nI've tested it on master and some pull requests if you want to take a look: https://sonarcloud.io/summary/overall?id=aureleoules_bitcoin.\r\n\r\nLet me know your thoughts!\r\n",
          "user": {
            "login": "aureleoules",
            "id": 22493292,
            "node_id": "MDQ6VXNlcjIyNDkzMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aureleoules",
            "html_url": "https://github.com/aureleoules",
            "followers_url": "https://api.github.com/users/aureleoules/followers",
            "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
            "organizations_url": "https://api.github.com/users/aureleoules/orgs",
            "repos_url": "https://api.github.com/users/aureleoules/repos",
            "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/aureleoules/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26865",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26865",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26865.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26865.patch"
          },
          "closed_at": "2023-01-16T15:01:46Z",
          "created_at": "2023-01-10T15:09:27Z",
          "updated_at": "2023-01-16T15:01:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1251563653,
      "node_id": "PRR_kwDOABII585KmViF",
      "url": null,
      "actor": null,
      "commit_id": "f7bda4c6959594b8a9e1dc10a04dd697307e3fa3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1251563653",
      "submitted_at": "2023-01-17T15:55:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8359916231,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHySjLH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8359916231",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T00:26:38Z"
    },
    {
      "event": "unlabeled",
      "id": 8360099787,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAHyTP_L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8360099787",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T01:00:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8360301448,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHyUBOI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8360301448",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T01:41:04Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T04:39:47Z",
      "updated_at": "2023-01-26T04:39:47Z",
      "source": {
        "issue": {
          "id": 1553025619,
          "node_id": "PR_kwDOABII585IUr3w",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26951",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26951/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26951/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26951/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26951",
          "number": 26951,
          "state": "open",
          "state_reason": null,
          "title": "wallet: improve rescan performance 640%",
          "body": "The BIP158 compact block filters make a compromise between performance and security by re-keying the filter for each block.  That means every block requires re-hashing and re-sorting for every script pub key before matching against the filter.\r\n\r\nTo improve on the performance we can simply generate filters using per index random keys (rather than per filter keys).  We don't share these filters with any attacker so there is no security risk.\r\n\r\nI don't use synthetic benchmarks for this as we have only a single data set we're ever processing.\r\n\r\nOn an arbitrary server:\r\nNo filters: 132 minutes\r\nBlock filters: 45 minutes\r\nWallet filters: 7 minutes\r\n\r\n",
          "user": {
            "login": "pstratem",
            "id": 620611,
            "node_id": "MDQ6VXNlcjYyMDYxMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/620611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pstratem",
            "html_url": "https://github.com/pstratem",
            "followers_url": "https://api.github.com/users/pstratem/followers",
            "following_url": "https://api.github.com/users/pstratem/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pstratem/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pstratem/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
            "organizations_url": "https://api.github.com/users/pstratem/orgs",
            "repos_url": "https://api.github.com/users/pstratem/repos",
            "events_url": "https://api.github.com/users/pstratem/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pstratem/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26951",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26951",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26951.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26951.patch"
          },
          "created_at": "2023-01-23T12:38:35Z",
          "updated_at": "2023-07-30T00:06:07Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T05:05:04Z",
      "updated_at": "2023-01-26T05:05:04Z",
      "source": {
        "issue": {
          "id": 1532409473,
          "node_id": "PR_kwDOABII585HVfFs",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26889",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26889/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26889/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26889/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26889",
          "number": 26889,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: wallet, remove global 'ArgsManager' dependency",
          "body": "Structurally, the wallet class shouldn't access the global `ArgsManager` class, its internal behavior shouldn't be coupled to a global command line args parsing object.\r\n\r\nSo this PR migrates the only two places where we depend on it: (1) the keypool size, and (2) the \"-walletnotify\" script. And cleans up the, now unneeded, wallet `ArgsManager` ref member.\r\n\r\nExtra note:\r\nIn the process of removing the args ref member, discovered and fixed files that were invalidly depending on the wallet header including `util/system.h`.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26889",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26889",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26889.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26889.patch"
          },
          "closed_at": "2023-02-17T17:48:08Z",
          "created_at": "2023-01-13T14:45:27Z",
          "updated_at": "2023-05-01T19:10:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-26T10:00:05Z",
      "updated_at": "2023-01-26T10:00:05Z",
      "source": {
        "issue": {
          "id": 1324992735,
          "node_id": "PR_kwDOABII5848deu9",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25766",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25766/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25766/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25766/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25766",
          "number": 25766,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Include a signature with encrypted keys to mitigate a wallet scam",
          "body": "This PR adds a signature to the encrypted key records (`ckey` and `walletdescriptorckey`) which acts as an additional checksum. The signature is produced by the private key, and signs the encrypted private key data. It is a schnorr signature. The signature is verified when the encrypted key record is loaded, and if it fails to verify then the loading fails with a wallet corrupted error.\r\n\r\nThe purpose of doing this is to mitigate a common scam where users are given/sold a wallet file that contains \"encrypted\" private keys that correspond to several high valued UTXOs. However the \"encrypted\" keys are not actually encrypted, they are just garbage data. The signature allows the wallet to ensure that the private keys for the stated pubkeys was known at the time of encryption, so it should help mitigate this scam by making it harder for scammers to make high value UTXOs appear to be IsMine.\r\n\r\nThere is, of course, a downgrade attack where the scammer can continue to do this with a wallet that does not have signatures over the encrypted keys. To mitigate this, the user will get a warning when they open a wallet that has encrypted keys without signatures. When the wallet is next unlocked, the signatures will be generated and written to the wallet file.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25766",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25766",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25766.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25766.patch"
          },
          "closed_at": "2023-04-25T15:58:29Z",
          "created_at": "2022-08-01T21:17:56Z",
          "updated_at": "2023-04-25T15:58:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8377743396,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHzWjgk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8377743396",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-27T22:34:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8378573304,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHzZuH4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8378573304",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-28T01:51:23Z"
    },
    {
      "event": "labeled",
      "id": 8380038315,
      "node_id": "LE_lADOABII585H5eBJzwAAAAHzfTyr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8380038315",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-28T16:34:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8380772508,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHziHCc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8380772508",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-29T00:50:52Z"
    },
    {
      "event": "unlabeled",
      "id": 8380775143,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAHziHrn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8380775143",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-29T00:54:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8381048251,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHzjKW7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8381048251",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-29T05:16:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8381089739,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHzjUfL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8381089739",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-29T05:58:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8381133292,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAHzjfHs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8381133292",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-29T06:36:32Z"
    },
    {
      "event": "commented",
      "id": 1407610739,
      "node_id": "IC_kwDOABII585T5m9z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1407610739",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-29T09:29:54Z",
      "updated_at": "2023-01-29T09:29:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and all the issues identified by SonarCloud in https://github.com/bitcoin/bitcoin/pull/26865#issuecomment-1379021010 have been fixed.\r\nGreat tool @aureleoules ",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1407610739",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 8381396476,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAHzkfX8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8381396476",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-29T09:29:55Z"
    },
    {
      "event": "subscribed",
      "id": 8381396482,
      "node_id": "SE_lADOABII585H5eBJzwAAAAHzkfYC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8381396482",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-01-29T09:29:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8406270265,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH1DYE5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8406270265",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-01T04:27:16Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8406286612,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH1DcEU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8406286612",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-01T04:32:02Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-01T16:30:13Z",
      "updated_at": "2023-02-01T16:30:13Z",
      "source": {
        "issue": {
          "id": 1484955826,
          "node_id": "PR_kwDOABII585EzrBi",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26664",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26664/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26664/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26664/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26664",
          "number": 26664,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: make some BlockManager members const",
          "body": "These methods can be const so make them const 🤷 ",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26664",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26664",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26664.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26664.patch"
          },
          "closed_at": "2023-04-25T16:26:16Z",
          "created_at": "2022-12-08T16:11:56Z",
          "updated_at": "2023-04-25T16:26:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8421802646,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH1-oKW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8421802646",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-02T14:24:19Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-03T18:42:22Z",
      "updated_at": "2023-02-03T18:42:22Z",
      "source": {
        "issue": {
          "id": 1570008732,
          "node_id": "PR_kwDOABII585JNilD",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27034",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27034/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27034/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27034/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27034",
          "number": 27034,
          "state": "open",
          "state_reason": null,
          "title": "rpc: make importaddress compatible with descriptors wallet",
          "body": "Made it as part of reviewing other PRs; so it's simpler to watch certain address/hex in descriptor wallets (without have to go through `importdescriptors` nuances).\r\n\r\nbasically importing the standalone address as a `addr(ADDR)` descriptor and the raw hex as a `raw(HEX)` descriptor.\r\n\r\nNote:\r\nAs we don't allow mixing watch-only descriptors with spendable ones, the previous behavior is retained\r\nif the user try to import an address into a wallet with private keys enabled.\r\n",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27034",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27034",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27034.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27034.patch"
          },
          "created_at": "2023-02-03T15:21:29Z",
          "updated_at": "2023-07-28T11:11:49Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8454008274,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH35e3S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8454008274",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T04:39:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8454036176,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH35lrQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8454036176",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T04:45:39Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-07T08:20:54Z",
      "updated_at": "2023-02-07T08:20:54Z",
      "source": {
        "issue": {
          "id": 1361274567,
          "node_id": "PR_kwDOABII584-VbNV",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26008",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26008/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26008/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26008/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26008",
          "number": 26008,
          "state": "open",
          "state_reason": null,
          "title": "wallet: cache IsMine scriptPubKeys to improve performance of descriptor wallets",
          "body": "Wallets that have a ton of non-ranged descriptors (such as a migrated non-HD wallet) perform fairly poorly due to looping through all of the wallet's `ScriptPubKeyMan`s. This is done in various places, such as `IsMine`, and helper functions for fetching a `ScriptPubKeyMan` and a `SolvingProvider`. This also has a bit of a performance impact on standard descriptor wallets, although less noticeable due to the small number of SPKMs.\r\n\r\nAs these functions are based on doing `IsMine` for each `ScriptPubKeyMan`, we can improve this performance by caching `IsMine` scriptPubKeys for all descriptors and use that to determine which `ScriptPubKeyMan` to actually use for those things. This cache is used exclusively and we no longer iterate the SPKMs.\r\n\r\nAlso added a benchmark for `IsMine`.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26008",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26008",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26008.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26008.patch"
          },
          "created_at": "2022-09-04T23:03:15Z",
          "updated_at": "2023-08-02T14:46:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8510997449,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH7S4PJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8510997449",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-14T03:35:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8511022520,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH7S-W4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8511022520",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-14T03:42:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8511026468,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH7S_Uk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8511026468",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-14T03:43:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8511041212,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH7TC68",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8511041212",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-14T03:47:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8511306395,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH7UDqb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8511306395",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-14T04:52:51Z"
    },
    {
      "event": "commented",
      "id": 1429142222,
      "node_id": "IC_kwDOABII585VLvrO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1429142222",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-14T05:26:41Z",
      "updated_at": "2023-02-14T05:26:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Update: The silentpayment index has been removed from the codebase.\r\n\r\n`scantxoutset` has been changed to use `txindex` and `CBlockUndo`. So the scan works without silentpayment index.\r\n\r\n`getsilentpaymentblockdata` also works without any indexes, using only `CBlockUndo`. The code is relatively simple. Therefore, even serving light clients, there is no need for indexing.\r\n\r\nSeems to work fine. Not sure about the performance.\r\n\r\nA new PR, with the index, will be added soon.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1429142222",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "labeled",
      "id": 8550192786,
      "node_id": "LE_lADOABII585H5eBJzwAAAAH9oZaS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8550192786",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-17T19:16:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8554170664,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH93kko",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8554170664",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-19T00:28:36Z"
    },
    {
      "event": "unlabeled",
      "id": 8554268321,
      "node_id": "UNLE_lADOABII585H5eBJzwAAAAH938ah",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8554268321",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-19T02:26:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8587279063,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH_13rX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8587279063",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-23T03:08:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8587489987,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAH_2rLD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8587489987",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-23T03:59:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8607346631,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAIBCa_H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8607346631",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-25T05:38:30Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-06T23:11:38Z",
      "updated_at": "2023-03-06T23:11:38Z",
      "source": {
        "issue": {
          "id": 1612221855,
          "node_id": "PR_kwDOABII585LaUXb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27215",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27215/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27215/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27215/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27215",
          "number": 27215,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Turn `destdata` entries into  `CAddressBookData` fields",
          "body": "`destdata` is a generic strings map in `CAddressBookEntry`. It is opaque and thus hard to know what is actually being stored in a `CAddressBookEntry`. It is a map with fixed fields, but these are not documented nor are they immediately obvious when looking at the class definition. This PR changes those to be member variables inside of `CAddressBookEntry` to make it easier to understand what kind of data is being stored.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27215",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27215",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27215.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27215.patch"
          },
          "closed_at": "2023-03-15T16:58:37Z",
          "created_at": "2023-03-06T21:19:53Z",
          "updated_at": "2023-03-15T16:58:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 8680457929,
      "node_id": "LE_lADOABII585H5eBJzwAAAAIFZUbJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8680457929",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T01:08:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1457310252,
      "node_id": "IC_kwDOABII585W3Mos",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1457310252",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-07T01:08:04Z",
      "updated_at": "2023-03-07T01:08:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1457310252",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "subscribed",
      "id": 8930007171,
      "node_id": "SE_lADOABII585H5eBJzwAAAAIURRiD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8930007171",
      "actor": {
        "login": "smashedjackratat",
        "id": 128897870,
        "node_id": "U_kgDOB67TTg",
        "avatar_url": "https://avatars.githubusercontent.com/u/128897870?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/smashedjackratat",
        "html_url": "https://github.com/smashedjackratat",
        "followers_url": "https://api.github.com/users/smashedjackratat/followers",
        "following_url": "https://api.github.com/users/smashedjackratat/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/smashedjackratat/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/smashedjackratat/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/smashedjackratat/subscriptions",
        "organizations_url": "https://api.github.com/users/smashedjackratat/orgs",
        "repos_url": "https://api.github.com/users/smashedjackratat/repos",
        "events_url": "https://api.github.com/users/smashedjackratat/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/smashedjackratat/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-05T01:03:29Z"
    },
    {
      "event": "reviewed",
      "id": 1376326898,
      "node_id": "PRR_kwDOABII585SCRTy",
      "url": null,
      "actor": null,
      "commit_id": "ee652ca59a7c3e6f73f871d00d640074a1e7abac",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Don't forget to rebase. The bech32 hrp stuff moved to `kernel/chainparams.{h,cpp}`.\r\n\r\n> The silentpayment index has been removed from the codebase. … A new PR, with the index, will be added soon.\r\n\r\nThat's nice. It's more important to prove functionality, can improve performance later.\r\n\r\nThe `rawtr()` functionality has been merged, so the dependency can be removed from the PR description. Either this PR description or a BIP should remind the reader why `rawtr()` is necessary (you can't know the untweaked key) and safe (there's no way for the sender to unilaterally add a hidden script path?).\r\n\r\nEnabling the ECDH module in `libsecp256k1` might be a reason to put silent payments behind a configure flag initially. Then again, we also need it for [BIP324](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki) P2P encryption #23561 and I'm not seeing any discussion there about enabling the module either. That PR also introduces fuzz tests, so maybe it's worth combining efforts and getting those merged jointly.\r\n\r\nMost of the commits here are reasonably short. It might be worth splitting f0f9817f44fb8dc43c1f8ca0a456fcd3780350af a bit further.\r\n\r\nI would suggest moving PSBT and light client support to a followup PR. It's important to prove that it works, but that can be done by just keeping it rebased on this PR with the minimum functionality.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1376326898",
      "submitted_at": "2023-04-07T15:47:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "reviewed",
      "id": 1376353563,
      "node_id": "PRR_kwDOABII585SCX0b",
      "url": null,
      "actor": null,
      "commit_id": "9143c7e1f1710f123072cc272b66ab2cad0eb57a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1376353563",
      "submitted_at": "2023-04-07T16:08:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "reviewed",
      "id": 1376473103,
      "node_id": "PRR_kwDOABII585SC1AP",
      "url": null,
      "actor": null,
      "commit_id": "ee652ca59a7c3e6f73f871d00d640074a1e7abac",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#pullrequestreview-1376473103",
      "submitted_at": "2023-04-07T18:40:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
    },
    {
      "event": "commented",
      "id": 1500550465,
      "node_id": "IC_kwDOABII585ZcJVB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1500550465",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-07T18:57:09Z",
      "updated_at": "2023-04-07T18:57:09Z",
      "author_association": "MEMBER",
      "body": "> Silent watch-only wallets have not yet been implemented. Some architectural improvements are needed first.\r\n\r\nThis would be nice though, maybe in a followup. I was trying to test it with `bitcoin-cli -signet -named createwallet wallet_name=SilentWatcher silent_payment=true disable_private_keys=true` and then import a descriptor like `sp(…)`.\r\n\r\nI guess one thing you need for that is the ability to dump the watch key. You could add an argument `scan_privkey` to `decodesilentaddress` which would return the private, rather the public. Ideally in the form of a `sp(…)` descriptor ready for import (and a warning that leaking that descriptor hurts your privacy, though coins can't be stolen)\r\n\r\nFinally I noticed that calling `listdescriptors true` on the wallet reveals only 1 private key for the `sp()` descriptor; I guess because they are derived from each other?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1500550465",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI2ZWFjYzM4OTkwOTlmMzZkODZjM2VlN2Q5MDNiOTVjNWM5NjEwYzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6eacc3899099f36d86c3ee7d903b95c5c9610c2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b6eacc3899099f36d86c3ee7d903b95c5c9610c2",
      "tree": {
        "sha": "3d6a14dea4fc883bf3fa0d05bae126c7b31306f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d6a14dea4fc883bf3fa0d05bae126c7b31306f8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3d6a14dea4fc883bf3fa0d05bae126c7b31306f8\nparent a3eea2a27daa6ae98ffc4d83d73ba303bf5fe86d\nauthor w0xlt <woltx@protonmail.com> 1665719290 -0300\ncommitter josibake <josibake@protonmail.com> 1681208663 +0200\n\nconf: add EDCH module\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1NVcACgkQity1WMTz\nPWUgYQ/7BCxdDcL0I3hvM0GjAEnGMU6pE4tTgfEc5eTy1vvnQ8JTJpsgj/c5zoSs\nPOirsPtPQK/TD2pS+x8JQsnAWVQEFiypg/IgOFweNchahS/1CKNfMtva7ZLP3Hgt\nNoXcdLTIpcZu+Z7dxT8MIVN1JaYP+cvijjnINDnDZJ5q/iLLwC1OhHKZc0h+YxFG\ns0InMiWJIxsBymIHcsWLK3pcxTTwuQf+1Bkrp/UaEIwhMGnXWxUP2rm2MuKWaOT1\nfgfVsHXBv+Egk23Qcm1hPVYg1BO94sYzn12RfCMn4LBiy43K/AJQe238+BWuwvxX\nIhRiBZnv85nyaUi0Dur2yEdn8E+kZUZ483X8DJa8tLfa5xImNZCXIwvqxMuMbx/h\nHeLI8rM8CUKwb6o9gaACgbX3Ma80PhFMGSlXdv3Fb24ezlfxtzb9nYxLu3YkUYRU\nNMneHsBCg3AEjZr0Cwq3KvkWivM92ypDhtCI6ena4QnboEF3f+dugXztb/ETGULR\n0zoWdrblxvZwAh6hL039LBay98UE6R2rEJD+BaL3wjcALUtc1zUdmILMZFWlZ4H5\nHLOBZy9MASEUERbsk1yx4ABf6B2usC6BfVEoGVjzLMtUh8yvTwt3W1l+9HeycEsC\nVtM80dsToqOnvVZvVneyaR5h5P5djxdVVrM4UuMLQ0aYBE0Bdls=\n=/qRl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3eea2a27daa6ae98ffc4d83d73ba303bf5fe86d",
          "sha": "a3eea2a27daa6ae98ffc4d83d73ba303bf5fe86d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a3eea2a27daa6ae98ffc4d83d73ba303bf5fe86d"
        }
      ],
      "message": "conf: add EDCH module",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T10:24:23Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-10-14T03:48:10Z"
      },
      "sha": "b6eacc3899099f36d86c3ee7d903b95c5c9610c2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGViZjRlOGU1OTE4YTdmNzYzYWVkMTQwNmFkNjc3MDE3MjNkYzdjZDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebf4e8e5918a7f763aed1406ad67701723dc7cd0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ebf4e8e5918a7f763aed1406ad67701723dc7cd0",
      "tree": {
        "sha": "ca66cd3020bd8bd0a9b253ad727fa3021dd92be8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca66cd3020bd8bd0a9b253ad727fa3021dd92be8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ca66cd3020bd8bd0a9b253ad727fa3021dd92be8\nparent b6eacc3899099f36d86c3ee7d903b95c5c9610c2\nauthor w0xlt <woltx@protonmail.com> 1665672556 -0300\ncommitter josibake <josibake@protonmail.com> 1681208664 +0200\n\ncrypto: Add necessary new functions to the silent payments scheme\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1NVgACgkQity1WMTz\nPWVTgA/+NZLs53G3bm8feN8EyCxMbswW/cdzVxB8xWPzoDVVAOakmyQSNUjsYlv2\ndYEg8iVwTeloMJerBd7fflClC1hWONRZkOBbeuGKPo4gU26UwNWXscd7P12B97l5\nBRrkcXYYpszAubKOVYfQFJGygkmeEdK+jit/U6uhjB4yMuawGjBCaC5PCAUxf+1j\n13jsbw0YZFalgTxYhSGi8Nw4gbV8a9Gge7hfon+kawXoqQJIVPD21jzIGW9vGR0y\n+3ipXf2FxljwlRjTuTWjnqCPBf1lOLveq8qx89edvVVbIVA/PPKEdjYMXnQei09a\ne9Nfq1e3lO/bM5PCGBcX+uEzlApELoFYWN41Qw/QSv0xlv0J4DX15JJoCT3EQ2L7\nUR+6ZMHCBFjVvZxsQsCBZeymJCimGK4yA6XBIi0P2I27R3m6NAoaiqC0mGKDnuiI\n0qRYoil4f3Xhq9G2XqCTx0o0c62Gk3dUHA7xXxNh1ELPm4XyggJiPobi26QziP74\nXPCireQP4ml5TjnZGs0VhF/y+r1hhM16b2rq8j8m10Vm10vn3VntX7btLKaX96FN\nPVnAkKpwBLlMwkbLHM1f67TZBRvFvNYQdUOGLfQCxlcYbctC4DOLHpj87+mLEMDZ\nL4hpQOlttpWlW2ypA1XzqDazkS3ko15/yvF1ET6LSAWrakLHiNU=\n=amGx\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6eacc3899099f36d86c3ee7d903b95c5c9610c2",
          "sha": "b6eacc3899099f36d86c3ee7d903b95c5c9610c2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b6eacc3899099f36d86c3ee7d903b95c5c9610c2"
        }
      ],
      "message": "crypto: Add necessary new functions to the silent payments scheme",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T10:24:24Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-10-13T14:49:16Z"
      },
      "sha": "ebf4e8e5918a7f763aed1406ad67701723dc7cd0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBhMTk5Nzg0ODY2YTI4YjhkODZhOGI0Y2E0YjViOTgzNjFmYzY1N2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a199784866a28b8d86a8b4ca4b5b98361fc657a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0a199784866a28b8d86a8b4ca4b5b98361fc657a",
      "tree": {
        "sha": "a45d39f66802f4e32daf9b0bf98cfd7dfa2bf170",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a45d39f66802f4e32daf9b0bf98cfd7dfa2bf170"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a45d39f66802f4e32daf9b0bf98cfd7dfa2bf170\nparent ebf4e8e5918a7f763aed1406ad67701723dc7cd0\nauthor w0xlt <94266259+w0xlt@users.noreply.github.com> 1649816051 -0300\ncommitter josibake <josibake@protonmail.com> 1681210308 +0200\n\nadd Silent Payment Scheme\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1O8YACgkQity1WMTz\nPWWzbA/+LF7GM7ck/TU50bge3be1TF7j+zeAYq2l5uyQjW+IucUDH/c3FDzQJlVl\nmDA+0rVGkEVRtF1t9/IeFCEj/pmY3E44R2Esr+1T5u7wMVD3M6wwgZ5ja7QFCgvz\nAMp0AuOwdy3Y8rUSDIDG+8FD4SJFQ2jWHUO0SQf7e+HYVij06rvlevjpA3UcFQ48\n9koxwZca0t3o8SEOLHrKpxz8b4XJfIqsc9jUEX902Pf9V92gDYQ6Ij93RT/W5LSk\nTwkYWsQTtHwpRLCz+h/BFSNrKKp+ApUNilK4y/nouMWD8G5UlgURBbLHhIKDWlQV\n2mPHL2qtJxRoEpJGF0eyDRc5LiNLU0M/RlcIyR1vfMx9NUWyKHDNhuNSX39/2dhI\nPc4XgNxWmFcDjds+RJCFC5lJOGXeDsZGqpZcOMYx0HVsdEugBacb9Q+IO+22d74e\nxJqBtBKuQWhJGuLBQxtuQaUgbZbvNTzvNk9aIuG4S2X4dyK2o0/AhlIjNmxYSpAQ\n2exI9jYFWEqN8oztWq92keXwXZ/iCROeYw6MPjcKeKF8Sc8hFTQCMypiVwNC6Gb1\n4RqS5ky33tKm3KxnNYN27uTmJBSEtapseKdjvXIxdvUdwZOUMeYYioBDPcPi6Ul7\nptgaHdJebBMB1ky2XB4Hugza+5K1ybCEcCKbHPhBu85MjIx5j9I=\n=hYRU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebf4e8e5918a7f763aed1406ad67701723dc7cd0",
          "sha": "ebf4e8e5918a7f763aed1406ad67701723dc7cd0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ebf4e8e5918a7f763aed1406ad67701723dc7cd0"
        }
      ],
      "message": "add Silent Payment Scheme",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T10:51:48Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "94266259+w0xlt@users.noreply.github.com",
        "date": "2022-04-13T02:14:11Z"
      },
      "sha": "0a199784866a28b8d86a8b4ca4b5b98361fc657a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ0Nzc0ZDVjMDFhZGQyZTkxZWI3YTUwODQ2MjQ0NmJiY2M5MjdmYWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4774d5c01add2e91eb7a508462446bbcc927fad",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d4774d5c01add2e91eb7a508462446bbcc927fad",
      "tree": {
        "sha": "3e33127db5c665060115f98660f5b1986fa9d3ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e33127db5c665060115f98660f5b1986fa9d3ee"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3e33127db5c665060115f98660f5b1986fa9d3ee\nparent 0a199784866a28b8d86a8b4ca4b5b98361fc657a\nauthor w0xlt <woltx@protonmail.com> 1660516406 -0300\ncommitter josibake <josibake@protonmail.com> 1681210310 +0200\n\nscript: create a new output type `OutputType::SILENT_PAYMENT`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1O8YACgkQity1WMTz\nPWW7WhAAyvZxnt+mq24N1AJA/rJ680WxPEAwfmbgXDrkLYMQfMLJazDUSHDpWLs6\nr+1xLUalEPaDehndoj2OBUpvY1w8C1lw98OK6JlM5BgcjPf28/AOaKAkqz29EMlI\nEp4bIkvSlSUeURYeDPJB+5JtaMaZgUym8ykYNHLuEEwyQCkTBNKBVQrJz/7ylI/S\nsfQiDRVDDU49F6BKD6mslBaXEmjwN/qAA4uICvyigKMieiUA+NzwrW+agpKHOUYf\nsQMO6R91cp1+sAsKFa0mJcyDhAD6NA6MBBUxbJU5fM0Fejka/z5GcLnAD+fkMm67\nKdUF7AVxt/Rvw6FZk36CZIN38u2JXrx8lvPu/8UlmsU5ClzA5QliUJrDhMyS5Ku5\nRajqj2pfMWpN8vknIm0dzPO5rTZEo6P7Qa4YoJAxAoXZ6wSX3BKteXWPJH6Pe6b9\nltcZGZxQDfXUh+3UheWoEHbMEYOfeZhz0KapOt6T4sptudxYlxv+nBujymfqMIP2\n/vIyw7BkU1P33Iq5e/Bik8HHHP20SKmrkhkVKQwLery3zPjj3RiY18A/VIdealv7\nSRWSavdw0O+nnJDzohPlhH+5IMWPoBCYvCGA8vlz62mX+R74H7AUhIH8dJPxCY/b\nD5FfMjSQCyagBF642x858gxypWXh9hDmet8/dmKEh/AyfVZHMBY=\n=1Y5H\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a199784866a28b8d86a8b4ca4b5b98361fc657a",
          "sha": "0a199784866a28b8d86a8b4ca4b5b98361fc657a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0a199784866a28b8d86a8b4ca4b5b98361fc657a"
        }
      ],
      "message": "script: create a new output type `OutputType::SILENT_PAYMENT`",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T10:51:50Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-08-14T22:33:26Z"
      },
      "sha": "d4774d5c01add2e91eb7a508462446bbcc927fad"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNiYjE4ZDRkYmY2ZTZlZWQ3YTA3ZDAwYTNmMmI1YWRiODk1N2U2OTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bb18d4dbf6e6eed7a07d00a3f2b5adb8957e699",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3bb18d4dbf6e6eed7a07d00a3f2b5adb8957e699",
      "tree": {
        "sha": "2de0b5172f0e61d39d112ed3b4119948beab1c0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2de0b5172f0e61d39d112ed3b4119948beab1c0c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2de0b5172f0e61d39d112ed3b4119948beab1c0c\nparent d4774d5c01add2e91eb7a508462446bbcc927fad\nauthor w0xlt <woltx@protonmail.com> 1660516610 -0300\ncommitter josibake <josibake@protonmail.com> 1681212613 +0200\n\nscript: add `sp()`  descriptor\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1RMcACgkQity1WMTz\nPWXH9hAAukEbkQmdsZ/1MrKfGiZJyJJKnQfFMLaL6rBHH9H38OOfeuf49NJf5rR7\n1WtNbERacw9b3wLNM1KpkKyhzLJLqIYMSbI9XybWOwxTw6oBYg5Ppf2C6OGXIKAd\n6ioo+9HVbLBl0Ue35UYbP+AdapKsfmv1+ryO14fIgItcTYTXzHbsu0ML7rPWe5rF\n7Uj+320fjuAaEdhEEHu3ErOP/RNvnspZgfNwLrUtbzYrrNMssXlxl0DC2UkqaXXU\nzjP8itcD2T3cnvbncLh7rkeSlMdNLHISaibOHrgjYNDc5tmXK5cm+K3Wex0Z59+q\nMRzNIrUTU/9Pr3xr+Y7mXJyNLAaU6vFgdizuUzoh7RtZb8cmiz1Mq6o8azndMcKS\nJihX+dku5eY9JC+PYgNyTQXz78cuoEfjIQZ5jaScMm0vSkF5RF3T0V/Lg0DMYtFo\nJgyBe2ML4QU3JtOsMsOctUI7klAbHn3PAnnQUln2ABJt3fjppYMD/ShXrclwBWhn\nzPcNcCtb3hYmn39L0Afcq4OxFhZoPGVwsS4KISsi6SrVqH3tefUMheYaYDdIF/AP\np0wvQ0FP2JEenLAqXRqBO8sqwBKc/zgzW8cf+1WRrS+s0/Tu19u8JtGtpIzyS8XL\nTedR5FqM2FL5d6Nhy9Fo1sZj1NUuuUzdW+vO7rACml+mt/rOAfs=\n=40Po\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4774d5c01add2e91eb7a508462446bbcc927fad",
          "sha": "d4774d5c01add2e91eb7a508462446bbcc927fad",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d4774d5c01add2e91eb7a508462446bbcc927fad"
        }
      ],
      "message": "script: add `sp()`  descriptor",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T11:30:13Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-08-14T22:36:50Z"
      },
      "sha": "3bb18d4dbf6e6eed7a07d00a3f2b5adb8957e699"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU4ODZkM2FiYzY3OTM5NDllYWI5NjcwYTUyMTFkYmJhMGM0YjRlMGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e886d3abc6793949eab9670a5211dbba0c4b4e0b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e886d3abc6793949eab9670a5211dbba0c4b4e0b",
      "tree": {
        "sha": "e9030ee9eab2461a931127b0792cf5539e9ba103",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9030ee9eab2461a931127b0792cf5539e9ba103"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e9030ee9eab2461a931127b0792cf5539e9ba103\nparent 3bb18d4dbf6e6eed7a07d00a3f2b5adb8957e699\nauthor w0xlt <woltx@protonmail.com> 1660522265 -0300\ncommitter josibake <josibake@protonmail.com> 1681212621 +0200\n\nwallet: add Silent Payment flag\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1RM0ACgkQity1WMTz\nPWUigw/9FABV0cJcEQ9syPDLb7rQuTEnjBHm2/gMYn8poRwhs4IdcP6kXNXDji5m\nfOnMCtNrWGQ4cpdDNbmXKZrx93DgSR3MsJo/qYXign9pfjzEKGV35oQ1hYzBj4f7\nIff3W8lfqW4MkLxmf/EvKy4DxnyiP9JV9AKDYE7ZUOwVaj2QYYpqRhT9AltwLUJe\nksLGZpvq23N8gb4J4jC4MN/KcG5IUC8vfR/UQzMq96FXHqx9KTQWmi7H7Bav1eAP\n22fjuXjAmIZe7sXcD5woKtMxcC+5XQACLotRCPkrTeFFhnb+/A+3gAO+e91Vv632\nDGR1OfARrDS493/T2V1+0LFGf9/mUZQ7jborEdIqQXJ84P+BdAywV/eRJJMWgoIv\ngkbxnnqmZPH8InzlACCtUU0irqYs79pdfnXE1llAwtUM25ZFfAZgJMKjJN4yQJv4\nAbBUxxOUev9BaH8GKSpcErgj2KpuzIfAZMHX1/sO/qLCN9zZ49RdhEtBwq69hUkz\nlep5Q5fEy0CpL+ln9Sg24t+kZdKlcZKcaAx9yKdxIDvu7EFiSQCbvsiUAQwbd/J3\nzmpFlnntjHGM6wAfOb6CQtdBJoQxkiWqn5tanUPdOUOIOFULgYF2cj5Ez/viJtnb\nvn5lRyUm9QbeOBKG/upeDOh5f3QMLvwQyMoNd52wkoWMQbyUMjM=\n=9F6E\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3bb18d4dbf6e6eed7a07d00a3f2b5adb8957e699",
          "sha": "3bb18d4dbf6e6eed7a07d00a3f2b5adb8957e699",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3bb18d4dbf6e6eed7a07d00a3f2b5adb8957e699"
        }
      ],
      "message": "wallet: add Silent Payment flag",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T11:30:21Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-08-15T00:11:05Z"
      },
      "sha": "e886d3abc6793949eab9670a5211dbba0c4b4e0b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyYWU3OGVlNjI3NzRmZTBlY2Y5ZjE1ZDcyN2E5NzI4MzhlMmI4ZWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02ae78ee62774fe0ecf9f15d727a972838e2b8eb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/02ae78ee62774fe0ecf9f15d727a972838e2b8eb",
      "tree": {
        "sha": "a220ac92deacc67eede7753cc1e3af5483658f5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a220ac92deacc67eede7753cc1e3af5483658f5b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a220ac92deacc67eede7753cc1e3af5483658f5b\nparent e886d3abc6793949eab9670a5211dbba0c4b4e0b\nauthor w0xlt <woltx@protonmail.com> 1660521377 -0300\ncommitter josibake <josibake@protonmail.com> 1681213094 +0200\n\nscript: add SP address generation\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1RqcACgkQity1WMTz\nPWVvXw/+JQCR8o1YOf+9D6Fh69ExEGWMdIY/k0OPpaodGhpzyM5w06c1Fd4TYVU6\nOb+GqNKccLLkTz7LldUEoKXRz5rroblBWq5tq3ygwMl40RagcnaVzAg4PPDe9gR7\nB7XpYsBN/sQDwThz041xrhk3Yp9iVjSfRMLVDHtGZ6FWPP5ikbYYX2EEoGIWyNvB\nGhtxcBd7f94fMv8WSmPSO9LWGE3WrwrR5FxC5s+PAYr2WsQNDzhzlICjyUxGCZg1\nEwG4GMk9fEbr0af5HkahalZcP/EZpMAgFOUCEIx4RZJ1Wg7rEhq+D4LyoLSQR0VY\nbIq45y+mBb67eza4qD8iequQShm/xTGooSOl9aayqR2LYua/YyeiuRt21EXlHBTP\nKLfWvFR+oGpf0GdLKkixlkDKnTDdy3DE+7m8tbyRxSXBcd8p8OMd07HpVlD28uua\niovrkOuPHUe+VzXymmsWb8tpNBieAHkAYXSM+KNxgBEYBnip0R9GOqelemnkDJ9X\n1FkysRd2GvjMrJ/6lq31E3HDyA8ClOfW7HA+Go1rc4A8SH19tuoonfXRNk+Ha9HH\nNABnHZU1SL22KQkRYB3YYzTrPsUT6FwWFkKWsBmqnrcTsuFYuOF0FM8HWtpRLdP/\nQh4fxCjBfZSY45XYpmlOX93ti/Tioi73qnBQtxyaXoxCyxGn6kQ=\n=rMG4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e886d3abc6793949eab9670a5211dbba0c4b4e0b",
          "sha": "e886d3abc6793949eab9670a5211dbba0c4b4e0b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e886d3abc6793949eab9670a5211dbba0c4b4e0b"
        }
      ],
      "message": "script: add SP address generation",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T11:38:14Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-08-14T23:56:17Z"
      },
      "sha": "02ae78ee62774fe0ecf9f15d727a972838e2b8eb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE5NjdiMjEwM2U1ZTc5ZmY2NTEzNzk4MGI5YTk1NDFiZjYzYWNlNTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a967b2103e5e79ff65137980b9a9541bf63ace53",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a967b2103e5e79ff65137980b9a9541bf63ace53",
      "tree": {
        "sha": "20b990d0dc69f0f8c3e7721c868989883e3249a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20b990d0dc69f0f8c3e7721c868989883e3249a1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 20b990d0dc69f0f8c3e7721c868989883e3249a1\nparent 02ae78ee62774fe0ecf9f15d727a972838e2b8eb\nauthor w0xlt <woltx@protonmail.com> 1660533021 -0300\ncommitter josibake <josibake@protonmail.com> 1681214490 +0200\n\nwallet: enable SP option in the `createwallet`\n\nCo-authored-by: Aurèle Oulès <aurele@oules.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1TB4ACgkQity1WMTz\nPWUVGw/8Dyi3966qnz4/DmUZhNhXlwC4D68gBSU7pFxlg9jeA0unzy2tpi3G3MyD\ntGTnqqU9Tn7pxKWXmz7BlrtJnQ4O8avDX/+2nR3tVtYQ0JiK27yW1iA4kKRH9/Og\nZZMVF8O4N6+H4OCZ3S9S6Xih06z8hMvDsVoqTNUTnQIfmKvUFT7UoBjQUfdeiu78\nwIMrz8YPyZLAt1EMNtJDR6sIRG7TRo9B6tXw8+SChqUklUesZi59FkLHHvcfMzAJ\nHi5aUxv+vM2HD9A4ceiBimalsZ54/D7MUg1bxMQ5qcw60hgVdS5ltH3ubaPWsaB4\nHBLePC7sfz3vBtf/01vJXGneNR4zvWqBwE7/3gOY1gwtSpfI7Y1vsF6LdcjIPMeS\nViRtqkTV9Sk3Wd6qanOpiOyZfHQsjlc0ouOgO7VknSzlm8zxekFZm23JsU7sTBIx\nC2YwPab15YjuiLI0a+YBZ8aThi3uwVn/VkF2rj35Vy5gMRuoHCt19vezzzwKazLM\nO5EsVmMwKok6Bo0wwjBzotC6IWL32WicswNB06Cn/MGCbqlSCiQ/VeuG6PrdvRYD\nf6PKFZG8pnQKAdRfhoP1LK7szl9QRCdCKjCr+g1XMzgEzQKpMvVD7DxE1eR+Xufi\neJGnmRMuibUwnxeTUysjwWE4hwtkcD7RwA5m0AhZ9fcoIwcDv9o=\n=UBDy\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02ae78ee62774fe0ecf9f15d727a972838e2b8eb",
          "sha": "02ae78ee62774fe0ecf9f15d727a972838e2b8eb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/02ae78ee62774fe0ecf9f15d727a972838e2b8eb"
        }
      ],
      "message": "wallet: enable SP option in the `createwallet`\n\nCo-authored-by: Aurèle Oulès <aurele@oules.com>",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T12:01:30Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-08-15T03:10:21Z"
      },
      "sha": "a967b2103e5e79ff65137980b9a9541bf63ace53"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI3MWU3OGI1ZTZiMGVjMGE3MGI5MjA0NGQwODdmYjc0ZTgwZTc0YTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/271e78b5e6b0ec0a70b92044d087fb74e80e74a4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/271e78b5e6b0ec0a70b92044d087fb74e80e74a4",
      "tree": {
        "sha": "f2e74604dfec64bcac7759359321af2224c40585",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2e74604dfec64bcac7759359321af2224c40585"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f2e74604dfec64bcac7759359321af2224c40585\nparent a967b2103e5e79ff65137980b9a9541bf63ace53\nauthor w0xlt <woltx@protonmail.com> 1660550234 -0300\ncommitter josibake <josibake@protonmail.com> 1681221030 +0200\n\nwallet: add function to create silent transaction\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1ZakACgkQity1WMTz\nPWWvYQ//SM/5hesb0DGUqnJTQx78wJM9+pe7p1CMI0IDcvPtcjkc/Ol0ohXrAggs\nZePBCmu25PIEL2dfBLfMzd99ohFNtGDG/tnBS1bLSMJPzEM2u2dRs87YOsOh+hvu\ntUa1DwbJmswRQKh5dTTd0t+6+YZ3kXJH6RzR3SxtcaQVy/PF6GrMPUmCCtTG0UL2\n97bydxHnABBrsv2Ep2vRcXlVygBfLfZpXjPJ0Km7a/vACG7GbHPgGPTPvMTfPKlq\nVv4wT4xnujU4/0Q30QeCcpJyx00joCJWIq9/M2C8VycXPd/Eg+VgAFCOYPFMwbaE\npf/M4chwdXSv1jmhoOXRwSHkBBZrHMtuklUYWnW3KjkjKKhhQCmmM6zlwGQk6aud\nbjMnitqk0kXQazCPUCX8TQJWQV4AabNNfxRqD+RLeAIIf/3wfejTTpVvu3J2GebW\nUboO4F1Ouh4QWGxNOD3caGrRmso3fBT3Mj0uIrgRmR9GuL0vbFgiXzb2nSM0f4yu\nGfQWHWRYa7G7dqntshCeDTWOjLI0FQBMEnsMqtWGB3RSgVXD6KTg3o1KnGsB2JHX\n3aZ2kjfgisWFC6ZhMkk7OjN7wqoR3Me1YRIhYjqVsdjhu8MPsCVDDRZpJGRXxM74\ny8gKc/G9H18LzYxWqlVCmIDxkxwM7OlxQbtshza0rmym7ns56eE=\n=oD1r\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a967b2103e5e79ff65137980b9a9541bf63ace53",
          "sha": "a967b2103e5e79ff65137980b9a9541bf63ace53",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a967b2103e5e79ff65137980b9a9541bf63ace53"
        }
      ],
      "message": "wallet: add function to create silent transaction",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T13:50:30Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-08-15T07:57:14Z"
      },
      "sha": "271e78b5e6b0ec0a70b92044d087fb74e80e74a4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5NDEwYThmNTYyZmEwMWY2OTI0NGM3ODdkY2QzNmIxOTYyMDU3NjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09410a8f562fa01f69244c787dcd36b196205761",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/09410a8f562fa01f69244c787dcd36b196205761",
      "tree": {
        "sha": "81664cdda128dc45e13aeee88253058355e90d1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81664cdda128dc45e13aeee88253058355e90d1f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 81664cdda128dc45e13aeee88253058355e90d1f\nparent 271e78b5e6b0ec0a70b92044d087fb74e80e74a4\nauthor josibake <josibake@protonmail.com> 1676309369 -0300\ncommitter josibake <josibake@protonmail.com> 1681221061 +0200\n\ninterface: Add `getUndoBlock` function\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIyBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1ZcUACgkQity1WMTz\nPWXsvQ/49xRR+X9MZre1wctzuFklPwmhxJ6lMqz8lDPlaHCNvVMT21Y8SkY2k8n3\ndct1YWcnzKaJhu4UXKUxVqvRvIftQ4CL9dQheQyTe5XmogJ52XzcroHQLE8ohvB+\nmfuYM9tlVaEFnZASZQSVzUA01Rh6CwTvWC7mGRUyFf1a4HgU9Sf9mAe2oTutu+ad\n6jdDY7hSfnCGKeEUtpuyqIg6qQGmsO0wTraZzxB/C3aATVTwq8s41j6SFjth90jQ\n4K4NbX9ragIQ9Buv298ZQBGf1s44Jp9fJrnElsfPgLO6LqCtynDBKi+DuLuzg/vH\nQKRP0IBb6D20+0TZztK6QRHgZeQFyl/5SurtqJdRG/rzAE25DehF/pVziJiWZYKT\nBOiGb1B4ubtmoLuPR/hiUXl1DEDbm3Q2g6ZRcc97To0Rx1hzo0N44U3lVU14XiTz\nm77hkm8kVoUTizVC7OhZsvitu7cgonVm/nuz81qEi+1rm4bo4ac4ktoLuh4UD9MS\nYw0d3YBRYdNxrRDrQh93GINEJ2CxLbRtW+FqxLo3MOiijVtnPUC2b6/bhBlQrYbH\n79u5goTkoiX1T+fdf2Zzi6VmhJ7y0RgugiNtsO4L905I921ZjcGKSjgOaHBwb8C8\nuxtVS/O63XIgZPWvSEyRpXJeynOzOUDD/+2yYj7Ycym7hSlSHQ==\n=UagG\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/271e78b5e6b0ec0a70b92044d087fb74e80e74a4",
          "sha": "271e78b5e6b0ec0a70b92044d087fb74e80e74a4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/271e78b5e6b0ec0a70b92044d087fb74e80e74a4"
        }
      ],
      "message": "interface: Add `getUndoBlock` function",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T13:51:01Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-02-13T17:29:29Z"
      },
      "sha": "09410a8f562fa01f69244c787dcd36b196205761"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDExMzRmZTk3N2M0OTIyOGM1NDk5ZmFmNGQ3N2VmNGE0MTkwNjI0NGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1134fe977c49228c5499faf4d77ef4a41906244c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1134fe977c49228c5499faf4d77ef4a41906244c",
      "tree": {
        "sha": "adab3bcb66d03718d5db15b4636747edfa9fdeb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adab3bcb66d03718d5db15b4636747edfa9fdeb2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree adab3bcb66d03718d5db15b4636747edfa9fdeb2\nparent 09410a8f562fa01f69244c787dcd36b196205761\nauthor josibake <josibake@protonmail.com> 1676318830 -0300\ncommitter josibake <josibake@protonmail.com> 1681222291 +0200\n\nwallet: Add `GetSilentPaymentKeysPerBlock` function\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1apQACgkQity1WMTz\nPWVVRg//VpdYSbgftIRYFcO+65vByHRKjIehz8jxODMiZu5LzJq/pGkKYw8BYvdO\nKV3FFaayC/s0r5lzxmys85qEGpYSRLN42Yag0a0AoFABmEMFYgoN7LYsYP24QL5s\nEJC1I5kkfBxeNjLankCCxc9e4LafTh/wuBZIQoU6UjBlYJ4pqGfiAjzHuxrtY0Z5\nhRDChXvppUB0vtOYj+VcUYWeFxLGV+Rx1EWEjZAoDAiEGToztmPkDEhU5UieQ6Z/\nDQjygbOf3H3A4urZXv0GCnqbtkIaMxU8vkES59sH8oVKNV9BAc+3bY++ATPXqv7I\nm7uHmVdWVq/RgymrnYHmFW+PklhSeRQzsRAO2bedaNySOLEvoEjTi5jRiUA/9JJJ\nTj+ujVuBWv3fBnYfKuDx8qLuimyCrEqA28Z3T3mIAh3AQHZSU3Rb+XHWsPmtJpwG\nxtKRHdKaFEL6r8C/NCWb/vVwLLXClR19ZT+ho+3LVw37Xps9L0EjFhlWQ+8nx9WN\nMLxHrAE63pcbROGteGKMo2LCen0AZUyadHyP1ZYVAEojETKLGg/jYpKU5qoJ9e7B\n+nOr6OUrYIiz99v5WUp1H+seWj60vg10Vg0lvwQkOuZ8f97Ouyc3ySJTTIpC26+I\nFdh3OYuOE2celCqndfK9MEC8khs1RVtedORgfaWYkr6+tf0Ydss=\n=WVfk\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09410a8f562fa01f69244c787dcd36b196205761",
          "sha": "09410a8f562fa01f69244c787dcd36b196205761",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/09410a8f562fa01f69244c787dcd36b196205761"
        }
      ],
      "message": "wallet: Add `GetSilentPaymentKeysPerBlock` function",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T14:11:31Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-02-13T20:07:10Z"
      },
      "sha": "1134fe977c49228c5499faf4d77ef4a41906244c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmNGRhYmQyMjRkMWI5ZTRiODIzN2FhZWNkN2RmMDA4ZDc5YzVlY2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff4dabd224d1b9e4b8237aaecd7df008d79c5eca",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ff4dabd224d1b9e4b8237aaecd7df008d79c5eca",
      "tree": {
        "sha": "8b4bb8fd8df4cd671580a073dabd641a386de31d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b4bb8fd8df4cd671580a073dabd641a386de31d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8b4bb8fd8df4cd671580a073dabd641a386de31d\nparent 1134fe977c49228c5499faf4d77ef4a41906244c\nauthor w0xlt <woltx@protonmail.com> 1660571402 -0300\ncommitter josibake <josibake@protonmail.com> 1681222370 +0200\n\nwallet: add Silent Payment verification\n\nCo-authored-by: josibake <josibake@protonmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1auQACgkQity1WMTz\nPWXGfQ//Rr6BgAcAxQibZGC/C9rk5N51Iix7oGse3N8c2hGmOal0Zwu76Tpgdbel\nKMPmIXWv8ggs8JwI7Btkcr1VzsxaW67CdELHF3R7oMrG6zZ1UIIb+4ZI020pH3Rn\nozQjObltU0B2fxInvAk1alSCfp0d9UeST6fOPNkOSbMummyCP0+sIaG4+6PS8EtM\ngR1DrveaaEfu+wAz9fi6WpmlIp8hxVKstsPFyOr6ybZinw9pspgomxx/LOE20QZb\nmbm1eIPR7NYraDaf/M9g3IVaFopEIRt6YFl8SiIbP5LgTDByZ3ShsStbYbTSq+tG\neJycSR+c4hYehenm67o0ddilZ+arSzpZxaX1stShr2SKJ4IxR4pcFR0hJA9eE8ja\nYJMlX8PULZ58rP83ZxrbF4DE33vpHMGJGig0fcGXglBlXi4yqlfJtx4XiAcm0fG8\nzrzbWp6MkLnx1HCYlKIQMzA8t2fwltYGYIGovRP+/gmGVilkMx1b7O6ynVub31oc\nHU3rjntt3nh5/5vZlsc3h0F4CtOLI8xfJ82kMRHYxcG12pPwkEYJ+RUWHv0iAOcN\ne8sGDCLL3BOZIuoE4BloJvWqLPUvBjN/uUt0szcGC7NrMqL4h6CJg4GdstBin2Du\ncXp8xqF/anlLZck4dtvI3QFUnJYMmyhnLW2lQFie9g4UdZgJGPY=\n=CdQ0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1134fe977c49228c5499faf4d77ef4a41906244c",
          "sha": "1134fe977c49228c5499faf4d77ef4a41906244c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1134fe977c49228c5499faf4d77ef4a41906244c"
        }
      ],
      "message": "wallet: add Silent Payment verification\n\nCo-authored-by: josibake <josibake@protonmail.com>",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T14:12:50Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-08-15T13:50:02Z"
      },
      "sha": "ff4dabd224d1b9e4b8237aaecd7df008d79c5eca"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ0OTlhMzFiNGNjNzA2MWVhYjYyMDQwYzkxMWNkYWQ1NmZmNGRmZTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d499a31b4cc7061eab62040c911cdad56ff4dfe0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d499a31b4cc7061eab62040c911cdad56ff4dfe0",
      "tree": {
        "sha": "e3b79319c2e46e31ab908769ad38866e57f98e5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3b79319c2e46e31ab908769ad38866e57f98e5e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e3b79319c2e46e31ab908769ad38866e57f98e5e\nparent ff4dabd224d1b9e4b8237aaecd7df008d79c5eca\nauthor w0xlt <woltx@protonmail.com> 1660573928 -0300\ncommitter josibake <josibake@protonmail.com> 1681222372 +0200\n\nrpc: change scantxoutset to scan silent payments\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1auQACgkQity1WMTz\nPWU2kBAAwNi+Q0xyCBsnRjVLb9Z8Sve537mvH96fqRlYy3bpYeZVSAgqIby5lVN0\noA/a0jWT4+FIKQ+C/ipYcKZnxJjg4r9DejlQ8gE8rSbThKVj3l27nXsLHuDiUD6C\n6s3LGJ+rRJsc0N1jyZLFWxVuDfqldzrbJLad21cqW5Ff80LupGC3bJgS8zHz+8zn\nEHYhpe971saC8lOXwhy+w/O1f4IA0JDZKNoD8LwDDGHS9Ma2MSYwn5g9PCesuFQN\n86cI5BNn1/W2ZAk1i/d4WxLkD24fH4Y0K5GbClu2ExWNOdgooVoGYF+M+KH1Sz7U\nqRbwBgZTkznwH0kYRd8sJjQiA494njaqoOtbx7QRkujkVEK/10iSsIvPPZ1mpBNx\n1B0Ez1Z2Pp8pIqE5H4u6UguZQovgb5giLpvY1N43OmO60+Smorf90W28W1vW4cCk\nWEF/xgLoqHCKNYeiqTriInb64RJv6wuYpj75xczDv+4KHW2rJljvn+QCdEVyEjBm\nSFnnh7lPiJQbj7USyovW01JywviF/g8jtIzhBpjSmm33ez1BML678tI6f8GVse3P\nUhkdCDwe+N1HrS/oQv1vaw4F6JMITs1SpmLWIBnWX1PvQKJxjCqsytfLjjowh7+p\nsBYw7yFVGiwOXWcrh6BzaWtkteOltLexNHEXuF/jbok8rF1a3gc=\n=er9K\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff4dabd224d1b9e4b8237aaecd7df008d79c5eca",
          "sha": "ff4dabd224d1b9e4b8237aaecd7df008d79c5eca",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ff4dabd224d1b9e4b8237aaecd7df008d79c5eca"
        }
      ],
      "message": "rpc: change scantxoutset to scan silent payments",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T14:12:52Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-08-15T14:32:08Z"
      },
      "sha": "d499a31b4cc7061eab62040c911cdad56ff4dfe0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg2MDBiNzY3ZjYwYjE5ZTk1MzI3YzU3YWExYzJlZGQ0YjBlNWVkZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8600b767f60b19e95327c57aa1c2edd4b0e5ede3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8600b767f60b19e95327c57aa1c2edd4b0e5ede3",
      "tree": {
        "sha": "d415fc0e3d731cc3c4fda070fe23a392f8bcdcf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d415fc0e3d731cc3c4fda070fe23a392f8bcdcf0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d415fc0e3d731cc3c4fda070fe23a392f8bcdcf0\nparent d499a31b4cc7061eab62040c911cdad56ff4dfe0\nauthor w0xlt <woltx@protonmail.com> 1665443425 -0300\ncommitter josibake <josibake@protonmail.com> 1681222542 +0200\n\nAdd silent tx function to `walletcreatefundedpsbt`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1a44ACgkQity1WMTz\nPWXrCxAAqX00rclKM9YAwuRdJptQ4wQapu7z3/YkvY/mj2QBukPXqHqB4b2K7xLt\nIfA3wrZ/1kRtgjrt9B1CHcpd58hvE6f++h7odAe6hAdhcQGbhuH1QShi819650G3\nEFCNa6T70ZrcHAIYmcMtf0yqt+Wpiy+42j1JKauxrvbMrAmCsEbpLV7EJvFIuMEU\n//gza4B3kEux6GB24E9eyo5TYNquPM9y4JQEbLwN1WBoDJWqTVyEbCUofJO7/w6h\njqTmRQAs/9CeWyJ7DZa2p1iUXwXN4qnV784glIgJBlCHSaSyjuZZ4IZoLeCSXt/I\nMUmC6iZV4MuilXj94as16FJ0m7mXc/wp04ohouQ8Nf5sRQAc0Lcb+CubA4IQVnMl\n1UmK1SRyqH78GCmgqgNoIQ5sKOCK1nkhStVIGvJV/0E0VqgbAfEUAb800A/w8Nvc\nsH6QL8CEpQK1O3OgTNSKt8EHZtWs5AfwytZ7AcpA/Xm/Rpx2m/hu3+uWecZffiKA\nsgVenO7Fi9FvBcCZxF0eBx3UHXL4a8OAKNu5SwCph88qD6pdjsgqIAVDox4gbMQX\n6cF81DzTMtCS0nE2Ob15sKvb9iKrWmPSeny1xIQalBEPMFpCavEAYDrQRBWy5mky\nLfbNb6PrF1DEmTBmqfyD8l0Jkeo+WLTtyHSsaQ7mNBcZnS5v4h4=\n=ZEkC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d499a31b4cc7061eab62040c911cdad56ff4dfe0",
          "sha": "d499a31b4cc7061eab62040c911cdad56ff4dfe0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d499a31b4cc7061eab62040c911cdad56ff4dfe0"
        }
      ],
      "message": "Add silent tx function to `walletcreatefundedpsbt`",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T14:15:42Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-10-10T23:10:25Z"
      },
      "sha": "8600b767f60b19e95327c57aa1c2edd4b0e5ede3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5ODAxNTk5OTZlMzg3OGFiYzNlZmI3Y2FkNDIzODU2MjQyMjJiNDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0980159996e3878abc3efb7cad42385624222b49",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0980159996e3878abc3efb7cad42385624222b49",
      "tree": {
        "sha": "0683bff9eba4ff761c27a645799583764ce26bc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0683bff9eba4ff761c27a645799583764ce26bc0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0683bff9eba4ff761c27a645799583764ce26bc0\nparent 8600b767f60b19e95327c57aa1c2edd4b0e5ede3\nauthor w0xlt <woltx@protonmail.com> 1668043183 -0300\ncommitter josibake <josibake@protonmail.com> 1681222592 +0200\n\nwallet: add silent tx function to `sendmany` and `sendtoaddress`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1a8AACgkQity1WMTz\nPWVzlxAAtM6mFGB85Js9zoIymCpo/hx6ATmNqkQCrsUlJ6A+osRmxDp2P5u45S1q\n5c+DhoAtUkmDh9TskwYpuzCbyhQK3WyguIGpvBZ2grj4apiwRCIoDVzePruRb/0/\nogTuhNMlDMQT+ObfF5MxzcG93nRI/BBDtJaV9zcbjG2oP+ZnxgZ2z6T+aoCmRTXV\nPHHmXFmk2B70TOnXHAlhhdjjpx4WPJ8a5x0w28vkhWorkqWRDK53iTNp2HKWwP0h\nEzd1TrNdfS8ecXMSBFTdT8V5zeJW3lmMDhhewIpZ6XswqxAE1Z0WtgYTr5Z8zgIo\nyjNTcSvN0fsgEI4Ch6Dy5QQBqaIOVKY9x0CTHwsFWsA5m9qSywV5gcJAotdTsV94\nfcihVRLTreo5PH1bBi8gCO6c5iYEehtmyl4IrQGrDOIaQX3ZUpmslujnoG5XwDpJ\nIuweozvy3x1tIHvILRbllFyFd26b3ppGsLojKjOFgs7Fss+cp9GeTjt8X9N8nINQ\n/NP+iJI+tVUL9XAZRvSUkqYar5YtnazJnmnnlCgeauIUDI1NCR1NmKQqoiX5A8Go\nOEz/ks5nGbKw2GTEfwYRC2/YjRXZ/IeX+g6RL3DHrD5jdo5HGkvXyJhGX8A2WKWs\np3J10GohReCYiuZ2isCV/VrpjaCyhweCtDxwa/6wPWfWX3WyIOg=\n=/Vq4\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8600b767f60b19e95327c57aa1c2edd4b0e5ede3",
          "sha": "8600b767f60b19e95327c57aa1c2edd4b0e5ede3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8600b767f60b19e95327c57aa1c2edd4b0e5ede3"
        }
      ],
      "message": "wallet: add silent tx function to `sendmany` and `sendtoaddress`",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T14:16:32Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-11-10T01:19:43Z"
      },
      "sha": "0980159996e3878abc3efb7cad42385624222b49"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVkMjU2MmFhNjdjMTI5YTdlYmMyNThlZTRhODUzMmZmZTY4YmE4MWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d2562aa67c129a7ebc258ee4a8532ffe68ba81b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5d2562aa67c129a7ebc258ee4a8532ffe68ba81b",
      "tree": {
        "sha": "2619e400b888b5d944097b865515729d0d013d07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2619e400b888b5d944097b865515729d0d013d07"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2619e400b888b5d944097b865515729d0d013d07\nparent 0980159996e3878abc3efb7cad42385624222b49\nauthor w0xlt <woltx@protonmail.com> 1665667476 -0300\ncommitter josibake <josibake@protonmail.com> 1681222643 +0200\n\nwallet: add `listsilentaddresses()` RPC\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1a/MACgkQity1WMTz\nPWWwUA/+IBUMi7wSl0fz+OX9JbkttFjTq7JCJFabXcLgWNvDSJjVzYDfocXGW4Us\n1/AuUWi6ounbetMySiZHiLU+RCarWDVNWPoSfqOby/NaRVpbjjE6xfG+XurrCAHi\n8SJ5c0O/boM7M1Be+yGKEusIOmEHkFhtJe9xdMPRPYaFCeXyIUUACobnCkX3m3Vw\nIa1G0UflFQ9mbG3Usoi2waAjqVHS6C/oKozuvSpp6HK5a5NRSQgXJ/O3wqgNCkqt\nu/C93ZRPPpzMPEbHlUdsbPuC11WLTcAb1nBcb6n3f6D8bBM20di16cE6Idbo9AWL\nbaLZaH4q0g2jFRsar6PcKLRa18aChi8ONp5r+ajSqXQNnJ5vOxZlHLll+LakIpWp\nEBDFve7AlFxit+gpLxA3p0IEvJ4jTI6IqQmzrgUUyu6wSjSKXV9IlJgP+rCDV7HD\nkfsRnd5foeg4L9zJwBkajBxM+GERe+IifFtlO+84XLqLyUH3tpPfzbv8e34gWOaT\nONK7X7XYkDnISbwSvjPpsI6wFj4TeiUmrdOMs5NHvH/3+uCDjQ76eIMehbBfgQmZ\nSzQJUbR+oGo5OVXGBZsxzwDgEH89llSI+j8EEFueJwFxTx/VreUW6v4LhHxc5h4g\nL5MFOBwnfLZ7bBifYbTN5OFUNK69idUxBhmy0Q4AuH5QufHDbBQ=\n=ZHff\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0980159996e3878abc3efb7cad42385624222b49",
          "sha": "0980159996e3878abc3efb7cad42385624222b49",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0980159996e3878abc3efb7cad42385624222b49"
        }
      ],
      "message": "wallet: add `listsilentaddresses()` RPC",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T14:17:23Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-10-13T13:24:36Z"
      },
      "sha": "5d2562aa67c129a7ebc258ee4a8532ffe68ba81b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkwM2VhZjI1MzhmMzY4ZDg1MDM2M2FjOWZlMjE0ZmY1YjUzMzFlOTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/903eaf2538f368d850363ac9fe214ff5b5331e92",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/903eaf2538f368d850363ac9fe214ff5b5331e92",
      "tree": {
        "sha": "dffce4bdb0cf0901188009a726843518e0b9dce6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dffce4bdb0cf0901188009a726843518e0b9dce6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dffce4bdb0cf0901188009a726843518e0b9dce6\nparent 5d2562aa67c129a7ebc258ee4a8532ffe68ba81b\nauthor w0xlt <woltx@protonmail.com> 1675224919 -0300\ncommitter josibake <josibake@protonmail.com> 1681222678 +0200\n\nrpc: Add `getsilentpaymentblockdata` for light client\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1bBYACgkQity1WMTz\nPWXUwQ//b/otFjQc82Q1JmJHgMu9ckWagUvHorDbt/I4gKWvlwedCq0I7fU6ZybT\nVEU800a749ngfJUzFfyIagvyrWppm/NwLr07OKnXgL+9kwCC6bSP2GfDt2BULEo4\n1iDx4NYRpzzRdRGSSGp7lV4girckJBmYF3t1SxvYvTljUAC9yAIbdcMj1EO4qI2E\nG/e2/Ed8GUaubPQN3Rrd3Us8hwZ2oYgq6/vfZ9CLC8y9XoFKIcHPXb6Esj9uTJrt\ntqBg5Pj7rjiACsInDwU0RDx4zZoP0VsAP+mxmPTJkxaJzNRv9aPina7+E0/u3H8a\nom2EGilLyxS7UC4NC6OqFw5GExTqsYlQ9LBNxH95NbNfOcTZ0cHG9JOeKmPjpDlv\nGUcUvscidQXZUfReftth8GIJsaB8q9rLux3zNAydK+e1+e6OvYGYlpT4+GJUkd5S\nNKvKyLnDUo5sEG99tyVhL6WG9A7LJ4o/gD47gorEAVx1hLUtFTG1AuWrupMgMrg6\nv06ngTomU7+nn1COLGKE3QH36083u5dqLdD61nCmiwUkgJ29b4MREuTx1SBpVWx+\nbUx82Gs7NuAg4Sa56R1/KjhZtOPVftnmIRVMWRZZbSNeiyCewSIRSjMpv/2BNvNH\nXOu0vLzA6wQnAkNfDts76InuoR8mYdRk0W/ssk6VTiJ5KTK0ZP0=\n=LjMD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d2562aa67c129a7ebc258ee4a8532ffe68ba81b",
          "sha": "5d2562aa67c129a7ebc258ee4a8532ffe68ba81b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5d2562aa67c129a7ebc258ee4a8532ffe68ba81b"
        }
      ],
      "message": "rpc: Add `getsilentpaymentblockdata` for light client",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T14:17:58Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2023-02-01T04:15:19Z"
      },
      "sha": "903eaf2538f368d850363ac9fe214ff5b5331e92"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkyZDY5ZWU5NDFlOGExN2VhNjJkZWQ5ZDk5NDkwZTFiYjBjZTc0OGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92d69ee941e8a17ea62ded9d99490e1bb0ce748c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/92d69ee941e8a17ea62ded9d99490e1bb0ce748c",
      "tree": {
        "sha": "7fc9b1aefda80399370e628d0e0233e46d16dddb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7fc9b1aefda80399370e628d0e0233e46d16dddb"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7fc9b1aefda80399370e628d0e0233e46d16dddb\nparent 903eaf2538f368d850363ac9fe214ff5b5331e92\nauthor w0xlt <woltx@protonmail.com> 1660576888 -0300\ncommitter josibake <josibake@protonmail.com> 1681222713 +0200\n\ntest: add functional test for Silent Payments\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1bDkACgkQity1WMTz\nPWUYYBAAsOru90evydU/VqSsCElCFyrDOWqW9Gnrk8xjuGuMgfuiJdJr8U7KioL6\nj0GFleHhOxa78hPuM/xyZljNJpD9qG1gDqON2c/vpx9QFIGikxiBx0dUcSz1xc+2\nK2LMqiDGN1KN6BqFciJ95PamYHQ3IzOQoKoEPNuhS56/04rbZuVGJBNPvnGhrML/\nJOKcuu2IZBgAopjr75jMKKIe3CHyqG+EMbI9ey+p8h/dYtUm+G6xXQThDNkwAwOS\n+0HDxfgtnG0gtLApj+6y3f46rDVI0wW8NFB/BTHWn+c47GyJDGrkyrCLafwaA8ik\nwoU4hSUpVCYtAyVJ2VlvFgQEBBxaDhGtUnE0nafY7pfu11tAcm1ecvEpYT2Zzagd\nooHNmWafOfSN+XVwRptG25krmgdpfKBYKzwM5yl3MU3gk/57MRjJcwG85cv3IWk2\nh/Oyu+BQbOpzDIf5i2ZpkX1ULQgMq9ijpU9QVJrj1Lw0s+8ho13cfTV+YEKat3mv\ncWGv8VZRZHrE+1CTRDibz060zq4Jtua9Xvn5nwlkyxGiikUZXNE9xQQtrQw/SpYy\nZ7QWnFS1Q9ma96C9N6LPcds8Sr9cX1E4XA50NxMTofNxQIm76YhPenjPDtsr280G\nUdihf6hO6T/CRJ/7XibOFN+3HxGyi2zZ5n9XdqObgfE8byWln3U=\n=v3gr\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/903eaf2538f368d850363ac9fe214ff5b5331e92",
          "sha": "903eaf2538f368d850363ac9fe214ff5b5331e92",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/903eaf2538f368d850363ac9fe214ff5b5331e92"
        }
      ],
      "message": "test: add functional test for Silent Payments",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T14:18:33Z"
      },
      "author": {
        "name": "w0xlt",
        "email": "woltx@protonmail.com",
        "date": "2022-08-15T15:21:28Z"
      },
      "sha": "92d69ee941e8a17ea62ded9d99490e1bb0ce748c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUwYTYzMjBlNTc2MGNiODc4NDAxN2QxMmUzZTBjNzQ2NDdiYzIyMzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50a6320e5760cb8784017d12e3e0c74647bc2233",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/50a6320e5760cb8784017d12e3e0c74647bc2233",
      "tree": {
        "sha": "290b0187511050cdca208895cc92ef95500dd240",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/290b0187511050cdca208895cc92ef95500dd240"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 290b0187511050cdca208895cc92ef95500dd240\nparent 92d69ee941e8a17ea62ded9d99490e1bb0ce748c\nauthor Aurèle Oulès <aurele@oules.com> 1665629679 -0300\ncommitter josibake <josibake@protonmail.com> 1681222752 +0200\n\nbench: add benchmark for silent payments\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmQ1bGAACgkQity1WMTz\nPWXEHg//bW6W5PPAAxNkO7z8FVkNNw6u1Kxfs/8fDDnH74W2i+pFrY3D1ein19FP\nk5RXlBc/eNyukhk7vjFsj1DIIacBBiBuYY5JF5PiNAV7szIQWEWVfisFWuFWvzZY\nK6HZ+yDYZlGGHVa+TWYgRz0T/N38iEPP5ho6NxKOLp7/0d8VjRG/zlhKbPPiDDo/\nzUfnXhDn47kosiEaVOTmMDEEdoSw2cJpwZp2/MlBkFOg9j1Y2D2B7j8biSw8Y6Nv\noS8iHEXpIsbIoFMPbL71yJKQXKNEoTBaqzYp8aVDMPIGlRsbSAIRX+9z4JG1g+qM\n5eQUiOrIgVv29RThBbg7UySZeRtFZNbqa9SVGmUJiI17TpcP3CX8LLX4NpM2XBDO\nib34zmsAu4pSOi+d97tl5U6v4fz/f7vDr8Ji/DUKUkXEkTQ1ClMDYlaKjsYBGsVK\nAk6YWV6DXcwh05Q00Ix/DnsVxFztiDlV1wYRQs0lGipCGbwUN+1hDcPkGUuhxdbT\nL2Ro4ecIj4SJ9Kbm8RLBgQbD9evehdPHAvxqVLTooARN+QFkJr6b2eTgJo1A8w3F\nlfdqKvQbNjYqPsqyXkZc4ejRrfN56THshi4msa9a0FHzkfYpL87z/OjKHnyKEVDG\nsQxgN5LE/WTte5C1NMCOcs/TwxUVMNnjDbjTPLNVu5JSkPDMmwc=\n=6Mml\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92d69ee941e8a17ea62ded9d99490e1bb0ce748c",
          "sha": "92d69ee941e8a17ea62ded9d99490e1bb0ce748c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/92d69ee941e8a17ea62ded9d99490e1bb0ce748c"
        }
      ],
      "message": "bench: add benchmark for silent payments",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-04-11T14:19:12Z"
      },
      "author": {
        "name": "Aurèle Oulès",
        "email": "aurele@oules.com",
        "date": "2022-10-13T02:54:39Z"
      },
      "sha": "50a6320e5760cb8784017d12e3e0c74647bc2233"
    },
    {
      "event": "subscribed",
      "id": 8989128965,
      "node_id": "SE_lADOABII585H5eBJzwAAAAIXyzkF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8989128965",
      "actor": {
        "login": "SmashedJadexx",
        "id": 130525349,
        "node_id": "U_kgDOB8eopQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/130525349?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/SmashedJadexx",
        "html_url": "https://github.com/SmashedJadexx",
        "followers_url": "https://api.github.com/users/SmashedJadexx/followers",
        "following_url": "https://api.github.com/users/SmashedJadexx/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/SmashedJadexx/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/SmashedJadexx/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/SmashedJadexx/subscriptions",
        "organizations_url": "https://api.github.com/users/SmashedJadexx/orgs",
        "repos_url": "https://api.github.com/users/SmashedJadexx/repos",
        "events_url": "https://api.github.com/users/SmashedJadexx/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/SmashedJadexx/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-12T19:18:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9004861254,
      "node_id": "HRFPE_lADOABII585H5eBJzwAAAAIYu0dG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9004861254",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-14T08:00:10Z"
    },
    {
      "event": "subscribed",
      "id": 9102531898,
      "node_id": "SE_lADOABII585H5eBJzwAAAAIejZ06",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9102531898",
      "actor": {
        "login": "takinbo",
        "id": 41004,
        "node_id": "MDQ6VXNlcjQxMDA0",
        "avatar_url": "https://avatars.githubusercontent.com/u/41004?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/takinbo",
        "html_url": "https://github.com/takinbo",
        "followers_url": "https://api.github.com/users/takinbo/followers",
        "following_url": "https://api.github.com/users/takinbo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/takinbo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/takinbo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/takinbo/subscriptions",
        "organizations_url": "https://api.github.com/users/takinbo/orgs",
        "repos_url": "https://api.github.com/users/takinbo/repos",
        "events_url": "https://api.github.com/users/takinbo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/takinbo/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-04-26T11:38:06Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T13:07:07Z",
      "updated_at": "2023-06-05T13:07:07Z",
      "source": {
        "issue": {
          "id": 1741647494,
          "node_id": "PR_kwDOABII585SMBHD",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27827/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27827",
          "number": 27827,
          "state": "open",
          "state_reason": null,
          "title": "Silent Payments: send and receive",
          "body": "UPDATE: In an attempt to make reviewing a bit more sane, I'm breaking this up into a few smaller PRs, but will keep this one open as the parent PR and keep it rebased on the child PRs.\r\n\r\nMarking as a draft for now. The main purpose of having this PR is to track progress on child PRs and also have an easy way to compile `bitcoind` with both send and receive support for testing. Additionally, I'll be adding more functional tests to this PR since its much easier to test when `bitcoind` can both send and receive.\r\n\r\n## Milestones\r\n\r\n- [ ] https://github.com/bitcoin/bitcoin/pull/28122 implements the BIP logic and unit tests, ready for review\r\n- [ ] https://github.com/bitcoin/bitcoin/pull/28201 implements sending in the Bitcoin Core wallet\r\n  - depends on #28122\r\n  - Ready for review, but marked as a draft until dependencies are merged\r\n- [ ] https://github.com/bitcoin/bitcoin/pull/28202 implements receiving in the Bitcoin Core wallet\r\n  - depends on #28122\r\n  - Ready for review but marked as a draft until dependencies are merged\r\n\r\n## This PR\r\n\r\nThis PR implements the basic silent payments scheme. In particular:\r\n\r\n* Adds support for existing wallets to send to silent payment addresses\r\n* Adds support to the Bitcoin Core wallet for receiving silent payments\r\n\r\nThe following items are not covered in this PR and are intended for follow-up PRs:\r\n\r\n* Adding labels for the receiver wallet\r\n* Creating multiple outputs for the same silent payment address when sending\r\n* Full RPC coverage (only `send` is covered in this PR)\r\n* Light client support (vending the tweak data per block, either in an index or to serve to an indexer, such as electrum server)\r\n* Add benchmarks to validate that there are no DoS concerns for doing silent payment verification for transactions in the mempool\r\n* More unit / functional test coverage\r\n\r\nThis PR is a continuation of the work done in https://github.com/bitcoin/bitcoin/pull/24897, where most of the follow-ups I mention above have already been fully or partially implemented.\r\n\r\nFor the silent payments specification, see https://github.com/bitcoin/bips/pull/1458\r\n\r\n## Notes for the reviewers\r\n\r\nThere are a few parts of this PR that need re-working but are implementation details and not specific to how silent payments work. I decided to open the PR as-is so that folks reviewing the BIP have an implementation to look at and to get some suggestions on how to better implement this in the wallet. Specifically, I'm looking for feedback on how to improve the following:\r\n\r\n* The `sp()` descriptor should be updated to implement the BIP and independently derive the scan key (currently it's just a hash of the spend key)\r\n* Both the spend and scan key are kept in their own object, it would be nice to have them only accessed through the descriptor. Another idea would be allow scanning even if the wallet is encrypted, so that the spend key is not accessible unless spending\r\n* Each silent payment output found is added to the wallet as a `rawtr` descriptor. Ideally, we have a new descriptor that takes the spend key and then stores the auxiliary data needed to construct the private key (e.g `sp(spend_key, <one of hash(ecdh_shared_secret>)`\r\n* Some of the methods could probably be better organized (e.g implemented on the SPKMan, when it could be a wallet method)",
          "user": {
            "login": "josibake",
            "id": 7444140,
            "node_id": "MDQ6VXNlcjc0NDQxNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/josibake",
            "html_url": "https://github.com/josibake",
            "followers_url": "https://api.github.com/users/josibake/followers",
            "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
            "organizations_url": "https://api.github.com/users/josibake/orgs",
            "repos_url": "https://api.github.com/users/josibake/repos",
            "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/josibake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27827",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27827",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27827.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27827.patch"
          },
          "created_at": "2023-06-05T12:12:23Z",
          "updated_at": "2023-08-02T16:48:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1576783417,
      "node_id": "IC_kwDOABII585d-845",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1576783417",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T13:15:02Z",
      "updated_at": "2023-06-05T13:19:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've rebased and created a slimmed-down version of this PR in https://github.com/bitcoin/bitcoin/pull/27827. Most notably, I took out labels and removed some of the RPC support, and made several updates as the silent payments spec has changed a bit since this PR was last updated. For anyone reviewing this PR, I'd appreciate your feedback on #27827. \r\n\r\nBig thanks to @w0xlt for moving this draft along as far as they did! My plan is to keep cherry-picking commits from this draft for follow-up PRs to add back in label support, RPC coverage, etc",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1576783417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "mentioned",
      "id": 9433177881,
      "node_id": "MEE_lADOABII585H5eBJzwAAAAIyQt8Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9433177881",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T13:15:03Z"
    },
    {
      "event": "subscribed",
      "id": 9433177919,
      "node_id": "SE_lADOABII585H5eBJzwAAAAIyQt8_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9433177919",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T13:15:03Z"
    },
    {
      "event": "commented",
      "id": 1576788976,
      "node_id": "IC_kwDOABII585d--Pw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1576788976",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T13:18:14Z",
      "updated_at": "2023-06-05T13:18:14Z",
      "author_association": "MEMBER",
      "body": "Closing this, in favour of #27827.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#issuecomment-1576788976",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24897"
    },
    {
      "event": "closed",
      "id": 9433222923,
      "node_id": "CE_lADOABII585H5eBJzwAAAAIyQ48L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9433222923",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-05T13:18:14Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852141704",
      "pull_request_review_id": 944439250,
      "id": 852141704,
      "node_id": "PRRC_kwDOABII584yyqaI",
      "diff_hunk": "@@ -0,0 +1,115 @@\n+#include \"silentpayment.h\"\n+\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+\n+namespace silentpayment {\n+\n+secp256k1_pubkey Sender::CreateTweakedPubkey(\n+    const secp256k1_context* ctx,\n+    const secp256k1_xonly_pubkey recipient_public_key,\n+    const unsigned char sender_secret_key[32])\n+{\n+    unsigned char shared_secret[32];\n+\n+    secp256k1_pubkey output_pubkey;\n+\n+    int return_val;\n+\n+    return_val = secp256k1_ecdh_xonly(ctx, shared_secret, &recipient_public_key, sender_secret_key, NULL, NULL);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_seckey_verify(secp256k1_context_no_precomp, shared_secret);\n+    assert(return_val);\n+\n+    return_val = secp256k1_xonly_pubkey_tweak_add(ctx, &output_pubkey, &recipient_public_key, shared_secret);\n+    assert(return_val);\n+\n+    return output_pubkey;\n+}\n+\n+XOnlyPubKey Sender::CreateSilentPaymentAddress(\n+    const CKey& sender_secret_key,\n+    const XOnlyPubKey& _recipient_public_key)\n+{\n+    int return_val;\n+\n+    secp256k1_context* ctx = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    secp256k1_xonly_pubkey recipient_public_key;\n+    return_val = secp256k1_xonly_pubkey_parse(ctx, &recipient_public_key, _recipient_public_key.data());\n+    assert(return_val);\n+\n+    secp256k1_pubkey sender_output_pubkey;\n+    sender_output_pubkey = CreateTweakedPubkey(ctx, recipient_public_key, sender_secret_key.data());\n+\n+    // Test the key\n+    size_t len;\n+    unsigned char sender_serialized_output_pubkey[33];\n+    len = sizeof(sender_serialized_output_pubkey);\n+    return_val = secp256k1_ec_pubkey_serialize(ctx, sender_serialized_output_pubkey, &len, &sender_output_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CPubKey pubKey = CPubKey(sender_serialized_output_pubkey);\n+\n+    assert(pubKey.IsFullyValid());\n+\n+    XOnlyPubKey xOnlyPubKey = XOnlyPubKey(pubKey);\n+\n+    return xOnlyPubKey;\n+}\n+\n+void Recipient::CreateTweakedPubkey(",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "b97fee2f445d396fdb62d4468c214320745519be",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm just trying to understand the protocol better. This function is called \"create tweaked pubkey\" but what seems more significant about it to me is that it also provides the recipient with the private key they need to spend from the silent payment output. Is that correct?",
      "created_at": "2022-04-18T14:08:03Z",
      "updated_at": "2022-04-18T14:08:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r852141704",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852141704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852184789",
      "pull_request_review_id": 944500372,
      "id": 852184789,
      "node_id": "PRRC_kwDOABII584yy07V",
      "diff_hunk": "@@ -0,0 +1,115 @@\n+#include \"silentpayment.h\"\n+\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+\n+namespace silentpayment {\n+\n+secp256k1_pubkey Sender::CreateTweakedPubkey(\n+    const secp256k1_context* ctx,\n+    const secp256k1_xonly_pubkey recipient_public_key,\n+    const unsigned char sender_secret_key[32])\n+{\n+    unsigned char shared_secret[32];\n+\n+    secp256k1_pubkey output_pubkey;\n+\n+    int return_val;\n+\n+    return_val = secp256k1_ecdh_xonly(ctx, shared_secret, &recipient_public_key, sender_secret_key, NULL, NULL);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_seckey_verify(secp256k1_context_no_precomp, shared_secret);\n+    assert(return_val);\n+\n+    return_val = secp256k1_xonly_pubkey_tweak_add(ctx, &output_pubkey, &recipient_public_key, shared_secret);\n+    assert(return_val);\n+\n+    return output_pubkey;\n+}\n+\n+XOnlyPubKey Sender::CreateSilentPaymentAddress(\n+    const CKey& sender_secret_key,\n+    const XOnlyPubKey& _recipient_public_key)\n+{\n+    int return_val;\n+\n+    secp256k1_context* ctx = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    secp256k1_xonly_pubkey recipient_public_key;\n+    return_val = secp256k1_xonly_pubkey_parse(ctx, &recipient_public_key, _recipient_public_key.data());\n+    assert(return_val);\n+\n+    secp256k1_pubkey sender_output_pubkey;\n+    sender_output_pubkey = CreateTweakedPubkey(ctx, recipient_public_key, sender_secret_key.data());\n+\n+    // Test the key\n+    size_t len;\n+    unsigned char sender_serialized_output_pubkey[33];\n+    len = sizeof(sender_serialized_output_pubkey);\n+    return_val = secp256k1_ec_pubkey_serialize(ctx, sender_serialized_output_pubkey, &len, &sender_output_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CPubKey pubKey = CPubKey(sender_serialized_output_pubkey);\n+\n+    assert(pubKey.IsFullyValid());\n+\n+    XOnlyPubKey xOnlyPubKey = XOnlyPubKey(pubKey);\n+\n+    return xOnlyPubKey;\n+}\n+\n+void Recipient::CreateTweakedPubkey(",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "b97fee2f445d396fdb62d4468c214320745519be",
      "in_reply_to_id": 852141704,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. I defined this name when using another approach, but that's the idea.\r\n\r\n`secp256k1_keypair_xonly_tweak_add` returns both the tweaked private and public keys in the `recipient_keypair` parameter. So the recipient can spend the output.",
      "created_at": "2022-04-18T15:10:11Z",
      "updated_at": "2022-04-18T15:11:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r852184789",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/852184789"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880324746",
      "pull_request_review_id": 982957038,
      "id": 880324746,
      "node_id": "PRRC_kwDOABII5840eLCK",
      "diff_hunk": "@@ -0,0 +1,196 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tuple.first), tuple.second);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::ExtractPubkeyFromInput(const Coin& prevCoin, const CTxIn& txin,  XOnlyPubKey& senderPubKey)\n+{\n+    // scriptPubKey being spent by this input\n+    CScript scriptPubKey = prevCoin.out.scriptPubKey;\n+\n+    if (scriptPubKey.IsPayToWitnessScriptHash()) {\n+        return false;\n+    }\n+\n+    // Vector of parsed pubkeys and hashes\n+    std::vector<std::vector<unsigned char>> solutions;\n+\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    if (whichType == TxoutType::NONSTANDARD ||\n+    whichType == TxoutType::MULTISIG ||\n+    whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    }\n+\n+    const CScript scriptSig = txin.scriptSig;\n+    const CScriptWitness scriptWitness = txin.scriptWitness;\n+\n+    assert(senderPubKey.IsNull());\n+\n+    // TODO: Condition not tested\n+    if (whichType == TxoutType::PUBKEY) {\n+\n+        CPubKey pubkey = CPubKey(solutions[0]);\n+        assert(pubkey.IsFullyValid());\n+        senderPubKey = XOnlyPubKey(pubkey);\n+    }\n+\n+    else if (whichType == TxoutType::PUBKEYHASH) {\n+\n+        int sigSize = static_cast<int>(scriptSig[0]);\n+        int pubKeySize = static_cast<int>(scriptSig[sigSize + 1]);\n+        auto serializedPubKey = std::vector<unsigned char>(scriptSig.begin() + sigSize + 2, scriptSig.end());\n+        assert(serializedPubKey.size() == pubKeySize);",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": null,
      "user": null,
      "body": "`warning:` comparison of integer expressions of different signedness: ‘std::vector<unsigned char>::size_type’ {aka ‘long unsigned int’} and ‘int’ [-Wsign-compare]",
      "created_at": "2022-05-24T10:15:12Z",
      "updated_at": "2022-05-24T10:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r880324746",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/880324746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882514222",
      "pull_request_review_id": 985996807,
      "id": 882514222,
      "node_id": "PRRC_kwDOABII5840mhku",
      "diff_hunk": "@@ -0,0 +1,115 @@\n+#include \"silentpayment.h\"",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": null,
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Linter error:\r\n```\r\nPlease use bracket syntax includes (\"#include <foo.h>\") instead of quote syntax includes:\r\nsrc/wallet/silentpayment.cpp:#include \"silentpayment.h\"\r\n^---- failure generated from lint-includes.py\r\n```",
      "created_at": "2022-05-26T10:01:30Z",
      "updated_at": "2022-05-26T11:06:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r882514222",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882514222"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882515225",
      "pull_request_review_id": 985996807,
      "id": 882515225,
      "node_id": "PRRC_kwDOABII5840mh0Z",
      "diff_hunk": "@@ -1108,41 +1224,158 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxS\n         if (fExisted && !fUpdate) return false;\n         if (fExisted || IsMine(tx) || IsFromMe(tx))\n         {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+            return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+        }\n+        else if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys))\n+        {\n+            return AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys);\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CWallet::ExtractPubkeyFromInput(const CTxIn& txin, XOnlyPubKey& senderPubKey)\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];\n+    chain().findCoins(coins);\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+    auto pos = coins.find(txin.prevout);\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n-                }\n-            }\n+    Coin coin = pos->second;\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            return AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    // TODO: can more than one txin.prevout be in the mempool (RBF) ?\n+    assert( ++pos == coins.end() );",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 205,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": null,
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Linter error:\r\n```\r\nAssertions should not have side effects:\r\nsrc/wallet/wallet.cpp:    assert( ++pos == coins.end() );\r\n```",
      "created_at": "2022-05-26T10:02:57Z",
      "updated_at": "2022-05-26T11:06:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r882515225",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882515225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882518081",
      "pull_request_review_id": 985996807,
      "id": 882518081,
      "node_id": "PRRC_kwDOABII5840mihB",
      "diff_hunk": "@@ -0,0 +1,38 @@\n+#ifndef BITCOIN_SILENT_PAYMENT_H\n+#define BITCOIN_SILENT_PAYMENT_H",
      "path": "src/wallet/silentpayment.h",
      "position": null,
      "original_position": 2,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": null,
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n#ifndef BITCOIN_WALLET_SILENTPAYMENT_H\r\n#define BITCOIN_WALLET_SILENTPAYMENT_H\r\n```\r\n\r\nLinter does not like the name of include guard define:\r\n```\r\nsrc/wallet/silentpayment.h seems to be missing the expected include guard:\r\n  #ifndef BITCOIN_WALLET_SILENTPAYMENT_H\r\n  #define BITCOIN_WALLET_SILENTPAYMENT_H\r\n  ...\r\n  #endif // BITCOIN_WALLET_SILENTPAYMENT_H\r\n```",
      "created_at": "2022-05-26T10:06:58Z",
      "updated_at": "2022-05-26T11:06:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r882518081",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882518081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882521869",
      "pull_request_review_id": 985996807,
      "id": 882521869,
      "node_id": "PRRC_kwDOABII5840mjcN",
      "diff_hunk": "@@ -1910,9 +1915,113 @@ static RPCHelpMan getblockstats()\n }\n \n namespace {\n-//! Search for a given set of pubkey scripts\n-bool FindScriptPubKey(std::atomic<int>& scan_progress, const std::atomic<bool>& should_abort, int64_t& count, CCoinsViewCursor* cursor, const std::set<CScript>& needles, std::map<COutPoint, Coin>& out_results, std::function<void()>& interruption_point)\n+\n+bool CheckSilentPayment(\n+    uint256& txhash,\n+    const CScript& outScriptPubKey,\n+    std::vector<std::tuple<FlatSigningProvider, CScript>>& providers,\n+    NodeContext& node,\n+    std::vector<uint256>& verified_txs,\n+    std::vector<XOnlyPubKey>& silPubKeys,\n+    std::map<CScript, std::string>& silDesc)\n {\n+\n+    bool f_silentpaymentindex_ready = g_silentpaymentindex ? g_silentpaymentindex->BlockUntilSyncedToCurrentChain() : false;\n+    if (!f_silentpaymentindex_ready) {\n+        throw JSONRPCError(RPC_VERIFY_ERROR, \"The silent payment index is either disabled or not yet synced.\");\n+    }\n+\n+    ChainstateManager& chainman = EnsureChainman(node);\n+    LOCK(cs_main);\n+    CChainState& active_chainstate = chainman.ActiveChainstate();",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": null,
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\nrpc/blockchain.cpp: In function ‘bool {anonymous}::CheckSilentPayment(uint256&, const CScript&, std::vector<std::tuple<FlatSigningProvider, CScript> >&, node::NodeContext&, std::vector<uint256>&, std::vector<XOnlyPubKey>&, std::map<CScript, std::__cxx11::basic_string<char> >&)’:\r\nrpc/blockchain.cpp:1936:18: warning: unused variable ‘active_chainstate’ [-Wunused-variable]\r\n 1936 |     CChainState& active_chainstate = chainman.ActiveChainstate();\r\n      |                  ^~~~~~~~~~~~~~~~~\r\n```",
      "created_at": "2022-05-26T10:12:18Z",
      "updated_at": "2022-05-26T11:06:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r882521869",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882521869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1936,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882526990",
      "pull_request_review_id": 985996807,
      "id": 882526990,
      "node_id": "PRRC_kwDOABII5840mksO",
      "diff_hunk": "@@ -1108,41 +1224,158 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxS\n         if (fExisted && !fUpdate) return false;\n         if (fExisted || IsMine(tx) || IsFromMe(tx))\n         {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+            return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+        }\n+        else if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys))\n+        {\n+            return AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys);\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CWallet::ExtractPubkeyFromInput(const CTxIn& txin, XOnlyPubKey& senderPubKey)\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];\n+    chain().findCoins(coins);\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+    auto pos = coins.find(txin.prevout);\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n-                }\n-            }\n+    Coin coin = pos->second;\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            return AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    // TODO: can more than one txin.prevout be in the mempool (RBF) ?\n+    assert( ++pos == coins.end() );\n+\n+    if (coin.out.IsNull()) {\n+        return false;\n+    }\n+\n+    // scriptPubKey being spent by this input\n+    CScript scriptPubKey = coin.out.scriptPubKey;\n+\n+    if (scriptPubKey.IsPayToWitnessScriptHash()) {\n+        return false;\n+    }\n+\n+    // Vector of parsed pubkeys and hashes\n+    std::vector<std::vector<unsigned char>> solutions;\n+\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    if (whichType == TxoutType::NONSTANDARD ||\n+    whichType == TxoutType::MULTISIG ||\n+    whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    }\n+\n+    const CScript scriptSig = txin.scriptSig;\n+    const CScriptWitness scriptWitness = txin.scriptWitness;\n+\n+    assert(senderPubKey.IsNull());\n+\n+    // TODO: Condition not tested\n+    if (whichType == TxoutType::PUBKEY) {\n+\n+        CPubKey pubkey = CPubKey(solutions[0]);\n+        assert(pubkey.IsFullyValid());\n+        senderPubKey = XOnlyPubKey(pubkey);\n+\n+    }\n+\n+    else if (whichType == TxoutType::PUBKEYHASH) {\n+\n+        int sigSize = static_cast<int>(scriptSig[0]);\n+        int pubKeySize = static_cast<int>(scriptSig[sigSize + 1]);\n+        auto serializedPubKey = std::vector<unsigned char>(scriptSig.begin() + sigSize + 2, scriptSig.end());\n+        assert(serializedPubKey.size() == pubKeySize);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 248,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": null,
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\nIn file included from wallet/wallet.cpp:44:\r\nwallet/wallet.cpp: In member function ‘bool wallet::CWallet::ExtractPubkeyFromInput(const CTxIn&, XOnlyPubKey&)’:\r\nwallet/wallet.cpp:1292:40: warning: comparison of integer expressions of different signedness: ‘std::vector<unsigned char>::size_type’ {aka ‘long unsigned int’} and ‘int’ [-Wsign-compare]\r\n 1292 |         assert(serializedPubKey.size() == pubKeySize);\r\n      |                ~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~\r\n```",
      "created_at": "2022-05-26T10:19:45Z",
      "updated_at": "2022-05-26T11:06:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r882526990",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882526990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882527414",
      "pull_request_review_id": 985996807,
      "id": 882527414,
      "node_id": "PRRC_kwDOABII5840mky2",
      "diff_hunk": "@@ -0,0 +1,115 @@\n+#include \"silentpayment.h\"\n+\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+\n+namespace silentpayment {\n+\n+secp256k1_pubkey Sender::CreateTweakedPubkey(\n+    const secp256k1_context* ctx,\n+    const secp256k1_xonly_pubkey recipient_public_key,\n+    const unsigned char sender_secret_key[32])\n+{\n+    unsigned char shared_secret[32];\n+\n+    secp256k1_pubkey output_pubkey;\n+\n+    int return_val;\n+\n+    return_val = secp256k1_ecdh_xonly(ctx, shared_secret, &recipient_public_key, sender_secret_key, NULL, NULL);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_seckey_verify(secp256k1_context_no_precomp, shared_secret);\n+    assert(return_val);\n+\n+    return_val = secp256k1_xonly_pubkey_tweak_add(ctx, &output_pubkey, &recipient_public_key, shared_secret);\n+    assert(return_val);\n+\n+    return output_pubkey;\n+}\n+\n+XOnlyPubKey Sender::CreateSilentPaymentAddress(\n+    const CKey& sender_secret_key,\n+    const XOnlyPubKey& _recipient_public_key)\n+{\n+    int return_val;\n+\n+    secp256k1_context* ctx = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    secp256k1_xonly_pubkey recipient_public_key;\n+    return_val = secp256k1_xonly_pubkey_parse(ctx, &recipient_public_key, _recipient_public_key.data());\n+    assert(return_val);\n+\n+    secp256k1_pubkey sender_output_pubkey;\n+    sender_output_pubkey = CreateTweakedPubkey(ctx, recipient_public_key, sender_secret_key.begin());\n+\n+    // Test the key\n+    size_t len;\n+    unsigned char sender_serialized_output_pubkey[33];\n+    len = sizeof(sender_serialized_output_pubkey);\n+    return_val = secp256k1_ec_pubkey_serialize(ctx, sender_serialized_output_pubkey, &len, &sender_output_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CPubKey pubKey = CPubKey(sender_serialized_output_pubkey);\n+\n+    assert(pubKey.IsFullyValid());\n+\n+    XOnlyPubKey xOnlyPubKey = XOnlyPubKey(pubKey);\n+\n+    return xOnlyPubKey;\n+}\n+\n+void Recipient::CreateTweakedKeyPair(\n+    const secp256k1_context* ctx,\n+    const secp256k1_xonly_pubkey sender_public_key,\n+    secp256k1_keypair& recipient_keypair)\n+{\n+    unsigned char recipient_secret_key[32];\n+    unsigned char shared_secret[32];\n+\n+    secp256k1_pubkey output_pubkey;",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": null,
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```\r\nwallet/silentpayment.cpp: In static member function ‘static void silentpayment::Recipient::CreateTweakedKeyPair(const secp256k1_context*, secp256k1_xonly_pubkey, secp256k1_keypair&)’:\r\nwallet/silentpayment.cpp:72:22: warning: unused variable ‘output_pubkey’ [-Wunused-variable]\r\n   72 |     secp256k1_pubkey output_pubkey;\r\n      |                      ^~~~~~~~~~~~~\r\n```",
      "created_at": "2022-05-26T10:20:23Z",
      "updated_at": "2022-05-26T11:06:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r882527414",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/882527414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887750679",
      "pull_request_review_id": 993257629,
      "id": 887750679,
      "node_id": "PRRC_kwDOABII58406gAX",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+#!/usr/bin/env python3\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+)\n+from test_framework.descriptors import descsum_create\n+\n+class SilentTransactioTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[], [\"-keypool=1\", \"-silentpaymentindex=1\"], [\"-keypool=1\", \"-silentpaymentindex=1\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def init_wallet(self, *, node):\n+        pass\n+\n+    def invalid_create_wallet(self):\n+        self.log.info(\"Testing the creation of invalid wallets\")\n+\n+        assert_raises_rpc_error(-4, \"Only descriptor wallets support silent payments.\",",
      "path": "test/functional/wallet_silentpayment.py",
      "position": null,
      "original_position": 25,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Skip this test when compiled without legacy wallet support.",
      "created_at": "2022-06-02T09:22:34Z",
      "updated_at": "2022-06-02T14:18:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r887750679",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887750679"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887752800",
      "pull_request_review_id": 993257629,
      "id": 887752800,
      "node_id": "PRRC_kwDOABII58406ghg",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+#!/usr/bin/env python3\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+)\n+from test_framework.descriptors import descsum_create\n+\n+class SilentTransactioTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[], [\"-keypool=1\", \"-silentpaymentindex=1\"], [\"-keypool=1\", \"-silentpaymentindex=1\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def init_wallet(self, *, node):\n+        pass\n+\n+    def invalid_create_wallet(self):\n+        self.log.info(\"Testing the creation of invalid wallets\")\n+\n+        assert_raises_rpc_error(-4, \"Only descriptor wallets support silent payments.\",\n+            self.nodes[1].createwallet, wallet_name='invalid_wallet', descriptors=False, silent_payment=True)\n+\n+        assert_raises_rpc_error(-4, \"Silent payments require the ability to store private keys.\",\n+            self.nodes[1].createwallet, wallet_name='invalid_wallet', descriptors=True, disable_private_keys=True, silent_payment=True)\n+\n+        assert_raises_rpc_error(-4, \"Silent payments require the ability to store private keys.\",\n+            self.nodes[1].createwallet, wallet_name='invalid_wallet',  descriptors=True, disable_private_keys=True, external_signer=True, silent_payment=True)",
      "path": "test/functional/wallet_silentpayment.py",
      "position": null,
      "original_position": 32,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Skip this test when compiled without external signer support.",
      "created_at": "2022-06-02T09:24:56Z",
      "updated_at": "2022-06-02T14:18:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r887752800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/887752800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490415",
      "pull_request_review_id": 995775644,
      "id": 889490415,
      "node_id": "PRRC_kwDOABII5841BIvv",
      "diff_hunk": "@@ -0,0 +1,196 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tuple.first), tuple.second);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::ExtractPubkeyFromInput(const Coin& prevCoin, const CTxIn& txin,  XOnlyPubKey& senderPubKey)\n+{\n+    // scriptPubKey being spent by this input\n+    CScript scriptPubKey = prevCoin.out.scriptPubKey;\n+\n+    if (scriptPubKey.IsPayToWitnessScriptHash()) {\n+        return false;\n+    }\n+\n+    // Vector of parsed pubkeys and hashes\n+    std::vector<std::vector<unsigned char>> solutions;\n+\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    if (whichType == TxoutType::NONSTANDARD ||\n+    whichType == TxoutType::MULTISIG ||\n+    whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    }\n+\n+    const CScript scriptSig = txin.scriptSig;\n+    const CScriptWitness scriptWitness = txin.scriptWitness;\n+\n+    assert(senderPubKey.IsNull());\n+\n+    // TODO: Condition not tested\n+    if (whichType == TxoutType::PUBKEY) {\n+\n+        CPubKey pubkey = CPubKey(solutions[0]);\n+        assert(pubkey.IsFullyValid());\n+        senderPubKey = XOnlyPubKey(pubkey);\n+    }\n+\n+    else if (whichType == TxoutType::PUBKEYHASH) {\n+\n+        int sigSize = static_cast<int>(scriptSig[0]);\n+        int pubKeySize = static_cast<int>(scriptSig[sigSize + 1]);\n+        auto serializedPubKey = std::vector<unsigned char>(scriptSig.begin() + sigSize + 2, scriptSig.end());\n+        assert(serializedPubKey.size() == pubKeySize);",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 85,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": 880324746,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/6120b53da4b1a7dc067790a1c00ac744a66f2f71. Thanks.",
      "created_at": "2022-06-04T05:49:06Z",
      "updated_at": "2022-06-04T05:49:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r889490415",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490543",
      "pull_request_review_id": 995775727,
      "id": 889490543,
      "node_id": "PRRC_kwDOABII5841BIxv",
      "diff_hunk": "@@ -1108,41 +1224,158 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxS\n         if (fExisted && !fUpdate) return false;\n         if (fExisted || IsMine(tx) || IsFromMe(tx))\n         {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+            return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+        }\n+        else if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys))\n+        {\n+            return AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys);\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CWallet::ExtractPubkeyFromInput(const CTxIn& txin, XOnlyPubKey& senderPubKey)\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];\n+    chain().findCoins(coins);\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+    auto pos = coins.find(txin.prevout);\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n-                }\n-            }\n+    Coin coin = pos->second;\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            return AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    // TODO: can more than one txin.prevout be in the mempool (RBF) ?\n+    assert( ++pos == coins.end() );\n+\n+    if (coin.out.IsNull()) {\n+        return false;\n+    }\n+\n+    // scriptPubKey being spent by this input\n+    CScript scriptPubKey = coin.out.scriptPubKey;\n+\n+    if (scriptPubKey.IsPayToWitnessScriptHash()) {\n+        return false;\n+    }\n+\n+    // Vector of parsed pubkeys and hashes\n+    std::vector<std::vector<unsigned char>> solutions;\n+\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    if (whichType == TxoutType::NONSTANDARD ||\n+    whichType == TxoutType::MULTISIG ||\n+    whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    }\n+\n+    const CScript scriptSig = txin.scriptSig;\n+    const CScriptWitness scriptWitness = txin.scriptWitness;\n+\n+    assert(senderPubKey.IsNull());\n+\n+    // TODO: Condition not tested\n+    if (whichType == TxoutType::PUBKEY) {\n+\n+        CPubKey pubkey = CPubKey(solutions[0]);\n+        assert(pubkey.IsFullyValid());\n+        senderPubKey = XOnlyPubKey(pubkey);\n+\n+    }\n+\n+    else if (whichType == TxoutType::PUBKEYHASH) {\n+\n+        int sigSize = static_cast<int>(scriptSig[0]);\n+        int pubKeySize = static_cast<int>(scriptSig[sigSize + 1]);\n+        auto serializedPubKey = std::vector<unsigned char>(scriptSig.begin() + sigSize + 2, scriptSig.end());\n+        assert(serializedPubKey.size() == pubKeySize);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 248,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": 882526990,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in  https://github.com/bitcoin/bitcoin/pull/24897/commits/178e39d804a092016abe9650a1cde085173d6795. Thanks.",
      "created_at": "2022-06-04T05:50:24Z",
      "updated_at": "2022-06-04T05:50:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r889490543",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490571",
      "pull_request_review_id": 995775748,
      "id": 889490571,
      "node_id": "PRRC_kwDOABII5841BIyL",
      "diff_hunk": "@@ -0,0 +1,115 @@\n+#include \"silentpayment.h\"\n+\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+\n+namespace silentpayment {\n+\n+secp256k1_pubkey Sender::CreateTweakedPubkey(\n+    const secp256k1_context* ctx,\n+    const secp256k1_xonly_pubkey recipient_public_key,\n+    const unsigned char sender_secret_key[32])\n+{\n+    unsigned char shared_secret[32];\n+\n+    secp256k1_pubkey output_pubkey;\n+\n+    int return_val;\n+\n+    return_val = secp256k1_ecdh_xonly(ctx, shared_secret, &recipient_public_key, sender_secret_key, NULL, NULL);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_seckey_verify(secp256k1_context_no_precomp, shared_secret);\n+    assert(return_val);\n+\n+    return_val = secp256k1_xonly_pubkey_tweak_add(ctx, &output_pubkey, &recipient_public_key, shared_secret);\n+    assert(return_val);\n+\n+    return output_pubkey;\n+}\n+\n+XOnlyPubKey Sender::CreateSilentPaymentAddress(\n+    const CKey& sender_secret_key,\n+    const XOnlyPubKey& _recipient_public_key)\n+{\n+    int return_val;\n+\n+    secp256k1_context* ctx = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    secp256k1_xonly_pubkey recipient_public_key;\n+    return_val = secp256k1_xonly_pubkey_parse(ctx, &recipient_public_key, _recipient_public_key.data());\n+    assert(return_val);\n+\n+    secp256k1_pubkey sender_output_pubkey;\n+    sender_output_pubkey = CreateTweakedPubkey(ctx, recipient_public_key, sender_secret_key.begin());\n+\n+    // Test the key\n+    size_t len;\n+    unsigned char sender_serialized_output_pubkey[33];\n+    len = sizeof(sender_serialized_output_pubkey);\n+    return_val = secp256k1_ec_pubkey_serialize(ctx, sender_serialized_output_pubkey, &len, &sender_output_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CPubKey pubKey = CPubKey(sender_serialized_output_pubkey);\n+\n+    assert(pubKey.IsFullyValid());\n+\n+    XOnlyPubKey xOnlyPubKey = XOnlyPubKey(pubKey);\n+\n+    return xOnlyPubKey;\n+}\n+\n+void Recipient::CreateTweakedKeyPair(\n+    const secp256k1_context* ctx,\n+    const secp256k1_xonly_pubkey sender_public_key,\n+    secp256k1_keypair& recipient_keypair)\n+{\n+    unsigned char recipient_secret_key[32];\n+    unsigned char shared_secret[32];\n+\n+    secp256k1_pubkey output_pubkey;",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": 882527414,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/afbdf2bd9d1e1358eb03054db732cf12d05802b7. Thanks.",
      "created_at": "2022-06-04T05:50:47Z",
      "updated_at": "2022-06-04T05:50:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r889490571",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490596",
      "pull_request_review_id": 995775776,
      "id": 889490596,
      "node_id": "PRRC_kwDOABII5841BIyk",
      "diff_hunk": "@@ -1910,9 +1915,113 @@ static RPCHelpMan getblockstats()\n }\n \n namespace {\n-//! Search for a given set of pubkey scripts\n-bool FindScriptPubKey(std::atomic<int>& scan_progress, const std::atomic<bool>& should_abort, int64_t& count, CCoinsViewCursor* cursor, const std::set<CScript>& needles, std::map<COutPoint, Coin>& out_results, std::function<void()>& interruption_point)\n+\n+bool CheckSilentPayment(\n+    uint256& txhash,\n+    const CScript& outScriptPubKey,\n+    std::vector<std::tuple<FlatSigningProvider, CScript>>& providers,\n+    NodeContext& node,\n+    std::vector<uint256>& verified_txs,\n+    std::vector<XOnlyPubKey>& silPubKeys,\n+    std::map<CScript, std::string>& silDesc)\n {\n+\n+    bool f_silentpaymentindex_ready = g_silentpaymentindex ? g_silentpaymentindex->BlockUntilSyncedToCurrentChain() : false;\n+    if (!f_silentpaymentindex_ready) {\n+        throw JSONRPCError(RPC_VERIFY_ERROR, \"The silent payment index is either disabled or not yet synced.\");\n+    }\n+\n+    ChainstateManager& chainman = EnsureChainman(node);\n+    LOCK(cs_main);\n+    CChainState& active_chainstate = chainman.ActiveChainstate();",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": 882521869,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/16ca3614639833d4a3bfea548a2cf4738bb2efb7. Thanks.",
      "created_at": "2022-06-04T05:51:16Z",
      "updated_at": "2022-06-04T05:51:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r889490596",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1936,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490622",
      "pull_request_review_id": 995775806,
      "id": 889490622,
      "node_id": "PRRC_kwDOABII5841BIy-",
      "diff_hunk": "@@ -0,0 +1,38 @@\n+#ifndef BITCOIN_SILENT_PAYMENT_H\n+#define BITCOIN_SILENT_PAYMENT_H",
      "path": "src/wallet/silentpayment.h",
      "position": null,
      "original_position": 2,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": 882518081,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/afbdf2bd9d1e1358eb03054db732cf12d05802b7. Thanks.",
      "created_at": "2022-06-04T05:51:43Z",
      "updated_at": "2022-06-04T05:51:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r889490622",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490622"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490641",
      "pull_request_review_id": 995775825,
      "id": 889490641,
      "node_id": "PRRC_kwDOABII5841BIzR",
      "diff_hunk": "@@ -0,0 +1,115 @@\n+#include \"silentpayment.h\"",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": 882514222,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/afbdf2bd9d1e1358eb03054db732cf12d05802b7. Thanks.",
      "created_at": "2022-06-04T05:52:05Z",
      "updated_at": "2022-06-04T05:52:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r889490641",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490700",
      "pull_request_review_id": 995775851,
      "id": 889490700,
      "node_id": "PRRC_kwDOABII5841BI0M",
      "diff_hunk": "@@ -1108,41 +1224,158 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxS\n         if (fExisted && !fUpdate) return false;\n         if (fExisted || IsMine(tx) || IsFromMe(tx))\n         {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+            return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+        }\n+        else if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys))\n+        {\n+            return AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys);\n+        }\n+    }\n+    return false;\n+}\n+\n+bool CWallet::ExtractPubkeyFromInput(const CTxIn& txin, XOnlyPubKey& senderPubKey)\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];\n+    chain().findCoins(coins);\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+    auto pos = coins.find(txin.prevout);\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n-                }\n-            }\n+    Coin coin = pos->second;\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            return AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    // TODO: can more than one txin.prevout be in the mempool (RBF) ?\n+    assert( ++pos == coins.end() );",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 205,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": 882515225,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/178e39d804a092016abe9650a1cde085173d6795. Thanks.",
      "created_at": "2022-06-04T05:52:30Z",
      "updated_at": "2022-06-04T05:52:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r889490700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490746",
      "pull_request_review_id": 995775876,
      "id": 889490746,
      "node_id": "PRRC_kwDOABII5841BI06",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+#!/usr/bin/env python3\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+)\n+from test_framework.descriptors import descsum_create\n+\n+class SilentTransactioTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[], [\"-keypool=1\", \"-silentpaymentindex=1\"], [\"-keypool=1\", \"-silentpaymentindex=1\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def init_wallet(self, *, node):\n+        pass\n+\n+    def invalid_create_wallet(self):\n+        self.log.info(\"Testing the creation of invalid wallets\")\n+\n+        assert_raises_rpc_error(-4, \"Only descriptor wallets support silent payments.\",",
      "path": "test/functional/wallet_silentpayment.py",
      "position": null,
      "original_position": 25,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": 887750679,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/a395e23bbfa259a9043e2ecb830cad290abde776. Thanks.",
      "created_at": "2022-06-04T05:53:02Z",
      "updated_at": "2022-06-04T05:53:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r889490746",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490746"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490762",
      "pull_request_review_id": 995775881,
      "id": 889490762,
      "node_id": "PRRC_kwDOABII5841BI1K",
      "diff_hunk": "@@ -0,0 +1,268 @@\n+#!/usr/bin/env python3\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.blocktools import COINBASE_MATURITY\n+from test_framework.util import (\n+    assert_raises_rpc_error,\n+)\n+from test_framework.descriptors import descsum_create\n+\n+class SilentTransactioTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 3\n+        self.extra_args = [[], [\"-keypool=1\", \"-silentpaymentindex=1\"], [\"-keypool=1\", \"-silentpaymentindex=1\"]]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+        self.skip_if_no_sqlite()\n+\n+    def init_wallet(self, *, node):\n+        pass\n+\n+    def invalid_create_wallet(self):\n+        self.log.info(\"Testing the creation of invalid wallets\")\n+\n+        assert_raises_rpc_error(-4, \"Only descriptor wallets support silent payments.\",\n+            self.nodes[1].createwallet, wallet_name='invalid_wallet', descriptors=False, silent_payment=True)\n+\n+        assert_raises_rpc_error(-4, \"Silent payments require the ability to store private keys.\",\n+            self.nodes[1].createwallet, wallet_name='invalid_wallet', descriptors=True, disable_private_keys=True, silent_payment=True)\n+\n+        assert_raises_rpc_error(-4, \"Silent payments require the ability to store private keys.\",\n+            self.nodes[1].createwallet, wallet_name='invalid_wallet',  descriptors=True, disable_private_keys=True, external_signer=True, silent_payment=True)",
      "path": "test/functional/wallet_silentpayment.py",
      "position": null,
      "original_position": 32,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "8f616acf868bbc75b31bf5170c40fd9957c08e91",
      "in_reply_to_id": 887752800,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/a395e23bbfa259a9043e2ecb830cad290abde776. Thanks.",
      "created_at": "2022-06-04T05:53:05Z",
      "updated_at": "2022-06-04T05:53:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r889490762",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/889490762"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/929443015",
      "pull_request_review_id": 1050258564,
      "id": 929443015,
      "node_id": "PRRC_kwDOABII5843ZizH",
      "diff_hunk": "@@ -652,12 +652,67 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     }\n }\n \n+bool CreateSilentTransaction(\n+    const CWallet& wallet,\n+    const std::vector<COutput>& selected_coins,\n+    CMutableTransaction& txNew,\n+    bilingual_str& error)\n+{\n+    auto firstCoin = selected_coins.at(0);\n+\n+    const auto& spk_managers = wallet.GetScriptPubKeyMans(firstCoin.txout.scriptPubKey);\n+\n+    if (spk_managers.size() != 1) {\n+        error = _(\"Only one ScriptPubKeyManager was expected for the input.\");\n+        return false;\n+    }\n+\n+    DescriptorScriptPubKeyMan* spk_manager = dynamic_cast<DescriptorScriptPubKeyMan*>(*spk_managers.begin());\n+\n+    for (auto& vout : txNew.vout) {\n+\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+\n+        if (whichType != TxoutType::WITNESS_V1_TAPROOT) {\n+            error = _(\"Silent Payments require that the recipients use Taproot address.\");\n+            return false;\n+        }\n+\n+        auto recipientPubKey = XOnlyPubKey(solutions[0]);\n+\n+        auto destScriptPubKey = GetScriptForDestination(WitnessV1Taproot(recipientPubKey));\n+        CTxDestination address2;",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "1e2c0760a611253fa2dc0261fab6795ef02dc7d7",
      "in_reply_to_id": null,
      "user": null,
      "body": "address2 is not being used",
      "created_at": "2022-07-26T01:22:29Z",
      "updated_at": "2022-07-26T01:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r929443015",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/929443015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 791,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934880741",
      "pull_request_review_id": 1057806743,
      "id": 934880741,
      "node_id": "PRRC_kwDOABII5843uSXl",
      "diff_hunk": "@@ -652,12 +652,67 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     }\n }\n \n+bool CreateSilentTransaction(\n+    const CWallet& wallet,\n+    const std::vector<COutput>& selected_coins,\n+    CMutableTransaction& txNew,\n+    bilingual_str& error)\n+{\n+    auto firstCoin = selected_coins.at(0);\n+\n+    const auto& spk_managers = wallet.GetScriptPubKeyMans(firstCoin.txout.scriptPubKey);\n+\n+    if (spk_managers.size() != 1) {\n+        error = _(\"Only one ScriptPubKeyManager was expected for the input.\");\n+        return false;\n+    }\n+\n+    DescriptorScriptPubKeyMan* spk_manager = dynamic_cast<DescriptorScriptPubKeyMan*>(*spk_managers.begin());\n+\n+    for (auto& vout : txNew.vout) {\n+\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+\n+        if (whichType != TxoutType::WITNESS_V1_TAPROOT) {\n+            error = _(\"Silent Payments require that the recipients use Taproot address.\");\n+            return false;\n+        }\n+\n+        auto recipientPubKey = XOnlyPubKey(solutions[0]);\n+\n+        auto destScriptPubKey = GetScriptForDestination(WitnessV1Taproot(recipientPubKey));\n+        CTxDestination address2;",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "1e2c0760a611253fa2dc0261fab6795ef02dc7d7",
      "in_reply_to_id": 929443015,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Removed in d554e067c7715b736062312463fa8a1e36ed48c2. Thanks for review.",
      "created_at": "2022-08-01T20:19:20Z",
      "updated_at": "2022-08-01T20:19:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r934880741",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/934880741"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 791,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984688350",
      "pull_request_review_id": 1126966227,
      "id": 984688350,
      "node_id": "PRRC_kwDOABII5846sSbe",
      "diff_hunk": "@@ -1154,47 +1254,20 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxS\n \n         bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n         if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+        bool ret = false;\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n-                }\n-            }\n+        if (fExisted || IsMine(tx) || IsFromMe(tx))\n+        {\n+            ret = HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+        }\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n-            if (!wtx) {\n-                // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n-                // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n-                throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n-            }\n-            return true;\n+        if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys))\n+        {\n+            ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n         }",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 165,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "06037565e907c020340e064a5612abfebf347cc9",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in 06037565e907c020340e064a5612abfebf347cc9\r\ncould simplify code\r\n```cpp\r\nbool ret = (fExisted || IsMine(tx) || IsFromMe(tx)) ? HandleNewTxBelongingToMe(tx, state, rescanning_old_block) : false;\r\nif (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys)) {\r\n    ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\r\n}\r\nreturn ret;\r\n```\r\ninstead of \r\n\r\n```cpp\r\nbool ret = false;\r\n\r\nif (fExisted || IsMine(tx) || IsFromMe(tx))\r\n{\r\n    ret = HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\r\n}\r\n\r\nif (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys))\r\n{\r\n    ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\r\n}\r\n\r\nreturn ret;\r\n```",
      "created_at": "2022-09-30T15:02:17Z",
      "updated_at": "2022-09-30T16:19:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984688350",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984688350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1258,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984691039",
      "pull_request_review_id": 1126966227,
      "id": 984691039,
      "node_id": "PRRC_kwDOABII5846sTFf",
      "diff_hunk": "@@ -1133,12 +1133,112 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n+                }\n+            }\n+        }\n+    }\n+\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n+\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n+\n+    for(auto& identifier_key: rawTrKeys) {\n+\n+        CKey key = std::get<0>(identifier_key);\n+        int32_t identifier = std::get<1>(identifier_key);\n+\n+        std::string desc = \"rawtr(\" + EncodeSecret(key) + \")\";\n+        std::string checksum = GetDescriptorChecksum(desc);\n+\n+        auto timestamp = std::chrono::duration_cast<std::chrono::microseconds>(\n+            std::chrono::system_clock::now().time_since_epoch()).count();\n+\n+        std::string desc_check = desc + \"#\" + checksum;\n+\n+        FlatSigningProvider keys;\n+        std::string error;\n+        auto parsed_desc = Parse(desc_check, keys, error, /* require_checksum = */ true);\n+        assert(parsed_desc);\n+\n+        int64_t range_start = 0, range_end = 1, next_index = 0;\n+\n+        // Need to ExpandPrivate to check if private keys are available for all pubkeys\n+        FlatSigningProvider expand_keys;\n+        std::vector<CScript> scripts;\n+        assert(parsed_desc->Expand(0, keys, scripts, expand_keys));\n+        parsed_desc->ExpandPrivate(0, keys, expand_keys);\n+\n+        WalletDescriptor w_desc(std::move(parsed_desc), timestamp, range_start, range_end, next_index);\n+\n+        std::string label;\n+\n+        if (m_silent_address_book.count(identifier)) {\n+            auto entry = m_silent_address_book[identifier];\n+            label = entry.m_label;\n+        } else {\n+            std::stringstream ss;\n+            ss << identifier;\n+            label = ss.str();\n+        }\n+\n+        auto existing_spk_manager = GetDescriptorScriptPubKeyMan(w_desc);\n+        if (!existing_spk_manager) {\n+            auto spk_manager = AddWalletDescriptor(w_desc, keys, label, false);\n+            assert(spk_manager != nullptr);\n+        }\n+    }\n+\n+    return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+}\n+\n bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n {\n     const CTransaction& tx = *ptx;\n     {\n         AssertLockHeld(cs_wallet);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 106,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "06037565e907c020340e064a5612abfebf347cc9",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "no need for this scope",
      "created_at": "2022-09-30T15:05:11Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984691039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984691039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1237,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984696515",
      "pull_request_review_id": 1126966227,
      "id": 984696515,
      "node_id": "PRRC_kwDOABII5846sUbD",
      "diff_hunk": "@@ -1154,47 +1254,20 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxS\n \n         bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n         if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+        bool ret = false;\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n-                }\n-            }\n+        if (fExisted || IsMine(tx) || IsFromMe(tx))\n+        {\n+            ret = HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+        }\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n-            if (!wtx) {\n-                // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n-                // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n-                throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n-            }\n-            return true;\n+        if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys))\n+        {\n+            ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n         }\n+\n+        return ret;\n     }\n     return false;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 169,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "06037565e907c020340e064a5612abfebf347cc9",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this will never be reached",
      "created_at": "2022-09-30T15:11:12Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984696515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984696515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1272,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984700363",
      "pull_request_review_id": 1126966227,
      "id": 984700363,
      "node_id": "PRRC_kwDOABII5846sVXL",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tuple.first), tuple.second);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::ExtractPubkeyFromInput(const Coin& prevCoin, const CTxIn& txin,  XOnlyPubKey& senderPubKey)\n+{\n+    // scriptPubKey being spent by this input\n+    CScript scriptPubKey = prevCoin.out.scriptPubKey;\n+\n+    if (scriptPubKey.IsPayToWitnessScriptHash()) {\n+        return false;\n+    }\n+\n+    // Vector of parsed pubkeys and hashes\n+    std::vector<std::vector<unsigned char>> solutions;\n+\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    if (whichType == TxoutType::NONSTANDARD ||\n+    whichType == TxoutType::MULTISIG ||\n+    whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    }\n+\n+    const CScript scriptSig = txin.scriptSig;\n+    const CScriptWitness scriptWitness = txin.scriptWitness;\n+\n+    assert(senderPubKey.IsNull());\n+\n+    // TODO: Condition not tested\n+    if (whichType == TxoutType::PUBKEY) {\n+\n+        CPubKey pubkey = CPubKey(solutions[0]);\n+        assert(pubkey.IsFullyValid());\n+        senderPubKey = XOnlyPubKey(pubkey);\n+    }\n+\n+    else if (whichType == TxoutType::PUBKEYHASH) {\n+\n+        int sigSize = static_cast<int>(scriptSig[0]);\n+        int pubKeySize = static_cast<int>(scriptSig[sigSize + 1]);\n+        auto serializedPubKey = std::vector<unsigned char>(scriptSig.begin() + sigSize + 2, scriptSig.end());\n+        assert(serializedPubKey.size() == (size_t) pubKeySize);\n+\n+        CPubKey pubkey = CPubKey(serializedPubKey);\n+        assert(pubkey.IsFullyValid());\n+\n+        senderPubKey = XOnlyPubKey(pubkey);\n+\n+    }\n+\n+    else if (whichType == TxoutType::WITNESS_V0_KEYHASH || scriptPubKey.IsPayToScriptHash()) {\n+        if (scriptWitness.stack.size() != 2) return false;\n+        assert(scriptWitness.stack.at(1).size() == 33);\n+\n+        CPubKey pubkey = CPubKey(scriptWitness.stack.at(1));\n+        assert(pubkey.IsFullyValid());\n+\n+        senderPubKey = XOnlyPubKey(pubkey);\n+    }\n+\n+    else if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+\n+        senderPubKey = XOnlyPubKey(solutions[0]);\n+        assert(senderPubKey.IsFullyValid());\n+    }\n+\n+    CTxDestination address;\n+    ExtractDestination(scriptPubKey, address);\n+\n+    return true;\n+}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, XOnlyPubKey& firstInputPubKey)\n+{\n+    if (tx->IsCoinBase()) {\n+        return false;\n+    }\n+\n+    for (auto& vout : tx->vout) {\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+\n+        if (whichType != TxoutType::WITNESS_V1_TAPROOT) {\n+            return false;\n+        }\n+    }\n+\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+\n+    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        return false;\n+    }\n+\n+    CTxUndo* undoTX {nullptr};\n+    auto it = std::find_if(block.vtx.begin(), block.vtx.end(), [tx](CTransactionRef t){ return *t == *tx; });\n+    if (it != block.vtx.end()) {\n+        // -1 as blockundo does not have coinbase tx\n+        undoTX = &blockUndo.vtxundo.at(it - block.vtx.begin() - 1);\n+    }\n+\n+    if (undoTX == nullptr) {\n+        return false;\n+    }\n+\n+    const Coin& prev_coin = undoTX->vprevout[0];\n+\n+    const CTxIn& txin = tx->vin.at(0);\n+\n+    return ExtractPubkeyFromInput(prev_coin, txin, firstInputPubKey);\n+}\n+\n+bool SilentPaymentIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    // Exclude genesis block transaction because outputs are not spendable.\n+    if (block.height == 0) return true;\n+\n+    assert(block.data);\n+\n+    Consensus::Params consensus = Params().GetConsensus();\n+\n+    if (block.height < consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height) {\n+        return true;\n+    }\n+\n+    std::vector<std::pair<uint256, uint256>> items;",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 172,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3c05b6baaea9054d000cbce1390463cc150b80b1: explicit what these `uint256` correspond to \r\n```suggestion\r\n    std::vector<std::pair<uint256, uint256>> items; // <tx_hash, keydata>\r\n```",
      "created_at": "2022-09-30T15:15:27Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984700363",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984700363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984701121",
      "pull_request_review_id": 1126966227,
      "id": 984701121,
      "node_id": "PRRC_kwDOABII5846sVjB",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tuple.first), tuple.second);\n+    }",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3c05b6baaea9054d000cbce1390463cc150b80b1\r\n```suggestion\r\n    for (const auto& [tx_hash, keydata] : items) {\r\n        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), keydata);\r\n    }\r\n```",
      "created_at": "2022-09-30T15:16:18Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984701121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984701121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 38,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984705023",
      "pull_request_review_id": 1126966227,
      "id": 984705023,
      "node_id": "PRRC_kwDOABII5846sWf_",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tuple.first), tuple.second);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::ExtractPubkeyFromInput(const Coin& prevCoin, const CTxIn& txin,  XOnlyPubKey& senderPubKey)",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3c05b6baaea9054d000cbce1390463cc150b80b1\r\n```suggestion\r\nbool SilentPaymentIndex::ExtractPubkeyFromInput(const Coin& prevCoin, const CTxIn& txin,  XOnlyPubKey& senderPubKey) const\r\n```",
      "created_at": "2022-09-30T15:20:32Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984705023",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984705023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984709509",
      "pull_request_review_id": 1126966227,
      "id": 984709509,
      "node_id": "PRRC_kwDOABII5846sXmF",
      "diff_hunk": "@@ -76,30 +95,35 @@ class DestinationEncoder\n     std::string operator()(const CNoDestination& no) const { return {}; }\n };\n \n-CTxDestination DecodeDestination(const std::string& str, const CChainParams& params, std::string& error_str, std::vector<int>* error_locations)\n+std::tuple<CTxDestination,bool,int32_t> DecodeDestination(const std::string& str, const CChainParams& params, std::string& error_str, std::vector<int>* error_locations)\n {\n     std::vector<unsigned char> data;\n     uint160 hash;\n     error_str = \"\";\n+    bool silent_payment{false};\n+\n+    const auto& silent_payment_hrp = params.SilentPaymentHRP();\n+    auto dest_silent_payment_hrp = ToLower(str.substr(0, params.SilentPaymentHRP().size()));",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8a757e61b94f76f83bbcbe449edda710187af5f3\r\nsame below\r\n```suggestion\r\n    auto dest_silent_payment_hrp = ToLower(std::string_view(str).substr(0, params.SilentPaymentHRP().size()));\r\n```",
      "created_at": "2022-09-30T15:25:31Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984709509",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984709509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984729836",
      "pull_request_review_id": 1126966227,
      "id": 984729836,
      "node_id": "PRRC_kwDOABII5846scjs",
      "diff_hunk": "@@ -1983,6 +2031,14 @@ bool FindScriptPubKey(std::atomic<int>& scan_progress, const std::atomic<bool>&\n         if (needles.count(coin.out.scriptPubKey)) {\n             out_results.emplace(key, coin);\n         }\n+        for(const auto& sp_key_range: sp_keys_range) {\n+            CKey sp_key = std::get<0>(sp_key_range);\n+            std::pair<int64_t, int64_t> sp_range = std::get<1>(sp_key_range);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c53eec1c25c4a94935ae8e775c09e71ef24a3d0b\r\n```suggestion\r\n        for(const auto& [sp_key, sp_range]: sp_keys_range) {\r\n```",
      "created_at": "2022-09-30T15:49:19Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984729836",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984729836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 2034,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2036,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984730361",
      "pull_request_review_id": 1126966227,
      "id": 984730361,
      "node_id": "PRRC_kwDOABII5846scr5",
      "diff_hunk": "@@ -2122,17 +2178,54 @@ static RPCHelpMan scantxoutset()\n         }\n \n         std::set<CScript> needles;\n+        std::vector<std::tuple<CKey, std::pair<int64_t, int64_t>>> sp_keys_range;\n         std::map<CScript, std::string> descriptors;\n         CAmount total_in = 0;\n \n         // loop through the scan objects\n         for (const UniValue& scanobject : request.params[1].get_array().getValues()) {\n             FlatSigningProvider provider;\n-            auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n-            for (CScript& script : scripts) {\n-                std::string inferred = InferDescriptor(script, provider)->ToString();\n-                needles.emplace(script);\n-                descriptors.emplace(std::move(script), std::move(inferred));\n+            // auto scripts = EvalDescriptorStringOrObject(scanobject, provider);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c53eec1c25c4a94935ae8e775c09e71ef24a3d0b\r\n```suggestion\r\n```",
      "created_at": "2022-09-30T15:49:52Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984730361",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984730361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984730908",
      "pull_request_review_id": 1126966227,
      "id": 984730908,
      "node_id": "PRRC_kwDOABII5846sc0c",
      "diff_hunk": "@@ -2122,17 +2178,54 @@ static RPCHelpMan scantxoutset()\n         }\n \n         std::set<CScript> needles;\n+        std::vector<std::tuple<CKey, std::pair<int64_t, int64_t>>> sp_keys_range;\n         std::map<CScript, std::string> descriptors;\n         CAmount total_in = 0;\n \n         // loop through the scan objects\n         for (const UniValue& scanobject : request.params[1].get_array().getValues()) {\n             FlatSigningProvider provider;\n-            auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n-            for (CScript& script : scripts) {\n-                std::string inferred = InferDescriptor(script, provider)->ToString();\n-                needles.emplace(script);\n-                descriptors.emplace(std::move(script), std::move(inferred));\n+            // auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n+            auto ret = EvalDescriptorStringOrObject(scanobject);\n+            auto desc_str = std::get<0>(ret);\n+            auto range = std::get<1>(ret);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 106,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c53eec1c25c4a94935ae8e775c09e71ef24a3d0b\r\n```suggestion\r\n            auto [desc_str, range] = EvalDescriptorStringOrObject(scanobject);\r\n```",
      "created_at": "2022-09-30T15:50:34Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984730908",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984730908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 2189,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984733402",
      "pull_request_review_id": 1126966227,
      "id": 984733402,
      "node_id": "PRRC_kwDOABII5846sdba",
      "diff_hunk": "@@ -2122,17 +2178,54 @@ static RPCHelpMan scantxoutset()\n         }\n \n         std::set<CScript> needles;\n+        std::vector<std::tuple<CKey, std::pair<int64_t, int64_t>>> sp_keys_range;\n         std::map<CScript, std::string> descriptors;\n         CAmount total_in = 0;\n \n         // loop through the scan objects\n         for (const UniValue& scanobject : request.params[1].get_array().getValues()) {\n             FlatSigningProvider provider;\n-            auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n-            for (CScript& script : scripts) {\n-                std::string inferred = InferDescriptor(script, provider)->ToString();\n-                needles.emplace(script);\n-                descriptors.emplace(std::move(script), std::move(inferred));\n+            // auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n+            auto ret = EvalDescriptorStringOrObject(scanobject);\n+            auto desc_str = std::get<0>(ret);\n+            auto range = std::get<1>(ret);\n+\n+            bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+            if (is_sp_desc) {\n+                auto keys = DescriptorToKeys(desc_str, range, provider);\n+\n+                if (keys.empty()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scanning silent payment descriptors requires private keys.\");\n+                }\n+\n+                assert(keys.size() == 1);\n+\n+                auto privKey = keys.at(0);\n+\n+                // if (std::find(sp_keys.begin(), sp_keys.end(), privKey) == sp_keys.end()) {\n+                //     sp_keys.push_back(privKey);\n+                // }\n+\n+                bool privkey_already_added{false};\n+                for (const std::tuple<CKey, std::tuple<int64_t, int64_t>> privkeyrange : sp_keys_range) {",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 126,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c53eec1c25c4a94935ae8e775c09e71ef24a3d0b\r\n```suggestion\r\n                for (const auto& [key, range] : sp_keys_range) {\r\n```",
      "created_at": "2022-09-30T15:53:42Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984733402",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984733402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984734438",
      "pull_request_review_id": 1126966227,
      "id": 984734438,
      "node_id": "PRRC_kwDOABII5846sdrm",
      "diff_hunk": "@@ -2122,17 +2178,54 @@ static RPCHelpMan scantxoutset()\n         }\n \n         std::set<CScript> needles;\n+        std::vector<std::tuple<CKey, std::pair<int64_t, int64_t>>> sp_keys_range;\n         std::map<CScript, std::string> descriptors;\n         CAmount total_in = 0;\n \n         // loop through the scan objects\n         for (const UniValue& scanobject : request.params[1].get_array().getValues()) {\n             FlatSigningProvider provider;\n-            auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n-            for (CScript& script : scripts) {\n-                std::string inferred = InferDescriptor(script, provider)->ToString();\n-                needles.emplace(script);\n-                descriptors.emplace(std::move(script), std::move(inferred));\n+            // auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n+            auto ret = EvalDescriptorStringOrObject(scanobject);\n+            auto desc_str = std::get<0>(ret);\n+            auto range = std::get<1>(ret);\n+\n+            bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+            if (is_sp_desc) {\n+                auto keys = DescriptorToKeys(desc_str, range, provider);\n+\n+                if (keys.empty()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scanning silent payment descriptors requires private keys.\");\n+                }\n+\n+                assert(keys.size() == 1);\n+\n+                auto privKey = keys.at(0);\n+\n+                // if (std::find(sp_keys.begin(), sp_keys.end(), privKey) == sp_keys.end()) {\n+                //     sp_keys.push_back(privKey);\n+                // }\n+\n+                bool privkey_already_added{false};\n+                for (const std::tuple<CKey, std::tuple<int64_t, int64_t>> privkeyrange : sp_keys_range) {\n+                    CKey existent_privkey = std::get<0>(privkeyrange);\n+                    if (existent_privkey == privKey) {\n+                        privkey_already_added = true;\n+                        break;\n+                    }\n+                }\n+\n+                if (!privkey_already_added) {\n+                    sp_keys_range.push_back({privKey, range});",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c53eec1c25c4a94935ae8e775c09e71ef24a3d0b\r\n```suggestion\r\n                    sp_keys_range.emplace_back(privKey, range);\r\n```",
      "created_at": "2022-09-30T15:54:48Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984734438",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984734438"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984735613",
      "pull_request_review_id": 1126966227,
      "id": 984735613,
      "node_id": "PRRC_kwDOABII5846sd99",
      "diff_hunk": "@@ -116,12 +116,17 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n             CTxOut out(0, CScript() << OP_RETURN << data);\n             rawTx.vout.push_back(out);\n         } else {\n-            CTxDestination destination = DecodeDestination(name_);\n+            ;",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "155fcb69cb850953f7778387eab0611bb32c557e\r\n```suggestion\r\n```",
      "created_at": "2022-09-30T15:56:14Z",
      "updated_at": "2022-09-30T16:15:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984735613",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984735613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984737097",
      "pull_request_review_id": 1126966227,
      "id": 984737097,
      "node_id": "PRRC_kwDOABII5846seVJ",
      "diff_hunk": "@@ -116,12 +116,17 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n             CTxOut out(0, CScript() << OP_RETURN << data);\n             rawTx.vout.push_back(out);\n         } else {\n-            CTxDestination destination = DecodeDestination(name_);\n+            ;\n+            auto decoded = DecodeDestinationIndicatingSP(name_);\n+            CTxDestination destination{std::get<0>(decoded)};\n+            bool silent_payment{std::get<1>(decoded)};\n+            int32_t identifier{std::get<2>(decoded)};",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "155fcb69cb850953f7778387eab0611bb32c557e\r\nuse structured binding",
      "created_at": "2022-09-30T15:58:01Z",
      "updated_at": "2022-09-30T16:15:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984737097",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984737097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 120,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984737619",
      "pull_request_review_id": 1126966227,
      "id": 984737619,
      "node_id": "PRRC_kwDOABII5846sedT",
      "diff_hunk": "@@ -116,12 +116,17 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n             CTxOut out(0, CScript() << OP_RETURN << data);\n             rawTx.vout.push_back(out);\n         } else {\n-            CTxDestination destination = DecodeDestination(name_);\n+            ;\n+            auto decoded = DecodeDestinationIndicatingSP(name_);\n+            CTxDestination destination{std::get<0>(decoded)};\n+            bool silent_payment{std::get<1>(decoded)};\n+            int32_t identifier{std::get<2>(decoded)};\n+\n             if (!IsValidDestination(destination)) {\n                 throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(\"Invalid Bitcoin address: \") + name_);\n             }\n \n-            if (!destinations.insert(destination).second) {\n+            if (!destinations.insert({destination, identifier}).second) {",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "155fcb69cb850953f7778387eab0611bb32c557e\r\n```suggestion\r\n            if (!destinations.emplace(destination, identifier).second) {\r\n```",
      "created_at": "2022-09-30T15:58:43Z",
      "updated_at": "2022-09-30T16:15:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984737619",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984737619"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984738214",
      "pull_request_review_id": 1126966227,
      "id": 984738214,
      "node_id": "PRRC_kwDOABII5846semm",
      "diff_hunk": "@@ -1092,6 +1093,88 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n     return ret;\n }\n \n+std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\n+{\n+    std::string desc_str;\n+    std::pair<int64_t, int64_t> range = {0, 1000};\n+    if (scanobject.isStr()) {\n+        desc_str = scanobject.get_str();\n+    } else if (scanobject.isObject()) {\n+        UniValue desc_uni = find_value(scanobject, \"desc\");\n+        if (desc_uni.isNull()) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor needs to be provided in scan object\");\n+        desc_str = desc_uni.get_str();\n+\n+        bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+        if (is_sp_desc) {\n+            range = {0, wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER};\n+        }\n+\n+        UniValue range_uni = find_value(scanobject, \"range\");\n+        if (!range_uni.isNull()) {\n+            range = ParseDescriptorRange(range_uni);\n+        }\n+\n+        if (is_sp_desc && range.second > wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER) {\n+            std::stringstream ss;\n+            ss << wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER;\n+\n+            throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                \"End of range is too high. The maximum allowed for silent payment descriptors is \" + ss.str());\n+        }\n+\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\n+    }\n+\n+    return {desc_str, range};\n+}\n+\n+std::vector<CScript> DescriptorToScripts(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c53eec1c25c4a94935ae8e775c09e71ef24a3d0b\r\nalso in header\r\n```suggestion\r\nstd::vector<CScript> DescriptorToScripts(const std::string& desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\r\n```",
      "created_at": "2022-09-30T15:59:27Z",
      "updated_at": "2022-09-30T16:15:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984738214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984738214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984738708",
      "pull_request_review_id": 1126966227,
      "id": 984738708,
      "node_id": "PRRC_kwDOABII5846seuU",
      "diff_hunk": "@@ -1092,6 +1093,88 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n     return ret;\n }\n \n+std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\n+{\n+    std::string desc_str;\n+    std::pair<int64_t, int64_t> range = {0, 1000};\n+    if (scanobject.isStr()) {\n+        desc_str = scanobject.get_str();\n+    } else if (scanobject.isObject()) {\n+        UniValue desc_uni = find_value(scanobject, \"desc\");\n+        if (desc_uni.isNull()) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor needs to be provided in scan object\");\n+        desc_str = desc_uni.get_str();\n+\n+        bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+        if (is_sp_desc) {\n+            range = {0, wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER};\n+        }\n+\n+        UniValue range_uni = find_value(scanobject, \"range\");\n+        if (!range_uni.isNull()) {\n+            range = ParseDescriptorRange(range_uni);\n+        }\n+\n+        if (is_sp_desc && range.second > wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER) {\n+            std::stringstream ss;\n+            ss << wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER;\n+\n+            throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                \"End of range is too high. The maximum allowed for silent payment descriptors is \" + ss.str());\n+        }\n+\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\n+    }\n+\n+    return {desc_str, range};\n+}\n+\n+std::vector<CScript> DescriptorToScripts(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CScript> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\n+        }\n+        std::move(scripts.begin(), scripts.end(), std::back_inserter(ret));\n+    }\n+    return ret;\n+}\n+\n+std::vector<CKey> DescriptorToKeys(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c53eec1c25c4a94935ae8e775c09e71ef24a3d0b\r\n```suggestion\r\nstd::vector<CKey> DescriptorToKeys(const std::string& desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\r\n```",
      "created_at": "2022-09-30T16:00:00Z",
      "updated_at": "2022-09-30T16:15:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984738708",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984738708"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984739120",
      "pull_request_review_id": 1126966227,
      "id": 984739120,
      "node_id": "PRRC_kwDOABII5846se0w",
      "diff_hunk": "@@ -1092,6 +1093,88 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n     return ret;\n }\n \n+std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\n+{\n+    std::string desc_str;\n+    std::pair<int64_t, int64_t> range = {0, 1000};\n+    if (scanobject.isStr()) {\n+        desc_str = scanobject.get_str();\n+    } else if (scanobject.isObject()) {\n+        UniValue desc_uni = find_value(scanobject, \"desc\");\n+        if (desc_uni.isNull()) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor needs to be provided in scan object\");\n+        desc_str = desc_uni.get_str();\n+\n+        bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+        if (is_sp_desc) {\n+            range = {0, wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER};\n+        }\n+\n+        UniValue range_uni = find_value(scanobject, \"range\");\n+        if (!range_uni.isNull()) {\n+            range = ParseDescriptorRange(range_uni);\n+        }\n+\n+        if (is_sp_desc && range.second > wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER) {\n+            std::stringstream ss;\n+            ss << wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER;\n+\n+            throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                \"End of range is too high. The maximum allowed for silent payment descriptors is \" + ss.str());\n+        }\n+\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\n+    }\n+\n+    return {desc_str, range};\n+}\n+\n+std::vector<CScript> DescriptorToScripts(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CScript> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\n+        }\n+        std::move(scripts.begin(), scripts.end(), std::back_inserter(ret));\n+    }\n+    return ret;\n+}\n+\n+std::vector<CKey> DescriptorToKeys(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CKey> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        FlatSigningProvider out;\n+        desc->ExpandPrivate(i, provider, out);\n+        //std::move(out.keys.begin(), out.keys.end(), std::back_inserter(ret));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c53eec1c25c4a94935ae8e775c09e71ef24a3d0b\r\n```suggestion\r\n```",
      "created_at": "2022-09-30T16:00:31Z",
      "updated_at": "2022-09-30T16:15:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984739120",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984739120"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984739751",
      "pull_request_review_id": 1126966227,
      "id": 984739751,
      "node_id": "PRRC_kwDOABII5846se-n",
      "diff_hunk": "@@ -1092,6 +1093,88 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n     return ret;\n }\n \n+std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\n+{\n+    std::string desc_str;\n+    std::pair<int64_t, int64_t> range = {0, 1000};\n+    if (scanobject.isStr()) {\n+        desc_str = scanobject.get_str();\n+    } else if (scanobject.isObject()) {\n+        UniValue desc_uni = find_value(scanobject, \"desc\");\n+        if (desc_uni.isNull()) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor needs to be provided in scan object\");\n+        desc_str = desc_uni.get_str();\n+\n+        bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+        if (is_sp_desc) {\n+            range = {0, wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER};\n+        }\n+\n+        UniValue range_uni = find_value(scanobject, \"range\");\n+        if (!range_uni.isNull()) {\n+            range = ParseDescriptorRange(range_uni);\n+        }\n+\n+        if (is_sp_desc && range.second > wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER) {\n+            std::stringstream ss;\n+            ss << wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER;\n+\n+            throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                \"End of range is too high. The maximum allowed for silent payment descriptors is \" + ss.str());\n+        }\n+\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\n+    }\n+\n+    return {desc_str, range};\n+}\n+\n+std::vector<CScript> DescriptorToScripts(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CScript> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\n+        }\n+        std::move(scripts.begin(), scripts.end(), std::back_inserter(ret));\n+    }\n+    return ret;\n+}\n+\n+std::vector<CKey> DescriptorToKeys(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CKey> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        FlatSigningProvider out;\n+        desc->ExpandPrivate(i, provider, out);\n+        //std::move(out.keys.begin(), out.keys.end(), std::back_inserter(ret));\n+        for (auto& [_, privKey] : out.keys) {",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 87,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c53eec1c25c4a94935ae8e775c09e71ef24a3d0b\r\n```suggestion\r\n        for (const auto& [_, privKey] : out.keys) {\r\n```",
      "created_at": "2022-09-30T16:01:19Z",
      "updated_at": "2022-09-30T16:15:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984739751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984739751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984740556",
      "pull_request_review_id": 1126966227,
      "id": 984740556,
      "node_id": "PRRC_kwDOABII5846sfLM",
      "diff_hunk": "@@ -135,13 +200,31 @@ RPCHelpMan setlabel()\n \n     LOCK(pwallet->cs_wallet);\n \n-    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    auto address = request.params[0].get_str();\n+\n+    auto decoded = DecodeDestinationIndicatingSP(address);\n+    CTxDestination dest{std::get<0>(decoded)};\n+    bool silent_payment{std::get<1>(decoded)};\n+    int32_t silent_payment_index{std::get<2>(decoded)};",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a0c5c6cf29835ee8315356e050c01db9252e9dc1\r\nuse structured binding",
      "created_at": "2022-09-30T16:02:08Z",
      "updated_at": "2022-09-30T16:15:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984740556",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984740556"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 205,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984741063",
      "pull_request_review_id": 1126966227,
      "id": 984741063,
      "node_id": "PRRC_kwDOABII5846sfTH",
      "diff_hunk": "@@ -553,7 +637,11 @@ RPCHelpMan getaddressinfo()\n     LOCK(pwallet->cs_wallet);\n \n     std::string error_msg;\n-    CTxDestination dest = DecodeDestination(request.params[0].get_str(), error_msg);\n+\n+    auto decoded = DecodeDestinationIndicatingSP(request.params[0].get_str(), error_msg);\n+    CTxDestination dest{std::get<0>(decoded)};\n+    bool silent_payment{std::get<1>(decoded)};\n+    int32_t silent_payment_index{std::get<2>(decoded)};",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8a757e61b94f76f83bbcbe449edda710187af5f3\r\nuse structured binding",
      "created_at": "2022-09-30T16:02:39Z",
      "updated_at": "2022-09-30T16:15:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r984741063",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/984741063"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 642,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987827344",
      "pull_request_review_id": 1131292858,
      "id": 987827344,
      "node_id": "PRRC_kwDOABII58464QyQ",
      "diff_hunk": "@@ -1154,47 +1254,20 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxS\n \n         bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n         if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+        bool ret = false;\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n-                }\n-            }\n+        if (fExisted || IsMine(tx) || IsFromMe(tx))\n+        {\n+            ret = HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+        }\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n-            if (!wtx) {\n-                // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n-                // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n-                throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n-            }\n-            return true;\n+        if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys))\n+        {\n+            ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n         }",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 165,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "06037565e907c020340e064a5612abfebf347cc9",
      "in_reply_to_id": 984688350,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/5e8b8091e33fa0479f2509b470b601e6691723e2.",
      "created_at": "2022-10-05T11:43:16Z",
      "updated_at": "2022-10-05T11:43:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987827344",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987827344"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1258,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987827511",
      "pull_request_review_id": 1131293096,
      "id": 987827511,
      "node_id": "PRRC_kwDOABII58464Q03",
      "diff_hunk": "@@ -1133,12 +1133,112 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n+                }\n+            }\n+        }\n+    }\n+\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n+\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n+\n+    for(auto& identifier_key: rawTrKeys) {\n+\n+        CKey key = std::get<0>(identifier_key);\n+        int32_t identifier = std::get<1>(identifier_key);\n+\n+        std::string desc = \"rawtr(\" + EncodeSecret(key) + \")\";\n+        std::string checksum = GetDescriptorChecksum(desc);\n+\n+        auto timestamp = std::chrono::duration_cast<std::chrono::microseconds>(\n+            std::chrono::system_clock::now().time_since_epoch()).count();\n+\n+        std::string desc_check = desc + \"#\" + checksum;\n+\n+        FlatSigningProvider keys;\n+        std::string error;\n+        auto parsed_desc = Parse(desc_check, keys, error, /* require_checksum = */ true);\n+        assert(parsed_desc);\n+\n+        int64_t range_start = 0, range_end = 1, next_index = 0;\n+\n+        // Need to ExpandPrivate to check if private keys are available for all pubkeys\n+        FlatSigningProvider expand_keys;\n+        std::vector<CScript> scripts;\n+        assert(parsed_desc->Expand(0, keys, scripts, expand_keys));\n+        parsed_desc->ExpandPrivate(0, keys, expand_keys);\n+\n+        WalletDescriptor w_desc(std::move(parsed_desc), timestamp, range_start, range_end, next_index);\n+\n+        std::string label;\n+\n+        if (m_silent_address_book.count(identifier)) {\n+            auto entry = m_silent_address_book[identifier];\n+            label = entry.m_label;\n+        } else {\n+            std::stringstream ss;\n+            ss << identifier;\n+            label = ss.str();\n+        }\n+\n+        auto existing_spk_manager = GetDescriptorScriptPubKeyMan(w_desc);\n+        if (!existing_spk_manager) {\n+            auto spk_manager = AddWalletDescriptor(w_desc, keys, label, false);\n+            assert(spk_manager != nullptr);\n+        }\n+    }\n+\n+    return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+}\n+\n bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n {\n     const CTransaction& tx = *ptx;\n     {\n         AssertLockHeld(cs_wallet);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 106,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "06037565e907c020340e064a5612abfebf347cc9",
      "in_reply_to_id": 984691039,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/5e8b8091e33fa0479f2509b470b601e6691723e2.",
      "created_at": "2022-10-05T11:43:31Z",
      "updated_at": "2022-10-05T11:43:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987827511",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987827511"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1237,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987827575",
      "pull_request_review_id": 1131293180,
      "id": 987827575,
      "node_id": "PRRC_kwDOABII58464Q13",
      "diff_hunk": "@@ -1154,47 +1254,20 @@ bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxS\n \n         bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n         if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+        bool ret = false;\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n-                }\n-            }\n+        if (fExisted || IsMine(tx) || IsFromMe(tx))\n+        {\n+            ret = HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+        }\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n-            if (!wtx) {\n-                // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n-                // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n-                throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n-            }\n-            return true;\n+        if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys))\n+        {\n+            ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n         }\n+\n+        return ret;\n     }\n     return false;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 169,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "06037565e907c020340e064a5612abfebf347cc9",
      "in_reply_to_id": 984696515,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/5e8b8091e33fa0479f2509b470b601e6691723e2.",
      "created_at": "2022-10-05T11:43:36Z",
      "updated_at": "2022-10-05T11:43:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987827575",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987827575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1272,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987827856",
      "pull_request_review_id": 1131293566,
      "id": 987827856,
      "node_id": "PRRC_kwDOABII58464Q6Q",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tuple.first), tuple.second);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::ExtractPubkeyFromInput(const Coin& prevCoin, const CTxIn& txin,  XOnlyPubKey& senderPubKey)\n+{\n+    // scriptPubKey being spent by this input\n+    CScript scriptPubKey = prevCoin.out.scriptPubKey;\n+\n+    if (scriptPubKey.IsPayToWitnessScriptHash()) {\n+        return false;\n+    }\n+\n+    // Vector of parsed pubkeys and hashes\n+    std::vector<std::vector<unsigned char>> solutions;\n+\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    if (whichType == TxoutType::NONSTANDARD ||\n+    whichType == TxoutType::MULTISIG ||\n+    whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    }\n+\n+    const CScript scriptSig = txin.scriptSig;\n+    const CScriptWitness scriptWitness = txin.scriptWitness;\n+\n+    assert(senderPubKey.IsNull());\n+\n+    // TODO: Condition not tested\n+    if (whichType == TxoutType::PUBKEY) {\n+\n+        CPubKey pubkey = CPubKey(solutions[0]);\n+        assert(pubkey.IsFullyValid());\n+        senderPubKey = XOnlyPubKey(pubkey);\n+    }\n+\n+    else if (whichType == TxoutType::PUBKEYHASH) {\n+\n+        int sigSize = static_cast<int>(scriptSig[0]);\n+        int pubKeySize = static_cast<int>(scriptSig[sigSize + 1]);\n+        auto serializedPubKey = std::vector<unsigned char>(scriptSig.begin() + sigSize + 2, scriptSig.end());\n+        assert(serializedPubKey.size() == (size_t) pubKeySize);\n+\n+        CPubKey pubkey = CPubKey(serializedPubKey);\n+        assert(pubkey.IsFullyValid());\n+\n+        senderPubKey = XOnlyPubKey(pubkey);\n+\n+    }\n+\n+    else if (whichType == TxoutType::WITNESS_V0_KEYHASH || scriptPubKey.IsPayToScriptHash()) {\n+        if (scriptWitness.stack.size() != 2) return false;\n+        assert(scriptWitness.stack.at(1).size() == 33);\n+\n+        CPubKey pubkey = CPubKey(scriptWitness.stack.at(1));\n+        assert(pubkey.IsFullyValid());\n+\n+        senderPubKey = XOnlyPubKey(pubkey);\n+    }\n+\n+    else if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+\n+        senderPubKey = XOnlyPubKey(solutions[0]);\n+        assert(senderPubKey.IsFullyValid());\n+    }\n+\n+    CTxDestination address;\n+    ExtractDestination(scriptPubKey, address);\n+\n+    return true;\n+}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, XOnlyPubKey& firstInputPubKey)\n+{\n+    if (tx->IsCoinBase()) {\n+        return false;\n+    }\n+\n+    for (auto& vout : tx->vout) {\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+\n+        if (whichType != TxoutType::WITNESS_V1_TAPROOT) {\n+            return false;\n+        }\n+    }\n+\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+\n+    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        return false;\n+    }\n+\n+    CTxUndo* undoTX {nullptr};\n+    auto it = std::find_if(block.vtx.begin(), block.vtx.end(), [tx](CTransactionRef t){ return *t == *tx; });\n+    if (it != block.vtx.end()) {\n+        // -1 as blockundo does not have coinbase tx\n+        undoTX = &blockUndo.vtxundo.at(it - block.vtx.begin() - 1);\n+    }\n+\n+    if (undoTX == nullptr) {\n+        return false;\n+    }\n+\n+    const Coin& prev_coin = undoTX->vprevout[0];\n+\n+    const CTxIn& txin = tx->vin.at(0);\n+\n+    return ExtractPubkeyFromInput(prev_coin, txin, firstInputPubKey);\n+}\n+\n+bool SilentPaymentIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    // Exclude genesis block transaction because outputs are not spendable.\n+    if (block.height == 0) return true;\n+\n+    assert(block.data);\n+\n+    Consensus::Params consensus = Params().GetConsensus();\n+\n+    if (block.height < consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height) {\n+        return true;\n+    }\n+\n+    std::vector<std::pair<uint256, uint256>> items;",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 172,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984700363,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/9c47a26452426fffc4ee3a7d2bdcfd0813e2ccbc",
      "created_at": "2022-10-05T11:43:57Z",
      "updated_at": "2022-10-05T11:43:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987827856",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987827856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987827969",
      "pull_request_review_id": 1131293722,
      "id": 987827969,
      "node_id": "PRRC_kwDOABII58464Q8B",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tuple.first), tuple.second);\n+    }",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984701121,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/9c47a26452426fffc4ee3a7d2bdcfd0813e2ccbc.",
      "created_at": "2022-10-05T11:44:06Z",
      "updated_at": "2022-10-05T11:44:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987827969",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987827969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 38,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987828331",
      "pull_request_review_id": 1131294207,
      "id": 987828331,
      "node_id": "PRRC_kwDOABII58464RBr",
      "diff_hunk": "@@ -0,0 +1,206 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& tuple : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tuple.first), tuple.second);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::ExtractPubkeyFromInput(const Coin& prevCoin, const CTxIn& txin,  XOnlyPubKey& senderPubKey)",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984705023,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/9c47a26452426fffc4ee3a7d2bdcfd0813e2ccbc.",
      "created_at": "2022-10-05T11:44:36Z",
      "updated_at": "2022-10-05T11:44:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987828331",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987828331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987828911",
      "pull_request_review_id": 1131295048,
      "id": 987828911,
      "node_id": "PRRC_kwDOABII58464RKv",
      "diff_hunk": "@@ -76,30 +95,35 @@ class DestinationEncoder\n     std::string operator()(const CNoDestination& no) const { return {}; }\n };\n \n-CTxDestination DecodeDestination(const std::string& str, const CChainParams& params, std::string& error_str, std::vector<int>* error_locations)\n+std::tuple<CTxDestination,bool,int32_t> DecodeDestination(const std::string& str, const CChainParams& params, std::string& error_str, std::vector<int>* error_locations)\n {\n     std::vector<unsigned char> data;\n     uint160 hash;\n     error_str = \"\";\n+    bool silent_payment{false};\n+\n+    const auto& silent_payment_hrp = params.SilentPaymentHRP();\n+    auto dest_silent_payment_hrp = ToLower(str.substr(0, params.SilentPaymentHRP().size()));",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 63,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984709509,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/7eecc8732b267c421b45166ba5a0576e602892f0.",
      "created_at": "2022-10-05T11:45:24Z",
      "updated_at": "2022-10-05T11:45:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987828911",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987828911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829154",
      "pull_request_review_id": 1131295399,
      "id": 987829154,
      "node_id": "PRRC_kwDOABII58464ROi",
      "diff_hunk": "@@ -1983,6 +2031,14 @@ bool FindScriptPubKey(std::atomic<int>& scan_progress, const std::atomic<bool>&\n         if (needles.count(coin.out.scriptPubKey)) {\n             out_results.emplace(key, coin);\n         }\n+        for(const auto& sp_key_range: sp_keys_range) {\n+            CKey sp_key = std::get<0>(sp_key_range);\n+            std::pair<int64_t, int64_t> sp_range = std::get<1>(sp_key_range);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984729836,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/edf8e5b5eccd9031c1b59ce8ea4c5586ed503d1d.",
      "created_at": "2022-10-05T11:45:45Z",
      "updated_at": "2022-10-05T11:45:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987829154",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 2034,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2036,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829227",
      "pull_request_review_id": 1131295520,
      "id": 987829227,
      "node_id": "PRRC_kwDOABII58464RPr",
      "diff_hunk": "@@ -2122,17 +2178,54 @@ static RPCHelpMan scantxoutset()\n         }\n \n         std::set<CScript> needles;\n+        std::vector<std::tuple<CKey, std::pair<int64_t, int64_t>>> sp_keys_range;\n         std::map<CScript, std::string> descriptors;\n         CAmount total_in = 0;\n \n         // loop through the scan objects\n         for (const UniValue& scanobject : request.params[1].get_array().getValues()) {\n             FlatSigningProvider provider;\n-            auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n-            for (CScript& script : scripts) {\n-                std::string inferred = InferDescriptor(script, provider)->ToString();\n-                needles.emplace(script);\n-                descriptors.emplace(std::move(script), std::move(inferred));\n+            // auto scripts = EvalDescriptorStringOrObject(scanobject, provider);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984730361,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/edf8e5b5eccd9031c1b59ce8ea4c5586ed503d1d.",
      "created_at": "2022-10-05T11:45:52Z",
      "updated_at": "2022-10-05T11:45:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987829227",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829311",
      "pull_request_review_id": 1131295636,
      "id": 987829311,
      "node_id": "PRRC_kwDOABII58464RQ_",
      "diff_hunk": "@@ -2122,17 +2178,54 @@ static RPCHelpMan scantxoutset()\n         }\n \n         std::set<CScript> needles;\n+        std::vector<std::tuple<CKey, std::pair<int64_t, int64_t>>> sp_keys_range;\n         std::map<CScript, std::string> descriptors;\n         CAmount total_in = 0;\n \n         // loop through the scan objects\n         for (const UniValue& scanobject : request.params[1].get_array().getValues()) {\n             FlatSigningProvider provider;\n-            auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n-            for (CScript& script : scripts) {\n-                std::string inferred = InferDescriptor(script, provider)->ToString();\n-                needles.emplace(script);\n-                descriptors.emplace(std::move(script), std::move(inferred));\n+            // auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n+            auto ret = EvalDescriptorStringOrObject(scanobject);\n+            auto desc_str = std::get<0>(ret);\n+            auto range = std::get<1>(ret);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 106,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984730908,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/edf8e5b5eccd9031c1b59ce8ea4c5586ed503d1d.",
      "created_at": "2022-10-05T11:45:59Z",
      "updated_at": "2022-10-05T11:46:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987829311",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829311"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 2189,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829382",
      "pull_request_review_id": 1131295730,
      "id": 987829382,
      "node_id": "PRRC_kwDOABII58464RSG",
      "diff_hunk": "@@ -2122,17 +2178,54 @@ static RPCHelpMan scantxoutset()\n         }\n \n         std::set<CScript> needles;\n+        std::vector<std::tuple<CKey, std::pair<int64_t, int64_t>>> sp_keys_range;\n         std::map<CScript, std::string> descriptors;\n         CAmount total_in = 0;\n \n         // loop through the scan objects\n         for (const UniValue& scanobject : request.params[1].get_array().getValues()) {\n             FlatSigningProvider provider;\n-            auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n-            for (CScript& script : scripts) {\n-                std::string inferred = InferDescriptor(script, provider)->ToString();\n-                needles.emplace(script);\n-                descriptors.emplace(std::move(script), std::move(inferred));\n+            // auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n+            auto ret = EvalDescriptorStringOrObject(scanobject);\n+            auto desc_str = std::get<0>(ret);\n+            auto range = std::get<1>(ret);\n+\n+            bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+            if (is_sp_desc) {\n+                auto keys = DescriptorToKeys(desc_str, range, provider);\n+\n+                if (keys.empty()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scanning silent payment descriptors requires private keys.\");\n+                }\n+\n+                assert(keys.size() == 1);\n+\n+                auto privKey = keys.at(0);\n+\n+                // if (std::find(sp_keys.begin(), sp_keys.end(), privKey) == sp_keys.end()) {\n+                //     sp_keys.push_back(privKey);\n+                // }\n+\n+                bool privkey_already_added{false};\n+                for (const std::tuple<CKey, std::tuple<int64_t, int64_t>> privkeyrange : sp_keys_range) {",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 126,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984733402,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/edf8e5b5eccd9031c1b59ce8ea4c5586ed503d1d.",
      "created_at": "2022-10-05T11:46:05Z",
      "updated_at": "2022-10-05T11:46:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987829382",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829496",
      "pull_request_review_id": 1131295881,
      "id": 987829496,
      "node_id": "PRRC_kwDOABII58464RT4",
      "diff_hunk": "@@ -2122,17 +2178,54 @@ static RPCHelpMan scantxoutset()\n         }\n \n         std::set<CScript> needles;\n+        std::vector<std::tuple<CKey, std::pair<int64_t, int64_t>>> sp_keys_range;\n         std::map<CScript, std::string> descriptors;\n         CAmount total_in = 0;\n \n         // loop through the scan objects\n         for (const UniValue& scanobject : request.params[1].get_array().getValues()) {\n             FlatSigningProvider provider;\n-            auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n-            for (CScript& script : scripts) {\n-                std::string inferred = InferDescriptor(script, provider)->ToString();\n-                needles.emplace(script);\n-                descriptors.emplace(std::move(script), std::move(inferred));\n+            // auto scripts = EvalDescriptorStringOrObject(scanobject, provider);\n+            auto ret = EvalDescriptorStringOrObject(scanobject);\n+            auto desc_str = std::get<0>(ret);\n+            auto range = std::get<1>(ret);\n+\n+            bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+            if (is_sp_desc) {\n+                auto keys = DescriptorToKeys(desc_str, range, provider);\n+\n+                if (keys.empty()) {\n+                    throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scanning silent payment descriptors requires private keys.\");\n+                }\n+\n+                assert(keys.size() == 1);\n+\n+                auto privKey = keys.at(0);\n+\n+                // if (std::find(sp_keys.begin(), sp_keys.end(), privKey) == sp_keys.end()) {\n+                //     sp_keys.push_back(privKey);\n+                // }\n+\n+                bool privkey_already_added{false};\n+                for (const std::tuple<CKey, std::tuple<int64_t, int64_t>> privkeyrange : sp_keys_range) {\n+                    CKey existent_privkey = std::get<0>(privkeyrange);\n+                    if (existent_privkey == privKey) {\n+                        privkey_already_added = true;\n+                        break;\n+                    }\n+                }\n+\n+                if (!privkey_already_added) {\n+                    sp_keys_range.push_back({privKey, range});",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984734438,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/edf8e5b5eccd9031c1b59ce8ea4c5586ed503d1d.",
      "created_at": "2022-10-05T11:46:13Z",
      "updated_at": "2022-10-05T11:46:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987829496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2220,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829800",
      "pull_request_review_id": 1131296332,
      "id": 987829800,
      "node_id": "PRRC_kwDOABII58464RYo",
      "diff_hunk": "@@ -116,12 +116,17 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n             CTxOut out(0, CScript() << OP_RETURN << data);\n             rawTx.vout.push_back(out);\n         } else {\n-            CTxDestination destination = DecodeDestination(name_);\n+            ;",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984735613,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/3bfd4786fdbcefc5558b10a74da6827f1edab187.",
      "created_at": "2022-10-05T11:46:42Z",
      "updated_at": "2022-10-05T11:46:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987829800",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829862",
      "pull_request_review_id": 1131296428,
      "id": 987829862,
      "node_id": "PRRC_kwDOABII58464RZm",
      "diff_hunk": "@@ -116,12 +116,17 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n             CTxOut out(0, CScript() << OP_RETURN << data);\n             rawTx.vout.push_back(out);\n         } else {\n-            CTxDestination destination = DecodeDestination(name_);\n+            ;\n+            auto decoded = DecodeDestinationIndicatingSP(name_);\n+            CTxDestination destination{std::get<0>(decoded)};\n+            bool silent_payment{std::get<1>(decoded)};\n+            int32_t identifier{std::get<2>(decoded)};",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984737097,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/3bfd4786fdbcefc5558b10a74da6827f1edab187.",
      "created_at": "2022-10-05T11:46:48Z",
      "updated_at": "2022-10-05T11:46:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987829862",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 120,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 123,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829973",
      "pull_request_review_id": 1131296585,
      "id": 987829973,
      "node_id": "PRRC_kwDOABII58464RbV",
      "diff_hunk": "@@ -116,12 +116,17 @@ CMutableTransaction ConstructTransaction(const UniValue& inputs_in, const UniVal\n             CTxOut out(0, CScript() << OP_RETURN << data);\n             rawTx.vout.push_back(out);\n         } else {\n-            CTxDestination destination = DecodeDestination(name_);\n+            ;\n+            auto decoded = DecodeDestinationIndicatingSP(name_);\n+            CTxDestination destination{std::get<0>(decoded)};\n+            bool silent_payment{std::get<1>(decoded)};\n+            int32_t identifier{std::get<2>(decoded)};\n+\n             if (!IsValidDestination(destination)) {\n                 throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(\"Invalid Bitcoin address: \") + name_);\n             }\n \n-            if (!destinations.insert(destination).second) {\n+            if (!destinations.insert({destination, identifier}).second) {",
      "path": "src/rpc/rawtransaction_util.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984737619,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/3bfd4786fdbcefc5558b10a74da6827f1edab187.",
      "created_at": "2022-10-05T11:46:58Z",
      "updated_at": "2022-10-05T11:46:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987829973",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987829973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987830246",
      "pull_request_review_id": 1131296955,
      "id": 987830246,
      "node_id": "PRRC_kwDOABII58464Rfm",
      "diff_hunk": "@@ -1092,6 +1093,88 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n     return ret;\n }\n \n+std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\n+{\n+    std::string desc_str;\n+    std::pair<int64_t, int64_t> range = {0, 1000};\n+    if (scanobject.isStr()) {\n+        desc_str = scanobject.get_str();\n+    } else if (scanobject.isObject()) {\n+        UniValue desc_uni = find_value(scanobject, \"desc\");\n+        if (desc_uni.isNull()) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor needs to be provided in scan object\");\n+        desc_str = desc_uni.get_str();\n+\n+        bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+        if (is_sp_desc) {\n+            range = {0, wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER};\n+        }\n+\n+        UniValue range_uni = find_value(scanobject, \"range\");\n+        if (!range_uni.isNull()) {\n+            range = ParseDescriptorRange(range_uni);\n+        }\n+\n+        if (is_sp_desc && range.second > wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER) {\n+            std::stringstream ss;\n+            ss << wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER;\n+\n+            throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                \"End of range is too high. The maximum allowed for silent payment descriptors is \" + ss.str());\n+        }\n+\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\n+    }\n+\n+    return {desc_str, range};\n+}\n+\n+std::vector<CScript> DescriptorToScripts(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 49,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984738214,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/edf8e5b5eccd9031c1b59ce8ea4c5586ed503d1d.",
      "created_at": "2022-10-05T11:47:21Z",
      "updated_at": "2022-10-05T11:47:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987830246",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987830246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987830385",
      "pull_request_review_id": 1131297120,
      "id": 987830385,
      "node_id": "PRRC_kwDOABII58464Rhx",
      "diff_hunk": "@@ -1092,6 +1093,88 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n     return ret;\n }\n \n+std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\n+{\n+    std::string desc_str;\n+    std::pair<int64_t, int64_t> range = {0, 1000};\n+    if (scanobject.isStr()) {\n+        desc_str = scanobject.get_str();\n+    } else if (scanobject.isObject()) {\n+        UniValue desc_uni = find_value(scanobject, \"desc\");\n+        if (desc_uni.isNull()) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor needs to be provided in scan object\");\n+        desc_str = desc_uni.get_str();\n+\n+        bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+        if (is_sp_desc) {\n+            range = {0, wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER};\n+        }\n+\n+        UniValue range_uni = find_value(scanobject, \"range\");\n+        if (!range_uni.isNull()) {\n+            range = ParseDescriptorRange(range_uni);\n+        }\n+\n+        if (is_sp_desc && range.second > wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER) {\n+            std::stringstream ss;\n+            ss << wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER;\n+\n+            throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                \"End of range is too high. The maximum allowed for silent payment descriptors is \" + ss.str());\n+        }\n+\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\n+    }\n+\n+    return {desc_str, range};\n+}\n+\n+std::vector<CScript> DescriptorToScripts(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CScript> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\n+        }\n+        std::move(scripts.begin(), scripts.end(), std::back_inserter(ret));\n+    }\n+    return ret;\n+}\n+\n+std::vector<CKey> DescriptorToKeys(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984738708,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/edf8e5b5eccd9031c1b59ce8ea4c5586ed503d1d.",
      "created_at": "2022-10-05T11:47:31Z",
      "updated_at": "2022-10-05T11:47:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987830385",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987830385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987830690",
      "pull_request_review_id": 1131297529,
      "id": 987830690,
      "node_id": "PRRC_kwDOABII58464Rmi",
      "diff_hunk": "@@ -1092,6 +1093,88 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n     return ret;\n }\n \n+std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\n+{\n+    std::string desc_str;\n+    std::pair<int64_t, int64_t> range = {0, 1000};\n+    if (scanobject.isStr()) {\n+        desc_str = scanobject.get_str();\n+    } else if (scanobject.isObject()) {\n+        UniValue desc_uni = find_value(scanobject, \"desc\");\n+        if (desc_uni.isNull()) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor needs to be provided in scan object\");\n+        desc_str = desc_uni.get_str();\n+\n+        bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+        if (is_sp_desc) {\n+            range = {0, wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER};\n+        }\n+\n+        UniValue range_uni = find_value(scanobject, \"range\");\n+        if (!range_uni.isNull()) {\n+            range = ParseDescriptorRange(range_uni);\n+        }\n+\n+        if (is_sp_desc && range.second > wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER) {\n+            std::stringstream ss;\n+            ss << wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER;\n+\n+            throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                \"End of range is too high. The maximum allowed for silent payment descriptors is \" + ss.str());\n+        }\n+\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\n+    }\n+\n+    return {desc_str, range};\n+}\n+\n+std::vector<CScript> DescriptorToScripts(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CScript> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\n+        }\n+        std::move(scripts.begin(), scripts.end(), std::back_inserter(ret));\n+    }\n+    return ret;\n+}\n+\n+std::vector<CKey> DescriptorToKeys(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CKey> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        FlatSigningProvider out;\n+        desc->ExpandPrivate(i, provider, out);\n+        //std::move(out.keys.begin(), out.keys.end(), std::back_inserter(ret));",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984739120,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/edf8e5b5eccd9031c1b59ce8ea4c5586ed503d1d.",
      "created_at": "2022-10-05T11:47:55Z",
      "updated_at": "2022-10-05T11:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987830690",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987830690"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987830861",
      "pull_request_review_id": 1131297763,
      "id": 987830861,
      "node_id": "PRRC_kwDOABII58464RpN",
      "diff_hunk": "@@ -1092,6 +1093,88 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n     return ret;\n }\n \n+std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\n+{\n+    std::string desc_str;\n+    std::pair<int64_t, int64_t> range = {0, 1000};\n+    if (scanobject.isStr()) {\n+        desc_str = scanobject.get_str();\n+    } else if (scanobject.isObject()) {\n+        UniValue desc_uni = find_value(scanobject, \"desc\");\n+        if (desc_uni.isNull()) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor needs to be provided in scan object\");\n+        desc_str = desc_uni.get_str();\n+\n+        bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+        if (is_sp_desc) {\n+            range = {0, wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER};\n+        }\n+\n+        UniValue range_uni = find_value(scanobject, \"range\");\n+        if (!range_uni.isNull()) {\n+            range = ParseDescriptorRange(range_uni);\n+        }\n+\n+        if (is_sp_desc && range.second > wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER) {\n+            std::stringstream ss;\n+            ss << wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER;\n+\n+            throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                \"End of range is too high. The maximum allowed for silent payment descriptors is \" + ss.str());\n+        }\n+\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\n+    }\n+\n+    return {desc_str, range};\n+}\n+\n+std::vector<CScript> DescriptorToScripts(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CScript> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\n+        }\n+        std::move(scripts.begin(), scripts.end(), std::back_inserter(ret));\n+    }\n+    return ret;\n+}\n+\n+std::vector<CKey> DescriptorToKeys(std::string desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CKey> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        FlatSigningProvider out;\n+        desc->ExpandPrivate(i, provider, out);\n+        //std::move(out.keys.begin(), out.keys.end(), std::back_inserter(ret));\n+        for (auto& [_, privKey] : out.keys) {",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 87,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984739751,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/edf8e5b5eccd9031c1b59ce8ea4c5586ed503d1d.",
      "created_at": "2022-10-05T11:48:07Z",
      "updated_at": "2022-10-05T11:48:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987830861",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987830861"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987831196",
      "pull_request_review_id": 1131298176,
      "id": 987831196,
      "node_id": "PRRC_kwDOABII58464Ruc",
      "diff_hunk": "@@ -135,13 +200,31 @@ RPCHelpMan setlabel()\n \n     LOCK(pwallet->cs_wallet);\n \n-    CTxDestination dest = DecodeDestination(request.params[0].get_str());\n+    auto address = request.params[0].get_str();\n+\n+    auto decoded = DecodeDestinationIndicatingSP(address);\n+    CTxDestination dest{std::get<0>(decoded)};\n+    bool silent_payment{std::get<1>(decoded)};\n+    int32_t silent_payment_index{std::get<2>(decoded)};",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": null,
      "original_position": 89,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984740556,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/7a03d0cd787ac53d44206744c0f85a22399f71e3.",
      "created_at": "2022-10-05T11:48:30Z",
      "updated_at": "2022-10-05T11:48:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987831196",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987831196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 205,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987831594",
      "pull_request_review_id": 1131298701,
      "id": 987831594,
      "node_id": "PRRC_kwDOABII58464R0q",
      "diff_hunk": "@@ -553,7 +637,11 @@ RPCHelpMan getaddressinfo()\n     LOCK(pwallet->cs_wallet);\n \n     std::string error_msg;\n-    CTxDestination dest = DecodeDestination(request.params[0].get_str(), error_msg);\n+\n+    auto decoded = DecodeDestinationIndicatingSP(request.params[0].get_str(), error_msg);\n+    CTxDestination dest{std::get<0>(decoded)};\n+    bool silent_payment{std::get<1>(decoded)};\n+    int32_t silent_payment_index{std::get<2>(decoded)};",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "79402460ade5f6944c86a071ac72a2c47ae88fba",
      "in_reply_to_id": 984741063,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/7eecc8732b267c421b45166ba5a0576e602892f0.",
      "created_at": "2022-10-05T11:48:59Z",
      "updated_at": "2022-10-05T11:48:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r987831594",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/987831594"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 642,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 644,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992270270",
      "pull_request_review_id": 1137407003,
      "id": 992270270,
      "node_id": "PRRC_kwDOABII5847JNe-",
      "diff_hunk": "@@ -0,0 +1,229 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <wallet/silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, keydata] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), keydata);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::ExtractPubkeyFromInput(const Coin& prevCoin, const CTxIn& txin,  XOnlyPubKey& senderPubKey) const",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in c9b3e312d3579be66043934c3a0c1f13911ab715\r\nThis function seems to be largely duplicated from the function `CWallet::ExtractPubkeyFromInput` in `src/wallet/wallet.cpp`, is there a way to re-use code?",
      "created_at": "2022-10-11T12:37:05Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992270270",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992270270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992281752",
      "pull_request_review_id": 1137407003,
      "id": 992281752,
      "node_id": "PRRC_kwDOABII5847JQSY",
      "diff_hunk": "@@ -1092,6 +1093,87 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n     return ret;\n }\n \n+std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\n+{\n+    std::string desc_str;\n+    std::pair<int64_t, int64_t> range = {0, 1000};\n+    if (scanobject.isStr()) {\n+        desc_str = scanobject.get_str();\n+    } else if (scanobject.isObject()) {\n+        UniValue desc_uni = find_value(scanobject, \"desc\");\n+        if (desc_uni.isNull()) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor needs to be provided in scan object\");\n+        desc_str = desc_uni.get_str();\n+\n+        bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+        if (is_sp_desc) {\n+            range = {0, wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER};\n+        }\n+\n+        UniValue range_uni = find_value(scanobject, \"range\");\n+        if (!range_uni.isNull()) {\n+            range = ParseDescriptorRange(range_uni);\n+        }\n+\n+        if (is_sp_desc && range.second > wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER) {\n+            std::stringstream ss;\n+            ss << wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER;\n+\n+            throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                \"End of range is too high. The maximum allowed for silent payment descriptors is \" + ss.str());\n+        }\n+\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\n+    }\n+\n+    return {desc_str, range};\n+}\n+\n+std::vector<CScript> DescriptorToScripts(const std::string& desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CScript> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\n+        }\n+        std::move(scripts.begin(), scripts.end(), std::back_inserter(ret));\n+    }\n+    return ret;\n+}",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in de25bcf6b7d59ad8803748412825a99bdb812cf3\r\nThis code is from `std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, FlatSigningProvider& provider)`, you should re-use it.\r\n\r\n<details>\r\n<summary>Diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/rpc/util.cpp b/src/rpc/util.cpp\r\nindex 084d165da..672d3fd98 100644\r\n--- a/src/rpc/util.cpp\r\n+++ b/src/rpc/util.cpp\r\n@@ -1073,24 +1073,7 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\r\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\r\n     }\r\n \r\n-    std::string error;\r\n-    auto desc = Parse(desc_str, provider, error);\r\n-    if (!desc) {\r\n-        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\r\n-    }\r\n-    if (!desc->IsRange()) {\r\n-        range.first = 0;\r\n-        range.second = 0;\r\n-    }\r\n-    std::vector<CScript> ret;\r\n-    for (int i = range.first; i <= range.second; ++i) {\r\n-        std::vector<CScript> scripts;\r\n-        if (!desc->Expand(i, provider, scripts, provider)) {\r\n-            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\r\n-        }\r\n-        std::move(scripts.begin(), scripts.end(), std::back_inserter(ret));\r\n-    }\r\n-    return ret;\r\n+    return DescriptorToScripts(desc_str, range, provider);\r\n }\r\n \r\n std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\r\n```\r\n\r\n</details>\r\n\r\n",
      "created_at": "2022-10-11T12:47:30Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992281752",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992281752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1133,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992287719",
      "pull_request_review_id": 1137407003,
      "id": 992287719,
      "node_id": "PRRC_kwDOABII5847JRvn",
      "diff_hunk": "@@ -76,30 +95,35 @@ class DestinationEncoder\n     std::string operator()(const CNoDestination& no) const { return {}; }\n };\n \n-CTxDestination DecodeDestination(const std::string& str, const CChainParams& params, std::string& error_str, std::vector<int>* error_locations)\n+std::tuple<CTxDestination,bool,int32_t> DecodeDestination(const std::string& str, const CChainParams& params, std::string& error_str, std::vector<int>* error_locations)\n {\n     std::vector<unsigned char> data;\n     uint160 hash;\n     error_str = \"\";\n+    bool silent_payment{false};\n+\n+    const auto& silent_payment_hrp = params.SilentPaymentHRP();\n+    auto dest_silent_payment_hrp = ToLower(std::string_view(str).substr(0, params.SilentPaymentHRP().size()));\n \n     // Note this will be false if it is a valid Bech32 address for a different network\n-    bool is_bech32 = (ToLower(str.substr(0, params.Bech32HRP().size())) == params.Bech32HRP());\n+    bool is_bech32_or_sp = (ToLower(str.substr(0, params.Bech32HRP().size())) == params.Bech32HRP()) ||\n+        dest_silent_payment_hrp == silent_payment_hrp;",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in d8a8182d2d37edcff51579225123f18434204f4a\r\n```suggestion\r\n    bool is_bech32_or_sp = (ToLower(std::string_view(str).substr(0, params.Bech32HRP().size())) == params.Bech32HRP()) ||\r\n        dest_silent_payment_hrp == silent_payment_hrp;\r\n```",
      "created_at": "2022-10-11T12:52:59Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992287719",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992287719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 109,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992288336",
      "pull_request_review_id": 1137407003,
      "id": 992288336,
      "node_id": "PRRC_kwDOABII5847JR5Q",
      "diff_hunk": "@@ -1214,17 +1214,29 @@ RPCHelpMan send()\n             InterpretFeeEstimationInstructions(/*conf_target=*/request.params[1], /*estimate_mode=*/request.params[2], /*fee_rate=*/request.params[3], options);\n             PreventOutdatedOptions(options);\n \n+            std::vector<SilentTxOut> silent_payment_vouts;\n \n             CAmount fee;\n             int change_position;\n             bool rbf{options.exists(\"replaceable\") ? options[\"replaceable\"].get_bool() : pwallet->m_signal_rbf};\n-            CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf);\n+            CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf, &silent_payment_vouts);\n+\n+            if (silent_payment_vouts.size() > 0) {",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in 37bf469db8aead02e8cd8601eb1238e7d810657d\r\n```suggestion\r\n            if (!silent_payment_vouts.empty()) {\r\n```",
      "created_at": "2022-10-11T12:53:32Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992288336",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992288336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992289528",
      "pull_request_review_id": 1137407003,
      "id": 992289528,
      "node_id": "PRRC_kwDOABII5847JSL4",
      "diff_hunk": "@@ -2620,6 +2640,87 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+bool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript scriptPubKey, CKey& privKey, bool onlyTaproot)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in 3618e1635dc53021fcc1373070c9e52ebf4e2477\r\n```suggestion\r\nbool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, CKey& privKey, bool onlyTaproot)\r\n```",
      "created_at": "2022-10-11T12:54:37Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992289528",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992289528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992290706",
      "pull_request_review_id": 1137407003,
      "id": 992290706,
      "node_id": "PRRC_kwDOABII5847JSeS",
      "diff_hunk": "@@ -2620,6 +2640,87 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+bool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript scriptPubKey, CKey& privKey, bool onlyTaproot)\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return false;\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            privKey = key.second;\n+            return true;\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, privKey)) return false;\n+\n+        assert(XOnlyPubKey(privKey.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+    } else if (onlyTaproot) {\n+        return false;\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    } else {\n+        privKey = key.second;\n+    }\n+\n+    return true;\n+}\n+\n+std::vector<std::tuple<CKey, int32_t>> DescriptorScriptPubKeyMan::VerifySilentPaymentAddress(\n+    std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,\n+    XOnlyPubKey& sender_pub_key)\n+{\n+    LOCK(cs_desc_man);\n+\n+    std::vector<std::tuple<CKey, int32_t>> raw_tr_keys;\n+\n+    std::vector<CKey> priv_keys;\n+\n+    for (auto& [_, priv_key] : m_map_keys) {\n+        priv_keys.push_back(priv_key);\n+    }\n+\n+    assert(priv_keys.size() == 1);\n+\n+    CKey priv_key = priv_keys.at(0);\n+\n+    for(auto& pub_key_items : tx_output_pub_keys) {\n+\n+        CScript& outputScriptPubKey = std::get<0>(pub_key_items);\n+        XOnlyPubKey& outputPubKey = std::get<1>(pub_key_items);",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 126,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3618e1635dc53021fcc1373070c9e52ebf4e2477\r\nuse structured binding instead",
      "created_at": "2022-10-11T12:55:40Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992290706",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992290706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 2701,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2704,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992291843",
      "pull_request_review_id": 1137407003,
      "id": 992291843,
      "node_id": "PRRC_kwDOABII5847JSwD",
      "diff_hunk": "@@ -2620,6 +2640,87 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+bool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript scriptPubKey, CKey& privKey, bool onlyTaproot)\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return false;\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            privKey = key.second;\n+            return true;\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, privKey)) return false;\n+\n+        assert(XOnlyPubKey(privKey.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+    } else if (onlyTaproot) {\n+        return false;\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    } else {\n+        privKey = key.second;\n+    }\n+\n+    return true;\n+}\n+\n+std::vector<std::tuple<CKey, int32_t>> DescriptorScriptPubKeyMan::VerifySilentPaymentAddress(\n+    std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,\n+    XOnlyPubKey& sender_pub_key)\n+{\n+    LOCK(cs_desc_man);\n+\n+    std::vector<std::tuple<CKey, int32_t>> raw_tr_keys;\n+\n+    std::vector<CKey> priv_keys;\n+\n+    for (auto& [_, priv_key] : m_map_keys) {\n+        priv_keys.push_back(priv_key);\n+    }\n+\n+    assert(priv_keys.size() == 1);\n+\n+    CKey priv_key = priv_keys.at(0);\n+\n+    for(auto& pub_key_items : tx_output_pub_keys) {\n+\n+        CScript& outputScriptPubKey = std::get<0>(pub_key_items);\n+        XOnlyPubKey& outputPubKey = std::get<1>(pub_key_items);\n+\n+        silentpayment::Recipient silent_sender{silentpayment::Recipient(priv_key, sender_pub_key)};\n+\n+        for (int32_t identifier = 0; identifier <= m_wallet_descriptor.next_index; identifier++) {\n+            CKey silKey = silent_sender.Tweak(identifier);\n+            XOnlyPubKey silPubKey{XOnlyPubKey(silKey.GetPubKey())};\n+\n+            if (silPubKey == outputPubKey) {\n+                raw_tr_keys.push_back({silKey, identifier});",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3618e1635dc53021fcc1373070c9e52ebf4e2477\r\nthis avoids creating a temporary\r\n```suggestion\r\n                raw_tr_keys.emplace_back({silKey, identifier});\r\n```",
      "created_at": "2022-10-11T12:56:43Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992291843",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992291843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2713,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992293148",
      "pull_request_review_id": 1137407003,
      "id": 992293148,
      "node_id": "PRRC_kwDOABII5847JTEc",
      "diff_hunk": "@@ -0,0 +1,209 @@\n+#include <wallet/silentpayment.h>\n+\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const CKey sender_secret_key, const XOnlyPubKey recipient_x_only_public_key)",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in 60537b92b0f27cab91fbb61da0d195197146bff6\r\n```suggestion\r\nSender::Sender(const CKey& sender_secret_key, const XOnlyPubKey& recipient_x_only_public_key)\r\n```",
      "created_at": "2022-10-11T12:57:54Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992293148",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992293148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992298635",
      "pull_request_review_id": 1137407003,
      "id": 992298635,
      "node_id": "PRRC_kwDOABII5847JUaL",
      "diff_hunk": "@@ -0,0 +1,209 @@\n+#include <wallet/silentpayment.h>\n+\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const CKey sender_secret_key, const XOnlyPubKey recipient_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    // Parse the recipient's XOnlyPubKey to secp256k1_xonly_pubkey\n+    int return_val = secp256k1_xonly_pubkey_parse(m_context, &m_recipient_x_only_public_key, recipient_x_only_public_key.data());\n+    assert(return_val);\n+\n+    // Create the shared secret using the recipient's x-only pubkey and the sender' secret key\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &m_recipient_x_only_public_key, sender_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak(const int32_t& identifier)\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    assert(memcmp(shared_secret, m_shared_secret, 32) == 0);\n+\n+    // Add the identifier to the shared_secret\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    int return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "60537b92b0f27cab91fbb61da0d195197146bff6\r\n\r\n`return_val` should be asserted\r\n",
      "created_at": "2022-10-11T13:02:47Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992298635",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992298635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992299985",
      "pull_request_review_id": 1137407003,
      "id": 992299985,
      "node_id": "PRRC_kwDOABII5847JUvR",
      "diff_hunk": "@@ -1096,70 +1133,296 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n-bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n {\n-    const CTransaction& tx = *ptx;\n-    {\n-        AssertLockHeld(cs_wallet);\n-\n-        if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n-            for (const CTxIn& txin : tx.vin) {\n-                std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n-                while (range.first != range.second) {\n-                    if (range.first->second != tx.GetHash()) {\n-                        WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n-                        MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n-                    }\n-                    range.first++;\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n                 }\n             }\n         }\n+    }\n \n-        bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n-        if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n+    for(auto& identifier_key: rawTrKeys) {\n+\n+        CKey key = std::get<0>(identifier_key);\n+        int32_t identifier = std::get<1>(identifier_key);\n+\n+        std::string desc = \"rawtr(\" + EncodeSecret(key) + \")\";\n+        std::string checksum = GetDescriptorChecksum(desc);\n+\n+        auto timestamp = std::chrono::duration_cast<std::chrono::microseconds>(\n+            std::chrono::system_clock::now().time_since_epoch()).count();\n+\n+        std::string desc_check = desc + \"#\" + checksum;\n+\n+        FlatSigningProvider keys;\n+        std::string error;\n+        auto parsed_desc = Parse(desc_check, keys, error, /* require_checksum = */ true);\n+        assert(parsed_desc);\n+\n+        int64_t range_start = 0, range_end = 1, next_index = 0;\n+\n+        // Need to ExpandPrivate to check if private keys are available for all pubkeys\n+        FlatSigningProvider expand_keys;\n+        std::vector<CScript> scripts;\n+        assert(parsed_desc->Expand(0, keys, scripts, expand_keys));\n+        parsed_desc->ExpandPrivate(0, keys, expand_keys);\n+\n+        WalletDescriptor w_desc(std::move(parsed_desc), timestamp, range_start, range_end, next_index);\n+\n+        std::string label;\n+\n+        if (m_silent_address_book.count(identifier)) {\n+            auto entry = m_silent_address_book[identifier];\n+            label = entry.m_label;\n+        } else {\n+            std::stringstream ss;\n+            ss << identifier;\n+            label = ss.str();\n+        }\n+\n+        auto existing_spk_manager = GetDescriptorScriptPubKeyMan(w_desc);\n+        if (!existing_spk_manager) {\n+            auto spk_manager = AddWalletDescriptor(w_desc, keys, label, false);\n+            assert(spk_manager != nullptr);\n+        }\n+    }\n+\n+    return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+}\n+\n+bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+{\n+    const CTransaction& tx = *ptx;\n+\n+    AssertLockHeld(cs_wallet);\n+\n+    std::vector<std::tuple<CKey, int32_t>> rawTrKeys;\n+\n+    if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n+        for (const CTxIn& txin : tx.vin) {\n+            std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n+            while (range.first != range.second) {\n+                if (range.first->second != tx.GetHash()) {\n+                    WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n+                    MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n                 }\n+                range.first++;\n             }\n+        }\n+    }\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n-            if (!wtx) {\n-                // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n-                // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n-                throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n-            }\n-            return true;\n+    bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n+    if (fExisted && !fUpdate) return false;\n+\n+    bool ret = (fExisted || IsMine(tx) || IsFromMe(tx)) ? HandleNewTxBelongingToMe(tx, state, rescanning_old_block) : false;\n+    if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys)) {\n+        ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n+    }\n+    return ret;\n+}\n+\n+bool CWallet::ExtractPubkeyFromInput(const CTxIn& txin, XOnlyPubKey& senderPubKey)\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];\n+    chain().findCoins(coins);\n+\n+    auto pos = coins.find(txin.prevout);\n+\n+    Coin coin = pos->second;\n+\n+    // TODO: can more than one txin.prevout be in the mempool (RBF) ?\n+    pos++;\n+    assert( pos == coins.end() );\n+\n+    if (coin.out.IsNull()) {\n+        return false;\n+    }\n+\n+    // scriptPubKey being spent by this input\n+    CScript scriptPubKey = coin.out.scriptPubKey;\n+\n+    if (scriptPubKey.IsPayToWitnessScriptHash()) {\n+        return false;\n+    }\n+\n+    // Vector of parsed pubkeys and hashes\n+    std::vector<std::vector<unsigned char>> solutions;\n+\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    if (whichType == TxoutType::NONSTANDARD ||\n+    whichType == TxoutType::MULTISIG ||\n+    whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    }\n+\n+    const CScript scriptSig = txin.scriptSig;\n+    const CScriptWitness scriptWitness = txin.scriptWitness;\n+\n+    assert(senderPubKey.IsNull());\n+\n+    // TODO: Condition not tested\n+    if (whichType == TxoutType::PUBKEY) {\n+\n+        CPubKey pubkey = CPubKey(solutions[0]);\n+        assert(pubkey.IsFullyValid());\n+        senderPubKey = XOnlyPubKey(pubkey);\n+\n+    }\n+\n+    else if (whichType == TxoutType::PUBKEYHASH) {\n+\n+        int sigSize = static_cast<int>(scriptSig[0]);\n+        int pubKeySize = static_cast<int>(scriptSig[sigSize + 1]);\n+        auto serializedPubKey = std::vector<unsigned char>(scriptSig.begin() + sigSize + 2, scriptSig.end());\n+        assert(serializedPubKey.size() == (size_t) pubKeySize);\n+\n+        CPubKey pubkey = CPubKey(serializedPubKey);\n+        assert(pubkey.IsFullyValid());\n+\n+        senderPubKey = XOnlyPubKey(pubkey);\n+\n+    }\n+\n+    else if (whichType == TxoutType::WITNESS_V0_KEYHASH || scriptPubKey.IsPayToScriptHash()) {\n+        if (scriptWitness.stack.size() != 2) return false;\n+        assert(scriptWitness.stack.at(1).size() == 33);\n+\n+        CPubKey pubkey = CPubKey(scriptWitness.stack.at(1));\n+        assert(pubkey.IsFullyValid());\n+\n+        senderPubKey = XOnlyPubKey(pubkey);\n+    }\n+\n+    else if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+\n+        senderPubKey = XOnlyPubKey(solutions[0]);\n+        assert(senderPubKey.IsFullyValid());\n+    }\n+\n+    CTxDestination address;\n+    ExtractDestination(scriptPubKey, address);\n+\n+    return true;\n+}\n+\n+bool CWallet::VerifySilentPayment(const CTransaction& tx, std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    if (tx.IsCoinBase() || tx.vin.empty()) return false;\n+\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) return false;\n+\n+    std::vector<std::tuple<CScript, XOnlyPubKey>> outputPubKeys;\n+\n+    for (auto& vout : tx.vout) {\n+\n+        if (IsMine(vout)) {\n+            continue;\n         }\n+\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+\n+        // Silent Payments require that the recipients use Taproot address\n+        if (whichType != TxoutType::WITNESS_V1_TAPROOT) {\n+            continue;\n+        }\n+\n+        auto xOnlyPubKey = XOnlyPubKey(solutions[0]);\n+\n+        assert(xOnlyPubKey.IsFullyValid());\n+\n+        outputPubKeys.emplace_back(vout.scriptPubKey, xOnlyPubKey);\n     }\n-    return false;\n+\n+    if (outputPubKeys.empty()) {\n+        return false;\n+    }\n+\n+    std::vector<XOnlyPubKey> sender_pubkeys;\n+\n+    for (const CTxIn& txin : tx.vin) {\n+        auto senderPubKey = XOnlyPubKey();\n+\n+        if (!ExtractPubkeyFromInput(txin, senderPubKey)) {\n+            continue;\n+        }\n+\n+        assert(senderPubKey.IsFullyValid());\n+\n+        sender_pubkeys.push_back(senderPubKey);\n+    }\n+\n+    XOnlyPubKey sum_sender_pubkeys;\n+\n+    if (sender_pubkeys.empty() || sender_pubkeys.size() != tx.vin.size()) {\n+        if (!m_chain->getSilentTransactionFirstInputPubKey(tx.GetHash(), sum_sender_pubkeys)) {\n+            return false;\n+        }\n+    } else {\n+        sum_sender_pubkeys = silentpayment::Recipient::SumXOnlyPublicKeys(sender_pubkeys);\n+    }\n+\n+    for (ScriptPubKeyMan* spkm : GetActiveScriptPubKeyMans()) {\n+        DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+\n+        std::string desc_str;\n+        bool res_get_desc = desc_spkm->GetDescriptorString(desc_str, false);\n+\n+        // There must be only one SP descriptor\n+        if (res_get_desc && desc_str.rfind(\"sp(\", 0) != 0) {\n+            continue;\n+        }\n+\n+        rawTrKeys = desc_spkm->VerifySilentPaymentAddress(outputPubKeys, sum_sender_pubkeys);\n+    }\n+\n+    return rawTrKeys.size() > 0;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 421,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "47cc799b9518c13d96fde5a7de050b8a0cd41e4c\r\n```suggestion\r\n    return !rawTrKeys.empty();\r\n```",
      "created_at": "2022-10-11T13:03:59Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992299985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992299985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1425,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992302969",
      "pull_request_review_id": 1137407003,
      "id": 992302969,
      "node_id": "PRRC_kwDOABII5847JVd5",
      "diff_hunk": "@@ -0,0 +1,209 @@\n+#include <wallet/silentpayment.h>\n+\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const CKey sender_secret_key, const XOnlyPubKey recipient_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    // Parse the recipient's XOnlyPubKey to secp256k1_xonly_pubkey\n+    int return_val = secp256k1_xonly_pubkey_parse(m_context, &m_recipient_x_only_public_key, recipient_x_only_public_key.data());\n+    assert(return_val);\n+\n+    // Create the shared secret using the recipient's x-only pubkey and the sender' secret key\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &m_recipient_x_only_public_key, sender_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak(const int32_t& identifier)\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    assert(memcmp(shared_secret, m_shared_secret, 32) == 0);\n+\n+    // Add the identifier to the shared_secret\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    int return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+\n+    // Tweak the recipient's x-only pubkey with identifier + shared_secret\n+    secp256k1_pubkey output_pubkey;\n+\n+    return_val = secp256k1_xonly_pubkey_tweak_add(m_context, &output_pubkey, &m_recipient_x_only_public_key, shared_secret);\n+    assert(return_val);\n+\n+    // Serialize and test the tweaked public key\n+    size_t len;\n+    unsigned char sender_serialized_output_pubkey[33];\n+    len = sizeof(sender_serialized_output_pubkey);\n+    return_val = secp256k1_ec_pubkey_serialize(m_context, sender_serialized_output_pubkey, &len, &output_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CPubKey pubKey = CPubKey(sender_serialized_output_pubkey);\n+\n+    assert(pubKey.IsFullyValid());\n+\n+    return XOnlyPubKey(pubKey);\n+}\n+\n+CKey Sender::SumPrivateKeys(const std::vector<CKey>& sender_secret_keys)\n+{\n+    auto context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    assert(!sender_secret_keys.empty());\n+\n+    const auto& first_seckey{sender_secret_keys.at(0)};\n+\n+    unsigned char seckey[32];\n+    memcpy(seckey, first_seckey.data(), 32);\n+    assert(memcmp(seckey, first_seckey.data(), 32) == 0);\n+\n+    if (first_seckey.GetPubKey()[0] == 3) {\n+        int return_val = secp256k1_ec_seckey_negate(context, seckey);\n+        assert(return_val);\n+    }\n+\n+    if (sender_secret_keys.size() > 1) {\n+        for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+\n+            const auto& sender_seckey{sender_secret_keys.at(i)};\n+\n+            unsigned char seckey_i[32];\n+            memcpy(seckey_i, sender_seckey.begin(), 32);\n+            assert(memcmp(seckey_i, sender_seckey.begin(), 32) == 0);\n+\n+            if (sender_seckey.GetPubKey()[0] == 3) {\n+                int return_val = secp256k1_ec_seckey_negate(context, seckey_i);\n+                assert(return_val);\n+            }\n+\n+            int return_val = secp256k1_ec_seckey_tweak_add(context, seckey, seckey_i);\n+            assert(return_val);\n+        }\n+    }\n+\n+\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(seckey), std::end(seckey), true);\n+\n+    secp256k1_context_destroy(context);\n+    memset(seckey, 0, sizeof(seckey));\n+\n+    return ckey;\n+}\n+\n+Recipient::Recipient(const CKey& recipient_secret_key, const XOnlyPubKey& sender_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    int return_val = secp256k1_keypair_create(m_context, &m_recipient_keypair, recipient_secret_key.begin());\n+    assert(return_val);\n+\n+    secp256k1_xonly_pubkey parsed_sender_x_only_public_key;\n+    return_val = secp256k1_xonly_pubkey_parse(m_context, &parsed_sender_x_only_public_key, sender_x_only_public_key.data());\n+    assert(return_val);\n+\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &parsed_sender_x_only_public_key, recipient_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_seckey_verify(secp256k1_context_no_precomp, m_shared_secret);\n+    assert(return_val);\n+}\n+\n+Recipient::~Recipient()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_keypair.data, 0, sizeof(m_recipient_keypair.data));\n+}\n+\n+CKey Recipient::Tweak(const int32_t& identifier)",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "60537b92b0f27cab91fbb61da0d195197146bff6\r\nI believe this can be made `const`",
      "created_at": "2022-10-11T13:06:39Z",
      "updated_at": "2022-10-11T13:29:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992302969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992302969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877199",
      "pull_request_review_id": 1138290329,
      "id": 992877199,
      "node_id": "PRRC_kwDOABII5847LhqP",
      "diff_hunk": "@@ -0,0 +1,229 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <wallet/silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, keydata] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), keydata);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::ExtractPubkeyFromInput(const Coin& prevCoin, const CTxIn& txin,  XOnlyPubKey& senderPubKey) const",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992270270,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/301481648aa20f8a8ebd7d868a1a63300cb6ab3e.",
      "created_at": "2022-10-12T00:26:29Z",
      "updated_at": "2022-10-12T00:26:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992877199",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877381",
      "pull_request_review_id": 1138290514,
      "id": 992877381,
      "node_id": "PRRC_kwDOABII5847LhtF",
      "diff_hunk": "@@ -1092,6 +1093,87 @@ std::vector<CScript> EvalDescriptorStringOrObject(const UniValue& scanobject, Fl\n     return ret;\n }\n \n+std::tuple<std::string, std::pair<int64_t, int64_t>> EvalDescriptorStringOrObject(const UniValue& scanobject)\n+{\n+    std::string desc_str;\n+    std::pair<int64_t, int64_t> range = {0, 1000};\n+    if (scanobject.isStr()) {\n+        desc_str = scanobject.get_str();\n+    } else if (scanobject.isObject()) {\n+        UniValue desc_uni = find_value(scanobject, \"desc\");\n+        if (desc_uni.isNull()) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Descriptor needs to be provided in scan object\");\n+        desc_str = desc_uni.get_str();\n+\n+        bool is_sp_desc = (desc_str.rfind(\"sp(\", 0) == 0);\n+\n+        if (is_sp_desc) {\n+            range = {0, wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER};\n+        }\n+\n+        UniValue range_uni = find_value(scanobject, \"range\");\n+        if (!range_uni.isNull()) {\n+            range = ParseDescriptorRange(range_uni);\n+        }\n+\n+        if (is_sp_desc && range.second > wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER) {\n+            std::stringstream ss;\n+            ss << wallet::SILENT_ADDRESS_MAXIMUM_IDENTIFIER;\n+\n+            throw JSONRPCError(RPC_INVALID_PARAMETER,\n+                \"End of range is too high. The maximum allowed for silent payment descriptors is \" + ss.str());\n+        }\n+\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Scan object needs to be either a string or an object\");\n+    }\n+\n+    return {desc_str, range};\n+}\n+\n+std::vector<CScript> DescriptorToScripts(const std::string& desc_str, std::pair<int64_t, int64_t> range, FlatSigningProvider& provider)\n+{\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+    if (!desc) {\n+        throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, error);\n+    }\n+    if (!desc->IsRange()) {\n+        range.first = 0;\n+        range.second = 0;\n+    }\n+    std::vector<CScript> ret;\n+    for (int i = range.first; i <= range.second; ++i) {\n+        std::vector<CScript> scripts;\n+        if (!desc->Expand(i, provider, scripts, provider)) {\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Cannot derive script without private keys: '%s'\", desc_str));\n+        }\n+        std::move(scripts.begin(), scripts.end(), std::back_inserter(ret));\n+    }\n+    return ret;\n+}",
      "path": "src/rpc/util.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992281752,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/eeb7942bb2c41beb063fcbaa7d36cfd02de7ea04.",
      "created_at": "2022-10-12T00:26:51Z",
      "updated_at": "2022-10-12T00:26:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992877381",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1133,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877487",
      "pull_request_review_id": 1138290677,
      "id": 992877487,
      "node_id": "PRRC_kwDOABII5847Lhuv",
      "diff_hunk": "@@ -76,30 +95,35 @@ class DestinationEncoder\n     std::string operator()(const CNoDestination& no) const { return {}; }\n };\n \n-CTxDestination DecodeDestination(const std::string& str, const CChainParams& params, std::string& error_str, std::vector<int>* error_locations)\n+std::tuple<CTxDestination,bool,int32_t> DecodeDestination(const std::string& str, const CChainParams& params, std::string& error_str, std::vector<int>* error_locations)\n {\n     std::vector<unsigned char> data;\n     uint160 hash;\n     error_str = \"\";\n+    bool silent_payment{false};\n+\n+    const auto& silent_payment_hrp = params.SilentPaymentHRP();\n+    auto dest_silent_payment_hrp = ToLower(std::string_view(str).substr(0, params.SilentPaymentHRP().size()));\n \n     // Note this will be false if it is a valid Bech32 address for a different network\n-    bool is_bech32 = (ToLower(str.substr(0, params.Bech32HRP().size())) == params.Bech32HRP());\n+    bool is_bech32_or_sp = (ToLower(str.substr(0, params.Bech32HRP().size())) == params.Bech32HRP()) ||\n+        dest_silent_payment_hrp == silent_payment_hrp;",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992287719,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/2aa1a6957296f06e1215256a9c20c37f4b4e6273.",
      "created_at": "2022-10-12T00:27:13Z",
      "updated_at": "2022-10-12T00:27:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992877487",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 109,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877604",
      "pull_request_review_id": 1138290832,
      "id": 992877604,
      "node_id": "PRRC_kwDOABII5847Lhwk",
      "diff_hunk": "@@ -1214,17 +1214,29 @@ RPCHelpMan send()\n             InterpretFeeEstimationInstructions(/*conf_target=*/request.params[1], /*estimate_mode=*/request.params[2], /*fee_rate=*/request.params[3], options);\n             PreventOutdatedOptions(options);\n \n+            std::vector<SilentTxOut> silent_payment_vouts;\n \n             CAmount fee;\n             int change_position;\n             bool rbf{options.exists(\"replaceable\") ? options[\"replaceable\"].get_bool() : pwallet->m_signal_rbf};\n-            CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf);\n+            CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf, &silent_payment_vouts);\n+\n+            if (silent_payment_vouts.size() > 0) {",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 30,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992288336,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/486317926ed7ca47374ea802022dbdde17af0100.",
      "created_at": "2022-10-12T00:27:35Z",
      "updated_at": "2022-10-12T00:27:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992877604",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877604"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877736",
      "pull_request_review_id": 1138291007,
      "id": 992877736,
      "node_id": "PRRC_kwDOABII5847Lhyo",
      "diff_hunk": "@@ -2620,6 +2640,87 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+bool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript scriptPubKey, CKey& privKey, bool onlyTaproot)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992289528,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/c3e3002cf9b70f8b54f5e344277ad0864c555f5c.",
      "created_at": "2022-10-12T00:27:56Z",
      "updated_at": "2022-10-12T00:27:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992877736",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877736"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877821",
      "pull_request_review_id": 1138291125,
      "id": 992877821,
      "node_id": "PRRC_kwDOABII5847Lhz9",
      "diff_hunk": "@@ -2620,6 +2640,87 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+bool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript scriptPubKey, CKey& privKey, bool onlyTaproot)\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return false;\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            privKey = key.second;\n+            return true;\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, privKey)) return false;\n+\n+        assert(XOnlyPubKey(privKey.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+    } else if (onlyTaproot) {\n+        return false;\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    } else {\n+        privKey = key.second;\n+    }\n+\n+    return true;\n+}\n+\n+std::vector<std::tuple<CKey, int32_t>> DescriptorScriptPubKeyMan::VerifySilentPaymentAddress(\n+    std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,\n+    XOnlyPubKey& sender_pub_key)\n+{\n+    LOCK(cs_desc_man);\n+\n+    std::vector<std::tuple<CKey, int32_t>> raw_tr_keys;\n+\n+    std::vector<CKey> priv_keys;\n+\n+    for (auto& [_, priv_key] : m_map_keys) {\n+        priv_keys.push_back(priv_key);\n+    }\n+\n+    assert(priv_keys.size() == 1);\n+\n+    CKey priv_key = priv_keys.at(0);\n+\n+    for(auto& pub_key_items : tx_output_pub_keys) {\n+\n+        CScript& outputScriptPubKey = std::get<0>(pub_key_items);\n+        XOnlyPubKey& outputPubKey = std::get<1>(pub_key_items);",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 126,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992290706,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/c3e3002cf9b70f8b54f5e344277ad0864c555f5c.",
      "created_at": "2022-10-12T00:28:12Z",
      "updated_at": "2022-10-12T00:28:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992877821",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 2701,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2704,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877916",
      "pull_request_review_id": 1138291249,
      "id": 992877916,
      "node_id": "PRRC_kwDOABII5847Lh1c",
      "diff_hunk": "@@ -2620,6 +2640,87 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+bool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript scriptPubKey, CKey& privKey, bool onlyTaproot)\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return false;\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            privKey = key.second;\n+            return true;\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, privKey)) return false;\n+\n+        assert(XOnlyPubKey(privKey.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+    } else if (onlyTaproot) {\n+        return false;\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    } else {\n+        privKey = key.second;\n+    }\n+\n+    return true;\n+}\n+\n+std::vector<std::tuple<CKey, int32_t>> DescriptorScriptPubKeyMan::VerifySilentPaymentAddress(\n+    std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,\n+    XOnlyPubKey& sender_pub_key)\n+{\n+    LOCK(cs_desc_man);\n+\n+    std::vector<std::tuple<CKey, int32_t>> raw_tr_keys;\n+\n+    std::vector<CKey> priv_keys;\n+\n+    for (auto& [_, priv_key] : m_map_keys) {\n+        priv_keys.push_back(priv_key);\n+    }\n+\n+    assert(priv_keys.size() == 1);\n+\n+    CKey priv_key = priv_keys.at(0);\n+\n+    for(auto& pub_key_items : tx_output_pub_keys) {\n+\n+        CScript& outputScriptPubKey = std::get<0>(pub_key_items);\n+        XOnlyPubKey& outputPubKey = std::get<1>(pub_key_items);\n+\n+        silentpayment::Recipient silent_sender{silentpayment::Recipient(priv_key, sender_pub_key)};\n+\n+        for (int32_t identifier = 0; identifier <= m_wallet_descriptor.next_index; identifier++) {\n+            CKey silKey = silent_sender.Tweak(identifier);\n+            XOnlyPubKey silPubKey{XOnlyPubKey(silKey.GetPubKey())};\n+\n+            if (silPubKey == outputPubKey) {\n+                raw_tr_keys.push_back({silKey, identifier});",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992291843,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/c3e3002cf9b70f8b54f5e344277ad0864c555f5c.",
      "created_at": "2022-10-12T00:28:28Z",
      "updated_at": "2022-10-12T00:28:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992877916",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992877916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2713,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992878015",
      "pull_request_review_id": 1138291414,
      "id": 992878015,
      "node_id": "PRRC_kwDOABII5847Lh2_",
      "diff_hunk": "@@ -0,0 +1,209 @@\n+#include <wallet/silentpayment.h>\n+\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const CKey sender_secret_key, const XOnlyPubKey recipient_x_only_public_key)",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992293148,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/fb014fefff60d87cf21f220fa756aa449bd6daf4.",
      "created_at": "2022-10-12T00:28:47Z",
      "updated_at": "2022-10-12T00:28:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992878015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992878015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 11,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992878068",
      "pull_request_review_id": 1138291489,
      "id": 992878068,
      "node_id": "PRRC_kwDOABII5847Lh30",
      "diff_hunk": "@@ -0,0 +1,209 @@\n+#include <wallet/silentpayment.h>\n+\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const CKey sender_secret_key, const XOnlyPubKey recipient_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    // Parse the recipient's XOnlyPubKey to secp256k1_xonly_pubkey\n+    int return_val = secp256k1_xonly_pubkey_parse(m_context, &m_recipient_x_only_public_key, recipient_x_only_public_key.data());\n+    assert(return_val);\n+\n+    // Create the shared secret using the recipient's x-only pubkey and the sender' secret key\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &m_recipient_x_only_public_key, sender_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak(const int32_t& identifier)\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    assert(memcmp(shared_secret, m_shared_secret, 32) == 0);\n+\n+    // Add the identifier to the shared_secret\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    int return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992298635,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/fb014fefff60d87cf21f220fa756aa449bd6daf4.",
      "created_at": "2022-10-12T00:28:58Z",
      "updated_at": "2022-10-12T00:28:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992878068",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992878068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992878159",
      "pull_request_review_id": 1138291614,
      "id": 992878159,
      "node_id": "PRRC_kwDOABII5847Lh5P",
      "diff_hunk": "@@ -1096,70 +1133,296 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n-bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n {\n-    const CTransaction& tx = *ptx;\n-    {\n-        AssertLockHeld(cs_wallet);\n-\n-        if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n-            for (const CTxIn& txin : tx.vin) {\n-                std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n-                while (range.first != range.second) {\n-                    if (range.first->second != tx.GetHash()) {\n-                        WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n-                        MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n-                    }\n-                    range.first++;\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n                 }\n             }\n         }\n+    }\n \n-        bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n-        if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n+    for(auto& identifier_key: rawTrKeys) {\n+\n+        CKey key = std::get<0>(identifier_key);\n+        int32_t identifier = std::get<1>(identifier_key);\n+\n+        std::string desc = \"rawtr(\" + EncodeSecret(key) + \")\";\n+        std::string checksum = GetDescriptorChecksum(desc);\n+\n+        auto timestamp = std::chrono::duration_cast<std::chrono::microseconds>(\n+            std::chrono::system_clock::now().time_since_epoch()).count();\n+\n+        std::string desc_check = desc + \"#\" + checksum;\n+\n+        FlatSigningProvider keys;\n+        std::string error;\n+        auto parsed_desc = Parse(desc_check, keys, error, /* require_checksum = */ true);\n+        assert(parsed_desc);\n+\n+        int64_t range_start = 0, range_end = 1, next_index = 0;\n+\n+        // Need to ExpandPrivate to check if private keys are available for all pubkeys\n+        FlatSigningProvider expand_keys;\n+        std::vector<CScript> scripts;\n+        assert(parsed_desc->Expand(0, keys, scripts, expand_keys));\n+        parsed_desc->ExpandPrivate(0, keys, expand_keys);\n+\n+        WalletDescriptor w_desc(std::move(parsed_desc), timestamp, range_start, range_end, next_index);\n+\n+        std::string label;\n+\n+        if (m_silent_address_book.count(identifier)) {\n+            auto entry = m_silent_address_book[identifier];\n+            label = entry.m_label;\n+        } else {\n+            std::stringstream ss;\n+            ss << identifier;\n+            label = ss.str();\n+        }\n+\n+        auto existing_spk_manager = GetDescriptorScriptPubKeyMan(w_desc);\n+        if (!existing_spk_manager) {\n+            auto spk_manager = AddWalletDescriptor(w_desc, keys, label, false);\n+            assert(spk_manager != nullptr);\n+        }\n+    }\n+\n+    return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+}\n+\n+bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+{\n+    const CTransaction& tx = *ptx;\n+\n+    AssertLockHeld(cs_wallet);\n+\n+    std::vector<std::tuple<CKey, int32_t>> rawTrKeys;\n+\n+    if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n+        for (const CTxIn& txin : tx.vin) {\n+            std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n+            while (range.first != range.second) {\n+                if (range.first->second != tx.GetHash()) {\n+                    WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n+                    MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n                 }\n+                range.first++;\n             }\n+        }\n+    }\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n-            if (!wtx) {\n-                // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n-                // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n-                throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n-            }\n-            return true;\n+    bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n+    if (fExisted && !fUpdate) return false;\n+\n+    bool ret = (fExisted || IsMine(tx) || IsFromMe(tx)) ? HandleNewTxBelongingToMe(tx, state, rescanning_old_block) : false;\n+    if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys)) {\n+        ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n+    }\n+    return ret;\n+}\n+\n+bool CWallet::ExtractPubkeyFromInput(const CTxIn& txin, XOnlyPubKey& senderPubKey)\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];\n+    chain().findCoins(coins);\n+\n+    auto pos = coins.find(txin.prevout);\n+\n+    Coin coin = pos->second;\n+\n+    // TODO: can more than one txin.prevout be in the mempool (RBF) ?\n+    pos++;\n+    assert( pos == coins.end() );\n+\n+    if (coin.out.IsNull()) {\n+        return false;\n+    }\n+\n+    // scriptPubKey being spent by this input\n+    CScript scriptPubKey = coin.out.scriptPubKey;\n+\n+    if (scriptPubKey.IsPayToWitnessScriptHash()) {\n+        return false;\n+    }\n+\n+    // Vector of parsed pubkeys and hashes\n+    std::vector<std::vector<unsigned char>> solutions;\n+\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    if (whichType == TxoutType::NONSTANDARD ||\n+    whichType == TxoutType::MULTISIG ||\n+    whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    }\n+\n+    const CScript scriptSig = txin.scriptSig;\n+    const CScriptWitness scriptWitness = txin.scriptWitness;\n+\n+    assert(senderPubKey.IsNull());\n+\n+    // TODO: Condition not tested\n+    if (whichType == TxoutType::PUBKEY) {\n+\n+        CPubKey pubkey = CPubKey(solutions[0]);\n+        assert(pubkey.IsFullyValid());\n+        senderPubKey = XOnlyPubKey(pubkey);\n+\n+    }\n+\n+    else if (whichType == TxoutType::PUBKEYHASH) {\n+\n+        int sigSize = static_cast<int>(scriptSig[0]);\n+        int pubKeySize = static_cast<int>(scriptSig[sigSize + 1]);\n+        auto serializedPubKey = std::vector<unsigned char>(scriptSig.begin() + sigSize + 2, scriptSig.end());\n+        assert(serializedPubKey.size() == (size_t) pubKeySize);\n+\n+        CPubKey pubkey = CPubKey(serializedPubKey);\n+        assert(pubkey.IsFullyValid());\n+\n+        senderPubKey = XOnlyPubKey(pubkey);\n+\n+    }\n+\n+    else if (whichType == TxoutType::WITNESS_V0_KEYHASH || scriptPubKey.IsPayToScriptHash()) {\n+        if (scriptWitness.stack.size() != 2) return false;\n+        assert(scriptWitness.stack.at(1).size() == 33);\n+\n+        CPubKey pubkey = CPubKey(scriptWitness.stack.at(1));\n+        assert(pubkey.IsFullyValid());\n+\n+        senderPubKey = XOnlyPubKey(pubkey);\n+    }\n+\n+    else if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+\n+        senderPubKey = XOnlyPubKey(solutions[0]);\n+        assert(senderPubKey.IsFullyValid());\n+    }\n+\n+    CTxDestination address;\n+    ExtractDestination(scriptPubKey, address);\n+\n+    return true;\n+}\n+\n+bool CWallet::VerifySilentPayment(const CTransaction& tx, std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    if (tx.IsCoinBase() || tx.vin.empty()) return false;\n+\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) return false;\n+\n+    std::vector<std::tuple<CScript, XOnlyPubKey>> outputPubKeys;\n+\n+    for (auto& vout : tx.vout) {\n+\n+        if (IsMine(vout)) {\n+            continue;\n         }\n+\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+\n+        // Silent Payments require that the recipients use Taproot address\n+        if (whichType != TxoutType::WITNESS_V1_TAPROOT) {\n+            continue;\n+        }\n+\n+        auto xOnlyPubKey = XOnlyPubKey(solutions[0]);\n+\n+        assert(xOnlyPubKey.IsFullyValid());\n+\n+        outputPubKeys.emplace_back(vout.scriptPubKey, xOnlyPubKey);\n     }\n-    return false;\n+\n+    if (outputPubKeys.empty()) {\n+        return false;\n+    }\n+\n+    std::vector<XOnlyPubKey> sender_pubkeys;\n+\n+    for (const CTxIn& txin : tx.vin) {\n+        auto senderPubKey = XOnlyPubKey();\n+\n+        if (!ExtractPubkeyFromInput(txin, senderPubKey)) {\n+            continue;\n+        }\n+\n+        assert(senderPubKey.IsFullyValid());\n+\n+        sender_pubkeys.push_back(senderPubKey);\n+    }\n+\n+    XOnlyPubKey sum_sender_pubkeys;\n+\n+    if (sender_pubkeys.empty() || sender_pubkeys.size() != tx.vin.size()) {\n+        if (!m_chain->getSilentTransactionFirstInputPubKey(tx.GetHash(), sum_sender_pubkeys)) {\n+            return false;\n+        }\n+    } else {\n+        sum_sender_pubkeys = silentpayment::Recipient::SumXOnlyPublicKeys(sender_pubkeys);\n+    }\n+\n+    for (ScriptPubKeyMan* spkm : GetActiveScriptPubKeyMans()) {\n+        DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+\n+        std::string desc_str;\n+        bool res_get_desc = desc_spkm->GetDescriptorString(desc_str, false);\n+\n+        // There must be only one SP descriptor\n+        if (res_get_desc && desc_str.rfind(\"sp(\", 0) != 0) {\n+            continue;\n+        }\n+\n+        rawTrKeys = desc_spkm->VerifySilentPaymentAddress(outputPubKeys, sum_sender_pubkeys);\n+    }\n+\n+    return rawTrKeys.size() > 0;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 421,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992299985,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/pull/24897/commits/43503e2ae6a462472f8ede023d6682cff99dd60d.",
      "created_at": "2022-10-12T00:29:16Z",
      "updated_at": "2022-10-12T00:29:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992878159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992878159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1425,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992878244",
      "pull_request_review_id": 1138291721,
      "id": 992878244,
      "node_id": "PRRC_kwDOABII5847Lh6k",
      "diff_hunk": "@@ -0,0 +1,209 @@\n+#include <wallet/silentpayment.h>\n+\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const CKey sender_secret_key, const XOnlyPubKey recipient_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    // Parse the recipient's XOnlyPubKey to secp256k1_xonly_pubkey\n+    int return_val = secp256k1_xonly_pubkey_parse(m_context, &m_recipient_x_only_public_key, recipient_x_only_public_key.data());\n+    assert(return_val);\n+\n+    // Create the shared secret using the recipient's x-only pubkey and the sender' secret key\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &m_recipient_x_only_public_key, sender_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak(const int32_t& identifier)\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    assert(memcmp(shared_secret, m_shared_secret, 32) == 0);\n+\n+    // Add the identifier to the shared_secret\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    int return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+\n+    // Tweak the recipient's x-only pubkey with identifier + shared_secret\n+    secp256k1_pubkey output_pubkey;\n+\n+    return_val = secp256k1_xonly_pubkey_tweak_add(m_context, &output_pubkey, &m_recipient_x_only_public_key, shared_secret);\n+    assert(return_val);\n+\n+    // Serialize and test the tweaked public key\n+    size_t len;\n+    unsigned char sender_serialized_output_pubkey[33];\n+    len = sizeof(sender_serialized_output_pubkey);\n+    return_val = secp256k1_ec_pubkey_serialize(m_context, sender_serialized_output_pubkey, &len, &output_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CPubKey pubKey = CPubKey(sender_serialized_output_pubkey);\n+\n+    assert(pubKey.IsFullyValid());\n+\n+    return XOnlyPubKey(pubKey);\n+}\n+\n+CKey Sender::SumPrivateKeys(const std::vector<CKey>& sender_secret_keys)\n+{\n+    auto context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    assert(!sender_secret_keys.empty());\n+\n+    const auto& first_seckey{sender_secret_keys.at(0)};\n+\n+    unsigned char seckey[32];\n+    memcpy(seckey, first_seckey.data(), 32);\n+    assert(memcmp(seckey, first_seckey.data(), 32) == 0);\n+\n+    if (first_seckey.GetPubKey()[0] == 3) {\n+        int return_val = secp256k1_ec_seckey_negate(context, seckey);\n+        assert(return_val);\n+    }\n+\n+    if (sender_secret_keys.size() > 1) {\n+        for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+\n+            const auto& sender_seckey{sender_secret_keys.at(i)};\n+\n+            unsigned char seckey_i[32];\n+            memcpy(seckey_i, sender_seckey.begin(), 32);\n+            assert(memcmp(seckey_i, sender_seckey.begin(), 32) == 0);\n+\n+            if (sender_seckey.GetPubKey()[0] == 3) {\n+                int return_val = secp256k1_ec_seckey_negate(context, seckey_i);\n+                assert(return_val);\n+            }\n+\n+            int return_val = secp256k1_ec_seckey_tweak_add(context, seckey, seckey_i);\n+            assert(return_val);\n+        }\n+    }\n+\n+\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(seckey), std::end(seckey), true);\n+\n+    secp256k1_context_destroy(context);\n+    memset(seckey, 0, sizeof(seckey));\n+\n+    return ckey;\n+}\n+\n+Recipient::Recipient(const CKey& recipient_secret_key, const XOnlyPubKey& sender_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    int return_val = secp256k1_keypair_create(m_context, &m_recipient_keypair, recipient_secret_key.begin());\n+    assert(return_val);\n+\n+    secp256k1_xonly_pubkey parsed_sender_x_only_public_key;\n+    return_val = secp256k1_xonly_pubkey_parse(m_context, &parsed_sender_x_only_public_key, sender_x_only_public_key.data());\n+    assert(return_val);\n+\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &parsed_sender_x_only_public_key, recipient_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_seckey_verify(secp256k1_context_no_precomp, m_shared_secret);\n+    assert(return_val);\n+}\n+\n+Recipient::~Recipient()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_keypair.data, 0, sizeof(m_recipient_keypair.data));\n+}\n+\n+CKey Recipient::Tweak(const int32_t& identifier)",
      "path": "src/wallet/silentpayment.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "978fbe4a7d5fdc0105095cd7f2b66da375cb3050",
      "in_reply_to_id": 992302969,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/fb014fefff60d87cf21f220fa756aa449bd6daf4.",
      "created_at": "2022-10-12T00:29:31Z",
      "updated_at": "2022-10-12T00:29:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r992878244",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/992878244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993082208",
      "pull_request_review_id": 1138561292,
      "id": 993082208,
      "node_id": "PRRC_kwDOABII5847MTtg",
      "diff_hunk": "@@ -0,0 +1,281 @@\n+#include <silentpayment.h>\n+\n+#include <coins.h>\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const CKey& sender_secret_key, const XOnlyPubKey& recipient_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    // Parse the recipient's XOnlyPubKey to secp256k1_xonly_pubkey\n+    int return_val = secp256k1_xonly_pubkey_parse(m_context, &m_recipient_x_only_public_key, recipient_x_only_public_key.data());\n+    assert(return_val);\n+\n+    // Create the shared secret using the recipient's x-only pubkey and the sender' secret key\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &m_recipient_x_only_public_key, sender_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak(const int32_t& identifier) const\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    assert(memcmp(shared_secret, m_shared_secret, 32) == 0);",
      "path": "src/silentpayment.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fb014fefff60d87cf21f220fa756aa449bd6daf4\r\nassertions should not have side effects\r\nalso seen at `src/silentpayment.cpp:148` in same commit fb014fefff60d87cf21f220fa756aa449bd6daf4\r\n```suggestion\r\n\tint r = memcmp(shared_secret, m_shared_secret, 32)\r\n    assert(r == 0);\r\n```",
      "created_at": "2022-10-12T07:19:02Z",
      "updated_at": "2022-10-12T08:47:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r993082208",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993082208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993083309",
      "pull_request_review_id": 1138561292,
      "id": 993083309,
      "node_id": "PRRC_kwDOABII5847MT-t",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, keydata] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), keydata);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, XOnlyPubKey& sum_tx_pubkeys)",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "301481648aa20f8a8ebd7d868a1a63300cb6ab3e\r\n```suggestion\r\nbool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, XOnlyPubKey& sum_tx_pubkeys) const\r\n```",
      "created_at": "2022-10-12T07:20:26Z",
      "updated_at": "2022-10-12T08:45:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r993083309",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993083309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993096372",
      "pull_request_review_id": 1138561292,
      "id": 993096372,
      "node_id": "PRRC_kwDOABII5847MXK0",
      "diff_hunk": "@@ -0,0 +1,281 @@\n+#include <silentpayment.h>\n+\n+#include <coins.h>\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const CKey& sender_secret_key, const XOnlyPubKey& recipient_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    // Parse the recipient's XOnlyPubKey to secp256k1_xonly_pubkey\n+    int return_val = secp256k1_xonly_pubkey_parse(m_context, &m_recipient_x_only_public_key, recipient_x_only_public_key.data());\n+    assert(return_val);\n+\n+    // Create the shared secret using the recipient's x-only pubkey and the sender' secret key\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &m_recipient_x_only_public_key, sender_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak(const int32_t& identifier) const\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    assert(memcmp(shared_secret, m_shared_secret, 32) == 0);\n+\n+    // Add the identifier to the shared_secret\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    int return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+    assert(return_val);\n+\n+    // Tweak the recipient's x-only pubkey with identifier + shared_secret\n+    secp256k1_pubkey output_pubkey;\n+\n+    return_val = secp256k1_xonly_pubkey_tweak_add(m_context, &output_pubkey, &m_recipient_x_only_public_key, shared_secret);\n+    assert(return_val);\n+\n+    // Serialize and test the tweaked public key\n+    size_t len;\n+    unsigned char sender_serialized_output_pubkey[33];\n+    len = sizeof(sender_serialized_output_pubkey);\n+    return_val = secp256k1_ec_pubkey_serialize(m_context, sender_serialized_output_pubkey, &len, &output_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CPubKey pubKey = CPubKey(sender_serialized_output_pubkey);\n+\n+    assert(pubKey.IsFullyValid());\n+\n+    return XOnlyPubKey(pubKey);\n+}\n+\n+CKey Sender::SumPrivateKeys(const std::vector<CKey>& sender_secret_keys)\n+{\n+    auto context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    assert(!sender_secret_keys.empty());\n+\n+    const auto& first_seckey{sender_secret_keys.at(0)};\n+\n+    unsigned char seckey[32];\n+    memcpy(seckey, first_seckey.data(), 32);\n+    assert(memcmp(seckey, first_seckey.data(), 32) == 0);\n+\n+    if (first_seckey.GetPubKey()[0] == 3) {\n+        int return_val = secp256k1_ec_seckey_negate(context, seckey);\n+        assert(return_val);\n+    }\n+\n+    if (sender_secret_keys.size() > 1) {\n+        for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+\n+            const auto& sender_seckey{sender_secret_keys.at(i)};\n+\n+            unsigned char seckey_i[32];\n+            memcpy(seckey_i, sender_seckey.begin(), 32);\n+            assert(memcmp(seckey_i, sender_seckey.begin(), 32) == 0);\n+\n+            if (sender_seckey.GetPubKey()[0] == 3) {\n+                int return_val = secp256k1_ec_seckey_negate(context, seckey_i);\n+                assert(return_val);\n+            }\n+\n+            int return_val = secp256k1_ec_seckey_tweak_add(context, seckey, seckey_i);\n+            assert(return_val);\n+        }\n+    }\n+\n+\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(seckey), std::end(seckey), true);\n+\n+    secp256k1_context_destroy(context);\n+    memset(seckey, 0, sizeof(seckey));\n+\n+    return ckey;\n+}\n+\n+Recipient::Recipient(const CKey& recipient_secret_key, const XOnlyPubKey& sender_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    int return_val = secp256k1_keypair_create(m_context, &m_recipient_keypair, recipient_secret_key.begin());\n+    assert(return_val);\n+\n+    secp256k1_xonly_pubkey parsed_sender_x_only_public_key;\n+    return_val = secp256k1_xonly_pubkey_parse(m_context, &parsed_sender_x_only_public_key, sender_x_only_public_key.data());\n+    assert(return_val);\n+\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &parsed_sender_x_only_public_key, recipient_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_seckey_verify(secp256k1_context_no_precomp, m_shared_secret);\n+    assert(return_val);\n+}\n+\n+Recipient::~Recipient()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_keypair.data, 0, sizeof(m_recipient_keypair.data));\n+}\n+\n+CKey Recipient::Tweak(const int32_t& identifier) const\n+{\n+    secp256k1_keypair recipient_keypair;\n+    memcpy(recipient_keypair.data, m_recipient_keypair.data, 96);\n+    assert(memcmp(recipient_keypair.data, m_recipient_keypair.data, 96) == 0);\n+\n+    // arith_uint256 tweak{*m_shared_secret};\n+    // tweak = tweak + identifier;\n+\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    assert(memcmp(shared_secret, m_shared_secret, 32) == 0);\n+\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    int return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+    assert(return_val);\n+\n+    return_val = secp256k1_keypair_xonly_tweak_add(m_context, &recipient_keypair, shared_secret);\n+    assert(return_val);\n+\n+    unsigned char result_secret_key[32];\n+    return_val = secp256k1_keypair_sec(m_context, result_secret_key, &recipient_keypair);",
      "path": "src/silentpayment.cpp",
      "position": null,
      "original_position": 160,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fb014fefff60d87cf21f220fa756aa449bd6daf4\r\n`return_val` should be asserted",
      "created_at": "2022-10-12T07:34:49Z",
      "updated_at": "2022-10-12T08:45:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r993096372",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993096372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993102242",
      "pull_request_review_id": 1138561292,
      "id": 993102242,
      "node_id": "PRRC_kwDOABII5847MYmi",
      "diff_hunk": "@@ -2620,6 +2640,86 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+bool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, CKey& privKey, bool onlyTaproot)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c3e3002cf9b70f8b54f5e344277ad0864c555f5c\r\n```suggestion\r\nbool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, CKey& privKey, bool onlyTaproot) const\r\n```",
      "created_at": "2022-10-12T07:41:19Z",
      "updated_at": "2022-10-12T08:45:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r993102242",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993102242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993103358",
      "pull_request_review_id": 1138561292,
      "id": 993103358,
      "node_id": "PRRC_kwDOABII5847MY3-",
      "diff_hunk": "@@ -1096,70 +1133,229 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n-bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n {\n-    const CTransaction& tx = *ptx;\n-    {\n-        AssertLockHeld(cs_wallet);\n-\n-        if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n-            for (const CTxIn& txin : tx.vin) {\n-                std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n-                while (range.first != range.second) {\n-                    if (range.first->second != tx.GetHash()) {\n-                        WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n-                        MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n-                    }\n-                    range.first++;\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n                 }\n             }\n         }\n+    }\n \n-        bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n-        if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n+    for(auto& identifier_key: rawTrKeys) {\n+\n+        CKey key = std::get<0>(identifier_key);\n+        int32_t identifier = std::get<1>(identifier_key);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 173,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "43503e2ae6a462472f8ede023d6682cff99dd60d\r\nuse structured binding\r\n",
      "created_at": "2022-10-12T07:42:25Z",
      "updated_at": "2022-10-12T08:45:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r993103358",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993103358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1185,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993104802",
      "pull_request_review_id": 1138561292,
      "id": 993104802,
      "node_id": "PRRC_kwDOABII5847MZOi",
      "diff_hunk": "@@ -2368,18 +2573,32 @@ bool CWallet::TopUpKeyPool(unsigned int kpSize)\n     return res;\n }\n \n-util::Result<CTxDestination> CWallet::GetNewDestination(const OutputType type, const std::string label)\n+util::Result<CTxDestination> CWallet::GetNewDestination(const OutputType type, const std::string label, const bool silent_payment, const int32_t current_index)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 379,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "35701eff890f5cff02af3e8c59b20f2948153b5f\r\n```suggestion\r\nutil::Result<CTxDestination> CWallet::GetNewDestination(const OutputType type, const std::string& label, const bool silent_payment, const int32_t current_index)\r\n```",
      "created_at": "2022-10-12T07:43:55Z",
      "updated_at": "2022-10-12T08:45:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r993104802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993104802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2576,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993162151",
      "pull_request_review_id": 1138561292,
      "id": 993162151,
      "node_id": "PRRC_kwDOABII5847MnOn",
      "diff_hunk": "@@ -2620,6 +2640,86 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+bool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, CKey& privKey, bool onlyTaproot)\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return false;\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            privKey = key.second;\n+            return true;\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, privKey)) return false;\n+\n+        assert(XOnlyPubKey(privKey.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+    } else if (onlyTaproot) {\n+        return false;\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    } else {\n+        privKey = key.second;\n+    }\n+\n+    return true;\n+}\n+\n+std::vector<std::tuple<CKey, int32_t>> DescriptorScriptPubKeyMan::VerifySilentPaymentAddress(\n+    std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,\n+    XOnlyPubKey& sender_pub_key)\n+{\n+    LOCK(cs_desc_man);\n+\n+    std::vector<std::tuple<CKey, int32_t>> raw_tr_keys;\n+\n+    std::vector<CKey> priv_keys;\n+\n+    for (auto& [_, priv_key] : m_map_keys) {\n+        priv_keys.push_back(priv_key);\n+    }\n+\n+    assert(priv_keys.size() == 1);\n+\n+    CKey priv_key = priv_keys.at(0);\n+\n+    for(auto& pub_key_items : tx_output_pub_keys) {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c3e3002cf9b70f8b54f5e344277ad0864c555f5c\r\n```suggestion\r\n    for(const auto& [outputScriptPubKey, outputPubKey] : tx_output_pub_keys) {\r\n```",
      "created_at": "2022-10-12T08:39:35Z",
      "updated_at": "2022-10-12T08:45:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r993162151",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/993162151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2701,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379426",
      "pull_request_review_id": 1143245595,
      "id": 996379426,
      "node_id": "PRRC_kwDOABII5847Y4si",
      "diff_hunk": "@@ -0,0 +1,281 @@\n+#include <silentpayment.h>\n+\n+#include <coins.h>\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const CKey& sender_secret_key, const XOnlyPubKey& recipient_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    // Parse the recipient's XOnlyPubKey to secp256k1_xonly_pubkey\n+    int return_val = secp256k1_xonly_pubkey_parse(m_context, &m_recipient_x_only_public_key, recipient_x_only_public_key.data());\n+    assert(return_val);\n+\n+    // Create the shared secret using the recipient's x-only pubkey and the sender' secret key\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &m_recipient_x_only_public_key, sender_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak(const int32_t& identifier) const\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    assert(memcmp(shared_secret, m_shared_secret, 32) == 0);",
      "path": "src/silentpayment.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": 993082208,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 1f48b4c3ea120edaf67b25bb09e4a69421fe45a1.",
      "created_at": "2022-10-16T02:48:36Z",
      "updated_at": "2022-10-16T02:48:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r996379426",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379454",
      "pull_request_review_id": 1143245607,
      "id": 996379454,
      "node_id": "PRRC_kwDOABII5847Y4s-",
      "diff_hunk": "@@ -0,0 +1,160 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, uint256>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, keydata] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), keydata);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, XOnlyPubKey& sum_tx_pubkeys)",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": 993083309,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done  in 8e49caf4e5dc29b6e275aff6f0a3234bbfd77c41.",
      "created_at": "2022-10-16T02:48:52Z",
      "updated_at": "2022-10-16T02:48:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r996379454",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379469",
      "pull_request_review_id": 1143245623,
      "id": 996379469,
      "node_id": "PRRC_kwDOABII5847Y4tN",
      "diff_hunk": "@@ -0,0 +1,281 @@\n+#include <silentpayment.h>\n+\n+#include <coins.h>\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const CKey& sender_secret_key, const XOnlyPubKey& recipient_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    // Parse the recipient's XOnlyPubKey to secp256k1_xonly_pubkey\n+    int return_val = secp256k1_xonly_pubkey_parse(m_context, &m_recipient_x_only_public_key, recipient_x_only_public_key.data());\n+    assert(return_val);\n+\n+    // Create the shared secret using the recipient's x-only pubkey and the sender' secret key\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &m_recipient_x_only_public_key, sender_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak(const int32_t& identifier) const\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    assert(memcmp(shared_secret, m_shared_secret, 32) == 0);\n+\n+    // Add the identifier to the shared_secret\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    int return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+    assert(return_val);\n+\n+    // Tweak the recipient's x-only pubkey with identifier + shared_secret\n+    secp256k1_pubkey output_pubkey;\n+\n+    return_val = secp256k1_xonly_pubkey_tweak_add(m_context, &output_pubkey, &m_recipient_x_only_public_key, shared_secret);\n+    assert(return_val);\n+\n+    // Serialize and test the tweaked public key\n+    size_t len;\n+    unsigned char sender_serialized_output_pubkey[33];\n+    len = sizeof(sender_serialized_output_pubkey);\n+    return_val = secp256k1_ec_pubkey_serialize(m_context, sender_serialized_output_pubkey, &len, &output_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CPubKey pubKey = CPubKey(sender_serialized_output_pubkey);\n+\n+    assert(pubKey.IsFullyValid());\n+\n+    return XOnlyPubKey(pubKey);\n+}\n+\n+CKey Sender::SumPrivateKeys(const std::vector<CKey>& sender_secret_keys)\n+{\n+    auto context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    assert(!sender_secret_keys.empty());\n+\n+    const auto& first_seckey{sender_secret_keys.at(0)};\n+\n+    unsigned char seckey[32];\n+    memcpy(seckey, first_seckey.data(), 32);\n+    assert(memcmp(seckey, first_seckey.data(), 32) == 0);\n+\n+    if (first_seckey.GetPubKey()[0] == 3) {\n+        int return_val = secp256k1_ec_seckey_negate(context, seckey);\n+        assert(return_val);\n+    }\n+\n+    if (sender_secret_keys.size() > 1) {\n+        for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+\n+            const auto& sender_seckey{sender_secret_keys.at(i)};\n+\n+            unsigned char seckey_i[32];\n+            memcpy(seckey_i, sender_seckey.begin(), 32);\n+            assert(memcmp(seckey_i, sender_seckey.begin(), 32) == 0);\n+\n+            if (sender_seckey.GetPubKey()[0] == 3) {\n+                int return_val = secp256k1_ec_seckey_negate(context, seckey_i);\n+                assert(return_val);\n+            }\n+\n+            int return_val = secp256k1_ec_seckey_tweak_add(context, seckey, seckey_i);\n+            assert(return_val);\n+        }\n+    }\n+\n+\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(seckey), std::end(seckey), true);\n+\n+    secp256k1_context_destroy(context);\n+    memset(seckey, 0, sizeof(seckey));\n+\n+    return ckey;\n+}\n+\n+Recipient::Recipient(const CKey& recipient_secret_key, const XOnlyPubKey& sender_x_only_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    int return_val = secp256k1_keypair_create(m_context, &m_recipient_keypair, recipient_secret_key.begin());\n+    assert(return_val);\n+\n+    secp256k1_xonly_pubkey parsed_sender_x_only_public_key;\n+    return_val = secp256k1_xonly_pubkey_parse(m_context, &parsed_sender_x_only_public_key, sender_x_only_public_key.data());\n+    assert(return_val);\n+\n+    return_val = secp256k1_ecdh_xonly(m_context, m_shared_secret, &parsed_sender_x_only_public_key, recipient_secret_key.begin(), nullptr, nullptr);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_seckey_verify(secp256k1_context_no_precomp, m_shared_secret);\n+    assert(return_val);\n+}\n+\n+Recipient::~Recipient()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_keypair.data, 0, sizeof(m_recipient_keypair.data));\n+}\n+\n+CKey Recipient::Tweak(const int32_t& identifier) const\n+{\n+    secp256k1_keypair recipient_keypair;\n+    memcpy(recipient_keypair.data, m_recipient_keypair.data, 96);\n+    assert(memcmp(recipient_keypair.data, m_recipient_keypair.data, 96) == 0);\n+\n+    // arith_uint256 tweak{*m_shared_secret};\n+    // tweak = tweak + identifier;\n+\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    assert(memcmp(shared_secret, m_shared_secret, 32) == 0);\n+\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    int return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+    assert(return_val);\n+\n+    return_val = secp256k1_keypair_xonly_tweak_add(m_context, &recipient_keypair, shared_secret);\n+    assert(return_val);\n+\n+    unsigned char result_secret_key[32];\n+    return_val = secp256k1_keypair_sec(m_context, result_secret_key, &recipient_keypair);",
      "path": "src/silentpayment.cpp",
      "position": null,
      "original_position": 160,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": 993096372,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/1f48b4c3ea120edaf67b25bb09e4a69421fe45a1.",
      "created_at": "2022-10-16T02:49:12Z",
      "updated_at": "2022-10-16T02:49:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r996379469",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379472",
      "pull_request_review_id": 1143245630,
      "id": 996379472,
      "node_id": "PRRC_kwDOABII5847Y4tQ",
      "diff_hunk": "@@ -2620,6 +2640,86 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+bool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, CKey& privKey, bool onlyTaproot)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 65,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": 993102242,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in a97cff0045ae0dcdb29fddb7ff263c2e3b052ce9.",
      "created_at": "2022-10-16T02:49:25Z",
      "updated_at": "2022-10-16T02:49:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r996379472",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379472"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379491",
      "pull_request_review_id": 1143245638,
      "id": 996379491,
      "node_id": "PRRC_kwDOABII5847Y4tj",
      "diff_hunk": "@@ -1096,70 +1133,229 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n-bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n {\n-    const CTransaction& tx = *ptx;\n-    {\n-        AssertLockHeld(cs_wallet);\n-\n-        if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n-            for (const CTxIn& txin : tx.vin) {\n-                std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n-                while (range.first != range.second) {\n-                    if (range.first->second != tx.GetHash()) {\n-                        WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n-                        MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n-                    }\n-                    range.first++;\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n                 }\n             }\n         }\n+    }\n \n-        bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n-        if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n+    for(auto& identifier_key: rawTrKeys) {\n+\n+        CKey key = std::get<0>(identifier_key);\n+        int32_t identifier = std::get<1>(identifier_key);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 173,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": 993103358,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 4da115941601e433569c5fd11a1d4a5f4b90107e.",
      "created_at": "2022-10-16T02:49:42Z",
      "updated_at": "2022-10-16T02:49:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r996379491",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1185,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379505",
      "pull_request_review_id": 1143245653,
      "id": 996379505,
      "node_id": "PRRC_kwDOABII5847Y4tx",
      "diff_hunk": "@@ -2368,18 +2573,32 @@ bool CWallet::TopUpKeyPool(unsigned int kpSize)\n     return res;\n }\n \n-util::Result<CTxDestination> CWallet::GetNewDestination(const OutputType type, const std::string label)\n+util::Result<CTxDestination> CWallet::GetNewDestination(const OutputType type, const std::string label, const bool silent_payment, const int32_t current_index)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 379,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": 993104802,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in f8cbdccfdeff1ce584d5ce99544af36814d82785.",
      "created_at": "2022-10-16T02:49:59Z",
      "updated_at": "2022-10-16T02:49:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r996379505",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379505"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2576,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379524",
      "pull_request_review_id": 1143245658,
      "id": 996379524,
      "node_id": "PRRC_kwDOABII5847Y4uE",
      "diff_hunk": "@@ -2620,6 +2640,86 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+bool DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, CKey& privKey, bool onlyTaproot)\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return false;\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            privKey = key.second;\n+            return true;\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, privKey)) return false;\n+\n+        assert(XOnlyPubKey(privKey.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+    } else if (onlyTaproot) {\n+        return false;\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return false;\n+    } else {\n+        privKey = key.second;\n+    }\n+\n+    return true;\n+}\n+\n+std::vector<std::tuple<CKey, int32_t>> DescriptorScriptPubKeyMan::VerifySilentPaymentAddress(\n+    std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,\n+    XOnlyPubKey& sender_pub_key)\n+{\n+    LOCK(cs_desc_man);\n+\n+    std::vector<std::tuple<CKey, int32_t>> raw_tr_keys;\n+\n+    std::vector<CKey> priv_keys;\n+\n+    for (auto& [_, priv_key] : m_map_keys) {\n+        priv_keys.push_back(priv_key);\n+    }\n+\n+    assert(priv_keys.size() == 1);\n+\n+    CKey priv_key = priv_keys.at(0);\n+\n+    for(auto& pub_key_items : tx_output_pub_keys) {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "62c0c18a69559270a0a420fc48e88d50a632062c",
      "in_reply_to_id": 993162151,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in a97cff0045ae0dcdb29fddb7ff263c2e3b052ce9.",
      "created_at": "2022-10-16T02:50:13Z",
      "updated_at": "2022-10-16T02:50:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r996379524",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/996379524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2701,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999483790",
      "pull_request_review_id": 1147617433,
      "id": 999483790,
      "node_id": "PRRC_kwDOABII5847kumO",
      "diff_hunk": "@@ -59,7 +64,20 @@ class DestinationEncoder\n         std::vector<unsigned char> data = {1};\n         data.reserve(53);\n         ConvertBits<8, 5, true>([&](unsigned char c) { data.push_back(c); }, tap.begin(), tap.end());\n-        return bech32::Encode(bech32::Encoding::BECH32M, m_params.Bech32HRP(), data);\n+\n+        std::string hrp = m_params.Bech32HRP();\n+\n+        if (m_silent_payment) {\n+            hrp = m_params.SilentPaymentHRP();\n+\n+            std::ostringstream ss;\n+            ss << std::setw(2) << std::setfill('0') << m_silent_payment_index;",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "9fde79224621421245737d99f9be6c2b5a6c4ac2",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Encoding the identifier in a different base could increase the maximum number of identifiers when stored on 2 bytes.\r\nbase10 (current) -> 100 identifiers\r\nbase16 -> 256 identifiers\r\nbase32 -> 1024 identifiers\r\nbase58 -> 3364 identifiers\r\n\r\nThe issue with a base58 HRP is that it's incompatible with BIP-173 and BIP-350, maybe the identifier could be encoded in the `data` part instead of the `hrp`? Or base32 is enough.",
      "created_at": "2022-10-19T13:50:23Z",
      "updated_at": "2022-10-19T15:50:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r999483790",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999483790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999487623",
      "pull_request_review_id": 1147617433,
      "id": 999487623,
      "node_id": "PRRC_kwDOABII5847kviH",
      "diff_hunk": "@@ -13,6 +13,8 @@\n \n #include <string>\n \n+const int16_t SILENT_ADDRESS_MAXIMUM_IDENTIFIER = 99;",
      "path": "src/key_io.h",
      "position": null,
      "original_position": 4,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "9fde79224621421245737d99f9be6c2b5a6c4ac2",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Type missmatch between `int16_t` and `int32_t` of `m_silent_payment_index`",
      "created_at": "2022-10-19T13:52:30Z",
      "updated_at": "2022-10-19T15:50:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r999487623",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/999487623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001990248",
      "pull_request_review_id": 1151256691,
      "id": 1001990248,
      "node_id": "PRRC_kwDOABII5847uSho",
      "diff_hunk": "@@ -59,7 +64,20 @@ class DestinationEncoder\n         std::vector<unsigned char> data = {1};\n         data.reserve(53);\n         ConvertBits<8, 5, true>([&](unsigned char c) { data.push_back(c); }, tap.begin(), tap.end());\n-        return bech32::Encode(bech32::Encoding::BECH32M, m_params.Bech32HRP(), data);\n+\n+        std::string hrp = m_params.Bech32HRP();\n+\n+        if (m_silent_payment) {\n+            hrp = m_params.SilentPaymentHRP();\n+\n+            std::ostringstream ss;\n+            ss << std::setw(2) << std::setfill('0') << m_silent_payment_index;",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "9fde79224621421245737d99f9be6c2b5a6c4ac2",
      "in_reply_to_id": 999483790,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Another excellent suggestion @aureleoules !\r\n\r\nI've been working on this.\r\nSome examples:\r\n`sprt1la68kq44e29c0p85rknf59qs5eww6vr3dw08arakura622ce7wcvygce0uqnw3q4` for identifier `8090879`.\r\n`sprt1yvpttj5ts7z0g8dxng2ppfjua5c8z6u7068mdc8m5543nuascg33jlcpe5xc6` for identifier `35`.",
      "created_at": "2022-10-21T16:39:38Z",
      "updated_at": "2022-10-21T16:39:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1001990248",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1001990248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1002036738",
      "pull_request_review_id": 1151328202,
      "id": 1002036738,
      "node_id": "PRRC_kwDOABII5847ud4C",
      "diff_hunk": "@@ -59,7 +64,20 @@ class DestinationEncoder\n         std::vector<unsigned char> data = {1};\n         data.reserve(53);\n         ConvertBits<8, 5, true>([&](unsigned char c) { data.push_back(c); }, tap.begin(), tap.end());\n-        return bech32::Encode(bech32::Encoding::BECH32M, m_params.Bech32HRP(), data);\n+\n+        std::string hrp = m_params.Bech32HRP();\n+\n+        if (m_silent_payment) {\n+            hrp = m_params.SilentPaymentHRP();\n+\n+            std::ostringstream ss;\n+            ss << std::setw(2) << std::setfill('0') << m_silent_payment_index;",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "9fde79224621421245737d99f9be6c2b5a6c4ac2",
      "in_reply_to_id": 999483790,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Great, how exactly is the identifier encoded in your examples?",
      "created_at": "2022-10-21T17:36:13Z",
      "updated_at": "2022-10-21T17:36:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1002036738",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1002036738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1002654972",
      "pull_request_review_id": 1152249252,
      "id": 1002654972,
      "node_id": "PRRC_kwDOABII5847w0z8",
      "diff_hunk": "@@ -59,7 +64,20 @@ class DestinationEncoder\n         std::vector<unsigned char> data = {1};\n         data.reserve(53);\n         ConvertBits<8, 5, true>([&](unsigned char c) { data.push_back(c); }, tap.begin(), tap.end());\n-        return bech32::Encode(bech32::Encoding::BECH32M, m_params.Bech32HRP(), data);\n+\n+        std::string hrp = m_params.Bech32HRP();\n+\n+        if (m_silent_payment) {\n+            hrp = m_params.SilentPaymentHRP();\n+\n+            std::ostringstream ss;\n+            ss << std::setw(2) << std::setfill('0') << m_silent_payment_index;",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 35,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "9fde79224621421245737d99f9be6c2b5a6c4ac2",
      "in_reply_to_id": 999483790,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Currently the format is: `HRP + 00 (two digits) + V1 Segwit address (bech32m)`\r\n\r\nBut there is no need to be a segwit address. This is because in the first version the sender could pay for the original segwit address or tweak it to the silent address, but early discussions in this PR indicated a preference on the part of reviewers for a specific address for silent payments.\r\n\r\nSo the format in the examples above is different, which is:\r\n\r\n`HRP + identifier (variable length) + compressed public key (both identifier and PK are in bech32m format)`\r\n\r\nI haven't pushed it yet as the above format is not compatible with current code and also adds complexity to the code as it is not a valid scriptPubKey.\r\n\r\nHowever, here is the code used to obtain the format above (in `key_io.cpp`):\r\n\r\n<details><summary>Code</summary>\r\n<p>\r\n\r\n```c++\r\nstd::string EncodeSilentDestination(const CPubKey pubkey, const int32_t silent_payment_index)\r\n{\r\n    // The data_in is index + public key\r\n    std::vector<unsigned char> data_in = {};\r\n    std::vector<unsigned char> data_out = {};\r\n\r\n    std::vector<unsigned char> index_data = {};\r\n    unsigned char index_chunk = silent_payment_index & 0xFF;\r\n    int8_t shift = 8;\r\n\r\n    while(index_chunk != 0) {\r\n        index_data.push_back(index_chunk);\r\n        index_chunk = (silent_payment_index >> shift) & 0xFF;\r\n        shift += 8;\r\n    }\r\n\r\n    data_in.insert(data_in.end(), index_data.begin(), index_data.end());\r\n    data_in.insert(data_in.end(), pubkey.begin(), pubkey.end());\r\n\r\n    ConvertBits<8, 5, true>([&](unsigned char c) { data_out.push_back(c); }, data_in.begin(), data_in.end());\r\n\r\n    std::string hrp = Params().SilentPaymentHRP();\r\n\r\n    return bech32::Encode(bech32::Encoding::BECH32M, hrp, data_out);\r\n}\r\n\r\nstd::tuple<CPubKey, int32_t> DecodeSilentData(const std::vector<unsigned char>& data)\r\n{\r\n    if (data.size() <= 33) {\r\n        return {CPubKey(), 0};\r\n    }\r\n\r\n    std::vector<unsigned char> pubkey_data(data.end() - 33, data.end());\r\n    CPubKey pubkey{pubkey_data.begin(), pubkey_data.end()};\r\n\r\n    std::vector<unsigned char> index_data(data.begin(), data.end() - 33);\r\n\r\n    int32_t index = 0;\r\n    int shift = 0;\r\n\r\n    for (auto it = index_data.begin(); it != index_data.end(); it++) {\r\n        index |=  (*it << shift);\r\n        shift += 8;\r\n    }\r\n\r\n    return {pubkey, index};\r\n}\r\n\r\nstd::vector<unsigned char> DecodeSilentAddress(const std::string& str)\r\n{\r\n    auto params{Params()};\r\n\r\n    const auto& silent_payment_hrp = params.SilentPaymentHRP();\r\n    auto dest_silent_payment_hrp = ToLower(std::string_view(str).substr(0, params.SilentPaymentHRP().size()));\r\n\r\n    bool is_sp = dest_silent_payment_hrp == silent_payment_hrp;\r\n\r\n    if (!is_sp) {\r\n        return {};\r\n    }\r\n\r\n    std::vector<unsigned char> data;\r\n    data.clear();\r\n    const auto dec = bech32::Decode(str);\r\n    auto dec_silent_payment_hrp = dec.hrp.substr(0, params.SilentPaymentHRP().size());\r\n\r\n    if (dec.encoding != bech32::Encoding::BECH32M || dec.data.empty() || dec.hrp != silent_payment_hrp) {\r\n        return {};\r\n    }\r\n\r\n    data.reserve(((dec.data.size() - 1) * 5) / 8);\r\n    if (ConvertBits<5, 8, false>([&](unsigned char c) { data.push_back(c); }, dec.data.begin(), dec.data.end())) {\r\n        return data;\r\n    }\r\n\r\n    return {};\r\n}\r\n```\r\n</p>\r\n</details>",
      "created_at": "2022-10-23T07:24:48Z",
      "updated_at": "2022-10-23T07:24:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1002654972",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1002654972"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009199941",
      "pull_request_review_id": 1161566117,
      "id": 1009199941,
      "node_id": "PRRC_kwDOABII5848JytF",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, pubkey] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), pubkey);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, CPubKey& sum_tx_pubkeys) const\n+{\n+    if (tx->IsCoinBase()) {\n+        return false;\n+    }\n+\n+    std::unordered_set<TxoutType> tx_vout_types;\n+    for (auto& vout : tx->vout) {\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+        tx_vout_types.insert(whichType);\n+    }\n+\n+    // Silent Payments require that the recipients use Taproot address\n+    // so one output at least must be Taproot\n+    if (tx_vout_types.find(TxoutType::WITNESS_V1_TAPROOT) == tx_vout_types.end()) {\n+        return false;\n+    }\n+\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+\n+    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        return false;\n+    }\n+\n+    CTxUndo* undoTX {nullptr};\n+    auto it = std::find_if(block.vtx.begin(), block.vtx.end(), [tx](CTransactionRef t){ return *t == *tx; });\n+    if (it != block.vtx.end()) {\n+        // -1 as blockundo does not have coinbase tx\n+        undoTX = &blockUndo.vtxundo.at(it - block.vtx.begin() - 1);\n+    }\n+\n+    if (undoTX == nullptr) {\n+        return false;\n+    }\n+\n+    assert(tx->vin.size() == undoTX->vprevout.size());\n+\n+    std::vector<XOnlyPubKey> input_xonly_pubkeys;\n+    std::vector<CPubKey> input_pubkeys;\n+\n+    for (size_t i = 0; i < tx->vin.size(); i++)\n+    {\n+        const Coin& prev_coin{undoTX->vprevout[i]};\n+\n+        const CTxIn& txin{tx->vin.at(i)};\n+\n+        auto pubkey_variant = silentpayment::ExtractPubkeyFromInput(prev_coin, txin);\n+\n+        if (std::holds_alternative<CPubKey>(pubkey_variant)) {\n+            auto pubkey = std::get<CPubKey>(pubkey_variant);",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 102,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ebff8b2d55d9c087c4bf8f8961bd8ec1ee51c04f\r\n```suggestion\r\n            const auto& pubkey = std::get<CPubKey>(pubkey_variant);\r\n```",
      "created_at": "2022-10-31T09:27:34Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009199941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009199941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009200242",
      "pull_request_review_id": 1161566117,
      "id": 1009200242,
      "node_id": "PRRC_kwDOABII5848Jyxy",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, pubkey] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), pubkey);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, CPubKey& sum_tx_pubkeys) const\n+{\n+    if (tx->IsCoinBase()) {\n+        return false;\n+    }\n+\n+    std::unordered_set<TxoutType> tx_vout_types;\n+    for (auto& vout : tx->vout) {\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+        tx_vout_types.insert(whichType);\n+    }\n+\n+    // Silent Payments require that the recipients use Taproot address\n+    // so one output at least must be Taproot\n+    if (tx_vout_types.find(TxoutType::WITNESS_V1_TAPROOT) == tx_vout_types.end()) {\n+        return false;\n+    }\n+\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+\n+    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        return false;\n+    }\n+\n+    CTxUndo* undoTX {nullptr};\n+    auto it = std::find_if(block.vtx.begin(), block.vtx.end(), [tx](CTransactionRef t){ return *t == *tx; });\n+    if (it != block.vtx.end()) {\n+        // -1 as blockundo does not have coinbase tx\n+        undoTX = &blockUndo.vtxundo.at(it - block.vtx.begin() - 1);\n+    }\n+\n+    if (undoTX == nullptr) {\n+        return false;\n+    }\n+\n+    assert(tx->vin.size() == undoTX->vprevout.size());\n+\n+    std::vector<XOnlyPubKey> input_xonly_pubkeys;\n+    std::vector<CPubKey> input_pubkeys;\n+\n+    for (size_t i = 0; i < tx->vin.size(); i++)\n+    {\n+        const Coin& prev_coin{undoTX->vprevout[i]};\n+\n+        const CTxIn& txin{tx->vin.at(i)};\n+\n+        auto pubkey_variant = silentpayment::ExtractPubkeyFromInput(prev_coin, txin);\n+\n+        if (std::holds_alternative<CPubKey>(pubkey_variant)) {\n+            auto pubkey = std::get<CPubKey>(pubkey_variant);\n+            if (pubkey.IsFullyValid()) {\n+                input_pubkeys.push_back(pubkey);\n+            }\n+        } else if (std::holds_alternative<XOnlyPubKey>(pubkey_variant)) {\n+            auto pubkey = std::get<XOnlyPubKey>(pubkey_variant);",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ebff8b2d55d9c087c4bf8f8961bd8ec1ee51c04f\r\n```suggestion\r\n            const auto& pubkey = std::get<XOnlyPubKey>(pubkey_variant);\r\n```",
      "created_at": "2022-10-31T09:27:51Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009200242",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009200242"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009201659",
      "pull_request_review_id": 1161566117,
      "id": 1009201659,
      "node_id": "PRRC_kwDOABII5848JzH7",
      "diff_hunk": "@@ -278,6 +280,39 @@ std::string EncodeDestination(const CTxDestination& dest)\n     return std::visit(DestinationEncoder(Params()), dest);\n }\n \n+std::string EncodeSilentDestination(const CPubKey pubkey, const int32_t silent_payment_index)",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "5ee94ec2b7ef5f3affcde75325e795221b8f5122\r\n```suggestion\r\nstd::string EncodeSilentDestination(const CPubKey& pubkey, const int32_t silent_payment_index)\r\n```",
      "created_at": "2022-10-31T09:29:20Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009201659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009201659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009203402",
      "pull_request_review_id": 1161566117,
      "id": 1009203402,
      "node_id": "PRRC_kwDOABII5848JzjK",
      "diff_hunk": "@@ -299,3 +334,55 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::tuple<CPubKey, int32_t> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+    if (data.size() <= 33) {\n+        return {CPubKey(), 0};\n+    }\n+\n+    std::vector<unsigned char> pubkey_data(data.end() - 33, data.end());\n+    CPubKey pubkey{pubkey_data.begin(), pubkey_data.end()};\n+\n+    std::vector<unsigned char> index_data(data.begin(), data.end() - 33);\n+\n+    int32_t index = 0;\n+    int shift = 0;\n+\n+    for (auto it = index_data.begin(); it != index_data.end(); it++) {\n+        index |=  (*it << shift);\n+        shift += 8;\n+    }",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "5ee94ec2b7ef5f3affcde75325e795221b8f5122\r\n```suggestion\r\n    for (const auto& it : index_data) {\r\n        index |=  (it << shift);\r\n        shift += 8;\r\n    }\r\n```",
      "created_at": "2022-10-31T09:30:58Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009203402",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009203402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 352,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009207838",
      "pull_request_review_id": 1161566117,
      "id": 1009207838,
      "node_id": "PRRC_kwDOABII5848J0oe",
      "diff_hunk": "@@ -57,6 +57,13 @@ CTxOut::CTxOut(const CAmount& nValueIn, CScript scriptPubKeyIn)\n     scriptPubKey = scriptPubKeyIn;\n }\n \n+CTxOut::CTxOut(const CAmount& nValueIn, CScript scriptPubKeyIn, bool silentpayment)\n+{\n+    nValue = nValueIn;\n+    scriptPubKey = scriptPubKeyIn;\n+    m_silentpayment = silentpayment;\n+}\n+",
      "path": "src/primitives/transaction.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a8931257c319e5c6e3e575171667d8f9cd61ace2\r\nuse a constructor initializer list, maybe refactor the one above as well?",
      "created_at": "2022-10-31T09:35:09Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009207838",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009207838"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 60,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009212088",
      "pull_request_review_id": 1161566117,
      "id": 1009212088,
      "node_id": "PRRC_kwDOABII5848J1q4",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#include <silentpayment.h>\n+\n+#include <coins.h>\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const std::vector<std::tuple<CKey, bool>>& sender_secret_keys, const CPubKey& recipient_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    const auto& [seckey, is_taproot] = sender_secret_keys.at(0);\n+\n+    unsigned char sum_seckey[32];\n+    memcpy(sum_seckey, seckey.data(), 32);\n+    assert(memcmp(sum_seckey, seckey.data(), 32) == 0);\n+\n+    if (is_taproot && seckey.GetPubKey()[0] == 3) {\n+        int return_val = secp256k1_ec_seckey_negate(m_context, sum_seckey);\n+        assert(return_val);\n+    }\n+\n+    if (sender_secret_keys.size() > 1) {\n+        for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+\n+            const auto& [sender_seckey, sender_is_taproot] = sender_secret_keys.at(i);\n+\n+            unsigned char seckey_i[32];\n+            memcpy(seckey_i, sender_seckey.begin(), 32);\n+            assert(memcmp(seckey_i, sender_seckey.begin(), 32) == 0);\n+\n+            if (sender_is_taproot && sender_seckey.GetPubKey()[0] == 3) {\n+                int return_val = secp256k1_ec_seckey_negate(m_context, seckey_i);\n+                assert(return_val);\n+            }\n+\n+            int return_val = secp256k1_ec_seckey_tweak_add(m_context, sum_seckey, seckey_i);\n+            assert(return_val);\n+        }\n+    }\n+\n+    secp256k1_pubkey parsed_recipient_public_key;\n+    int return_val = secp256k1_ec_pubkey_parse(m_context, &parsed_recipient_public_key, recipient_public_key.data(), recipient_public_key.size());\n+    assert(return_val);\n+\n+\n+    return_val = secp256k1_ecdh(m_context, m_shared_secret, &parsed_recipient_public_key, sum_seckey, nullptr, nullptr);\n+    assert(return_val);\n+\n+    // store recipient's pubkey\n+    return_val = secp256k1_ec_pubkey_parse(m_context, &m_recipient_public_key, recipient_public_key.data(), recipient_public_key.size());\n+    assert(return_val);\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(m_shared_secret), std::end(m_shared_secret), true);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak2(const int32_t& identifier) const\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    int return_val = memcmp(shared_secret, m_shared_secret, 32);\n+    assert(return_val == 0);\n+\n+    // Add the identifier to the shared_secret\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+    assert(return_val);\n+\n+    secp256k1_pubkey recipient_public_key;\n+    memcpy(recipient_public_key.data, m_recipient_public_key.data, 64);\n+    assert(memcmp(recipient_public_key.data, m_recipient_public_key.data, 64) == 0);\n+\n+    // Tweak the recipient's pubkey with identifier + shared_secret\n+    return_val = secp256k1_ec_pubkey_tweak_add(m_context, &recipient_public_key, shared_secret);",
      "path": "src/silentpayment.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "4da30d6fd3eb9347081ecdea33470c8d212f56a9\r\n`return_val` is never asserted",
      "created_at": "2022-10-31T09:39:34Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009212088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009212088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009213729",
      "pull_request_review_id": 1161566117,
      "id": 1009213729,
      "node_id": "PRRC_kwDOABII5848J2Eh",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#include <silentpayment.h>\n+\n+#include <coins.h>\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const std::vector<std::tuple<CKey, bool>>& sender_secret_keys, const CPubKey& recipient_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    const auto& [seckey, is_taproot] = sender_secret_keys.at(0);\n+\n+    unsigned char sum_seckey[32];\n+    memcpy(sum_seckey, seckey.data(), 32);\n+    assert(memcmp(sum_seckey, seckey.data(), 32) == 0);\n+\n+    if (is_taproot && seckey.GetPubKey()[0] == 3) {\n+        int return_val = secp256k1_ec_seckey_negate(m_context, sum_seckey);\n+        assert(return_val);\n+    }\n+\n+    if (sender_secret_keys.size() > 1) {\n+        for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+\n+            const auto& [sender_seckey, sender_is_taproot] = sender_secret_keys.at(i);\n+\n+            unsigned char seckey_i[32];\n+            memcpy(seckey_i, sender_seckey.begin(), 32);\n+            assert(memcmp(seckey_i, sender_seckey.begin(), 32) == 0);\n+\n+            if (sender_is_taproot && sender_seckey.GetPubKey()[0] == 3) {\n+                int return_val = secp256k1_ec_seckey_negate(m_context, seckey_i);\n+                assert(return_val);\n+            }\n+\n+            int return_val = secp256k1_ec_seckey_tweak_add(m_context, sum_seckey, seckey_i);\n+            assert(return_val);\n+        }\n+    }\n+\n+    secp256k1_pubkey parsed_recipient_public_key;\n+    int return_val = secp256k1_ec_pubkey_parse(m_context, &parsed_recipient_public_key, recipient_public_key.data(), recipient_public_key.size());\n+    assert(return_val);\n+\n+\n+    return_val = secp256k1_ecdh(m_context, m_shared_secret, &parsed_recipient_public_key, sum_seckey, nullptr, nullptr);\n+    assert(return_val);\n+\n+    // store recipient's pubkey\n+    return_val = secp256k1_ec_pubkey_parse(m_context, &m_recipient_public_key, recipient_public_key.data(), recipient_public_key.size());\n+    assert(return_val);\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(m_shared_secret), std::end(m_shared_secret), true);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak2(const int32_t& identifier) const\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    int return_val = memcmp(shared_secret, m_shared_secret, 32);\n+    assert(return_val == 0);\n+\n+    // Add the identifier to the shared_secret\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+    assert(return_val);\n+\n+    secp256k1_pubkey recipient_public_key;\n+    memcpy(recipient_public_key.data, m_recipient_public_key.data, 64);\n+    assert(memcmp(recipient_public_key.data, m_recipient_public_key.data, 64) == 0);\n+\n+    // Tweak the recipient's pubkey with identifier + shared_secret\n+    return_val = secp256k1_ec_pubkey_tweak_add(m_context, &recipient_public_key, shared_secret);\n+\n+    // Serialize and test the tweaked public key\n+    size_t len;\n+    unsigned char serialized_output_pubkey[33];\n+    len = sizeof(serialized_output_pubkey);\n+    return_val = secp256k1_ec_pubkey_serialize(m_context, serialized_output_pubkey, &len, &recipient_public_key, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CPubKey pubKey = CPubKey(serialized_output_pubkey);\n+\n+    assert(pubKey.IsFullyValid());\n+\n+    return XOnlyPubKey(pubKey);\n+}\n+\n+Recipient::Recipient(const CKey& recipient_secret_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    int return_val = secp256k1_keypair_create(m_context, &m_recipient_keypair, recipient_secret_key.begin());\n+    assert(return_val);\n+\n+    memcpy(m_recipient_seckey, recipient_secret_key.data(), 32);\n+    assert(memcmp(m_recipient_seckey, recipient_secret_key.data(), 32) == 0);\n+}\n+\n+void Recipient::SetSenderPublicKey(const CPubKey& sender_public_key)\n+{\n+    secp256k1_pubkey sender_pubkey;\n+    int return_val = secp256k1_ec_pubkey_parse(m_context, &sender_pubkey, sender_public_key.data(), sender_public_key.size());\n+    assert(return_val);\n+\n+    return_val = secp256k1_ecdh(m_context, m_shared_secret, &sender_pubkey, m_recipient_seckey, nullptr, nullptr);\n+    assert(return_val);\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(m_shared_secret), std::end(m_shared_secret), true);\n+}\n+\n+Recipient::~Recipient()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_recipient_seckey, 0, sizeof(m_recipient_seckey));\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_keypair.data, 0, sizeof(m_recipient_keypair.data));\n+}\n+\n+std::tuple<CKey,XOnlyPubKey> Recipient::Tweak2(const int32_t& identifier) const\n+{\n+    secp256k1_keypair recipient_keypair;\n+    memcpy(recipient_keypair.data, m_recipient_keypair.data, 96);\n+    assert(memcmp(recipient_keypair.data, m_recipient_keypair.data, 96) == 0);\n+\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    int return_val = memcmp(shared_secret, m_shared_secret, 32);\n+    assert(return_val == 0);\n+\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+    assert(return_val);\n+\n+    unsigned char result_secret_key[32];\n+    return_val = secp256k1_keypair_sec(m_context, result_secret_key, &recipient_keypair);\n+    assert(return_val);\n+\n+    secp256k1_pubkey result_pubkey;\n+    return_val = secp256k1_keypair_pub(m_context, &result_pubkey, &recipient_keypair);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_seckey_tweak_add(m_context, result_secret_key, shared_secret);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_pubkey_tweak_add(m_context, &result_pubkey, shared_secret);\n+    assert(return_val);\n+\n+    // Serialize and test the tweaked public key\n+    size_t len;\n+    unsigned char pubkey_bytes[33];\n+    len = sizeof(pubkey_bytes);\n+    return_val = secp256k1_ec_pubkey_serialize(m_context, pubkey_bytes, &len, &result_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(result_secret_key), std::end(result_secret_key), true);\n+\n+    return {ckey, XOnlyPubKey{CPubKey{pubkey_bytes}}};\n+}\n+\n+CPubKey Recipient::SumPublicKeys(const std::vector<CPubKey>& sender_public_keys, const std::vector<XOnlyPubKey>& sender_x_only_public_key)\n+{\n+    auto context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    std::vector<secp256k1_pubkey> v_pubkeys;\n+\n+    for (auto& pubkey : sender_public_keys) {\n+        secp256k1_pubkey parsed_pubkey;\n+        int return_val = secp256k1_ec_pubkey_parse(context, &parsed_pubkey, pubkey.data(), pubkey.size());\n+        assert(return_val);\n+\n+        v_pubkeys.push_back(parsed_pubkey);\n+    }\n+\n+    for (auto& xpubkey : sender_x_only_public_key) {\n+        auto pubkey = xpubkey.ConvertToCompressedPubKey();\n+        secp256k1_pubkey parsed_pubkey;\n+        int return_val = secp256k1_ec_pubkey_parse(context, &parsed_pubkey, pubkey.data(), pubkey.size());\n+        assert(return_val);\n+\n+        v_pubkeys.push_back(parsed_pubkey);\n+    }\n+\n+    std::vector<secp256k1_pubkey *> p_pubkeys;\n+    for (size_t i = 0; i < v_pubkeys.size(); i++) {\n+        p_pubkeys.push_back(&v_pubkeys.at(i));\n+    }",
      "path": "src/silentpayment.cpp",
      "position": null,
      "original_position": 206,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "4da30d6fd3eb9347081ecdea33470c8d212f56a9\r\n```suggestion\r\n    for (auto& pubkey : v_pubkeys) {\r\n        p_pubkeys.push_back(&pubkey);\r\n    }\r\n```",
      "created_at": "2022-10-31T09:41:15Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009213729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009213729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 204,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009215421",
      "pull_request_review_id": 1161566117,
      "id": 1009215421,
      "node_id": "PRRC_kwDOABII5848J2e9",
      "diff_hunk": "@@ -1214,11 +1214,30 @@ RPCHelpMan send()\n             InterpretFeeEstimationInstructions(/*conf_target=*/request.params[1], /*estimate_mode=*/request.params[2], /*fee_rate=*/request.params[3], options);\n             PreventOutdatedOptions(options);\n \n-\n             CAmount fee;\n             int change_position;\n             bool rbf{options.exists(\"replaceable\") ? options[\"replaceable\"].get_bool() : pwallet->m_signal_rbf};\n             CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf);\n+\n+            bool is_silent_payment{false};\n+\n+            for (uint64_t i = 0; i < rawTx.vout.size(); i++) {\n+                if (rawTx.vout[i].m_silentpayment) {",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a8931257c319e5c6e3e575171667d8f9cd61ace2\r\n```suggestion\r\n            for (const auto& out : rawTx.vout) {\r\n                if (out.m_silentpayment) {\r\n```",
      "created_at": "2022-10-31T09:43:00Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009215421",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009215421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1224,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009216590",
      "pull_request_review_id": 1161566117,
      "id": 1009216590,
      "node_id": "PRRC_kwDOABII5848J2xO",
      "diff_hunk": "@@ -1214,11 +1214,30 @@ RPCHelpMan send()\n             InterpretFeeEstimationInstructions(/*conf_target=*/request.params[1], /*estimate_mode=*/request.params[2], /*fee_rate=*/request.params[3], options);\n             PreventOutdatedOptions(options);\n \n-\n             CAmount fee;\n             int change_position;\n             bool rbf{options.exists(\"replaceable\") ? options[\"replaceable\"].get_bool() : pwallet->m_signal_rbf};\n             CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf);\n+\n+            bool is_silent_payment{false};\n+\n+            for (uint64_t i = 0; i < rawTx.vout.size(); i++) {\n+                if (rawTx.vout[i].m_silentpayment) {\n+                    is_silent_payment = true;\n+                    break;\n+                }\n+            }\n+\n+            if (is_silent_payment) {\n+                if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                    throw JSONRPCError(RPC_WALLET_ERROR, \"Only descriptor wallets support silent payments.\");\n+                }\n+                if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) || pwallet->IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER) ) {\n+                    throw JSONRPCError(RPC_WALLET_ERROR, \"Silent payments require access to private keys to build transactions.\");\n+                }\n+                EnsureWalletIsUnlocked(*pwallet);\n+            }\n+",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This code seems to be duplicated in `send` and `walletcreatefundedpsbt` RPCs, maybe wrap this in a static function?",
      "created_at": "2022-10-31T09:44:18Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009216590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009216590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1323,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009218091",
      "pull_request_review_id": 1161566117,
      "id": 1009218091,
      "node_id": "PRRC_kwDOABII5848J3Ir",
      "diff_hunk": "@@ -2623,6 +2684,96 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+std::tuple<CKey,bool> DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, const bool onlyTaproot) const\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return {}; // returns an invalid private key\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+\n+\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            return {key.second, true};\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        CKey priv_key;\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, priv_key)) return {};\n+\n+        assert(XOnlyPubKey(priv_key.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+\n+        return {priv_key, true};\n+    } else if (onlyTaproot) {\n+        return {}; // returns an invalid private key\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return {}; // returns an invalid private key\n+    } else {\n+        return {key.second, false};\n+    }\n+}\n+\n+void DescriptorScriptPubKeyMan::LoadSilentRecipient()\n+{\n+    if (m_silent_recipient == nullptr) {\n+        LOCK(cs_desc_man);\n+\n+        std::vector<CKey> priv_keys;\n+\n+        for (auto& [_, priv_key] : m_map_keys) {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 171,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "268c3fd560964d708fb9718548d216149065112a\r\n```suggestion\r\n        for (const auto& [_, priv_key] : m_map_keys) {\r\n```",
      "created_at": "2022-10-31T09:45:55Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009218091",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009218091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2736,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009218466",
      "pull_request_review_id": 1161566117,
      "id": 1009218466,
      "node_id": "PRRC_kwDOABII5848J3Oi",
      "diff_hunk": "@@ -2623,6 +2684,96 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+std::tuple<CKey,bool> DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, const bool onlyTaproot) const\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return {}; // returns an invalid private key\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+\n+\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            return {key.second, true};\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        CKey priv_key;\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, priv_key)) return {};\n+\n+        assert(XOnlyPubKey(priv_key.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+\n+        return {priv_key, true};\n+    } else if (onlyTaproot) {\n+        return {}; // returns an invalid private key\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return {}; // returns an invalid private key\n+    } else {\n+        return {key.second, false};\n+    }\n+}\n+\n+void DescriptorScriptPubKeyMan::LoadSilentRecipient()\n+{\n+    if (m_silent_recipient == nullptr) {\n+        LOCK(cs_desc_man);\n+\n+        std::vector<CKey> priv_keys;\n+\n+        for (auto& [_, priv_key] : m_map_keys) {\n+            priv_keys.push_back(priv_key);\n+        }\n+\n+        assert(priv_keys.size() == 1);\n+\n+        m_silent_recipient = std::make_unique<silentpayment::Recipient>(priv_keys.at(0));\n+    }\n+}\n+\n+std::vector<std::tuple<CKey, int32_t>> DescriptorScriptPubKeyMan::VerifySilentPaymentAddress(\n+    std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "268c3fd560964d708fb9718548d216149065112a\r\n```suggestion\r\n    const std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,\r\n```",
      "created_at": "2022-10-31T09:46:20Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009218466",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009218466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2747,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009218652",
      "pull_request_review_id": 1161566117,
      "id": 1009218652,
      "node_id": "PRRC_kwDOABII5848J3Rc",
      "diff_hunk": "@@ -2623,6 +2684,96 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+std::tuple<CKey,bool> DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, const bool onlyTaproot) const\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return {}; // returns an invalid private key\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+\n+\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            return {key.second, true};\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        CKey priv_key;\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, priv_key)) return {};\n+\n+        assert(XOnlyPubKey(priv_key.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+\n+        return {priv_key, true};\n+    } else if (onlyTaproot) {\n+        return {}; // returns an invalid private key\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return {}; // returns an invalid private key\n+    } else {\n+        return {key.second, false};\n+    }\n+}\n+\n+void DescriptorScriptPubKeyMan::LoadSilentRecipient()\n+{\n+    if (m_silent_recipient == nullptr) {\n+        LOCK(cs_desc_man);\n+\n+        std::vector<CKey> priv_keys;\n+\n+        for (auto& [_, priv_key] : m_map_keys) {\n+            priv_keys.push_back(priv_key);\n+        }\n+\n+        assert(priv_keys.size() == 1);\n+\n+        m_silent_recipient = std::make_unique<silentpayment::Recipient>(priv_keys.at(0));\n+    }\n+}\n+\n+std::vector<std::tuple<CKey, int32_t>> DescriptorScriptPubKeyMan::VerifySilentPaymentAddress(\n+    std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,\n+    CPubKey& sender_pub_key)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 183,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "268c3fd560964d708fb9718548d216149065112a\r\n```suggestion\r\n    const CPubKey& sender_pub_key)\r\n```",
      "created_at": "2022-10-31T09:46:33Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009218652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009218652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2748,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009219653",
      "pull_request_review_id": 1161566117,
      "id": 1009219653,
      "node_id": "PRRC_kwDOABII5848J3hF",
      "diff_hunk": "@@ -750,6 +750,54 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     }\n }\n \n+bool CreateSilentTransaction(\n+    const CWallet& wallet,\n+    const std::vector<COutput>& selected_coins,\n+    CMutableTransaction& txNew,\n+    bilingual_str& error)\n+{\n+    std::vector<std::tuple<CKey,bool>> input_private_keys;\n+\n+    for (const auto& input : selected_coins) {\n+        const auto& spk_managers = wallet.GetScriptPubKeyMans(input.txout.scriptPubKey);\n+\n+        if (spk_managers.size() != 1) {\n+            error = _(\"Only one ScriptPubKeyManager was expected for the input.\");\n+            return false;\n+        }\n+\n+        DescriptorScriptPubKeyMan* spk_manager = dynamic_cast<DescriptorScriptPubKeyMan*>(*spk_managers.begin());",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a8931257c319e5c6e3e575171667d8f9cd61ace2\r\n```suggestion\r\n        const auto* spk_manager = dynamic_cast<DescriptorScriptPubKeyMan*>(*spk_managers.begin());\r\n```",
      "created_at": "2022-10-31T09:47:32Z",
      "updated_at": "2022-10-31T10:24:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009219653",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009219653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 769,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009220476",
      "pull_request_review_id": 1161566117,
      "id": 1009220476,
      "node_id": "PRRC_kwDOABII5848J3t8",
      "diff_hunk": "@@ -750,6 +750,54 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     }\n }\n \n+bool CreateSilentTransaction(\n+    const CWallet& wallet,\n+    const std::vector<COutput>& selected_coins,\n+    CMutableTransaction& txNew,\n+    bilingual_str& error)\n+{\n+    std::vector<std::tuple<CKey,bool>> input_private_keys;\n+\n+    for (const auto& input : selected_coins) {\n+        const auto& spk_managers = wallet.GetScriptPubKeyMans(input.txout.scriptPubKey);\n+\n+        if (spk_managers.size() != 1) {\n+            error = _(\"Only one ScriptPubKeyManager was expected for the input.\");\n+            return false;\n+        }\n+\n+        DescriptorScriptPubKeyMan* spk_manager = dynamic_cast<DescriptorScriptPubKeyMan*>(*spk_managers.begin());\n+\n+        const auto& [sender_secret_key, is_taproot]{spk_manager->GetPrivKeyForSilentPayment(input.txout.scriptPubKey, /*onlyTaproot=*/ false)};\n+\n+        if (!sender_secret_key.IsValid()) {\n+            error = _(\"The private key of one of the inputs was not found.\");\n+            return false;\n+        }\n+\n+        input_private_keys.push_back({sender_secret_key, is_taproot});",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a8931257c319e5c6e3e575171667d8f9cd61ace2\r\n```suggestion\r\n        input_private_keys.emplace_back(sender_secret_key, is_taproot);\r\n```",
      "created_at": "2022-10-31T09:48:23Z",
      "updated_at": "2022-10-31T10:24:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009220476",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009220476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 778,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009221659",
      "pull_request_review_id": 1161566117,
      "id": 1009221659,
      "node_id": "PRRC_kwDOABII5848J4Ab",
      "diff_hunk": "@@ -913,6 +961,19 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n     }\n     TRACE5(coin_selection, selected_coins, wallet.GetName().c_str(), GetAlgorithmName(result->GetAlgo()).c_str(), result->GetTarget(), result->GetWaste(), result->GetSelectedValue());\n \n+    bool is_silent_payment{false};\n+\n+    for (uint64_t i = 0; i < txNew.vout.size(); i++) {\n+        if (txNew.vout[i].m_silentpayment) {\n+            is_silent_payment = true;\n+            break;\n+        }\n+    }",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a8931257c319e5c6e3e575171667d8f9cd61ace2\r\n```suggestion\r\n    for (const auto& out : txNew.vout) {\r\n        if (out.m_silentpayment) {\r\n            is_silent_payment = true;\r\n            break;\r\n        }\r\n    }\r\n```",
      "created_at": "2022-10-31T09:49:35Z",
      "updated_at": "2022-10-31T10:24:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009221659",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009221659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 966,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 981,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009225555",
      "pull_request_review_id": 1161566117,
      "id": 1009225555,
      "node_id": "PRRC_kwDOABII5848J49T",
      "diff_hunk": "@@ -1156,70 +1193,235 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n-bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n {\n-    const CTransaction& tx = *ptx;\n-    {\n-        AssertLockHeld(cs_wallet);\n-\n-        if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n-            for (const CTxIn& txin : tx.vin) {\n-                std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n-                while (range.first != range.second) {\n-                    if (range.first->second != tx.GetHash()) {\n-                        WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n-                        MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n-                    }\n-                    range.first++;\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n                 }\n             }\n         }\n+    }\n \n-        bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n-        if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n+    for(const auto& [key, identifier]: rawTrKeys) {\n+\n+        std::string desc = \"rawtr(\" + EncodeSecret(key) + \")\";\n+        std::string checksum = GetDescriptorChecksum(desc);\n+\n+        auto timestamp = std::chrono::duration_cast<std::chrono::microseconds>(\n+            std::chrono::system_clock::now().time_since_epoch()).count();\n+\n+        std::string desc_check = desc + \"#\" + checksum;\n+\n+        FlatSigningProvider keys;\n+        std::string error;\n+        auto parsed_desc = Parse(desc_check, keys, error, /* require_checksum = */ true);\n+        assert(parsed_desc);\n+\n+        int64_t range_start = 0, range_end = 1, next_index = 0;\n+\n+        // Need to ExpandPrivate to check if private keys are available for all pubkeys\n+        FlatSigningProvider expand_keys;\n+        std::vector<CScript> scripts;\n+        assert(parsed_desc->Expand(0, keys, scripts, expand_keys));\n+        parsed_desc->ExpandPrivate(0, keys, expand_keys);\n+\n+        WalletDescriptor w_desc(std::move(parsed_desc), timestamp, range_start, range_end, next_index);\n+\n+        std::string label;\n+\n+        if (m_silent_address_book.count(identifier)) {\n+            auto entry = m_silent_address_book[identifier];\n+            label = entry.m_label;\n+        } else {\n+            std::stringstream ss;\n+            ss << identifier;\n+            label = ss.str();\n+        }\n+\n+        auto existing_spk_manager = GetDescriptorScriptPubKeyMan(w_desc);\n+        if (!existing_spk_manager) {\n+            auto spk_manager = AddWalletDescriptor(w_desc, keys, label, false);\n+            assert(spk_manager != nullptr);\n+        }\n+    }\n+\n+    return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+}\n+\n+bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+{\n+    const CTransaction& tx = *ptx;\n+\n+    AssertLockHeld(cs_wallet);\n+\n+    std::vector<std::tuple<CKey, int32_t>> rawTrKeys;\n+\n+    if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n+        for (const CTxIn& txin : tx.vin) {\n+            std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n+            while (range.first != range.second) {\n+                if (range.first->second != tx.GetHash()) {\n+                    WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n+                    MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n                 }\n+                range.first++;\n             }\n+        }\n+    }\n+\n+    bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n+    if (fExisted && !fUpdate) return false;\n+\n+    bool ret = (fExisted || IsMine(tx) || IsFromMe(tx)) ? HandleNewTxBelongingToMe(tx, state, rescanning_old_block) : false;\n+    if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys)) {\n+        ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n+    }\n+    return ret;\n+}\n+\n+Coin CWallet::FindPreviousCoin(const CTxIn& txin)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 247,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "268c3fd560964d708fb9718548d216149065112a\r\n```suggestion\r\nCoin CWallet::FindPreviousCoin(const CTxIn& txin) const\r\n```",
      "created_at": "2022-10-31T09:53:42Z",
      "updated_at": "2022-10-31T10:24:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009225555",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009225555"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1322,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009227644",
      "pull_request_review_id": 1161566117,
      "id": 1009227644,
      "node_id": "PRRC_kwDOABII5848J5d8",
      "diff_hunk": "@@ -1156,70 +1193,235 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n-bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n {\n-    const CTransaction& tx = *ptx;\n-    {\n-        AssertLockHeld(cs_wallet);\n-\n-        if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n-            for (const CTxIn& txin : tx.vin) {\n-                std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n-                while (range.first != range.second) {\n-                    if (range.first->second != tx.GetHash()) {\n-                        WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n-                        MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n-                    }\n-                    range.first++;\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n                 }\n             }\n         }\n+    }\n \n-        bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n-        if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n+    for(const auto& [key, identifier]: rawTrKeys) {\n+\n+        std::string desc = \"rawtr(\" + EncodeSecret(key) + \")\";\n+        std::string checksum = GetDescriptorChecksum(desc);\n+\n+        auto timestamp = std::chrono::duration_cast<std::chrono::microseconds>(\n+            std::chrono::system_clock::now().time_since_epoch()).count();\n+\n+        std::string desc_check = desc + \"#\" + checksum;\n+\n+        FlatSigningProvider keys;\n+        std::string error;\n+        auto parsed_desc = Parse(desc_check, keys, error, /* require_checksum = */ true);\n+        assert(parsed_desc);\n+\n+        int64_t range_start = 0, range_end = 1, next_index = 0;\n+\n+        // Need to ExpandPrivate to check if private keys are available for all pubkeys\n+        FlatSigningProvider expand_keys;\n+        std::vector<CScript> scripts;\n+        assert(parsed_desc->Expand(0, keys, scripts, expand_keys));\n+        parsed_desc->ExpandPrivate(0, keys, expand_keys);\n+\n+        WalletDescriptor w_desc(std::move(parsed_desc), timestamp, range_start, range_end, next_index);\n+\n+        std::string label;\n+\n+        if (m_silent_address_book.count(identifier)) {\n+            auto entry = m_silent_address_book[identifier];\n+            label = entry.m_label;\n+        } else {\n+            std::stringstream ss;\n+            ss << identifier;\n+            label = ss.str();\n+        }\n+\n+        auto existing_spk_manager = GetDescriptorScriptPubKeyMan(w_desc);\n+        if (!existing_spk_manager) {\n+            auto spk_manager = AddWalletDescriptor(w_desc, keys, label, false);\n+            assert(spk_manager != nullptr);\n+        }\n+    }\n+\n+    return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+}\n+\n+bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+{\n+    const CTransaction& tx = *ptx;\n+\n+    AssertLockHeld(cs_wallet);\n+\n+    std::vector<std::tuple<CKey, int32_t>> rawTrKeys;\n+\n+    if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n+        for (const CTxIn& txin : tx.vin) {\n+            std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n+            while (range.first != range.second) {\n+                if (range.first->second != tx.GetHash()) {\n+                    WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n+                    MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n                 }\n+                range.first++;\n             }\n+        }\n+    }\n+\n+    bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n+    if (fExisted && !fUpdate) return false;\n+\n+    bool ret = (fExisted || IsMine(tx) || IsFromMe(tx)) ? HandleNewTxBelongingToMe(tx, state, rescanning_old_block) : false;\n+    if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys)) {\n+        ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n+    }\n+    return ret;\n+}\n+\n+Coin CWallet::FindPreviousCoin(const CTxIn& txin)\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];",
      "path": "src/wallet/wallet.cpp",
      "position": 245,
      "original_position": 251,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a56b75609aafbf6ea1a9c1a280ccd3133c28d13b\r\nis this intended?",
      "created_at": "2022-10-31T09:55:55Z",
      "updated_at": "2022-10-31T10:24:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009227644",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009227644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1344,
      "original_line": 1344,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009229121",
      "pull_request_review_id": 1161566117,
      "id": 1009229121,
      "node_id": "PRRC_kwDOABII5848J51B",
      "diff_hunk": "@@ -1156,70 +1193,235 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n-bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n {\n-    const CTransaction& tx = *ptx;\n-    {\n-        AssertLockHeld(cs_wallet);\n-\n-        if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n-            for (const CTxIn& txin : tx.vin) {\n-                std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n-                while (range.first != range.second) {\n-                    if (range.first->second != tx.GetHash()) {\n-                        WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n-                        MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n-                    }\n-                    range.first++;\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n                 }\n             }\n         }\n+    }\n \n-        bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n-        if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n+    for(const auto& [key, identifier]: rawTrKeys) {\n+\n+        std::string desc = \"rawtr(\" + EncodeSecret(key) + \")\";\n+        std::string checksum = GetDescriptorChecksum(desc);\n+\n+        auto timestamp = std::chrono::duration_cast<std::chrono::microseconds>(\n+            std::chrono::system_clock::now().time_since_epoch()).count();\n+\n+        std::string desc_check = desc + \"#\" + checksum;\n+\n+        FlatSigningProvider keys;\n+        std::string error;\n+        auto parsed_desc = Parse(desc_check, keys, error, /* require_checksum = */ true);\n+        assert(parsed_desc);\n+\n+        int64_t range_start = 0, range_end = 1, next_index = 0;\n+\n+        // Need to ExpandPrivate to check if private keys are available for all pubkeys\n+        FlatSigningProvider expand_keys;\n+        std::vector<CScript> scripts;\n+        assert(parsed_desc->Expand(0, keys, scripts, expand_keys));\n+        parsed_desc->ExpandPrivate(0, keys, expand_keys);\n+\n+        WalletDescriptor w_desc(std::move(parsed_desc), timestamp, range_start, range_end, next_index);\n+\n+        std::string label;\n+\n+        if (m_silent_address_book.count(identifier)) {\n+            auto entry = m_silent_address_book[identifier];\n+            label = entry.m_label;\n+        } else {\n+            std::stringstream ss;\n+            ss << identifier;\n+            label = ss.str();\n+        }\n+\n+        auto existing_spk_manager = GetDescriptorScriptPubKeyMan(w_desc);\n+        if (!existing_spk_manager) {\n+            auto spk_manager = AddWalletDescriptor(w_desc, keys, label, false);\n+            assert(spk_manager != nullptr);\n+        }\n+    }\n+\n+    return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+}\n+\n+bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+{\n+    const CTransaction& tx = *ptx;\n+\n+    AssertLockHeld(cs_wallet);\n+\n+    std::vector<std::tuple<CKey, int32_t>> rawTrKeys;\n+\n+    if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n+        for (const CTxIn& txin : tx.vin) {\n+            std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n+            while (range.first != range.second) {\n+                if (range.first->second != tx.GetHash()) {\n+                    WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n+                    MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n                 }\n+                range.first++;\n             }\n+        }\n+    }\n+\n+    bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n+    if (fExisted && !fUpdate) return false;\n+\n+    bool ret = (fExisted || IsMine(tx) || IsFromMe(tx)) ? HandleNewTxBelongingToMe(tx, state, rescanning_old_block) : false;\n+    if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys)) {\n+        ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n+    }\n+    return ret;\n+}\n+\n+Coin CWallet::FindPreviousCoin(const CTxIn& txin)\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];\n+    chain().findCoins(coins);\n+\n+    auto pos = coins.find(txin.prevout);\n+\n+    Coin coin = pos->second;\n+\n+    // TODO: can more than one txin.prevout be in the mempool (RBF) ?\n+    pos++;\n+    assert( pos == coins.end() );\n+\n+    return coin;\n+}\n+\n+bool CWallet::VerifySilentPayment(const CTransaction& tx, std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    if (tx.IsCoinBase() || tx.vin.empty()) return false;\n+\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) return false;\n \n-            // Block disconnection override an abandoned tx as unconfirmed\n-            // which means user may have to call abandontransaction again\n-            TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n-            CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n-            if (!wtx) {\n-                // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n-                // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n-                throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    std::vector<std::tuple<CScript, XOnlyPubKey>> outputPubKeys;\n+\n+    for (auto& vout : tx.vout) {\n+\n+        if (IsMine(vout)) {\n+            continue;\n+        }\n+\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+\n+        // Silent Payments require that the recipients use Taproot address\n+        if (whichType != TxoutType::WITNESS_V1_TAPROOT) {\n+            continue;\n+        }\n+\n+        auto xOnlyPubKey = XOnlyPubKey(solutions[0]);\n+\n+        if (!xOnlyPubKey.IsFullyValid()) {\n+            continue;\n+        }\n+\n+        outputPubKeys.emplace_back(vout.scriptPubKey, xOnlyPubKey);\n+    }\n+\n+    if (outputPubKeys.empty()) {\n+        return false;\n+    }\n+\n+    std::vector<XOnlyPubKey> input_xonly_pubkeys;\n+    std::vector<CPubKey> input_pubkeys;\n+\n+    for (const CTxIn& txin : tx.vin) {\n+        const Coin prev_coin{FindPreviousCoin(txin)};\n+\n+        auto pubkey_variant = silentpayment::ExtractPubkeyFromInput(prev_coin, txin);\n+\n+        if (std::holds_alternative<CPubKey>(pubkey_variant)) {\n+            auto pubkey = std::get<CPubKey>(pubkey_variant);\n+            if (pubkey.IsFullyValid()) {\n+                input_pubkeys.push_back(pubkey);\n+            }\n+        } else if (std::holds_alternative<XOnlyPubKey>(pubkey_variant)) {\n+            auto pubkey = std::get<XOnlyPubKey>(pubkey_variant);\n+            if (pubkey.IsFullyValid()) {\n+                input_xonly_pubkeys.push_back(pubkey);\n             }\n-            return true;\n         }",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 329,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This seems to be duplicated code from `wallet/wallet.cpp:1384` and `index/silentpaymentindex.cpp:101`, can you re-use it?",
      "created_at": "2022-10-31T09:57:28Z",
      "updated_at": "2022-10-31T10:24:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1009229121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1009229121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1385,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1393,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010983782",
      "pull_request_review_id": 1164168170,
      "id": 1010983782,
      "node_id": "PRRC_kwDOABII5848QmNm",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, pubkey] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), pubkey);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, CPubKey& sum_tx_pubkeys) const\n+{\n+    if (tx->IsCoinBase()) {\n+        return false;\n+    }\n+\n+    std::unordered_set<TxoutType> tx_vout_types;\n+    for (auto& vout : tx->vout) {\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+        tx_vout_types.insert(whichType);\n+    }\n+\n+    // Silent Payments require that the recipients use Taproot address\n+    // so one output at least must be Taproot\n+    if (tx_vout_types.find(TxoutType::WITNESS_V1_TAPROOT) == tx_vout_types.end()) {\n+        return false;\n+    }\n+\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+\n+    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        return false;\n+    }\n+\n+    CTxUndo* undoTX {nullptr};\n+    auto it = std::find_if(block.vtx.begin(), block.vtx.end(), [tx](CTransactionRef t){ return *t == *tx; });\n+    if (it != block.vtx.end()) {\n+        // -1 as blockundo does not have coinbase tx\n+        undoTX = &blockUndo.vtxundo.at(it - block.vtx.begin() - 1);\n+    }\n+\n+    if (undoTX == nullptr) {\n+        return false;\n+    }\n+\n+    assert(tx->vin.size() == undoTX->vprevout.size());\n+\n+    std::vector<XOnlyPubKey> input_xonly_pubkeys;\n+    std::vector<CPubKey> input_pubkeys;\n+\n+    for (size_t i = 0; i < tx->vin.size(); i++)\n+    {\n+        const Coin& prev_coin{undoTX->vprevout[i]};\n+\n+        const CTxIn& txin{tx->vin.at(i)};\n+\n+        auto pubkey_variant = silentpayment::ExtractPubkeyFromInput(prev_coin, txin);\n+\n+        if (std::holds_alternative<CPubKey>(pubkey_variant)) {\n+            auto pubkey = std::get<CPubKey>(pubkey_variant);",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 102,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009199941,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 05ef1b48bfd6cb466bac118a917449b1d26d043d.",
      "created_at": "2022-11-01T23:08:52Z",
      "updated_at": "2022-11-01T23:08:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1010983782",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010983782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010983858",
      "pull_request_review_id": 1164168289,
      "id": 1010983858,
      "node_id": "PRRC_kwDOABII5848QmOy",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, pubkey] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), pubkey);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, CPubKey& sum_tx_pubkeys) const\n+{\n+    if (tx->IsCoinBase()) {\n+        return false;\n+    }\n+\n+    std::unordered_set<TxoutType> tx_vout_types;\n+    for (auto& vout : tx->vout) {\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+        tx_vout_types.insert(whichType);\n+    }\n+\n+    // Silent Payments require that the recipients use Taproot address\n+    // so one output at least must be Taproot\n+    if (tx_vout_types.find(TxoutType::WITNESS_V1_TAPROOT) == tx_vout_types.end()) {\n+        return false;\n+    }\n+\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+\n+    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        return false;\n+    }\n+\n+    CTxUndo* undoTX {nullptr};\n+    auto it = std::find_if(block.vtx.begin(), block.vtx.end(), [tx](CTransactionRef t){ return *t == *tx; });\n+    if (it != block.vtx.end()) {\n+        // -1 as blockundo does not have coinbase tx\n+        undoTX = &blockUndo.vtxundo.at(it - block.vtx.begin() - 1);\n+    }\n+\n+    if (undoTX == nullptr) {\n+        return false;\n+    }\n+\n+    assert(tx->vin.size() == undoTX->vprevout.size());\n+\n+    std::vector<XOnlyPubKey> input_xonly_pubkeys;\n+    std::vector<CPubKey> input_pubkeys;\n+\n+    for (size_t i = 0; i < tx->vin.size(); i++)\n+    {\n+        const Coin& prev_coin{undoTX->vprevout[i]};\n+\n+        const CTxIn& txin{tx->vin.at(i)};\n+\n+        auto pubkey_variant = silentpayment::ExtractPubkeyFromInput(prev_coin, txin);\n+\n+        if (std::holds_alternative<CPubKey>(pubkey_variant)) {\n+            auto pubkey = std::get<CPubKey>(pubkey_variant);\n+            if (pubkey.IsFullyValid()) {\n+                input_pubkeys.push_back(pubkey);\n+            }\n+        } else if (std::holds_alternative<XOnlyPubKey>(pubkey_variant)) {\n+            auto pubkey = std::get<XOnlyPubKey>(pubkey_variant);",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009200242,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 05ef1b48bfd6cb466bac118a917449b1d26d043d.",
      "created_at": "2022-11-01T23:09:03Z",
      "updated_at": "2022-11-01T23:09:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1010983858",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010983858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010983985",
      "pull_request_review_id": 1164168476,
      "id": 1010983985,
      "node_id": "PRRC_kwDOABII5848QmQx",
      "diff_hunk": "@@ -278,6 +280,39 @@ std::string EncodeDestination(const CTxDestination& dest)\n     return std::visit(DestinationEncoder(Params()), dest);\n }\n \n+std::string EncodeSilentDestination(const CPubKey pubkey, const int32_t silent_payment_index)",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009201659,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 7f71bc26087227fb0659800eaffa3c4198e6109e.",
      "created_at": "2022-11-01T23:09:20Z",
      "updated_at": "2022-11-01T23:09:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1010983985",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1010983985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 283,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011005629",
      "pull_request_review_id": 1164195220,
      "id": 1011005629,
      "node_id": "PRRC_kwDOABII5848Qri9",
      "diff_hunk": "@@ -299,3 +334,55 @@ bool IsValidDestinationString(const std::string& str)\n {\n     return IsValidDestinationString(str, Params());\n }\n+\n+std::tuple<CPubKey, int32_t> DecodeSilentData(const std::vector<unsigned char>& data)\n+{\n+    if (data.size() <= 33) {\n+        return {CPubKey(), 0};\n+    }\n+\n+    std::vector<unsigned char> pubkey_data(data.end() - 33, data.end());\n+    CPubKey pubkey{pubkey_data.begin(), pubkey_data.end()};\n+\n+    std::vector<unsigned char> index_data(data.begin(), data.end() - 33);\n+\n+    int32_t index = 0;\n+    int shift = 0;\n+\n+    for (auto it = index_data.begin(); it != index_data.end(); it++) {\n+        index |=  (*it << shift);\n+        shift += 8;\n+    }",
      "path": "src/key_io.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009203402,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/7f71bc26087227fb0659800eaffa3c4198e6109e.",
      "created_at": "2022-11-01T23:46:28Z",
      "updated_at": "2022-11-01T23:46:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011005629",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011005629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 352,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 355,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011005814",
      "pull_request_review_id": 1164195432,
      "id": 1011005814,
      "node_id": "PRRC_kwDOABII5848Qrl2",
      "diff_hunk": "@@ -57,6 +57,13 @@ CTxOut::CTxOut(const CAmount& nValueIn, CScript scriptPubKeyIn)\n     scriptPubKey = scriptPubKeyIn;\n }\n \n+CTxOut::CTxOut(const CAmount& nValueIn, CScript scriptPubKeyIn, bool silentpayment)\n+{\n+    nValue = nValueIn;\n+    scriptPubKey = scriptPubKeyIn;\n+    m_silentpayment = silentpayment;\n+}\n+",
      "path": "src/primitives/transaction.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009207838,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in e833dd60f8bceff2d81acea7b0aadfb1b97baa71.",
      "created_at": "2022-11-01T23:46:47Z",
      "updated_at": "2022-11-01T23:46:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011005814",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011005814"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 60,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 61,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011006007",
      "pull_request_review_id": 1164195636,
      "id": 1011006007,
      "node_id": "PRRC_kwDOABII5848Qro3",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#include <silentpayment.h>\n+\n+#include <coins.h>\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const std::vector<std::tuple<CKey, bool>>& sender_secret_keys, const CPubKey& recipient_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    const auto& [seckey, is_taproot] = sender_secret_keys.at(0);\n+\n+    unsigned char sum_seckey[32];\n+    memcpy(sum_seckey, seckey.data(), 32);\n+    assert(memcmp(sum_seckey, seckey.data(), 32) == 0);\n+\n+    if (is_taproot && seckey.GetPubKey()[0] == 3) {\n+        int return_val = secp256k1_ec_seckey_negate(m_context, sum_seckey);\n+        assert(return_val);\n+    }\n+\n+    if (sender_secret_keys.size() > 1) {\n+        for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+\n+            const auto& [sender_seckey, sender_is_taproot] = sender_secret_keys.at(i);\n+\n+            unsigned char seckey_i[32];\n+            memcpy(seckey_i, sender_seckey.begin(), 32);\n+            assert(memcmp(seckey_i, sender_seckey.begin(), 32) == 0);\n+\n+            if (sender_is_taproot && sender_seckey.GetPubKey()[0] == 3) {\n+                int return_val = secp256k1_ec_seckey_negate(m_context, seckey_i);\n+                assert(return_val);\n+            }\n+\n+            int return_val = secp256k1_ec_seckey_tweak_add(m_context, sum_seckey, seckey_i);\n+            assert(return_val);\n+        }\n+    }\n+\n+    secp256k1_pubkey parsed_recipient_public_key;\n+    int return_val = secp256k1_ec_pubkey_parse(m_context, &parsed_recipient_public_key, recipient_public_key.data(), recipient_public_key.size());\n+    assert(return_val);\n+\n+\n+    return_val = secp256k1_ecdh(m_context, m_shared_secret, &parsed_recipient_public_key, sum_seckey, nullptr, nullptr);\n+    assert(return_val);\n+\n+    // store recipient's pubkey\n+    return_val = secp256k1_ec_pubkey_parse(m_context, &m_recipient_public_key, recipient_public_key.data(), recipient_public_key.size());\n+    assert(return_val);\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(m_shared_secret), std::end(m_shared_secret), true);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak2(const int32_t& identifier) const\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    int return_val = memcmp(shared_secret, m_shared_secret, 32);\n+    assert(return_val == 0);\n+\n+    // Add the identifier to the shared_secret\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+    assert(return_val);\n+\n+    secp256k1_pubkey recipient_public_key;\n+    memcpy(recipient_public_key.data, m_recipient_public_key.data, 64);\n+    assert(memcmp(recipient_public_key.data, m_recipient_public_key.data, 64) == 0);\n+\n+    // Tweak the recipient's pubkey with identifier + shared_secret\n+    return_val = secp256k1_ec_pubkey_tweak_add(m_context, &recipient_public_key, shared_secret);",
      "path": "src/silentpayment.cpp",
      "position": null,
      "original_position": 88,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009212088,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in b6b55768c0b0fbc4632a3e4be31583349c637b96.",
      "created_at": "2022-11-01T23:47:10Z",
      "updated_at": "2022-11-01T23:47:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011006007",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011006007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011006232",
      "pull_request_review_id": 1164195918,
      "id": 1011006232,
      "node_id": "PRRC_kwDOABII5848QrsY",
      "diff_hunk": "@@ -0,0 +1,294 @@\n+#include <silentpayment.h>\n+\n+#include <coins.h>\n+#include <key_io.h>\n+#include <secp256k1.h>\n+#include <secp256k1_ecdh.h>\n+#include <secp256k1_extrakeys.h>\n+#include <arith_uint256.h>\n+\n+namespace silentpayment {\n+\n+Sender::Sender(const std::vector<std::tuple<CKey, bool>>& sender_secret_keys, const CPubKey& recipient_public_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    const auto& [seckey, is_taproot] = sender_secret_keys.at(0);\n+\n+    unsigned char sum_seckey[32];\n+    memcpy(sum_seckey, seckey.data(), 32);\n+    assert(memcmp(sum_seckey, seckey.data(), 32) == 0);\n+\n+    if (is_taproot && seckey.GetPubKey()[0] == 3) {\n+        int return_val = secp256k1_ec_seckey_negate(m_context, sum_seckey);\n+        assert(return_val);\n+    }\n+\n+    if (sender_secret_keys.size() > 1) {\n+        for (size_t i = 1; i < sender_secret_keys.size(); i++) {\n+\n+            const auto& [sender_seckey, sender_is_taproot] = sender_secret_keys.at(i);\n+\n+            unsigned char seckey_i[32];\n+            memcpy(seckey_i, sender_seckey.begin(), 32);\n+            assert(memcmp(seckey_i, sender_seckey.begin(), 32) == 0);\n+\n+            if (sender_is_taproot && sender_seckey.GetPubKey()[0] == 3) {\n+                int return_val = secp256k1_ec_seckey_negate(m_context, seckey_i);\n+                assert(return_val);\n+            }\n+\n+            int return_val = secp256k1_ec_seckey_tweak_add(m_context, sum_seckey, seckey_i);\n+            assert(return_val);\n+        }\n+    }\n+\n+    secp256k1_pubkey parsed_recipient_public_key;\n+    int return_val = secp256k1_ec_pubkey_parse(m_context, &parsed_recipient_public_key, recipient_public_key.data(), recipient_public_key.size());\n+    assert(return_val);\n+\n+\n+    return_val = secp256k1_ecdh(m_context, m_shared_secret, &parsed_recipient_public_key, sum_seckey, nullptr, nullptr);\n+    assert(return_val);\n+\n+    // store recipient's pubkey\n+    return_val = secp256k1_ec_pubkey_parse(m_context, &m_recipient_public_key, recipient_public_key.data(), recipient_public_key.size());\n+    assert(return_val);\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(m_shared_secret), std::end(m_shared_secret), true);\n+}\n+\n+Sender::~Sender()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_x_only_public_key.data, 0, sizeof(m_recipient_x_only_public_key.data));\n+}\n+\n+XOnlyPubKey Sender::Tweak2(const int32_t& identifier) const\n+{\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    int return_val = memcmp(shared_secret, m_shared_secret, 32);\n+    assert(return_val == 0);\n+\n+    // Add the identifier to the shared_secret\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+    assert(return_val);\n+\n+    secp256k1_pubkey recipient_public_key;\n+    memcpy(recipient_public_key.data, m_recipient_public_key.data, 64);\n+    assert(memcmp(recipient_public_key.data, m_recipient_public_key.data, 64) == 0);\n+\n+    // Tweak the recipient's pubkey with identifier + shared_secret\n+    return_val = secp256k1_ec_pubkey_tweak_add(m_context, &recipient_public_key, shared_secret);\n+\n+    // Serialize and test the tweaked public key\n+    size_t len;\n+    unsigned char serialized_output_pubkey[33];\n+    len = sizeof(serialized_output_pubkey);\n+    return_val = secp256k1_ec_pubkey_serialize(m_context, serialized_output_pubkey, &len, &recipient_public_key, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CPubKey pubKey = CPubKey(serialized_output_pubkey);\n+\n+    assert(pubKey.IsFullyValid());\n+\n+    return XOnlyPubKey(pubKey);\n+}\n+\n+Recipient::Recipient(const CKey& recipient_secret_key)\n+{\n+    m_context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    int return_val = secp256k1_keypair_create(m_context, &m_recipient_keypair, recipient_secret_key.begin());\n+    assert(return_val);\n+\n+    memcpy(m_recipient_seckey, recipient_secret_key.data(), 32);\n+    assert(memcmp(m_recipient_seckey, recipient_secret_key.data(), 32) == 0);\n+}\n+\n+void Recipient::SetSenderPublicKey(const CPubKey& sender_public_key)\n+{\n+    secp256k1_pubkey sender_pubkey;\n+    int return_val = secp256k1_ec_pubkey_parse(m_context, &sender_pubkey, sender_public_key.data(), sender_public_key.size());\n+    assert(return_val);\n+\n+    return_val = secp256k1_ecdh(m_context, m_shared_secret, &sender_pubkey, m_recipient_seckey, nullptr, nullptr);\n+    assert(return_val);\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(m_shared_secret), std::end(m_shared_secret), true);\n+}\n+\n+Recipient::~Recipient()\n+{\n+    secp256k1_context_destroy(m_context);\n+    memset(m_recipient_seckey, 0, sizeof(m_recipient_seckey));\n+    memset(m_shared_secret, 0, sizeof(m_shared_secret));\n+    memset(m_recipient_keypair.data, 0, sizeof(m_recipient_keypair.data));\n+}\n+\n+std::tuple<CKey,XOnlyPubKey> Recipient::Tweak2(const int32_t& identifier) const\n+{\n+    secp256k1_keypair recipient_keypair;\n+    memcpy(recipient_keypair.data, m_recipient_keypair.data, 96);\n+    assert(memcmp(recipient_keypair.data, m_recipient_keypair.data, 96) == 0);\n+\n+    unsigned char shared_secret[32];\n+    memcpy(shared_secret, m_shared_secret, 32);\n+    int return_val = memcmp(shared_secret, m_shared_secret, 32);\n+    assert(return_val == 0);\n+\n+    arith_uint256 tweak;\n+    tweak = tweak + identifier;\n+\n+    return_val = secp256k1_ec_seckey_tweak_add(m_context, shared_secret, ArithToUint256(tweak).data());\n+    assert(return_val);\n+\n+    unsigned char result_secret_key[32];\n+    return_val = secp256k1_keypair_sec(m_context, result_secret_key, &recipient_keypair);\n+    assert(return_val);\n+\n+    secp256k1_pubkey result_pubkey;\n+    return_val = secp256k1_keypair_pub(m_context, &result_pubkey, &recipient_keypair);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_seckey_tweak_add(m_context, result_secret_key, shared_secret);\n+    assert(return_val);\n+\n+    return_val = secp256k1_ec_pubkey_tweak_add(m_context, &result_pubkey, shared_secret);\n+    assert(return_val);\n+\n+    // Serialize and test the tweaked public key\n+    size_t len;\n+    unsigned char pubkey_bytes[33];\n+    len = sizeof(pubkey_bytes);\n+    return_val = secp256k1_ec_pubkey_serialize(m_context, pubkey_bytes, &len, &result_pubkey, SECP256K1_EC_COMPRESSED);\n+    assert(return_val);\n+\n+    CKey ckey;\n+    ckey.Set(std::begin(result_secret_key), std::end(result_secret_key), true);\n+\n+    return {ckey, XOnlyPubKey{CPubKey{pubkey_bytes}}};\n+}\n+\n+CPubKey Recipient::SumPublicKeys(const std::vector<CPubKey>& sender_public_keys, const std::vector<XOnlyPubKey>& sender_x_only_public_key)\n+{\n+    auto context = secp256k1_context_create(SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY);\n+\n+    std::vector<secp256k1_pubkey> v_pubkeys;\n+\n+    for (auto& pubkey : sender_public_keys) {\n+        secp256k1_pubkey parsed_pubkey;\n+        int return_val = secp256k1_ec_pubkey_parse(context, &parsed_pubkey, pubkey.data(), pubkey.size());\n+        assert(return_val);\n+\n+        v_pubkeys.push_back(parsed_pubkey);\n+    }\n+\n+    for (auto& xpubkey : sender_x_only_public_key) {\n+        auto pubkey = xpubkey.ConvertToCompressedPubKey();\n+        secp256k1_pubkey parsed_pubkey;\n+        int return_val = secp256k1_ec_pubkey_parse(context, &parsed_pubkey, pubkey.data(), pubkey.size());\n+        assert(return_val);\n+\n+        v_pubkeys.push_back(parsed_pubkey);\n+    }\n+\n+    std::vector<secp256k1_pubkey *> p_pubkeys;\n+    for (size_t i = 0; i < v_pubkeys.size(); i++) {\n+        p_pubkeys.push_back(&v_pubkeys.at(i));\n+    }",
      "path": "src/silentpayment.cpp",
      "position": null,
      "original_position": 206,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009213729,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/b6b55768c0b0fbc4632a3e4be31583349c637b96.",
      "created_at": "2022-11-01T23:47:39Z",
      "updated_at": "2022-11-01T23:47:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011006232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011006232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 204,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 173,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011006732",
      "pull_request_review_id": 1164196545,
      "id": 1011006732,
      "node_id": "PRRC_kwDOABII5848Qr0M",
      "diff_hunk": "@@ -1214,11 +1214,30 @@ RPCHelpMan send()\n             InterpretFeeEstimationInstructions(/*conf_target=*/request.params[1], /*estimate_mode=*/request.params[2], /*fee_rate=*/request.params[3], options);\n             PreventOutdatedOptions(options);\n \n-\n             CAmount fee;\n             int change_position;\n             bool rbf{options.exists(\"replaceable\") ? options[\"replaceable\"].get_bool() : pwallet->m_signal_rbf};\n             CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf);\n+\n+            bool is_silent_payment{false};\n+\n+            for (uint64_t i = 0; i < rawTx.vout.size(); i++) {\n+                if (rawTx.vout[i].m_silentpayment) {",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009215421,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in e833dd60f8bceff2d81acea7b0aadfb1b97baa71.",
      "created_at": "2022-11-01T23:48:39Z",
      "updated_at": "2022-11-01T23:48:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011006732",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011006732"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1224,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1225,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011006834",
      "pull_request_review_id": 1164196793,
      "id": 1011006834,
      "node_id": "PRRC_kwDOABII5848Qr1y",
      "diff_hunk": "@@ -1214,11 +1214,30 @@ RPCHelpMan send()\n             InterpretFeeEstimationInstructions(/*conf_target=*/request.params[1], /*estimate_mode=*/request.params[2], /*fee_rate=*/request.params[3], options);\n             PreventOutdatedOptions(options);\n \n-\n             CAmount fee;\n             int change_position;\n             bool rbf{options.exists(\"replaceable\") ? options[\"replaceable\"].get_bool() : pwallet->m_signal_rbf};\n             CMutableTransaction rawTx = ConstructTransaction(options[\"inputs\"], request.params[0], options[\"locktime\"], rbf);\n+\n+            bool is_silent_payment{false};\n+\n+            for (uint64_t i = 0; i < rawTx.vout.size(); i++) {\n+                if (rawTx.vout[i].m_silentpayment) {\n+                    is_silent_payment = true;\n+                    break;\n+                }\n+            }\n+\n+            if (is_silent_payment) {\n+                if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                    throw JSONRPCError(RPC_WALLET_ERROR, \"Only descriptor wallets support silent payments.\");\n+                }\n+                if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) || pwallet->IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER) ) {\n+                    throw JSONRPCError(RPC_WALLET_ERROR, \"Silent payments require access to private keys to build transactions.\");\n+                }\n+                EnsureWalletIsUnlocked(*pwallet);\n+            }\n+",
      "path": "src/wallet/rpc/spend.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009216590,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in e833dd60f8bceff2d81acea7b0aadfb1b97baa71.",
      "created_at": "2022-11-01T23:48:48Z",
      "updated_at": "2022-11-01T23:48:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011006834",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011006834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 1222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1323,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007448",
      "pull_request_review_id": 1164197819,
      "id": 1011007448,
      "node_id": "PRRC_kwDOABII5848Qr_Y",
      "diff_hunk": "@@ -2623,6 +2684,96 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+std::tuple<CKey,bool> DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, const bool onlyTaproot) const\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return {}; // returns an invalid private key\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+\n+\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            return {key.second, true};\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        CKey priv_key;\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, priv_key)) return {};\n+\n+        assert(XOnlyPubKey(priv_key.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+\n+        return {priv_key, true};\n+    } else if (onlyTaproot) {\n+        return {}; // returns an invalid private key\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return {}; // returns an invalid private key\n+    } else {\n+        return {key.second, false};\n+    }\n+}\n+\n+void DescriptorScriptPubKeyMan::LoadSilentRecipient()\n+{\n+    if (m_silent_recipient == nullptr) {\n+        LOCK(cs_desc_man);\n+\n+        std::vector<CKey> priv_keys;\n+\n+        for (auto& [_, priv_key] : m_map_keys) {",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 171,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009218091,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 94bbc986d176244658a931037dab67de4d9fdb4a.",
      "created_at": "2022-11-01T23:49:39Z",
      "updated_at": "2022-11-01T23:49:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011007448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2736,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007449",
      "pull_request_review_id": 1164197819,
      "id": 1011007449,
      "node_id": "PRRC_kwDOABII5848Qr_Z",
      "diff_hunk": "@@ -2623,6 +2684,96 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+std::tuple<CKey,bool> DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, const bool onlyTaproot) const\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return {}; // returns an invalid private key\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+\n+\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            return {key.second, true};\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        CKey priv_key;\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, priv_key)) return {};\n+\n+        assert(XOnlyPubKey(priv_key.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+\n+        return {priv_key, true};\n+    } else if (onlyTaproot) {\n+        return {}; // returns an invalid private key\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return {}; // returns an invalid private key\n+    } else {\n+        return {key.second, false};\n+    }\n+}\n+\n+void DescriptorScriptPubKeyMan::LoadSilentRecipient()\n+{\n+    if (m_silent_recipient == nullptr) {\n+        LOCK(cs_desc_man);\n+\n+        std::vector<CKey> priv_keys;\n+\n+        for (auto& [_, priv_key] : m_map_keys) {\n+            priv_keys.push_back(priv_key);\n+        }\n+\n+        assert(priv_keys.size() == 1);\n+\n+        m_silent_recipient = std::make_unique<silentpayment::Recipient>(priv_keys.at(0));\n+    }\n+}\n+\n+std::vector<std::tuple<CKey, int32_t>> DescriptorScriptPubKeyMan::VerifySilentPaymentAddress(\n+    std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 182,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009218466,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 94bbc986d176244658a931037dab67de4d9fdb4a.",
      "created_at": "2022-11-01T23:49:39Z",
      "updated_at": "2022-11-01T23:49:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011007449",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2747,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007628",
      "pull_request_review_id": 1164198027,
      "id": 1011007628,
      "node_id": "PRRC_kwDOABII5848QsCM",
      "diff_hunk": "@@ -2623,6 +2684,96 @@ bool DescriptorScriptPubKeyMan::AddCryptedKey(const CKeyID& key_id, const CPubKe\n     return true;\n }\n \n+std::tuple<CKey,bool> DescriptorScriptPubKeyMan::GetPrivKeyForSilentPayment(const CScript& scriptPubKey, const bool onlyTaproot) const\n+{\n+    std::vector<std::vector<unsigned char>> solutions;\n+    TxoutType whichType = Solver(scriptPubKey, solutions);\n+\n+    std::unique_ptr<FlatSigningProvider> coin_keys = GetSigningProvider(scriptPubKey, true);\n+    if (!coin_keys || coin_keys->keys.size() != 1) {\n+        return {}; // returns an invalid private key\n+    }\n+\n+    auto& key = *coin_keys->keys.begin();\n+\n+    // Tweak the private key as GetSigningProvider returns the original key.\n+    // Taproot addresses / scriptPubKeys use tweaked public key, not the original key.\n+    if (whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+\n+\n+        auto pubKeyFromScriptPubKey = XOnlyPubKey(solutions[0]);\n+\n+        // this means it is a \"rawtr\" output\n+        if (XOnlyPubKey(key.second.GetPubKey()) == pubKeyFromScriptPubKey) {\n+            return {key.second, true};\n+        }\n+\n+        TaprootSpendData spenddata;\n+        coin_keys->GetTaprootSpendData(pubKeyFromScriptPubKey, spenddata);\n+\n+        CKey priv_key;\n+        if(!key.second.TweakCKey(&spenddata.merkle_root, priv_key)) return {};\n+\n+        assert(XOnlyPubKey(priv_key.GetPubKey()) ==  pubKeyFromScriptPubKey);\n+\n+        return {priv_key, true};\n+    } else if (onlyTaproot) {\n+        return {}; // returns an invalid private key\n+    } else if (whichType == TxoutType::NONSTANDARD || whichType == TxoutType::MULTISIG || whichType == TxoutType::WITNESS_UNKNOWN ) {\n+        return {}; // returns an invalid private key\n+    } else {\n+        return {key.second, false};\n+    }\n+}\n+\n+void DescriptorScriptPubKeyMan::LoadSilentRecipient()\n+{\n+    if (m_silent_recipient == nullptr) {\n+        LOCK(cs_desc_man);\n+\n+        std::vector<CKey> priv_keys;\n+\n+        for (auto& [_, priv_key] : m_map_keys) {\n+            priv_keys.push_back(priv_key);\n+        }\n+\n+        assert(priv_keys.size() == 1);\n+\n+        m_silent_recipient = std::make_unique<silentpayment::Recipient>(priv_keys.at(0));\n+    }\n+}\n+\n+std::vector<std::tuple<CKey, int32_t>> DescriptorScriptPubKeyMan::VerifySilentPaymentAddress(\n+    std::vector<std::tuple<CScript, XOnlyPubKey>>& tx_output_pub_keys,\n+    CPubKey& sender_pub_key)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 183,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009218652,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 94bbc986d176244658a931037dab67de4d9fdb4a.",
      "created_at": "2022-11-01T23:50:04Z",
      "updated_at": "2022-11-01T23:50:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011007628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2748,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007675",
      "pull_request_review_id": 1164198087,
      "id": 1011007675,
      "node_id": "PRRC_kwDOABII5848QsC7",
      "diff_hunk": "@@ -750,6 +750,54 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     }\n }\n \n+bool CreateSilentTransaction(\n+    const CWallet& wallet,\n+    const std::vector<COutput>& selected_coins,\n+    CMutableTransaction& txNew,\n+    bilingual_str& error)\n+{\n+    std::vector<std::tuple<CKey,bool>> input_private_keys;\n+\n+    for (const auto& input : selected_coins) {\n+        const auto& spk_managers = wallet.GetScriptPubKeyMans(input.txout.scriptPubKey);\n+\n+        if (spk_managers.size() != 1) {\n+            error = _(\"Only one ScriptPubKeyManager was expected for the input.\");\n+            return false;\n+        }\n+\n+        DescriptorScriptPubKeyMan* spk_manager = dynamic_cast<DescriptorScriptPubKeyMan*>(*spk_managers.begin());",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009219653,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in e833dd60f8bceff2d81acea7b0aadfb1b97baa71.",
      "created_at": "2022-11-01T23:50:11Z",
      "updated_at": "2022-11-01T23:50:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011007675",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 769,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007766",
      "pull_request_review_id": 1164198207,
      "id": 1011007766,
      "node_id": "PRRC_kwDOABII5848QsEW",
      "diff_hunk": "@@ -750,6 +750,54 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     }\n }\n \n+bool CreateSilentTransaction(\n+    const CWallet& wallet,\n+    const std::vector<COutput>& selected_coins,\n+    CMutableTransaction& txNew,\n+    bilingual_str& error)\n+{\n+    std::vector<std::tuple<CKey,bool>> input_private_keys;\n+\n+    for (const auto& input : selected_coins) {\n+        const auto& spk_managers = wallet.GetScriptPubKeyMans(input.txout.scriptPubKey);\n+\n+        if (spk_managers.size() != 1) {\n+            error = _(\"Only one ScriptPubKeyManager was expected for the input.\");\n+            return false;\n+        }\n+\n+        DescriptorScriptPubKeyMan* spk_manager = dynamic_cast<DescriptorScriptPubKeyMan*>(*spk_managers.begin());\n+\n+        const auto& [sender_secret_key, is_taproot]{spk_manager->GetPrivKeyForSilentPayment(input.txout.scriptPubKey, /*onlyTaproot=*/ false)};\n+\n+        if (!sender_secret_key.IsValid()) {\n+            error = _(\"The private key of one of the inputs was not found.\");\n+            return false;\n+        }\n+\n+        input_private_keys.push_back({sender_secret_key, is_taproot});",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009220476,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/e833dd60f8bceff2d81acea7b0aadfb1b97baa71.",
      "created_at": "2022-11-01T23:50:27Z",
      "updated_at": "2022-11-01T23:50:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011007766",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 778,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007813",
      "pull_request_review_id": 1164198273,
      "id": 1011007813,
      "node_id": "PRRC_kwDOABII5848QsFF",
      "diff_hunk": "@@ -913,6 +961,19 @@ static util::Result<CreatedTransactionResult> CreateTransactionInternal(\n     }\n     TRACE5(coin_selection, selected_coins, wallet.GetName().c_str(), GetAlgorithmName(result->GetAlgo()).c_str(), result->GetTarget(), result->GetWaste(), result->GetSelectedValue());\n \n+    bool is_silent_payment{false};\n+\n+    for (uint64_t i = 0; i < txNew.vout.size(); i++) {\n+        if (txNew.vout[i].m_silentpayment) {\n+            is_silent_payment = true;\n+            break;\n+        }\n+    }",
      "path": "src/wallet/spend.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009221659,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/e833dd60f8bceff2d81acea7b0aadfb1b97baa71.",
      "created_at": "2022-11-01T23:50:35Z",
      "updated_at": "2022-11-01T23:50:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011007813",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 966,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 981,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007924",
      "pull_request_review_id": 1164198390,
      "id": 1011007924,
      "node_id": "PRRC_kwDOABII5848QsG0",
      "diff_hunk": "@@ -1156,70 +1193,235 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n-bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n {\n-    const CTransaction& tx = *ptx;\n-    {\n-        AssertLockHeld(cs_wallet);\n-\n-        if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n-            for (const CTxIn& txin : tx.vin) {\n-                std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n-                while (range.first != range.second) {\n-                    if (range.first->second != tx.GetHash()) {\n-                        WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n-                        MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n-                    }\n-                    range.first++;\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n                 }\n             }\n         }\n+    }\n \n-        bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n-        if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n+    for(const auto& [key, identifier]: rawTrKeys) {\n+\n+        std::string desc = \"rawtr(\" + EncodeSecret(key) + \")\";\n+        std::string checksum = GetDescriptorChecksum(desc);\n+\n+        auto timestamp = std::chrono::duration_cast<std::chrono::microseconds>(\n+            std::chrono::system_clock::now().time_since_epoch()).count();\n+\n+        std::string desc_check = desc + \"#\" + checksum;\n+\n+        FlatSigningProvider keys;\n+        std::string error;\n+        auto parsed_desc = Parse(desc_check, keys, error, /* require_checksum = */ true);\n+        assert(parsed_desc);\n+\n+        int64_t range_start = 0, range_end = 1, next_index = 0;\n+\n+        // Need to ExpandPrivate to check if private keys are available for all pubkeys\n+        FlatSigningProvider expand_keys;\n+        std::vector<CScript> scripts;\n+        assert(parsed_desc->Expand(0, keys, scripts, expand_keys));\n+        parsed_desc->ExpandPrivate(0, keys, expand_keys);\n+\n+        WalletDescriptor w_desc(std::move(parsed_desc), timestamp, range_start, range_end, next_index);\n+\n+        std::string label;\n+\n+        if (m_silent_address_book.count(identifier)) {\n+            auto entry = m_silent_address_book[identifier];\n+            label = entry.m_label;\n+        } else {\n+            std::stringstream ss;\n+            ss << identifier;\n+            label = ss.str();\n+        }\n+\n+        auto existing_spk_manager = GetDescriptorScriptPubKeyMan(w_desc);\n+        if (!existing_spk_manager) {\n+            auto spk_manager = AddWalletDescriptor(w_desc, keys, label, false);\n+            assert(spk_manager != nullptr);\n+        }\n+    }\n+\n+    return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+}\n+\n+bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+{\n+    const CTransaction& tx = *ptx;\n+\n+    AssertLockHeld(cs_wallet);\n+\n+    std::vector<std::tuple<CKey, int32_t>> rawTrKeys;\n+\n+    if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n+        for (const CTxIn& txin : tx.vin) {\n+            std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n+            while (range.first != range.second) {\n+                if (range.first->second != tx.GetHash()) {\n+                    WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n+                    MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n                 }\n+                range.first++;\n             }\n+        }\n+    }\n+\n+    bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n+    if (fExisted && !fUpdate) return false;\n+\n+    bool ret = (fExisted || IsMine(tx) || IsFromMe(tx)) ? HandleNewTxBelongingToMe(tx, state, rescanning_old_block) : false;\n+    if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys)) {\n+        ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n+    }\n+    return ret;\n+}\n+\n+Coin CWallet::FindPreviousCoin(const CTxIn& txin)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 247,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009225555,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in https://github.com/bitcoin/bitcoin/commit/94bbc986d176244658a931037dab67de4d9fdb4a.",
      "created_at": "2022-11-01T23:50:47Z",
      "updated_at": "2022-11-01T23:50:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011007924",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011007924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1322,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011014779",
      "pull_request_review_id": 1164208199,
      "id": 1011014779,
      "node_id": "PRRC_kwDOABII5848Qtx7",
      "diff_hunk": "@@ -1156,70 +1193,235 @@ bool CWallet::LoadToWallet(const uint256& hash, const UpdateWalletTxFn& fill_wtx\n     return true;\n }\n \n-bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+bool CWallet::HandleNewTxBelongingToMe(const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block)\n {\n-    const CTransaction& tx = *ptx;\n-    {\n-        AssertLockHeld(cs_wallet);\n-\n-        if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n-            for (const CTxIn& txin : tx.vin) {\n-                std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n-                while (range.first != range.second) {\n-                    if (range.first->second != tx.GetHash()) {\n-                        WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n-                        MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n-                    }\n-                    range.first++;\n+    AssertLockHeld(cs_wallet);\n+\n+    /* Check if any keys in the wallet keypool that were supposed to be unused\n+        * have appeared in a new transaction. If so, remove those keys from the keypool.\n+        * This can happen when restoring an old wallet backup that does not contain\n+        * the mostly recently created transactions from newer versions of the wallet.\n+        */\n+\n+    // loop though all outputs\n+    for (const CTxOut& txout: tx.vout) {\n+        for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n+            for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n+                // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n+                if (!dest.internal.has_value()) {\n+                    dest.internal = IsInternalScriptPubKeyMan(spk_man);\n+                }\n+\n+                // skip if can't determine whether it's a receiving address or not\n+                if (!dest.internal.has_value()) continue;\n+\n+                // If this is a receiving address and it's not in the address book yet\n+                // (e.g. it wasn't generated on this node or we're restoring from backup)\n+                // add it to the address book for proper transaction accounting\n+                if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n+                    SetAddressBook(dest.dest, \"\", \"receive\");\n                 }\n             }\n         }\n+    }\n \n-        bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n-        if (fExisted && !fUpdate) return false;\n-        if (fExisted || IsMine(tx) || IsFromMe(tx))\n-        {\n-            /* Check if any keys in the wallet keypool that were supposed to be unused\n-             * have appeared in a new transaction. If so, remove those keys from the keypool.\n-             * This can happen when restoring an old wallet backup that does not contain\n-             * the mostly recently created transactions from newer versions of the wallet.\n-             */\n-\n-            // loop though all outputs\n-            for (const CTxOut& txout: tx.vout) {\n-                for (const auto& spk_man : GetScriptPubKeyMans(txout.scriptPubKey)) {\n-                    for (auto &dest : spk_man->MarkUnusedAddresses(txout.scriptPubKey)) {\n-                        // If internal flag is not defined try to infer it from the ScriptPubKeyMan\n-                        if (!dest.internal.has_value()) {\n-                            dest.internal = IsInternalScriptPubKeyMan(spk_man);\n-                        }\n+    // Block disconnection override an abandoned tx as unconfirmed\n+    // which means user may have to call abandontransaction again\n+    TxState tx_state = std::visit([](auto&& s) -> TxState { return s; }, state);\n+    CWalletTx* wtx = AddToWallet(MakeTransactionRef(tx), tx_state, /*update_wtx=*/nullptr, /*fFlushOnClose=*/false, rescanning_old_block);\n+    if (!wtx) {\n+        // Can only be nullptr if there was a db write error (missing db, read-only db or a db engine internal writing error).\n+        // As we only store arriving transaction in this process, and we don't want an inconsistent state, let's throw an error.\n+        throw std::runtime_error(\"DB error adding transaction to wallet, write failed\");\n+    }\n+    return true;\n+}\n \n-                        // skip if can't determine whether it's a receiving address or not\n-                        if (!dest.internal.has_value()) continue;\n+bool CWallet::AddSilentScriptKeyMan(\n+    const CTransaction& tx, const SyncTxState& state, bool rescanning_old_block, const std::vector<std::tuple<CKey, int32_t>>& rawTrKeys)\n+{\n+    WalletLogPrintf(\"Silent Transaction identified: %s.\\n\", tx.GetHash().ToString());\n \n-                        // If this is a receiving address and it's not in the address book yet\n-                        // (e.g. it wasn't generated on this node or we're restoring from backup)\n-                        // add it to the address book for proper transaction accounting\n-                        if (!*dest.internal && !FindAddressBookEntry(dest.dest, /* allow_change= */ false)) {\n-                            SetAddressBook(dest.dest, \"\", \"receive\");\n-                        }\n-                    }\n+    for(const auto& [key, identifier]: rawTrKeys) {\n+\n+        std::string desc = \"rawtr(\" + EncodeSecret(key) + \")\";\n+        std::string checksum = GetDescriptorChecksum(desc);\n+\n+        auto timestamp = std::chrono::duration_cast<std::chrono::microseconds>(\n+            std::chrono::system_clock::now().time_since_epoch()).count();\n+\n+        std::string desc_check = desc + \"#\" + checksum;\n+\n+        FlatSigningProvider keys;\n+        std::string error;\n+        auto parsed_desc = Parse(desc_check, keys, error, /* require_checksum = */ true);\n+        assert(parsed_desc);\n+\n+        int64_t range_start = 0, range_end = 1, next_index = 0;\n+\n+        // Need to ExpandPrivate to check if private keys are available for all pubkeys\n+        FlatSigningProvider expand_keys;\n+        std::vector<CScript> scripts;\n+        assert(parsed_desc->Expand(0, keys, scripts, expand_keys));\n+        parsed_desc->ExpandPrivate(0, keys, expand_keys);\n+\n+        WalletDescriptor w_desc(std::move(parsed_desc), timestamp, range_start, range_end, next_index);\n+\n+        std::string label;\n+\n+        if (m_silent_address_book.count(identifier)) {\n+            auto entry = m_silent_address_book[identifier];\n+            label = entry.m_label;\n+        } else {\n+            std::stringstream ss;\n+            ss << identifier;\n+            label = ss.str();\n+        }\n+\n+        auto existing_spk_manager = GetDescriptorScriptPubKeyMan(w_desc);\n+        if (!existing_spk_manager) {\n+            auto spk_manager = AddWalletDescriptor(w_desc, keys, label, false);\n+            assert(spk_manager != nullptr);\n+        }\n+    }\n+\n+    return HandleNewTxBelongingToMe(tx, state, rescanning_old_block);\n+}\n+\n+bool CWallet::AddToWalletIfInvolvingMe(const CTransactionRef& ptx, const SyncTxState& state, bool fUpdate, bool rescanning_old_block)\n+{\n+    const CTransaction& tx = *ptx;\n+\n+    AssertLockHeld(cs_wallet);\n+\n+    std::vector<std::tuple<CKey, int32_t>> rawTrKeys;\n+\n+    if (auto* conf = std::get_if<TxStateConfirmed>(&state)) {\n+        for (const CTxIn& txin : tx.vin) {\n+            std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range = mapTxSpends.equal_range(txin.prevout);\n+            while (range.first != range.second) {\n+                if (range.first->second != tx.GetHash()) {\n+                    WalletLogPrintf(\"Transaction %s (in block %s) conflicts with wallet transaction %s (both spend %s:%i)\\n\", tx.GetHash().ToString(), conf->confirmed_block_hash.ToString(), range.first->second.ToString(), range.first->first.hash.ToString(), range.first->first.n);\n+                    MarkConflicted(conf->confirmed_block_hash, conf->confirmed_block_height, range.first->second);\n                 }\n+                range.first++;\n             }\n+        }\n+    }\n+\n+    bool fExisted = mapWallet.count(tx.GetHash()) != 0;\n+    if (fExisted && !fUpdate) return false;\n+\n+    bool ret = (fExisted || IsMine(tx) || IsFromMe(tx)) ? HandleNewTxBelongingToMe(tx, state, rescanning_old_block) : false;\n+    if (IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT) && VerifySilentPayment(tx, rawTrKeys)) {\n+        ret = AddSilentScriptKeyMan(tx, state, rescanning_old_block, rawTrKeys) || ret;\n+    }\n+    return ret;\n+}\n+\n+Coin CWallet::FindPreviousCoin(const CTxIn& txin)\n+{\n+    // Find the UTXO being spent in UTXO Set to learn the transaction type\n+    std::map<COutPoint, Coin> coins;\n+    coins[txin.prevout];",
      "path": "src/wallet/wallet.cpp",
      "position": 245,
      "original_position": 251,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "2fe96a4241a4c4402c202631d219b4544820e908",
      "in_reply_to_id": 1009227644,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes. I think this is the expected way to call `void FindCoins(const NodeContext& node, std::map<COutPoint, Coin>& coins)`.\r\nOther examples:\r\nhttps://github.com/bitcoin/bitcoin/blob/bf0cb4399061c6827bd5d7428a146010102d7ab1/src/rpc/rawtransaction.cpp#L664-L669\r\nhttps://github.com/bitcoin/bitcoin/blob/bf0cb4399061c6827bd5d7428a146010102d7ab1/src/wallet/feebumper.cpp#L176-L180\r\nhttps://github.com/bitcoin/bitcoin/blob/bf0cb4399061c6827bd5d7428a146010102d7ab1/src/wallet/spend.cpp#L1106-L1110",
      "created_at": "2022-11-02T00:07:03Z",
      "updated_at": "2022-11-02T00:07:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1011014779",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011014779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1344,
      "original_line": 1344,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072215399",
      "pull_request_review_id": 1251563653,
      "id": 1072215399,
      "node_id": "PRRC_kwDOABII584_6LVn",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, pubkey] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), pubkey);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, CPubKey& sum_tx_pubkeys) const\n+{\n+    if (tx->IsCoinBase()) {\n+        return false;\n+    }\n+\n+    std::unordered_set<TxoutType> tx_vout_types;\n+    for (auto& vout : tx->vout) {\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+        tx_vout_types.insert(whichType);\n+    }\n+\n+    // Silent Payments require that the recipients use Taproot address\n+    // so one output at least must be Taproot\n+    if (tx_vout_types.find(TxoutType::WITNESS_V1_TAPROOT) == tx_vout_types.end()) {\n+        return false;\n+    }\n+\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+\n+    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        return false;\n+    }",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "f7bda4c6959594b8a9e1dc10a04dd697307e3fa3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`GetSilentPaymentKey` is executed for each transaction for each block during the index creation.\r\nBut it is reading block undo data and block data for every transaction, this can be optimized by reading it only once per block in the parent function (`SilentPaymentIndex::CustomAppend`).\r\n\r\n```diff\r\ndiff --git a/src/index/silentpaymentindex.cpp b/src/index/silentpaymentindex.cpp\r\nindex 65329a408..601a09d21 100644\r\n--- a/src/index/silentpaymentindex.cpp\r\n+++ b/src/index/silentpaymentindex.cpp\r\n@@ -48,7 +48,7 @@ SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain,\r\n \r\n SilentPaymentIndex::~SilentPaymentIndex() {}\r\n \r\n-bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, CPubKey& sum_tx_pubkeys) const\r\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlock& block, const CBlockUndo& blockUndo, CPubKey& sum_tx_pubkeys) const\r\n {\r\n     if (tx->IsCoinBase()) {\r\n         return false;\r\n@@ -67,32 +67,22 @@ bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CB\r\n         return false;\r\n     }\r\n \r\n-    CBlockUndo blockUndo;\r\n-    CBlock block;\r\n-\r\n-    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\r\n+    auto it = std::find_if(block.vtx.cbegin(), block.vtx.cend(), [tx](CTransactionRef t){ return *t == *tx; });\r\n+    if (it == block.vtx.end()) {\r\n         return false;\r\n     }\r\n \r\n-    CTxUndo* undoTX {nullptr};\r\n-    auto it = std::find_if(block.vtx.begin(), block.vtx.end(), [tx](CTransactionRef t){ return *t == *tx; });\r\n-    if (it != block.vtx.end()) {\r\n-        // -1 as blockundo does not have coinbase tx\r\n-        undoTX = &blockUndo.vtxundo.at(it - block.vtx.begin() - 1);\r\n-    }\r\n-\r\n-    if (undoTX == nullptr) {\r\n-        return false;\r\n-    }\r\n+    // -1 as blockundo does not have coinbase tx    \r\n+    const auto& undoTX = blockUndo.vtxundo.at(it - block.vtx.begin() - 1);\r\n \r\n-    assert(tx->vin.size() == undoTX->vprevout.size());\r\n+    assert(tx->vin.size() == undoTX.vprevout.size());\r\n \r\n     std::vector<XOnlyPubKey> input_xonly_pubkeys;\r\n     std::vector<CPubKey> input_pubkeys;\r\n \r\n     for (size_t i = 0; i < tx->vin.size(); i++)\r\n     {\r\n-        const Coin& prev_coin{undoTX->vprevout[i]};\r\n+        const Coin& prev_coin{undoTX.vprevout[i]};\r\n \r\n         const CTxIn& txin{tx->vin.at(i)};\r\n \r\n@@ -140,9 +130,16 @@ bool SilentPaymentIndex::CustomAppend(const interfaces::BlockInfo& block)\r\n \r\n     const CBlockIndex* pindex = WITH_LOCK(cs_main, return m_chainstate->m_blockman.LookupBlockIndex(block.hash));\r\n \r\n+    CBlockUndo blockundo;\r\n+    CBlock blockdata;\r\n+\r\n+    if (!(UndoReadFromDisk(blockundo, pindex) && ReadBlockFromDisk(blockdata, pindex, Params().GetConsensus()))) {\r\n+        return false;\r\n+    }\r\n+\r\n     for (const auto& tx : block.data->vtx) {\r\n         CPubKey tweakedKey;\r\n-        if (GetSilentPaymentKey(tx, pindex, tweakedKey)) {\r\n+        if (GetSilentPaymentKey(tx, blockdata, blockundo, tweakedKey)) {\r\n             items.emplace_back(tx->GetHash(), tweakedKey);\r\n         }\r\n \r\ndiff --git a/src/index/silentpaymentindex.h b/src/index/silentpaymentindex.h\r\nindex 44e601334..ef3942686 100644\r\n--- a/src/index/silentpaymentindex.h\r\n+++ b/src/index/silentpaymentindex.h\r\n@@ -22,7 +22,7 @@ private:\r\n \r\n     bool AllowPrune() const override { return false; }\r\n \r\n-    bool GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* pindex, CPubKey& sum_tx_pubkeys) const;\r\n+    bool GetSilentPaymentKey(const CTransactionRef& tx, const CBlock& block, const CBlockUndo& blockUndo, CPubKey& sum_tx_pubkeys) const;\r\n \r\n protected:\r\n     bool CustomAppend(const interfaces::BlockInfo& block) override;\r\n```\r\n\r\nThis patch speeds up the scanning by 11x (from 11 block/s to 124 block/s)\r\n\r\nAlso note that once #24230 is merged, block data (and undo data) will be available in the BlockInfo struct directly (In `SilentPaymentIndex::CustomAppend`) if the index is configured with additional options.\r\n(Currently, the `data` and `undo_data` of the BlockInfo struct is unused.)",
      "created_at": "2023-01-17T13:35:07Z",
      "updated_at": "2023-01-17T15:55:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1072215399",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072215399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 70,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072222220",
      "pull_request_review_id": 1251563653,
      "id": 1072222220,
      "node_id": "PRRC_kwDOABII584_6NAM",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, pubkey] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), pubkey);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, CPubKey& sum_tx_pubkeys) const\n+{\n+    if (tx->IsCoinBase()) {\n+        return false;\n+    }\n+\n+    std::unordered_set<TxoutType> tx_vout_types;\n+    for (auto& vout : tx->vout) {\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+        tx_vout_types.insert(whichType);\n+    }\n+\n+    // Silent Payments require that the recipients use Taproot address\n+    // so one output at least must be Taproot\n+    if (tx_vout_types.find(TxoutType::WITNESS_V1_TAPROOT) == tx_vout_types.end()) {\n+        return false;\n+    }\n+\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+\n+    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        return false;\n+    }\n+\n+    CTxUndo* undoTX {nullptr};\n+    auto it = std::find_if(block.vtx.begin(), block.vtx.end(), [tx](CTransactionRef t){ return *t == *tx; });\n+    if (it != block.vtx.end()) {\n+        // -1 as blockundo does not have coinbase tx\n+        undoTX = &blockUndo.vtxundo.at(it - block.vtx.begin() - 1);\n+    }\n+\n+    if (undoTX == nullptr) {\n+        return false;\n+    }\n+\n+    assert(tx->vin.size() == undoTX->vprevout.size());\n+\n+    std::vector<XOnlyPubKey> input_xonly_pubkeys;\n+    std::vector<CPubKey> input_pubkeys;\n+\n+    for (size_t i = 0; i < tx->vin.size(); i++)\n+    {\n+        const Coin& prev_coin{undoTX->vprevout[i]};\n+\n+        const CTxIn& txin{tx->vin.at(i)};\n+\n+        const auto& pubkey_variant{silentpayment::ExtractPubkeyFromInput(prev_coin, txin)};\n+\n+        if (std::holds_alternative<CPubKey>(pubkey_variant)) {\n+            const auto& pubkey{std::get<CPubKey>(pubkey_variant)};\n+            if (pubkey.IsFullyValid()) {\n+                input_pubkeys.push_back(pubkey);\n+            }\n+        } else if (std::holds_alternative<XOnlyPubKey>(pubkey_variant)) {\n+            const auto& pubkey{std::get<XOnlyPubKey>(pubkey_variant)};\n+            if (pubkey.IsFullyValid()) {\n+                input_xonly_pubkeys.push_back(pubkey);\n+            }\n+        }\n+    }\n+\n+    // Currently Silent Payment scheme uses all keys. If not possible to\n+    // retrieve all keys, it is not a SP transaction.\n+    if ((input_pubkeys.size() + input_xonly_pubkeys.size()) != tx->vin.size()) {\n+        return false;\n+    }\n+\n+    sum_tx_pubkeys = silentpayment::Recipient::CombinePublicKeys(input_pubkeys, input_xonly_pubkeys);\n+    assert(sum_tx_pubkeys.IsFullyValid());\n+\n+    return true;\n+}\n+\n+bool SilentPaymentIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    // Exclude genesis block transaction because outputs are not spendable.\n+    if (block.height == 0) return true;\n+\n+    assert(block.data);\n+\n+    Consensus::Params consensus = Params().GetConsensus();\n+\n+    if (block.height < consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height) {\n+        return true;\n+    }\n+\n+    std::vector<std::pair<uint256, CPubKey>> items; // <tx_hash, sum of public keys of transaction inputs >\n+\n+    const CBlockIndex* pindex = WITH_LOCK(cs_main, return m_chainstate->m_blockman.LookupBlockIndex(block.hash));\n+\n+    for (const auto& tx : block.data->vtx) {\n+        CPubKey tweakedKey;\n+        if (GetSilentPaymentKey(tx, pindex, tweakedKey)) {\n+            items.emplace_back(tx->GetHash(), tweakedKey);\n+        }\n+\n+    }",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 149,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "f7bda4c6959594b8a9e1dc10a04dd697307e3fa3",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It may be better to execute this function for the entire block instead of executing it for every transaction, and have the for loop inside the function. This would avoid a lot of function calls.",
      "created_at": "2023-01-17T13:41:23Z",
      "updated_at": "2023-01-17T15:55:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1072222220",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1072222220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 143,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089910515",
      "pull_request_review_id": 1274128609,
      "id": 1089910515,
      "node_id": "PRRC_kwDOABII585A9rbz",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, pubkey] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), pubkey);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, CPubKey& sum_tx_pubkeys) const\n+{\n+    if (tx->IsCoinBase()) {\n+        return false;\n+    }\n+\n+    std::unordered_set<TxoutType> tx_vout_types;\n+    for (auto& vout : tx->vout) {\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+        tx_vout_types.insert(whichType);\n+    }\n+\n+    // Silent Payments require that the recipients use Taproot address\n+    // so one output at least must be Taproot\n+    if (tx_vout_types.find(TxoutType::WITNESS_V1_TAPROOT) == tx_vout_types.end()) {\n+        return false;\n+    }\n+\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+\n+    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        return false;\n+    }",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "f7bda4c6959594b8a9e1dc10a04dd697307e3fa3",
      "in_reply_to_id": 1072215399,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Really good catch @aureleoules !\r\nThanks for the all the reviews.\r\nThis improves the index considerably. Done in 1fe05939916b779c7f9111bcbaeaace03595c014.\r\nI added you as co-author.",
      "created_at": "2023-01-29T09:27:32Z",
      "updated_at": "2023-01-29T09:27:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1089910515",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089910515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 70,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089910537",
      "pull_request_review_id": 1274128626,
      "id": 1089910537,
      "node_id": "PRRC_kwDOABII585A9rcJ",
      "diff_hunk": "@@ -0,0 +1,165 @@\n+#include <index/silentpaymentindex.h>\n+\n+#include <chainparams.h>\n+#include <coins.h>\n+#include <index/disktxpos.h>\n+#include <node/blockstorage.h>\n+#include <pubkey.h>\n+#include <undo.h>\n+#include <util/system.h>\n+#include <validation.h>\n+#include <silentpayment.h>\n+\n+#include <dbwrapper.h>\n+#include <hash.h>\n+\n+using node::ReadBlockFromDisk;\n+using node::UndoReadFromDisk;\n+\n+constexpr uint8_t DB_SILENTPAYMENTINDEX{'s'};\n+\n+std::unique_ptr<SilentPaymentIndex> g_silentpaymentindex;\n+\n+/** Access to the silent payment index database (indexes/silentpaymentindex/) */\n+class SilentPaymentIndex::DB : public BaseIndex::DB\n+{\n+public:\n+    explicit DB(size_t n_cache_size, bool f_memory = false, bool f_wipe = false);\n+\n+    bool WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items);\n+};\n+\n+SilentPaymentIndex::DB::DB(size_t n_cache_size, bool f_memory, bool f_wipe) :\n+    BaseIndex::DB(gArgs.GetDataDirNet() / \"indexes\" / \"silentpaymentindex\", n_cache_size, f_memory, f_wipe)\n+{}\n+\n+bool SilentPaymentIndex::DB::WriteSilentPayments(const std::vector<std::pair<uint256, CPubKey>>& items)\n+{\n+    CDBBatch batch(*this);\n+    for (const auto& [tx_hash, pubkey] : items) {\n+        batch.Write(std::make_pair(DB_SILENTPAYMENTINDEX, tx_hash), pubkey);\n+    }\n+    return WriteBatch(batch);\n+}\n+\n+SilentPaymentIndex::SilentPaymentIndex(std::unique_ptr<interfaces::Chain> chain, size_t n_cache_size, bool f_memory, bool f_wipe)\n+    : BaseIndex(std::move(chain), \"silentpaymentindex\"), m_db(std::make_unique<SilentPaymentIndex::DB>(n_cache_size, f_memory, f_wipe))\n+{}\n+\n+SilentPaymentIndex::~SilentPaymentIndex() {}\n+\n+bool SilentPaymentIndex::GetSilentPaymentKey(const CTransactionRef& tx, const CBlockIndex* blockindex, CPubKey& sum_tx_pubkeys) const\n+{\n+    if (tx->IsCoinBase()) {\n+        return false;\n+    }\n+\n+    std::unordered_set<TxoutType> tx_vout_types;\n+    for (auto& vout : tx->vout) {\n+        std::vector<std::vector<unsigned char>> solutions;\n+        TxoutType whichType = Solver(vout.scriptPubKey, solutions);\n+        tx_vout_types.insert(whichType);\n+    }\n+\n+    // Silent Payments require that the recipients use Taproot address\n+    // so one output at least must be Taproot\n+    if (tx_vout_types.find(TxoutType::WITNESS_V1_TAPROOT) == tx_vout_types.end()) {\n+        return false;\n+    }\n+\n+    CBlockUndo blockUndo;\n+    CBlock block;\n+\n+    if (!(UndoReadFromDisk(blockUndo, blockindex) && ReadBlockFromDisk(block, blockindex, Params().GetConsensus()))) {\n+        return false;\n+    }\n+\n+    CTxUndo* undoTX {nullptr};\n+    auto it = std::find_if(block.vtx.begin(), block.vtx.end(), [tx](CTransactionRef t){ return *t == *tx; });\n+    if (it != block.vtx.end()) {\n+        // -1 as blockundo does not have coinbase tx\n+        undoTX = &blockUndo.vtxundo.at(it - block.vtx.begin() - 1);\n+    }\n+\n+    if (undoTX == nullptr) {\n+        return false;\n+    }\n+\n+    assert(tx->vin.size() == undoTX->vprevout.size());\n+\n+    std::vector<XOnlyPubKey> input_xonly_pubkeys;\n+    std::vector<CPubKey> input_pubkeys;\n+\n+    for (size_t i = 0; i < tx->vin.size(); i++)\n+    {\n+        const Coin& prev_coin{undoTX->vprevout[i]};\n+\n+        const CTxIn& txin{tx->vin.at(i)};\n+\n+        const auto& pubkey_variant{silentpayment::ExtractPubkeyFromInput(prev_coin, txin)};\n+\n+        if (std::holds_alternative<CPubKey>(pubkey_variant)) {\n+            const auto& pubkey{std::get<CPubKey>(pubkey_variant)};\n+            if (pubkey.IsFullyValid()) {\n+                input_pubkeys.push_back(pubkey);\n+            }\n+        } else if (std::holds_alternative<XOnlyPubKey>(pubkey_variant)) {\n+            const auto& pubkey{std::get<XOnlyPubKey>(pubkey_variant)};\n+            if (pubkey.IsFullyValid()) {\n+                input_xonly_pubkeys.push_back(pubkey);\n+            }\n+        }\n+    }\n+\n+    // Currently Silent Payment scheme uses all keys. If not possible to\n+    // retrieve all keys, it is not a SP transaction.\n+    if ((input_pubkeys.size() + input_xonly_pubkeys.size()) != tx->vin.size()) {\n+        return false;\n+    }\n+\n+    sum_tx_pubkeys = silentpayment::Recipient::CombinePublicKeys(input_pubkeys, input_xonly_pubkeys);\n+    assert(sum_tx_pubkeys.IsFullyValid());\n+\n+    return true;\n+}\n+\n+bool SilentPaymentIndex::CustomAppend(const interfaces::BlockInfo& block)\n+{\n+    // Exclude genesis block transaction because outputs are not spendable.\n+    if (block.height == 0) return true;\n+\n+    assert(block.data);\n+\n+    Consensus::Params consensus = Params().GetConsensus();\n+\n+    if (block.height < consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].min_activation_height) {\n+        return true;\n+    }\n+\n+    std::vector<std::pair<uint256, CPubKey>> items; // <tx_hash, sum of public keys of transaction inputs >\n+\n+    const CBlockIndex* pindex = WITH_LOCK(cs_main, return m_chainstate->m_blockman.LookupBlockIndex(block.hash));\n+\n+    for (const auto& tx : block.data->vtx) {\n+        CPubKey tweakedKey;\n+        if (GetSilentPaymentKey(tx, pindex, tweakedKey)) {\n+            items.emplace_back(tx->GetHash(), tweakedKey);\n+        }\n+\n+    }",
      "path": "src/index/silentpaymentindex.cpp",
      "position": null,
      "original_position": 149,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "f7bda4c6959594b8a9e1dc10a04dd697307e3fa3",
      "in_reply_to_id": 1072222220,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done in 1fe05939916b779c7f9111bcbaeaace03595c014.",
      "created_at": "2023-01-29T09:27:40Z",
      "updated_at": "2023-01-29T09:27:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1089910537",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089910537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": 143,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160786689",
      "pull_request_review_id": 1376326898,
      "id": 1160786689,
      "node_id": "PRRC_kwDOABII585FMDMB",
      "diff_hunk": "@@ -20,13 +20,15 @@ enum class OutputType {\n     BECH32,\n     BECH32M,\n     UNKNOWN,\n+    SILENT_PAYMENT,",
      "path": "src/outputtype.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "3742cc75571a60bda52a41923c8244535af9ff23",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3742cc75571a60bda52a41923c8244535af9ff23: maybe move that above `UNKNOWN`?",
      "created_at": "2023-04-07T15:40:16Z",
      "updated_at": "2023-04-07T15:47:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1160786689",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160786689"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160804856",
      "pull_request_review_id": 1376353563,
      "id": 1160804856,
      "node_id": "PRRC_kwDOABII585FMHn4",
      "diff_hunk": "@@ -1495,6 +1495,11 @@ static UniValue ProcessDescriptorImport(CWallet& wallet, const UniValue& data, c\n             throw JSONRPCError(RPC_INVALID_PARAMETER, \"Active descriptors must be ranged\");\n         }\n \n+        if (isSP && data.exists(\"next_index\"))",
      "path": "src/wallet/rpc/backup.cpp",
      "position": 13,
      "original_position": 4,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "9143c7e1f1710f123072cc272b66ab2cad0eb57a",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "9143c7e1f1710f123072cc272b66ab2cad0eb57a: this commit won't compile, probably needs something from a later commit",
      "created_at": "2023-04-07T16:08:22Z",
      "updated_at": "2023-04-07T16:08:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1160804856",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160804856"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1501,
      "original_line": 1501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160888305",
      "pull_request_review_id": 1376473103,
      "id": 1160888305,
      "node_id": "PRRC_kwDOABII585FMb_x",
      "diff_hunk": "@@ -66,6 +70,137 @@ RPCHelpMan getnewaddress()\n     };\n }\n \n+RPCHelpMan getsilentaddress()\n+{\n+    return RPCHelpMan{\"getsilentaddress\",\n+                \"\\nReturns a silent paymet address if it is enabled in wallet.\\n\"\n+                \"If 'label' is specified and it is new, a new address will be generated. \\n\"\n+                \"If the 'label' is already assigned to a silent address, this same address will be shown.\\n\",\n+                {\n+                    {\"label\", RPCArg::Type::STR, RPCArg::Default{\"\"}, \"The label name for the address to be linked to. It can also be set to the empty string \\\"\\\" to represent the default label. The label does not need to exist, it will be created if there is no label by the given name.\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {\n+                        {RPCResult::Type::STR, \"address\", \"The silent address\"},\n+                        {RPCResult::Type::STR_HEX, \"label\", \"The label assigned to this silent address\"},\n+                        {RPCResult::Type::NUM, \"identifier\", \"The identifier corresponding to the given label\"},\n+                        {RPCResult::Type::STR, \"warnings\", /*optional=*/true, \"Any warnings associated with the address\"},\n+                    }\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getsilentaddress\", \"\")\n+            + HelpExampleRpc(\"getsilentaddress\", \"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    std::shared_ptr<CWallet> const pwallet = GetWalletForJSONRPCRequest(request);\n+    if (!pwallet) return UniValue::VNULL;\n+\n+    LOCK(pwallet->cs_wallet);\n+\n+    if (!pwallet->IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENT)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Error: This wallet is not enabled for silent payments\");\n+    }\n+\n+    if (!pwallet->CanGetAddresses()) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Error: This wallet has no available keys\");\n+    }\n+\n+    // Parse the label first so we don't generate a key if there's an error\n+    std::string label;\n+    if (!request.params[0].isNull())\n+        label = LabelFromValue(request.params[0]);\n+\n+    UniValue ret(UniValue::VOBJ);\n+    for (auto const& [key, val] : pwallet->m_silent_address_book)\n+    {\n+        if (val.m_label == label) {\n+            ret.pushKV(\"address\", val.m_address);\n+            ret.pushKV(\"label\", val.m_label);\n+            ret.pushKV(\"identifier\", key);\n+            return ret;\n+        }\n+    }\n+\n+    const auto result = pwallet->GetSilentDestination(label);\n+\n+    if (!result) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, util::ErrorString(result).original);\n+    }\n+\n+    const auto& [address, identifier] = *result;\n+\n+    ret.pushKV(\"address\", address);\n+    ret.pushKV(\"label\", label);\n+    ret.pushKV(\"identifier\", identifier);\n+    if (identifier > 0) {\n+        ret.pushKV(\"warnings\", \"This address is not a new identity. It is a re-use of an existing identity with a different label.\");",
      "path": "src/wallet/rpc/addresses.cpp",
      "position": 80,
      "original_position": 80,
      "commit_id": "50a6320e5760cb8784017d12e3e0c74647bc2233",
      "original_commit_id": "ee652ca59a7c3e6f73f871d00d640074a1e7abac",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The term \"identity\" is confusing here. It's also confusing that you get this error when you generate a new silent payment address, but not when you request an existing one (by reusing a label).\r\n\r\nI guess what you're trying to say here is that an outside observer can tell that two silent payment addresses belong to the same person? Maybe just say that:\r\n\r\n`The silent payment addresses are unique for accounting purposes only. They can be linked to the same wallet. For privacy a new wallet is required.`\r\n\r\nThat said, I think this feature is a footgun. Also because poor coin control will eventually link funds from all labels.",
      "created_at": "2023-04-07T18:40:28Z",
      "updated_at": "2023-04-07T18:42:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/24897#discussion_r1160888305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1160888305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24897"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 138,
      "original_line": 138,
      "side": "RIGHT"
    }
  ]
}