{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487",
    "id": 396669801,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk2NjY5ODAx",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18487",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/18487.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/18487.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18487",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18487/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
    "number": 18487,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "rpc: Fix rpcRunLater race in walletpassphrase",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Release locks before calling `rpcRunLater`.\r\n\r\nQuick explanation: `rpcRunLater` leads to `event_free` which calls `event_del` which can wait for the event callback to finish if it's already running and that callback will try to lock wallet mutex - which is already locked in http thread.\r\n\r\nFixes #14995 , fixes #18482. Best reviewed with whitespace changes hidden.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      },
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/42",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/42",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/42/labels",
      "id": 4116761,
      "node_id": "MDk6TWlsZXN0b25lNDExNjc2MQ==",
      "number": 42,
      "state": "closed",
      "title": "0.20.0",
      "description": "",
      "creator": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 0,
      "closed_issues": 91,
      "created_at": "2019-03-06T20:02:40Z",
      "updated_at": "2020-06-02T07:55:47Z",
      "closed_at": "2020-06-02T07:55:47Z"
    },
    "active_lock_reason": "resolved",
    "created_at": "2020-03-31T23:30:33Z",
    "updated_at": "2022-02-15T10:58:43Z",
    "closed_at": "2020-04-06T18:30:00Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merged_at": "2020-04-06T18:29:59Z",
    "merge_commit_sha": "75021e80ee4439dddadbe8c586cee04b85ac110c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "promag:2020-04-fix-rpcrunlater-race",
      "ref": "2020-04-fix-rpcrunlater-race",
      "sha": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 95606613,
        "node_id": "MDEwOlJlcG9zaXRvcnk5NTYwNjYxMw==",
        "name": "bitcoin",
        "full_name": "promag/bitcoin",
        "owner": {
          "login": "promag",
          "id": 3534524,
          "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/promag",
          "html_url": "https://github.com/promag",
          "followers_url": "https://api.github.com/users/promag/followers",
          "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
          "organizations_url": "https://api.github.com/users/promag/orgs",
          "repos_url": "https://api.github.com/users/promag/repos",
          "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/promag/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/promag/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/promag/bitcoin",
        "archive_url": "https://api.github.com/repos/promag/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/promag/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/promag/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/promag/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/promag/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/promag/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/promag/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/promag/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/promag/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/promag/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/promag/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/promag/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/promag/bitcoin/events",
        "forks_url": "https://api.github.com/repos/promag/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/promag/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/promag/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/promag/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/promag/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/promag/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/promag/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/promag/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/promag/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/promag/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/promag/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/promag/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/promag/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/promag/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/promag/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/promag/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:promag/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/promag/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/promag/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/promag/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/promag/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/promag/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/promag/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/promag/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/promag/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/promag/bitcoin/hooks",
        "svn_url": "https://github.com/promag/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 209939,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-01-10T11:52:44Z",
        "created_at": "2017-06-27T22:37:11Z",
        "updated_at": "2022-12-31T13:30:10Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b83565625e32b22395e28c1965b2e42fc17f04d7",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T20:20:41Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 39,
    "deletions": 31,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 10,
    "comments": 7
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-31T23:33:35Z",
      "updated_at": "2020-03-31T23:33:35Z",
      "source": {
        "issue": {
          "id": 591003437,
          "node_id": "MDU6SXNzdWU1OTEwMDM0Mzc=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18482",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18482/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18482/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18482/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/18482",
          "number": 18482,
          "state": "closed",
          "state_reason": "completed",
          "title": "RPC stuck on walletpassphrase call",
          "body": "Sometimes RPC API stops responding after calling walletpassphrase \r\nUnfortunately I can not exactly reproduce this bug. \r\nI have tried 20 threads with about 100 requests on each with sequential calling walletpassphrase -> listtransactions -> walletpassphrase -> getransactions, but with no luck.   \r\n\r\nObserve it four-five times a day and only restart of node could help. \r\n\r\nIt happens not only for bitcoin wallet on mainnet and testnet, but also for litecoin and bitcoin abc wallets, also for mainnet and testnet\r\n\r\nI could provide additional data such as logs, etc.\r\n\r\n**System information**\r\n\r\nBitcoin Core version v0.19.1\r\nLitecoin Core Daemon version v0.17.1\r\nBitcoin ABC Daemon version v0.19.9.0-2f1adeefb\r\n\r\nOS: Debian 10, Xen guest, SSD\r\n\r\ndebug.log with last call. after that RPC won't response anymore.\r\n\r\n```\r\n2020-03-31T10:17:47Z received: inv (37 bytes) peer=11\r\n2020-03-31T10:17:47Z got inv: tx bc6099be609e8a81e11b1ba53badd401a3361fe70c8a90dd92cc743ab972b32c  new peer=11\r\n2020-03-31T10:17:47Z Requesting witness-tx bc6099be609e8a81e11b1ba53badd401a3361fe70c8a90dd92cc743ab972b32c peer=11\r\n2020-03-31T10:17:47Z sending getdata (37 bytes) peer=11\r\n2020-03-31T10:17:48Z received: tx (247 bytes) peer=11\r\n2020-03-31T10:17:48Z AcceptToMemoryPool: peer=11: accepted bc6099be609e8a81e11b1ba53badd401a3361fe70c8a90dd92cc743ab972b32c (poolsz 10 txn, 13 kB)\r\n2020-03-31T10:17:48Z sending inv (37 bytes) peer=5\r\n2020-03-31T10:17:48Z received: inv (37 bytes) peer=6\r\n2020-03-31T10:17:48Z got inv: tx bc6099be609e8a81e11b1ba53badd401a3361fe70c8a90dd92cc743ab972b32c  have peer=6\r\n2020-03-31T10:17:48Z sending inv (37 bytes) peer=14\r\n2020-03-31T10:17:48Z sending inv (37 bytes) peer=13\r\n2020-03-31T10:17:49Z received: inv (37 bytes) peer=15\r\n2020-03-31T10:17:49Z got inv: tx bc6099be609e8a81e11b1ba53badd401a3361fe70c8a90dd92cc743ab972b32c  have peer=15\r\n2020-03-31T10:17:50Z received: inv (37 bytes) peer=21\r\n2020-03-31T10:17:50Z got inv: tx bc6099be609e8a81e11b1ba53badd401a3361fe70c8a90dd92cc743ab972b32c  have peer=21\r\n2020-03-31T10:17:50Z received: inv (37 bytes) peer=2\r\n2020-03-31T10:17:50Z got inv: tx bc6099be609e8a81e11b1ba53badd401a3361fe70c8a90dd92cc743ab972b32c  have peer=2\r\n2020-03-31T10:17:50Z libevent: epoll_dispatch: epoll_wait reports 1\r\n2020-03-31T10:17:50Z libevent: event_active: 0x561e681d9d08 (fd 9), res 2, callback 0x7fe4fc82e1b0\r\n2020-03-31T10:17:50Z libevent: event_process_active: event: 0x561e681d9d08, EV_READ   call 0x7fe4fc82e1b0\r\n2020-03-31T10:17:50Z libevent: evhttp_get_request_connection: new request from 10.10.1.10:22443 on 52\r\n\r\n2020-03-31T10:17:50Z libevent: Attempting connection to 10.1.1.10:22443\r\n\r\n2020-03-31T10:17:50Z libevent: event_add: event: 0x7fe4e0000b60 (fd -1), EV_READ    call 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: event_del: 0x7fe4e0000be0 (fd -1), callback 0x7fe4fc81fb40\r\n2020-03-31T10:17:50Z libevent: event_del: 0x7fe4e0000b60 (fd -1), callback 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: event_del: 0x7fe4e0000be0 (fd -1), callback 0x7fe4fc81fb40\r\n2020-03-31T10:17:50Z libevent: event_add: event: 0x7fe4e0000b60 (fd 52), EV_READ    call 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: Epoll ADD(1) on fd 52 okay. Old events were 0; read change was 1 (add); write change was 0 (none); close change was 0 (none)\r\n2020-03-31T10:17:50Z libevent: event_add: event: 0x7fe4e0000b60 (fd 52), EV_READ   EV_TIMEOUT call 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: event_add: event 0x7fe4e0000b60, timeout in 30 seconds 0 useconds, call 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: event_del: 0x7fe4e0000be0 (fd 52), callback 0x7fe4fc81fb40\r\n2020-03-31T10:17:50Z libevent: event_add: event: 0x7fe4e0000b60 (fd 52), EV_READ   EV_TIMEOUT call 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: event_add: event 0x7fe4e0000b60, timeout in 30 seconds 0 useconds, call 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: timeout_next: event: 0x7fe4bc001f90, in 0 seconds, 4053 useconds\r\n2020-03-31T10:17:50Z libevent: epoll_dispatch: epoll_wait reports 1\r\n2020-03-31T10:17:50Z libevent: event_active: 0x7fe4e0000b60 (fd 52), res 2, callback 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: event_process_active: event: 0x7fe4e0000b60, EV_READ   call 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: event_add: event: 0x7fe4e0000b60 (fd 52), EV_READ   EV_TIMEOUT call 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: event_add: event 0x7fe4e0000b60, timeout in 8206112 seconds 564133 useconds, call 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: evhttp_add_header: key: Host val: 10.1.1.5:50000\r\n2020-03-31T10:17:50Z libevent: evhttp_add_header: key: Authorization val: Basic c210L.....dFZnMGE3YVk3MnRGcU9qTzhRVT0=\r\n\r\n2020-03-31T10:17:50Z libevent: evhttp_add_header: key: Accept val: */*\r\n\r\n2020-03-31T10:17:50Z libevent: evhttp_add_header: key: Content-type val: application/json\r\n\r\n2020-03-31T10:17:50Z libevent: evhttp_add_header: key: Content-Length val: 111\r\n\r\n2020-03-31T10:17:50Z libevent: evhttp_read_header: checking for post data on 52\r\n\r\n2020-03-31T10:17:50Z libevent: evhttp_get_body_length: bytes to read: 111 (in buffer 111)\r\n\r\n2020-03-31T10:17:50Z libevent: event_del: 0x7fe4e0000b60 (fd 52), callback 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z libevent: Epoll DEL(1) on fd 52 okay. Old events were 2; read change was 2 (del); write change was 0 (none); close change was 0 (none)\r\n2020-03-31T10:17:50Z libevent: event_del: 0x7fe4e0000b60 (fd 52), callback 0x7fe4fc81ff40\r\n2020-03-31T10:17:50Z Received a POST request for /wallet/test from 10.1.1.10:22443\r\n2020-03-31T10:17:50Z libevent: timeout_next: event: 0x7fe4bc001f90, in 0 seconds, 4053 useconds\r\n2020-03-31T10:17:50Z ThreadRPCServer method=walletpassphrase user=test\r\n2020-03-31T10:17:50Z libevent: epoll_dispatch: epoll_wait reports 0\r\n2020-03-31T10:17:50Z libevent: timeout_next: event: 0x7fe4bc001f90, in 0 seconds, 4053 useconds\r\n2020-03-31T10:17:50Z libevent: epoll_dispatch: epoll_wait reports 0\r\n2020-03-31T10:17:50Z libevent: event_del: 0x7fe4bc001f90 (fd -1), callback 0x561e66258dd0\r\n2020-03-31T10:17:50Z libevent: timeout_process: event: 0x7fe4bc001f90, call 0x561e66258dd0\r\n2020-03-31T10:17:50Z libevent: event_active: 0x7fe4bc001f90 (fd -1), res 1, callback 0x561e66258dd0\r\n2020-03-31T10:17:50Z libevent: event_del: 0x7fe4bc001f90 (fd -1), callback 0x561e66258dd0\r\n2020-03-31T10:17:50Z libevent: event_process_active: event: 0x7fe4bc001f90,    call 0x561e66258dd0\r\n2020-03-31T10:17:50Z libevent: event_del: 0x7fe4bc001f90 (fd -1), callback 0x561e66258dd0\r\n2020-03-31T10:17:58Z received: ping (8 bytes) peer=109\r\n2020-03-31T10:17:58Z sending pong (8 bytes) peer=109\r\n2020-03-31T10:19:13Z Making feeler connection to [2607:fea8:8460:2b4a::4]:18333\r\n2020-03-31T10:19:13Z trying connection [2607:fea8:8460:2b4a::4]:18333 lastseen=842.8hrs\r\n2020-03-31T10:19:18Z connection to [2607:fea8:8460:2b4a::4]:18333 timeout\r\n2020-03-31T10:20:03Z socket closed\r\n2020-03-31T10:20:03Z disconnecting peer=110\r\n2020-03-31T10:21:10Z Making feeler connection to 54.162.24.231:18333\r\n2020-03-31T10:21:10Z trying connection 54.162.24.231:18333 lastseen=556.7hrs\r\n2020-03-31T10:21:15Z connection to 54.162.24.231:18333 timeout\r\n2020-03-31T10:21:16Z Making feeler connection to 70.24.60.7:18333\r\n2020-03-31T10:21:16Z trying connection 70.24.60.7:18333 lastseen=634.4hrs\r\n2020-03-31T10:21:21Z connection to 70.24.60.7:18333 timeout\r\n2020-03-31T10:21:35Z socket closed\r\n2020-03-31T10:21:35Z disconnecting peer=111\r\n```",
          "user": {
            "login": "kryvel",
            "id": 13569035,
            "node_id": "MDQ6VXNlcjEzNTY5MDM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13569035?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kryvel",
            "html_url": "https://github.com/kryvel",
            "followers_url": "https://api.github.com/users/kryvel/followers",
            "following_url": "https://api.github.com/users/kryvel/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/kryvel/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/kryvel/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/kryvel/subscriptions",
            "organizations_url": "https://api.github.com/users/kryvel/orgs",
            "repos_url": "https://api.github.com/users/kryvel/repos",
            "events_url": "https://api.github.com/users/kryvel/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/kryvel/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 20,
          "closed_at": "2020-04-06T18:29:54Z",
          "created_at": "2020-03-31T10:53:59Z",
          "updated_at": "2022-02-15T10:42:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-31T23:34:48Z",
      "updated_at": "2020-03-31T23:34:48Z",
      "source": {
        "issue": {
          "id": 392180385,
          "node_id": "MDU6SXNzdWUzOTIxODAzODU=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14995",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14995/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14995/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14995/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/14995",
          "number": 14995,
          "state": "closed",
          "state_reason": "completed",
          "title": "possible deadlock with walletpassphrase",
          "body": "When i used the encrypted wallet to test transfer parallelly,i frequently got the trouble: The rpc server is not responding.My test script is like below:\r\n#!/bin/sh\r\nwhile [ 1 ]\r\ndo\r\n./bitcoin-cli listaddressgroupings>null\r\n./bitcoin-cli walletpassphrase \"!@#$%^&*\" 2\r\n./bitcoin sendtoaddress \"mhAW6mzs5DeCbzBUHXBi4U446Fdnr1z8U7\" 0.01\r\ndone\r\n\r\nWhen i open the dead lock trace macro and check the debug log,i found the last print is as below:\r\n2018-12-17 08:27:58 ThreadRPCServer method=walletpassphrase\r\n2018-12-17 08:27:58 LOCKCONTENTION: cs_main\r\n2018-12-17 08:27:58 Locker: wallet/rpcwallet.cpp:2642\r\n2018-12-17 08:27:58 LOCKCONTENTION: pWallet->cs_wallet\r\n2018-12-17 08:27:58 Locker: wallet/rpcwallet.cpp:2607\r\n\r\nThe line no 2642 is walletpassphrase and 2607 is LockWallet. I checked the code,i found there is no log printed for this line in function \"walletpassphrase\":\r\n\"LogPrint(BCLog::RPC, \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\" So i guess the reason may be:\r\nWhen \"walletpassphrase\" is running and lock the cs_wallet,the last relock timer triggered and call \"LockWallet\".\"LockWallet\" want to lock the cs_wallet but it has been locked by \"walletpassphrase\",so \"LockWallet\" is blocked.When \"walletpassphrase\" run to call \"RPCRunLater\",the function will erase the timer from the std::map \"deadlineTimers\",but the timer's timeout call is blocked,so the dead lock take place.\r\nIs my guess right?\r\nHow to reslove the issue?\r\nAny help will be appreciative！",
          "user": {
            "login": "xuzhitong",
            "id": 18006914,
            "node_id": "MDQ6VXNlcjE4MDA2OTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/18006914?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xuzhitong",
            "html_url": "https://github.com/xuzhitong",
            "followers_url": "https://api.github.com/users/xuzhitong/followers",
            "following_url": "https://api.github.com/users/xuzhitong/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/xuzhitong/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/xuzhitong/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/xuzhitong/subscriptions",
            "organizations_url": "https://api.github.com/users/xuzhitong/orgs",
            "repos_url": "https://api.github.com/users/xuzhitong/repos",
            "events_url": "https://api.github.com/users/xuzhitong/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/xuzhitong/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "NONE",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "closed_at": "2020-04-06T18:29:53Z",
          "created_at": "2018-12-18T14:26:46Z",
          "updated_at": "2022-02-15T10:42:26Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 3185576272,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxODU1NzYyNzI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3185576272",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-31T23:39:32Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "labeled",
      "id": 3185576274,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDMxODU1NzYyNzQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3185576274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-31T23:39:32Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3185646445,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE4NTY0NjQ0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3185646445",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-01T00:13:32Z"
    },
    {
      "event": "closed",
      "id": 3185761489,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzE4NTc2MTQ4OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3185761489",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-01T01:15:13Z"
    },
    {
      "event": "reopened",
      "id": 3185761633,
      "node_id": "MDEzOlJlb3BlbmVkRXZlbnQzMTg1NzYxNjMz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3185761633",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-01T01:15:18Z"
    },
    {
      "event": "renamed",
      "id": 3186870297,
      "node_id": "MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzE4Njg3MDI5Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3186870297",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-01T08:51:19Z",
      "rename": {
        "from": "wip: rpc: Fix rpcRunLater race in walletpassphrase",
        "to": "rpc: Fix rpcRunLater race in walletpassphrase"
      }
    },
    {
      "event": "milestoned",
      "id": 3187083104,
      "node_id": "MDE1Ok1pbGVzdG9uZWRFdmVudDMxODcwODMxMDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3187083104",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-01T09:44:24Z",
      "milestone": {
        "title": "0.20.0"
      }
    },
    {
      "event": "commented",
      "id": 607153672,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzE1MzY3Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607153672",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-01T09:56:25Z",
      "updated_at": "2020-04-03T19:58:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#issuecomment-607153672",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18487"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-01T10:27:50Z",
      "updated_at": "2020-04-01T10:27:50Z",
      "source": {
        "issue": {
          "id": 581753448,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg4NzY5NzUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18354",
          "number": 18354,
          "state": "closed",
          "state_reason": null,
          "title": "Use shared pointers only in validation interface",
          "body": "This pull request fully replace #18279 it fix 3 issues with wallet\r\n1. Crash in wallet destructor while it tries to delete mutex while it's hold by notification thread\r\n2. Crash in notification disconnect due to notification callback is set to nullptr before unregister interface is done\r\n3. Ensure unregister interface has no more background callbacks before returning to notification disconnect",
          "user": {
            "login": "bvbfan",
            "id": 8323581,
            "node_id": "MDQ6VXNlcjgzMjM1ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8323581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvbfan",
            "html_url": "https://github.com/bvbfan",
            "followers_url": "https://api.github.com/users/bvbfan/followers",
            "following_url": "https://api.github.com/users/bvbfan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/bvbfan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/bvbfan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/bvbfan/subscriptions",
            "organizations_url": "https://api.github.com/users/bvbfan/orgs",
            "repos_url": "https://api.github.com/users/bvbfan/repos",
            "events_url": "https://api.github.com/users/bvbfan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/bvbfan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18354",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18354",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18354.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18354.patch"
          },
          "closed_at": "2022-02-22T10:56:18Z",
          "created_at": "2020-03-15T17:27:23Z",
          "updated_at": "2023-02-22T10:14:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 386536469,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTM2NDY5",
      "url": null,
      "actor": null,
      "commit_id": "0944cafe294d4ee009b615fc8d8caca77c117481",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#pullrequestreview-386536469",
      "submitted_at": "2020-04-02T15:23:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
    },
    {
      "event": "commented",
      "id": 607915726,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzkxNTcyNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607915726",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-02T15:27:39Z",
      "updated_at": "2020-04-02T15:27:39Z",
      "author_association": "MEMBER",
      "body": "Can be tested with #18507 ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#issuecomment-607915726",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18487"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3192755324,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE5Mjc1NTMyNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3192755324",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-02T15:29:57Z"
    },
    {
      "event": "reviewed",
      "id": 386545557,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTQ1NTU3",
      "url": null,
      "actor": null,
      "commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#pullrequestreview-386545557",
      "submitted_at": "2020-04-02T15:37:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-02T16:05:12Z",
      "updated_at": "2020-04-02T16:05:12Z",
      "source": {
        "issue": {
          "id": 592712043,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk3NjQ0MjMx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18507",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18507/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18507/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18507/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18507",
          "number": 18507,
          "state": "closed",
          "state_reason": null,
          "title": "test: Check that calling walletpasshprase does not freeze the node",
          "body": "",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18507",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18507",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18507.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18507.patch"
          },
          "closed_at": "2020-04-06T20:51:32Z",
          "created_at": "2020-04-02T15:16:52Z",
          "updated_at": "2022-02-15T10:42:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 607940922,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzk0MDkyMg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607940922",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-02T16:09:48Z",
      "updated_at": "2020-04-02T16:09:48Z",
      "author_association": "MEMBER",
      "body": "ACK 47dd37cc83bdcaf19a3abe95950b2409baae6249 only tested that this avoids the node freezing. Didn't look at how libevent works or how the deadlock happens or if this breaks other stuff.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#issuecomment-607940922",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18487"
    },
    {
      "event": "reviewed",
      "id": 386591295,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTkxMjk1",
      "url": null,
      "actor": null,
      "commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 0944cafe294d4ee009b615fc8d8caca77c117481. This is a nice, clean bug fix, but agree with Marco's suggestions to improve the comment. Adding the explanation of why the lock is released from the PR description would be very helpful. And it doesn't seem right to say \"Currently this must be called without locks held\", when I don't think it was or will be safe to safe to add a timer with locks held.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#pullrequestreview-386591295",
      "submitted_at": "2020-04-02T16:24:12Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YjhlMTU3MjhkMWFkMDU4YTRiN2Q3NTY5ZmQ1ZDViYTY4MDZjYTI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "tree": {
        "sha": "6b190400bc7250fe03d24b7231d1b7efe730c9af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b190400bc7250fe03d24b7231d1b7efe730c9af"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2db25233cf0dd1d2668a4aafc4fc94c47c11849",
          "sha": "d2db25233cf0dd1d2668a4aafc4fc94c47c11849",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d2db25233cf0dd1d2668a4aafc4fc94c47c11849"
        }
      ],
      "message": "rpc: Fix rpcRunLater race in walletpassphrase",
      "committer": {
        "name": "João Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-04-02T16:25:27Z"
      },
      "author": {
        "name": "João Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2020-03-31T23:22:14Z"
      },
      "sha": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3192995452,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzE5Mjk5NTQ1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3192995452",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-02T16:25:51Z"
    },
    {
      "event": "reviewed",
      "id": 386593807,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTkzODA3",
      "url": null,
      "actor": null,
      "commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28. Just updated comment since last review",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#pullrequestreview-386593807",
      "submitted_at": "2020-04-02T16:27:18Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
    },
    {
      "event": "commented",
      "id": 607953365,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzk1MzM2NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607953365",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-02T16:31:22Z",
      "updated_at": "2020-04-02T16:31:22Z",
      "author_association": "MEMBER",
      "body": "ACK 7b8e15728d, only tested that this avoids the node freezing. Did not look at how libevent works or how the deadlock happens or if this breaks other stuff. 📞\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 7b8e15728d, only tested that this avoids the node freezing. Did not look at how libevent works or how the deadlock happens or if this breaks other stuff. 📞\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjKCgwAjQesMVDRk/0HJqT63QzYXgsky/+kGB7rdd3glG/ytl06M6dgM3bgepAv\r\nt2Jfe/uGUugB9v0ettQ5/MkXewKi/r9dllozXIf6ZYyW0tzQKN22kSO6ybRcn0bL\r\nGJDJeK35QG5CEoRB8kJiwohGhxPBeI0HF9LkkfEb7eLsXJGH4hliuQ9xpc0KGr32\r\n0Sj3SUttKlK4xUbyDVyC7VOGeD53ZphJFiq+HPMY3lm6FmXn5Z2wXv6/FeV2jFQb\r\noxCCJ52gBzijv5YImikXjeOBEElUhI2IuIKCmTvNgXFv3T/c/ToSPShFpH2j2btP\r\ncCzsIK3pex8fJSZI1ZE+PszAeh2FejdDN144fP7Ds/9fOwXIARU/vPVCgXeDsHZe\r\n0yl17Qtl6p1YAGK2NGDXNM8UOA9MtzqAUyDBl4jRblIux3qEwEsxskjsDUv5d3JX\r\nIm6mmvKOk/5loNPGXNhIE150YdbYZ4PNKjy4ke6rLvMW60tX0PnhfwOKWGdVM5iw\r\nLxj6BnQy\r\n=jUhE\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `72e45144d2300c2bfb37bf5663a6b1678638fd7ac770b9ac957658a6a77b4224  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e89294010872e45144d2300c2bfb37bf5663a6b1678638fd7ac770b9ac957658a6a77b4224f0109ca4b78eac0f9bc00e3fa6d9e07c621508fff0100d486fd595906b0f2e37c995bd6bdf4d08f12082668eceff96a8434888e60adc6e3bd8eaef49bf6defcfb4cf06320162a2754408f1045e86134cf0081b878fc32894389f0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010359c91954884418e52df686749fb2ec908f1045e86134df0082c29508769168a540083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff01097250bf63f8fb92103baaad4d125418a08f02067053ad5be1fee548552b5f5eac723a10d5cafe82283a07c84f3deb924a0e34408f1045e86134cf00879fc4848f25e6ee20083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010b2184820e4d99f52920b22a7cd0fda6208f020e8e879f8d8b046c15439aed265a2f83ffbf83296fe7cb8029e4e3dfc468c066f08f1045e86134cf00895b0800664b9596c0083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#issuecomment-607953365",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18487"
    },
    {
      "event": "commented",
      "id": 607954628,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzk1NDYyOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607954628",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-02T16:33:38Z",
      "updated_at": "2020-04-02T16:33:38Z",
      "author_association": "MEMBER",
      "body": "I didn't want to write libevent details in rpcwallet and also how RPCRunLater is implemented.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#issuecomment-607954628",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18487"
    },
    {
      "event": "commented",
      "id": 607961047,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzk2MTA0Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/607961047",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-02T16:45:08Z",
      "updated_at": "2020-04-02T17:27:05Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke the deadlock happens in this case: \r\n\r\n- (we are in one of the http thread)\r\n- walletpassphrase\r\n- RPCRunLater\r\n- ~HTTPEvent()\r\n- event_free()\r\n- event_del()\r\n- event_del_(, EVENT_DEL_AUTOBLOCK);\r\n\r\nAnd from libevent header\r\n```\r\n/** Argument for event_del_nolock_. Tells event_del to block on the event\r\n * if it is running in another thread and it doesn't have EV_FINALIZE set.\r\n */\r\n#define EVENT_DEL_AUTOBLOCK 2\r\n```\r\nAnd the event callback (triggered from the event base thread) will lock `cs_wallet` and deadlock:\r\nhttps://github.com/bitcoin/bitcoin/blob/b83565625e32b22395e28c1965b2e42fc17f04d7/src/wallet/rpcwallet.cpp#L1963-L1969\r\n\r\nAlso, I think its reasonable to reduce lock scope (which we already did in other cases for other reasons) than to change the `EV_FINALIZE` flag.\r\n\r\n> or if this breaks other stuff.\r\n\r\nI can't see how that could happen. but..",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#issuecomment-607961047",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18487"
    },
    {
      "event": "mentioned",
      "id": 3193069877,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzE5MzA2OTg3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3193069877",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-02T16:45:08Z"
    },
    {
      "event": "subscribed",
      "id": 3193069880,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxOTMwNjk4ODA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3193069880",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-02T16:45:08Z"
    },
    {
      "event": "merged",
      "id": 3206682752,
      "node_id": "MDExOk1lcmdlZEV2ZW50MzIwNjY4Mjc1Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3206682752",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "75021e80ee4439dddadbe8c586cee04b85ac110c",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75021e80ee4439dddadbe8c586cee04b85ac110c",
      "created_at": "2020-04-06T18:29:59Z"
    },
    {
      "event": "closed",
      "id": 3206682762,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzIwNjY4Mjc2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3206682762",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-06T18:30:00Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 3206706753,
      "node_id": "MDE5OkhlYWRSZWZEZWxldGVkRXZlbnQzMjA2NzA2NzUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3206706753",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-06T18:36:36Z"
    },
    {
      "event": "referenced",
      "id": 3212526967,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMyMTI1MjY5Njc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3212526967",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "82255a05ecae54f9a60b990493d96cf7ea21de18",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/82255a05ecae54f9a60b990493d96cf7ea21de18",
      "created_at": "2020-04-08T05:00:09Z"
    },
    {
      "event": "commented",
      "id": 620964063,
      "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDk2NDA2Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/620964063",
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T02:57:32Z",
      "updated_at": "2020-04-29T02:57:32Z",
      "author_association": "MEMBER",
      "body": "> > or if this breaks other stuff.\r\n> \r\n> I can't see how that could happen. but..\r\n\r\n@MarcoFalke but #18811 happened.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#issuecomment-620964063",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18487"
    },
    {
      "event": "mentioned",
      "id": 3282831137,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzI4MjgzMTEzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3282831137",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T02:57:32Z"
    },
    {
      "event": "subscribed",
      "id": 3282831138,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMyODI4MzExMzg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3282831138",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-29T02:57:32Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-03T22:38:23Z",
      "updated_at": "2020-05-03T22:38:23Z",
      "source": {
        "issue": {
          "id": 608920849,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDEwNjA0MzIy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18814",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18814/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18814/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18814/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18814",
          "number": 18814,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Relock wallet only if most recent callback",
          "body": "This PR fixes an early relocking race condition from #18811 where old relock callback runs after new wallet unlock code and nRelockTime update but before rpcRunLater call, causing early relock and incorrect nRelockTime time\r\n\r\nIssue introduced in #18487.\r\nFixes #18811.",
          "user": {
            "login": "promag",
            "id": 3534524,
            "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/promag",
            "html_url": "https://github.com/promag",
            "followers_url": "https://api.github.com/users/promag/followers",
            "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
            "organizations_url": "https://api.github.com/users/promag/orgs",
            "repos_url": "https://api.github.com/users/promag/repos",
            "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/promag/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/42",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/42",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/42/labels",
            "id": 4116761,
            "node_id": "MDk6TWlsZXN0b25lNDExNjc2MQ==",
            "number": 42,
            "state": "closed",
            "title": "0.20.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 91,
            "created_at": "2019-03-06T20:02:40Z",
            "updated_at": "2020-06-02T07:55:47Z",
            "closed_at": "2020-06-02T07:55:47Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 15,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18814",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18814",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18814.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18814.patch"
          },
          "closed_at": "2020-05-13T09:36:33Z",
          "created_at": "2020-04-29T09:48:15Z",
          "updated_at": "2022-02-15T11:03:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3331208056,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMzMzEyMDgwNTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3331208056",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a33901cb6d82e2f75aab67f80a8852b7e6e9817a",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a33901cb6d82e2f75aab67f80a8852b7e6e9817a",
      "created_at": "2020-05-13T09:36:18Z"
    },
    {
      "event": "referenced",
      "id": 3334483159,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDMzMzQ0ODMxNTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3334483159",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "c7204ec263be85c81d31457537ec5eb87e7b0ee2",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/c7204ec263be85c81d31457537ec5eb87e7b0ee2",
      "created_at": "2020-05-14T01:27:55Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "goomario",
        "id": 2407592,
        "node_id": "MDQ6VXNlcjI0MDc1OTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2407592?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/goomario",
        "html_url": "https://github.com/goomario",
        "followers_url": "https://api.github.com/users/goomario/followers",
        "following_url": "https://api.github.com/users/goomario/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/goomario/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/goomario/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/goomario/subscriptions",
        "organizations_url": "https://api.github.com/users/goomario/orgs",
        "repos_url": "https://api.github.com/users/goomario/repos",
        "events_url": "https://api.github.com/users/goomario/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/goomario/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-11T16:34:12Z",
      "updated_at": "2020-07-11T16:34:12Z",
      "source": {
        "issue": {
          "id": 655164487,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzM5ODY5",
          "url": "https://api.github.com/repos/btchd/btchd/issues/15",
          "repository_url": "https://api.github.com/repos/btchd/btchd",
          "labels_url": "https://api.github.com/repos/btchd/btchd/issues/15/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/btchd/btchd/issues/15/comments",
          "events_url": "https://api.github.com/repos/btchd/btchd/issues/15/events",
          "html_url": "https://github.com/btchd/btchd/pull/15",
          "number": 15,
          "state": "closed",
          "state_reason": null,
          "title": "fix deadlock on call listunspent and walletpassphrase",
          "body": "Maybe deadlock on call `listunspent`. `cs_main` require on `pwallet->chain().accessCoin()`.",
          "user": {
            "login": "goomario",
            "id": 2407592,
            "node_id": "MDQ6VXNlcjI0MDc1OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2407592?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/goomario",
            "html_url": "https://github.com/goomario",
            "followers_url": "https://api.github.com/users/goomario/followers",
            "following_url": "https://api.github.com/users/goomario/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/goomario/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/goomario/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/goomario/subscriptions",
            "organizations_url": "https://api.github.com/users/goomario/orgs",
            "repos_url": "https://api.github.com/users/goomario/repos",
            "events_url": "https://api.github.com/users/goomario/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/goomario/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/btchd/btchd/pulls/15",
            "html_url": "https://github.com/btchd/btchd/pull/15",
            "diff_url": "https://github.com/btchd/btchd/pull/15.diff",
            "patch_url": "https://github.com/btchd/btchd/pull/15.patch"
          },
          "closed_at": "2020-07-11T16:35:25Z",
          "created_at": "2020-07-11T08:32:38Z",
          "updated_at": "2020-07-11T16:35:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "rynomster",
        "id": 6912789,
        "node_id": "MDQ6VXNlcjY5MTI3ODk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6912789?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rynomster",
        "html_url": "https://github.com/rynomster",
        "followers_url": "https://api.github.com/users/rynomster/followers",
        "following_url": "https://api.github.com/users/rynomster/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rynomster/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rynomster/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rynomster/subscriptions",
        "organizations_url": "https://api.github.com/users/rynomster/orgs",
        "repos_url": "https://api.github.com/users/rynomster/repos",
        "events_url": "https://api.github.com/users/rynomster/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rynomster/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-08-07T06:23:16Z",
      "updated_at": "2020-08-07T06:23:16Z",
      "source": {
        "issue": {
          "id": 674790114,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDY0NDE2NDUz",
          "url": "https://api.github.com/repos/bitcoinvault/bitcoinvault/issues/26",
          "repository_url": "https://api.github.com/repos/bitcoinvault/bitcoinvault",
          "labels_url": "https://api.github.com/repos/bitcoinvault/bitcoinvault/issues/26/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoinvault/bitcoinvault/issues/26/comments",
          "events_url": "https://api.github.com/repos/bitcoinvault/bitcoinvault/issues/26/events",
          "html_url": "https://github.com/bitcoinvault/bitcoinvault/pull/26",
          "number": 26,
          "state": "closed",
          "state_reason": null,
          "title": "rpc: Fix rpcRunLater race in walletpassphrase",
          "body": "https://github.com/bitcoin/bitcoin/pull/18487\r\n\r\nRelease locks before calling rpcRunLater.\r\n\r\nQuick explanation: rpcRunLater leads to event_free which calls event_del which can wait for the event callback to finish if it's already running and that callback will try to lock wallet mutex - which is already locked in http thread.\r\n\r\nFixes https://github.com/bitcoin/bitcoin/issues/14995 , fixes https://github.com/bitcoin/bitcoin/issues/18482. Best reviewed with whitespace changes hidden.",
          "user": {
            "login": "rynomster",
            "id": 6912789,
            "node_id": "MDQ6VXNlcjY5MTI3ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6912789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rynomster",
            "html_url": "https://github.com/rynomster",
            "followers_url": "https://api.github.com/users/rynomster/followers",
            "following_url": "https://api.github.com/users/rynomster/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/rynomster/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/rynomster/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/rynomster/subscriptions",
            "organizations_url": "https://api.github.com/users/rynomster/orgs",
            "repos_url": "https://api.github.com/users/rynomster/repos",
            "events_url": "https://api.github.com/users/rynomster/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/rynomster/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "NONE",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoinvault/bitcoinvault/pulls/26",
            "html_url": "https://github.com/bitcoinvault/bitcoinvault/pull/26",
            "diff_url": "https://github.com/bitcoinvault/bitcoinvault/pull/26.diff",
            "patch_url": "https://github.com/bitcoinvault/bitcoinvault/pull/26.patch"
          },
          "closed_at": "2020-08-07T10:15:08Z",
          "created_at": "2020-08-07T06:23:16Z",
          "updated_at": "2020-08-07T10:15:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "referenced",
      "id": 3873645883,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDM4NzM2NDU4ODM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3873645883",
      "actor": {
        "login": "jasonbcox",
        "id": 602513,
        "node_id": "MDQ6VXNlcjYwMjUxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/602513?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jasonbcox",
        "html_url": "https://github.com/jasonbcox",
        "followers_url": "https://api.github.com/users/jasonbcox/followers",
        "following_url": "https://api.github.com/users/jasonbcox/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jasonbcox/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jasonbcox/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jasonbcox/subscriptions",
        "organizations_url": "https://api.github.com/users/jasonbcox/orgs",
        "repos_url": "https://api.github.com/users/jasonbcox/repos",
        "events_url": "https://api.github.com/users/jasonbcox/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jasonbcox/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "8c361009afdd62ea27bba86ff71a6c190ce6bb6b",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/8c361009afdd62ea27bba86ff71a6c190ce6bb6b",
      "created_at": "2020-10-13T21:28:44Z"
    },
    {
      "event": "locked",
      "id": 6073977070,
      "node_id": "LOE_lADOABII584jQauAzwAAAAFqCYju",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073977070",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:58:43Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402400566",
      "pull_request_review_id": 386536469,
      "id": 402400566,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwMDU2Ng==",
      "diff_hunk": "@@ -1918,43 +1918,46 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    auto locked_chain = pwallet->chain().lock();\n-    LOCK(pwallet->cs_wallet);\n-\n-    if (!pwallet->IsCrypted()) {\n-        throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n-    }\n+    int64_t nSleepTime;\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n \n-    // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n-    SecureString strWalletPass;\n-    strWalletPass.reserve(100);\n-    // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n-    // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n-    strWalletPass = request.params[0].get_str().c_str();\n+        if (!pwallet->IsCrypted()) {\n+            throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n+        }\n \n-    // Get the timeout\n-    int64_t nSleepTime = request.params[1].get_int64();\n-    // Timeout cannot be negative, otherwise it will relock immediately\n-    if (nSleepTime < 0) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n-    }\n-    // Clamp timeout\n-    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n-    if (nSleepTime > MAX_SLEEP_TIME) {\n-        nSleepTime = MAX_SLEEP_TIME;\n-    }\n+        // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n+        SecureString strWalletPass;\n+        strWalletPass.reserve(100);\n+        // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n+        // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n+        strWalletPass = request.params[0].get_str().c_str();\n+\n+        // Get the timeout\n+        nSleepTime = request.params[1].get_int64();\n+        // Timeout cannot be negative, otherwise it will relock immediately\n+        if (nSleepTime < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+        }\n+        // Clamp timeout\n+        constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+        if (nSleepTime > MAX_SLEEP_TIME) {\n+            nSleepTime = MAX_SLEEP_TIME;\n+        }\n \n-    if (strWalletPass.empty()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n-    }\n+        if (strWalletPass.empty()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+        }\n \n-    if (!pwallet->Unlock(strWalletPass)) {\n-        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-    }\n+        if (!pwallet->Unlock(strWalletPass)) {\n+            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n+        }\n \n-    pwallet->TopUpKeyPool();\n+        pwallet->TopUpKeyPool();\n \n-    pwallet->nRelockTime = GetTime() + nSleepTime;\n+        pwallet->nRelockTime = GetTime() + nSleepTime;\n+    }",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 74,
      "original_position": 74,
      "commit_id": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "original_commit_id": "0944cafe294d4ee009b615fc8d8caca77c117481",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Would be nice to add a comment why this scope is needed for `cs_wallet`",
      "created_at": "2020-04-02T15:23:32Z",
      "updated_at": "2020-04-02T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#discussion_r402400566",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402400566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1960,
      "original_line": 1960,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402402433",
      "pull_request_review_id": 386538685,
      "id": 402402433,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwMjQzMw==",
      "diff_hunk": "@@ -1918,43 +1918,46 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    auto locked_chain = pwallet->chain().lock();\n-    LOCK(pwallet->cs_wallet);\n-\n-    if (!pwallet->IsCrypted()) {\n-        throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n-    }\n+    int64_t nSleepTime;\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n \n-    // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n-    SecureString strWalletPass;\n-    strWalletPass.reserve(100);\n-    // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n-    // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n-    strWalletPass = request.params[0].get_str().c_str();\n+        if (!pwallet->IsCrypted()) {\n+            throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n+        }\n \n-    // Get the timeout\n-    int64_t nSleepTime = request.params[1].get_int64();\n-    // Timeout cannot be negative, otherwise it will relock immediately\n-    if (nSleepTime < 0) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n-    }\n-    // Clamp timeout\n-    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n-    if (nSleepTime > MAX_SLEEP_TIME) {\n-        nSleepTime = MAX_SLEEP_TIME;\n-    }\n+        // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n+        SecureString strWalletPass;\n+        strWalletPass.reserve(100);\n+        // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n+        // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n+        strWalletPass = request.params[0].get_str().c_str();\n+\n+        // Get the timeout\n+        nSleepTime = request.params[1].get_int64();\n+        // Timeout cannot be negative, otherwise it will relock immediately\n+        if (nSleepTime < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+        }\n+        // Clamp timeout\n+        constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+        if (nSleepTime > MAX_SLEEP_TIME) {\n+            nSleepTime = MAX_SLEEP_TIME;\n+        }\n \n-    if (strWalletPass.empty()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n-    }\n+        if (strWalletPass.empty()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+        }\n \n-    if (!pwallet->Unlock(strWalletPass)) {\n-        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-    }\n+        if (!pwallet->Unlock(strWalletPass)) {\n+            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n+        }\n \n-    pwallet->TopUpKeyPool();\n+        pwallet->TopUpKeyPool();\n \n-    pwallet->nRelockTime = GetTime() + nSleepTime;\n+        pwallet->nRelockTime = GetTime() + nSleepTime;\n+    }",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 74,
      "original_position": 74,
      "commit_id": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "original_commit_id": "0944cafe294d4ee009b615fc8d8caca77c117481",
      "in_reply_to_id": 402400566,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok.",
      "created_at": "2020-04-02T15:25:49Z",
      "updated_at": "2020-04-02T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#discussion_r402402433",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402402433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1960,
      "original_line": 1960,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402407866",
      "pull_request_review_id": 386545557,
      "id": 402407866,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwNzg2Ng==",
      "diff_hunk": "@@ -1918,47 +1918,52 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    auto locked_chain = pwallet->chain().lock();\n-    LOCK(pwallet->cs_wallet);\n-\n-    if (!pwallet->IsCrypted()) {\n-        throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n-    }\n+    int64_t nSleepTime;\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n \n-    // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n-    SecureString strWalletPass;\n-    strWalletPass.reserve(100);\n-    // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n-    // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n-    strWalletPass = request.params[0].get_str().c_str();\n+        if (!pwallet->IsCrypted()) {\n+            throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n+        }\n \n-    // Get the timeout\n-    int64_t nSleepTime = request.params[1].get_int64();\n-    // Timeout cannot be negative, otherwise it will relock immediately\n-    if (nSleepTime < 0) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n-    }\n-    // Clamp timeout\n-    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n-    if (nSleepTime > MAX_SLEEP_TIME) {\n-        nSleepTime = MAX_SLEEP_TIME;\n-    }\n+        // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n+        SecureString strWalletPass;\n+        strWalletPass.reserve(100);\n+        // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n+        // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n+        strWalletPass = request.params[0].get_str().c_str();\n+\n+        // Get the timeout\n+        nSleepTime = request.params[1].get_int64();\n+        // Timeout cannot be negative, otherwise it will relock immediately\n+        if (nSleepTime < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+        }\n+        // Clamp timeout\n+        constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+        if (nSleepTime > MAX_SLEEP_TIME) {\n+            nSleepTime = MAX_SLEEP_TIME;\n+        }\n \n-    if (strWalletPass.empty()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n-    }\n+        if (strWalletPass.empty()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+        }\n \n-    if (!pwallet->Unlock(strWalletPass)) {\n-        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-    }\n+        if (!pwallet->Unlock(strWalletPass)) {\n+            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n+        }\n \n-    pwallet->TopUpKeyPool();\n+        pwallet->TopUpKeyPool();\n \n-    pwallet->nRelockTime = GetTime() + nSleepTime;\n+        pwallet->nRelockTime = GetTime() + nSleepTime;\n+    }\n \n     // Keep a weak pointer to the wallet so that it is possible to unload the\n     // wallet before the following callback is called. If a valid shared pointer\n     // is acquired in the callback then the wallet is still loaded.",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 83,
      "original_position": 78,
      "commit_id": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "original_commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should this say \"locked\" instead of \"loaded\"?",
      "created_at": "2020-04-02T15:33:01Z",
      "updated_at": "2020-04-02T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#discussion_r402407866",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402407866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1969,
      "original_line": 1969,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402408647",
      "pull_request_review_id": 386545557,
      "id": 402408647,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQwODY0Nw==",
      "diff_hunk": "@@ -1918,47 +1918,52 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    auto locked_chain = pwallet->chain().lock();\n-    LOCK(pwallet->cs_wallet);\n-\n-    if (!pwallet->IsCrypted()) {\n-        throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n-    }\n+    int64_t nSleepTime;\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n \n-    // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n-    SecureString strWalletPass;\n-    strWalletPass.reserve(100);\n-    // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n-    // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n-    strWalletPass = request.params[0].get_str().c_str();\n+        if (!pwallet->IsCrypted()) {\n+            throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n+        }\n \n-    // Get the timeout\n-    int64_t nSleepTime = request.params[1].get_int64();\n-    // Timeout cannot be negative, otherwise it will relock immediately\n-    if (nSleepTime < 0) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n-    }\n-    // Clamp timeout\n-    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n-    if (nSleepTime > MAX_SLEEP_TIME) {\n-        nSleepTime = MAX_SLEEP_TIME;\n-    }\n+        // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n+        SecureString strWalletPass;\n+        strWalletPass.reserve(100);\n+        // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n+        // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n+        strWalletPass = request.params[0].get_str().c_str();\n+\n+        // Get the timeout\n+        nSleepTime = request.params[1].get_int64();\n+        // Timeout cannot be negative, otherwise it will relock immediately\n+        if (nSleepTime < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+        }\n+        // Clamp timeout\n+        constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+        if (nSleepTime > MAX_SLEEP_TIME) {\n+            nSleepTime = MAX_SLEEP_TIME;\n+        }\n \n-    if (strWalletPass.empty()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n-    }\n+        if (strWalletPass.empty()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+        }\n \n-    if (!pwallet->Unlock(strWalletPass)) {\n-        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-    }\n+        if (!pwallet->Unlock(strWalletPass)) {\n+            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n+        }\n \n-    pwallet->TopUpKeyPool();\n+        pwallet->TopUpKeyPool();\n \n-    pwallet->nRelockTime = GetTime() + nSleepTime;\n+        pwallet->nRelockTime = GetTime() + nSleepTime;\n+    }\n \n     // Keep a weak pointer to the wallet so that it is possible to unload the\n     // wallet before the following callback is called. If a valid shared pointer\n     // is acquired in the callback then the wallet is still loaded.\n+    // Currently this must be called without locks held otherwise a deadlock",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "original_commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why \"currently\"? Is there a plan to change this in the future?\r\n\r\nAlso, could add a `AssertLockNotHeld(cs_wallet);` to accommodate  the comment?",
      "created_at": "2020-04-02T15:34:08Z",
      "updated_at": "2020-04-02T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#discussion_r402408647",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402408647"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1965,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402410809",
      "pull_request_review_id": 386545557,
      "id": 402410809,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxMDgwOQ==",
      "diff_hunk": "@@ -1918,47 +1918,52 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    auto locked_chain = pwallet->chain().lock();\n-    LOCK(pwallet->cs_wallet);\n-\n-    if (!pwallet->IsCrypted()) {\n-        throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n-    }\n+    int64_t nSleepTime;\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n \n-    // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n-    SecureString strWalletPass;\n-    strWalletPass.reserve(100);\n-    // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n-    // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n-    strWalletPass = request.params[0].get_str().c_str();\n+        if (!pwallet->IsCrypted()) {\n+            throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n+        }\n \n-    // Get the timeout\n-    int64_t nSleepTime = request.params[1].get_int64();\n-    // Timeout cannot be negative, otherwise it will relock immediately\n-    if (nSleepTime < 0) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n-    }\n-    // Clamp timeout\n-    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n-    if (nSleepTime > MAX_SLEEP_TIME) {\n-        nSleepTime = MAX_SLEEP_TIME;\n-    }\n+        // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n+        SecureString strWalletPass;\n+        strWalletPass.reserve(100);\n+        // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n+        // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n+        strWalletPass = request.params[0].get_str().c_str();\n+\n+        // Get the timeout\n+        nSleepTime = request.params[1].get_int64();\n+        // Timeout cannot be negative, otherwise it will relock immediately\n+        if (nSleepTime < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+        }\n+        // Clamp timeout\n+        constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+        if (nSleepTime > MAX_SLEEP_TIME) {\n+            nSleepTime = MAX_SLEEP_TIME;\n+        }\n \n-    if (strWalletPass.empty()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n-    }\n+        if (strWalletPass.empty()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+        }\n \n-    if (!pwallet->Unlock(strWalletPass)) {\n-        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-    }\n+        if (!pwallet->Unlock(strWalletPass)) {\n+            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n+        }\n \n-    pwallet->TopUpKeyPool();\n+        pwallet->TopUpKeyPool();\n \n-    pwallet->nRelockTime = GetTime() + nSleepTime;\n+        pwallet->nRelockTime = GetTime() + nSleepTime;\n+    }\n \n     // Keep a weak pointer to the wallet so that it is possible to unload the\n     // wallet before the following callback is called. If a valid shared pointer\n     // is acquired in the callback then the wallet is still loaded.\n+    // Currently this must be called without locks held otherwise a deadlock\n+    // can occur with cs_wallet. For more details see #18487.",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "original_commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Instead of plain hashtag and number, which is hard to quickly look up (especially without internet), what about describing the issue here briefly?",
      "created_at": "2020-04-02T15:37:09Z",
      "updated_at": "2020-04-02T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#discussion_r402410809",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402410809"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402433672",
      "pull_request_review_id": 386578396,
      "id": 402433672,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQzMzY3Mg==",
      "diff_hunk": "@@ -1918,47 +1918,52 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    auto locked_chain = pwallet->chain().lock();\n-    LOCK(pwallet->cs_wallet);\n-\n-    if (!pwallet->IsCrypted()) {\n-        throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n-    }\n+    int64_t nSleepTime;\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n \n-    // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n-    SecureString strWalletPass;\n-    strWalletPass.reserve(100);\n-    // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n-    // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n-    strWalletPass = request.params[0].get_str().c_str();\n+        if (!pwallet->IsCrypted()) {\n+            throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n+        }\n \n-    // Get the timeout\n-    int64_t nSleepTime = request.params[1].get_int64();\n-    // Timeout cannot be negative, otherwise it will relock immediately\n-    if (nSleepTime < 0) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n-    }\n-    // Clamp timeout\n-    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n-    if (nSleepTime > MAX_SLEEP_TIME) {\n-        nSleepTime = MAX_SLEEP_TIME;\n-    }\n+        // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n+        SecureString strWalletPass;\n+        strWalletPass.reserve(100);\n+        // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n+        // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n+        strWalletPass = request.params[0].get_str().c_str();\n+\n+        // Get the timeout\n+        nSleepTime = request.params[1].get_int64();\n+        // Timeout cannot be negative, otherwise it will relock immediately\n+        if (nSleepTime < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+        }\n+        // Clamp timeout\n+        constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+        if (nSleepTime > MAX_SLEEP_TIME) {\n+            nSleepTime = MAX_SLEEP_TIME;\n+        }\n \n-    if (strWalletPass.empty()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n-    }\n+        if (strWalletPass.empty()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+        }\n \n-    if (!pwallet->Unlock(strWalletPass)) {\n-        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-    }\n+        if (!pwallet->Unlock(strWalletPass)) {\n+            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n+        }\n \n-    pwallet->TopUpKeyPool();\n+        pwallet->TopUpKeyPool();\n \n-    pwallet->nRelockTime = GetTime() + nSleepTime;\n+        pwallet->nRelockTime = GetTime() + nSleepTime;\n+    }\n \n     // Keep a weak pointer to the wallet so that it is possible to unload the\n     // wallet before the following callback is called. If a valid shared pointer\n     // is acquired in the callback then the wallet is still loaded.\n+    // Currently this must be called without locks held otherwise a deadlock\n+    // can occur with cs_wallet. For more details see #18487.",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "original_commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "in_reply_to_id": 402410809,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The comment from the pull request description seems suitable",
      "created_at": "2020-04-02T16:08:56Z",
      "updated_at": "2020-04-02T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#discussion_r402433672",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402433672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402440776",
      "pull_request_review_id": 386538685,
      "id": 402440776,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ0MDc3Ng==",
      "diff_hunk": "@@ -1918,47 +1918,52 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    auto locked_chain = pwallet->chain().lock();\n-    LOCK(pwallet->cs_wallet);\n-\n-    if (!pwallet->IsCrypted()) {\n-        throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n-    }\n+    int64_t nSleepTime;\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n \n-    // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n-    SecureString strWalletPass;\n-    strWalletPass.reserve(100);\n-    // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n-    // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n-    strWalletPass = request.params[0].get_str().c_str();\n+        if (!pwallet->IsCrypted()) {\n+            throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n+        }\n \n-    // Get the timeout\n-    int64_t nSleepTime = request.params[1].get_int64();\n-    // Timeout cannot be negative, otherwise it will relock immediately\n-    if (nSleepTime < 0) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n-    }\n-    // Clamp timeout\n-    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n-    if (nSleepTime > MAX_SLEEP_TIME) {\n-        nSleepTime = MAX_SLEEP_TIME;\n-    }\n+        // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n+        SecureString strWalletPass;\n+        strWalletPass.reserve(100);\n+        // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n+        // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n+        strWalletPass = request.params[0].get_str().c_str();\n+\n+        // Get the timeout\n+        nSleepTime = request.params[1].get_int64();\n+        // Timeout cannot be negative, otherwise it will relock immediately\n+        if (nSleepTime < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+        }\n+        // Clamp timeout\n+        constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+        if (nSleepTime > MAX_SLEEP_TIME) {\n+            nSleepTime = MAX_SLEEP_TIME;\n+        }\n \n-    if (strWalletPass.empty()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n-    }\n+        if (strWalletPass.empty()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+        }\n \n-    if (!pwallet->Unlock(strWalletPass)) {\n-        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-    }\n+        if (!pwallet->Unlock(strWalletPass)) {\n+            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n+        }\n \n-    pwallet->TopUpKeyPool();\n+        pwallet->TopUpKeyPool();\n \n-    pwallet->nRelockTime = GetTime() + nSleepTime;\n+        pwallet->nRelockTime = GetTime() + nSleepTime;\n+    }\n \n     // Keep a weak pointer to the wallet so that it is possible to unload the\n     // wallet before the following callback is called. If a valid shared pointer\n     // is acquired in the callback then the wallet is still loaded.",
      "path": "src/wallet/rpcwallet.cpp",
      "position": 83,
      "original_position": 78,
      "commit_id": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "original_commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "in_reply_to_id": 402407866,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No, loaded. This is to handle the case a wallet is unloaded before the timer is triggered.",
      "created_at": "2020-04-02T16:19:25Z",
      "updated_at": "2020-04-02T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#discussion_r402440776",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402440776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1969,
      "original_line": 1969,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402441700",
      "pull_request_review_id": 386538685,
      "id": 402441700,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ0MTcwMA==",
      "diff_hunk": "@@ -1918,47 +1918,52 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    auto locked_chain = pwallet->chain().lock();\n-    LOCK(pwallet->cs_wallet);\n-\n-    if (!pwallet->IsCrypted()) {\n-        throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n-    }\n+    int64_t nSleepTime;\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n \n-    // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n-    SecureString strWalletPass;\n-    strWalletPass.reserve(100);\n-    // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n-    // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n-    strWalletPass = request.params[0].get_str().c_str();\n+        if (!pwallet->IsCrypted()) {\n+            throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n+        }\n \n-    // Get the timeout\n-    int64_t nSleepTime = request.params[1].get_int64();\n-    // Timeout cannot be negative, otherwise it will relock immediately\n-    if (nSleepTime < 0) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n-    }\n-    // Clamp timeout\n-    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n-    if (nSleepTime > MAX_SLEEP_TIME) {\n-        nSleepTime = MAX_SLEEP_TIME;\n-    }\n+        // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n+        SecureString strWalletPass;\n+        strWalletPass.reserve(100);\n+        // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n+        // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n+        strWalletPass = request.params[0].get_str().c_str();\n+\n+        // Get the timeout\n+        nSleepTime = request.params[1].get_int64();\n+        // Timeout cannot be negative, otherwise it will relock immediately\n+        if (nSleepTime < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+        }\n+        // Clamp timeout\n+        constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+        if (nSleepTime > MAX_SLEEP_TIME) {\n+            nSleepTime = MAX_SLEEP_TIME;\n+        }\n \n-    if (strWalletPass.empty()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n-    }\n+        if (strWalletPass.empty()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+        }\n \n-    if (!pwallet->Unlock(strWalletPass)) {\n-        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-    }\n+        if (!pwallet->Unlock(strWalletPass)) {\n+            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n+        }\n \n-    pwallet->TopUpKeyPool();\n+        pwallet->TopUpKeyPool();\n \n-    pwallet->nRelockTime = GetTime() + nSleepTime;\n+        pwallet->nRelockTime = GetTime() + nSleepTime;\n+    }\n \n     // Keep a weak pointer to the wallet so that it is possible to unload the\n     // wallet before the following callback is called. If a valid shared pointer\n     // is acquired in the callback then the wallet is still loaded.\n+    // Currently this must be called without locks held otherwise a deadlock",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "original_commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "in_reply_to_id": 402408647,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Why \"currently\"? Is there a plan to change this in the future?\r\n\r\nNo plans. However I think it could be improved because after the timer stays in `deadlineTimers` after being triggered.",
      "created_at": "2020-04-02T16:20:47Z",
      "updated_at": "2020-04-02T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#discussion_r402441700",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402441700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1965,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402441861",
      "pull_request_review_id": 386538685,
      "id": 402441861,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ0MTg2MQ==",
      "diff_hunk": "@@ -1918,47 +1918,52 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    auto locked_chain = pwallet->chain().lock();\n-    LOCK(pwallet->cs_wallet);\n-\n-    if (!pwallet->IsCrypted()) {\n-        throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n-    }\n+    int64_t nSleepTime;\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n \n-    // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n-    SecureString strWalletPass;\n-    strWalletPass.reserve(100);\n-    // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n-    // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n-    strWalletPass = request.params[0].get_str().c_str();\n+        if (!pwallet->IsCrypted()) {\n+            throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n+        }\n \n-    // Get the timeout\n-    int64_t nSleepTime = request.params[1].get_int64();\n-    // Timeout cannot be negative, otherwise it will relock immediately\n-    if (nSleepTime < 0) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n-    }\n-    // Clamp timeout\n-    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n-    if (nSleepTime > MAX_SLEEP_TIME) {\n-        nSleepTime = MAX_SLEEP_TIME;\n-    }\n+        // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n+        SecureString strWalletPass;\n+        strWalletPass.reserve(100);\n+        // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n+        // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n+        strWalletPass = request.params[0].get_str().c_str();\n+\n+        // Get the timeout\n+        nSleepTime = request.params[1].get_int64();\n+        // Timeout cannot be negative, otherwise it will relock immediately\n+        if (nSleepTime < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+        }\n+        // Clamp timeout\n+        constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+        if (nSleepTime > MAX_SLEEP_TIME) {\n+            nSleepTime = MAX_SLEEP_TIME;\n+        }\n \n-    if (strWalletPass.empty()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n-    }\n+        if (strWalletPass.empty()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+        }\n \n-    if (!pwallet->Unlock(strWalletPass)) {\n-        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-    }\n+        if (!pwallet->Unlock(strWalletPass)) {\n+            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n+        }\n \n-    pwallet->TopUpKeyPool();\n+        pwallet->TopUpKeyPool();\n \n-    pwallet->nRelockTime = GetTime() + nSleepTime;\n+        pwallet->nRelockTime = GetTime() + nSleepTime;\n+    }\n \n     // Keep a weak pointer to the wallet so that it is possible to unload the\n     // wallet before the following callback is called. If a valid shared pointer\n     // is acquired in the callback then the wallet is still loaded.\n+    // Currently this must be called without locks held otherwise a deadlock",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "original_commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "in_reply_to_id": 402408647,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Also, could add a `AssertLockNotHeld(cs_wallet);` to accommodate the comment?\r\n\r\nDone.",
      "created_at": "2020-04-02T16:21:04Z",
      "updated_at": "2020-04-02T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#discussion_r402441861",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402441861"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1965,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402442061",
      "pull_request_review_id": 386538685,
      "id": 402442061,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ0MjA2MQ==",
      "diff_hunk": "@@ -1918,47 +1918,52 @@ static UniValue walletpassphrase(const JSONRPCRequest& request)\n                 },\n             }.Check(request);\n \n-    auto locked_chain = pwallet->chain().lock();\n-    LOCK(pwallet->cs_wallet);\n-\n-    if (!pwallet->IsCrypted()) {\n-        throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n-    }\n+    int64_t nSleepTime;\n+    {\n+        auto locked_chain = pwallet->chain().lock();\n+        LOCK(pwallet->cs_wallet);\n \n-    // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n-    SecureString strWalletPass;\n-    strWalletPass.reserve(100);\n-    // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n-    // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n-    strWalletPass = request.params[0].get_str().c_str();\n+        if (!pwallet->IsCrypted()) {\n+            throw JSONRPCError(RPC_WALLET_WRONG_ENC_STATE, \"Error: running with an unencrypted wallet, but walletpassphrase was called.\");\n+        }\n \n-    // Get the timeout\n-    int64_t nSleepTime = request.params[1].get_int64();\n-    // Timeout cannot be negative, otherwise it will relock immediately\n-    if (nSleepTime < 0) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n-    }\n-    // Clamp timeout\n-    constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n-    if (nSleepTime > MAX_SLEEP_TIME) {\n-        nSleepTime = MAX_SLEEP_TIME;\n-    }\n+        // Note that the walletpassphrase is stored in request.params[0] which is not mlock()ed\n+        SecureString strWalletPass;\n+        strWalletPass.reserve(100);\n+        // TODO: get rid of this .c_str() by implementing SecureString::operator=(std::string)\n+        // Alternately, find a way to make request.params[0] mlock()'d to begin with.\n+        strWalletPass = request.params[0].get_str().c_str();\n+\n+        // Get the timeout\n+        nSleepTime = request.params[1].get_int64();\n+        // Timeout cannot be negative, otherwise it will relock immediately\n+        if (nSleepTime < 0) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Timeout cannot be negative.\");\n+        }\n+        // Clamp timeout\n+        constexpr int64_t MAX_SLEEP_TIME = 100000000; // larger values trigger a macos/libevent bug?\n+        if (nSleepTime > MAX_SLEEP_TIME) {\n+            nSleepTime = MAX_SLEEP_TIME;\n+        }\n \n-    if (strWalletPass.empty()) {\n-        throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n-    }\n+        if (strWalletPass.empty()) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"passphrase can not be empty\");\n+        }\n \n-    if (!pwallet->Unlock(strWalletPass)) {\n-        throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n-    }\n+        if (!pwallet->Unlock(strWalletPass)) {\n+            throw JSONRPCError(RPC_WALLET_PASSPHRASE_INCORRECT, \"Error: The wallet passphrase entered was incorrect.\");\n+        }\n \n-    pwallet->TopUpKeyPool();\n+        pwallet->TopUpKeyPool();\n \n-    pwallet->nRelockTime = GetTime() + nSleepTime;\n+        pwallet->nRelockTime = GetTime() + nSleepTime;\n+    }\n \n     // Keep a weak pointer to the wallet so that it is possible to unload the\n     // wallet before the following callback is called. If a valid shared pointer\n     // is acquired in the callback then the wallet is still loaded.\n+    // Currently this must be called without locks held otherwise a deadlock\n+    // can occur with cs_wallet. For more details see #18487.",
      "path": "src/wallet/rpcwallet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "7b8e15728d1ad058a4b7d7569fd5d5ba6806ca28",
      "original_commit_id": "47dd37cc83bdcaf19a3abe95950b2409baae6249",
      "in_reply_to_id": 402410809,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will improve&mix.",
      "created_at": "2020-04-02T16:21:20Z",
      "updated_at": "2020-04-02T16:25:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/18487#discussion_r402442061",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/402442061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18487"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1966,
      "side": "RIGHT"
    }
  ]
}