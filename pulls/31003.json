{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003",
    "id": 2099761040,
    "node_id": "PR_kwDOABII5859J8-Q",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31003",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31003.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31003.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31003",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31003/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/9a723c784ad5170b1e01e91f018e5794a51dd038",
    "number": 31003,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Add waitFeesChanged() to Mining interface",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The Stratum v2 protocol allows pushing out templates as fees in the mempool increase. This interface lets us know when it's time to do so.\r\n\r\nI split the implementation into two parts because I'm not sure if we should include the second commit now, or wait until cluster mempool #30289 is merged.\r\n\r\nThe first commit contains a mock implementation very similiar to how longpolling in `getblocktemplate` works. It calls `getTransactionsUpdated` once per second. This returns `true` anytime a transaction is added to the mempool, even if it has no impact on fees in the best block.\r\n\r\nThe second commit creates a new block template so it can actually measure the fees. It's slightly faster `getNewBlock()` because it skips verification.\r\n\r\nOn my 2019 Intel MacBook Pro it takes about 20ms to generate a block template. The `waitFeesChanged()` waits 1 second between each `CreateNewBlock` call so as to not burden the node too much. But on (very) low end hardware this may still be problematic.\r\n\r\nThe second commit does not change the interface, so it could be left out if people prefer that. I'm not sure what performance increase to expect from cluster mempool.\r\n\r\nThe interface intentionally does not return the resulting template, so that the implementation can be optimized further. Downside is that the caller needs to do another `getNewBlock()`.\r\n\r\nThe changes here can use to make longpolling `getblocktemplate` more efficient, by only returning the RPC call when template fees actually increased. However this PR does not touch that RPC code.",
    "labels": [],
    "created_at": "2024-09-30T18:15:40Z",
    "updated_at": "2024-10-18T20:49:09Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "0004486a3bb0ba7ad7d4a1bfa35b657609090f18",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Sjors:2024/07/mining-fees-changed",
      "ref": "2024/07/mining-fees-changed",
      "sha": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 92390696,
        "node_id": "MDEwOlJlcG9zaXRvcnk5MjM5MDY5Ng==",
        "name": "bitcoin",
        "full_name": "Sjors/bitcoin",
        "owner": {
          "login": "Sjors",
          "id": 10217,
          "node_id": "MDQ6VXNlcjEwMjE3",
          "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sjors",
          "html_url": "https://github.com/Sjors",
          "followers_url": "https://api.github.com/users/Sjors/followers",
          "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
          "organizations_url": "https://api.github.com/users/Sjors/orgs",
          "repos_url": "https://api.github.com/users/Sjors/repos",
          "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Sjors/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/Sjors/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Sjors/bitcoin",
        "archive_url": "https://api.github.com/repos/Sjors/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Sjors/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Sjors/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Sjors/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Sjors/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Sjors/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Sjors/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Sjors/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Sjors/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Sjors/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Sjors/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Sjors/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Sjors/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Sjors/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Sjors/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Sjors/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Sjors/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Sjors/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Sjors/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Sjors/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Sjors/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Sjors/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Sjors/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Sjors/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Sjors/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Sjors/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Sjors/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Sjors/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Sjors/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Sjors/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Sjors/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Sjors/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Sjors/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Sjors/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Sjors/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Sjors/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Sjors/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Sjors/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Sjors/bitcoin/hooks",
        "svn_url": "https://github.com/Sjors/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 11,
        "stargazers_count": 6,
        "watchers_count": 6,
        "size": 250092,
        "default_branch": "sv2",
        "open_issues_count": 13,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-16T12:11:47Z",
        "created_at": "2017-05-25T10:05:54Z",
        "updated_at": "2024-10-16T12:12:03Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f3c74c4a7e120ea363abe4d4aa034b85c1d71919",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36262,
        "stargazers_count": 78927,
        "watchers_count": 78927,
        "size": 269931,
        "default_branch": "master",
        "open_issues_count": 650,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-10-17T15:30:17Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-10-18T20:58:50Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 58,
    "deletions": 4,
    "changed_files": 3,
    "commits": 2,
    "review_comments": 10,
    "comments": 3
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE4NzU4OWFiZmRlNGYyZjFkZmJhMGYzZjFmNTc0NWY3YWNmZWYzNjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
      "tree": {
        "sha": "2dd3a68da95c32080fbfcfde6277f291a76989e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2dd3a68da95c32080fbfcfde6277f291a76989e2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2dd3a68da95c32080fbfcfde6277f291a76989e2\nparent f3c74c4a7e120ea363abe4d4aa034b85c1d71919\nauthor Sjors Provoost <sjors@sprovoost.nl> 1727707704 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1727719936 +0200\n\nIntroduce waitFeesChanged() mining interface\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmb66gEACgkQV/+b28ww\nEAmDcRAAqgmJSq059VO4r3Wn47ewZYH4YzKHNZf9vhfSv3KBQAps2tdht2SXDNFh\nDl5m0oZ68wrLrRqnqD3gyFgw5oS2bvvGqCqZRkXz3gY9k/w7xwvUvcmYlCX2HEiq\nLbuSQ6mK1nnWcwI31e799vD2h4OdXp6FFeq3e59el1SBkkBkkA1/oaUGCWTN1lBc\n/H4YIXIzjflAD2ActepP+qNv2Hf53VgVJmdbRAMzkf8lBwitL9aoM6PlqSTmQd8c\ntV5kc1D3A2sJZc4RLNgfuDJpwC7HI7QroC+SPzvsze5/ExpvBYJoKyiXxXL2INjr\nJUB0R6KzsBa7/YWhihxdQAjp3rnh/N65uHuuNyrfVH1TSMND7KTJncreZsjrApcT\ni3Q0fYeHngbujqSNpYxY0B1PJZAxrBtgyGXxIXMoin/S7qTnH1QIKDex5K5WNVbx\nhghYR02GjTUQZ1tIccvPVt1r98+riT914vKn3JoV40seQ5/6bX1INrfvh98pQPNw\ntOT6E3Zelf1QNDoyCatoRduRoJ2asJNZNa9hx4oJZrw72RHXMUrd+Su4E67KwgVC\nyQcG7tEseuP0wcCYunUVybITGKBod+azxmGC7GVAc5fkZnpZo1iZouxeX8C4uTSZ\nSmBcCYsz1oyRoOa4/lHgvcq4I0XHsKNHchbQdR3hCgGAF/kzPwU=\n=8daO\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3c74c4a7e120ea363abe4d4aa034b85c1d71919",
          "sha": "f3c74c4a7e120ea363abe4d4aa034b85c1d71919",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f3c74c4a7e120ea363abe4d4aa034b85c1d71919"
        }
      ],
      "message": "Introduce waitFeesChanged() mining interface",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-09-30T18:12:16Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-09-30T14:48:24Z"
      },
      "sha": "a87589abfde4f2f1dfba0f3f1f5745f7acfef365"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlhNzIzYzc4NGFkNTE3MGIxZTAxZTkxZjAxOGU1Nzk0YTUxZGQwMzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a723c784ad5170b1e01e91f018e5794a51dd038",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9a723c784ad5170b1e01e91f018e5794a51dd038",
      "tree": {
        "sha": "4ec44f6c3ca678839c98f54fad070d788e13ea25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ec44f6c3ca678839c98f54fad070d788e13ea25"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4ec44f6c3ca678839c98f54fad070d788e13ea25\nparent a87589abfde4f2f1dfba0f3f1f5745f7acfef365\nauthor Sjors Provoost <sjors@sprovoost.nl> 1727707888 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1727719951 +0200\n\nHave waitFeesChanged() frequently make a template\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmb66hAACgkQV/+b28ww\nEAmV9g//TxmeusZGSjsK/5ckzGXeH7dvaQuDjF2VaBHYGr46EercgVKmUCz3Yapq\n+Zue0blhEDI8333d/VkdqIpQhfakp6Xy9kS/G8SjChaYI7WYShBc2i0S9mVCLW5t\nW6xP7/pHYZJU2RIi18bGC+NfWa2xnkkr+GM/wgVUoAgEH7EHO2+HZaKwjcvs0ZDQ\nv0sRgJl0pC+YnIcheR4/SEkA6YM3SKywNoXOcFijc8NZwaog1jgwLVnS1Mbt/Brz\n7pG3xEmRav6PBOYb7VuJsNGrEYrtXJ2SkREkuKyxIFVoI/JrtW6dz0/djUMEdw/o\nymsn2OGKD8TJuEbJ8Vyb6xr6qVJMkdD4dYGfG9ils1jJiL5oABPtQ6NawaZFD9qy\n1A9ofzRpyn8jsyMcbYoZPxh59kjIU7OU9KqT5yd+PYjDO8Dg6G8Fz8w5SyOTxhQ+\nunOnoUKYwWvr+oJf6e7zU9gGRyETmLHywT70C9RV6ZrJiLTp/dqa2Mv3QSzctJ+8\noo3yR/xtPGdzE2RpznvUfw0KU9lTUatv/I/kc0B7eXXQsnhuvrZna97z536x6UX1\nTSD5OZw67Dx/iZifD7Q34j4vT+dXtBrxknXkd5dQPiGnQhwMBh+na+GvuLZQXytI\nv0NvRkpr2U4aL7bUdo/nUKvNZLWzyVGbUdDJLnrxFjjZWAuO7+E=\n=N9V2\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
          "sha": "a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a87589abfde4f2f1dfba0f3f1f5745f7acfef365"
        }
      ],
      "message": "Have waitFeesChanged() frequently make a template",
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-09-30T18:12:31Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2024-09-30T14:51:28Z"
      },
      "sha": "9a723c784ad5170b1e01e91f018e5794a51dd038"
    },
    {
      "event": "commented",
      "id": 2383868249,
      "node_id": "IC_kwDOABII586OFvFZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2383868249",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T18:15:43Z",
      "updated_at": "2024-10-08T17:43:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/31003).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [danielabrozzoni](https://github.com/bitcoin/bitcoin/pull/31003#pullrequestreview-2340337601), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31003#pullrequestreview-2354996475) |\n| Approach ACK | [tdb3](https://github.com/bitcoin/bitcoin/pull/31003#pullrequestreview-2349619672) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#issuecomment-2383868249",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31003"
    },
    {
      "event": "renamed",
      "id": 14460567127,
      "node_id": "RTE_lADOABII586YbhvmzwAAAANd6r5X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14460567127",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T18:17:29Z",
      "rename": {
        "from": "Introduce waitFeesChanged() mining interface",
        "to": "Add waitFeesChanged() to Mining interface"
      }
    },
    {
      "event": "reviewed",
      "id": 2338316156,
      "node_id": "PRR_kwDOABII586LX998",
      "url": null,
      "actor": null,
      "commit_id": "a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#pullrequestreview-2338316156",
      "submitted_at": "2024-09-30T18:31:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
    },
    {
      "event": "reviewed",
      "id": 2340337601,
      "node_id": "PRR_kwDOABII586LfrfB",
      "url": null,
      "actor": null,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 9a723c784ad5170b1e01e91f018e5794a51dd038 - code looks good to me, I don't have an opinion on merging both commits vs waiting for cluster mempool for the second one.",
      "user": {
        "login": "danielabrozzoni",
        "id": 25042473,
        "node_id": "MDQ6VXNlcjI1MDQyNDcz",
        "avatar_url": "https://avatars.githubusercontent.com/u/25042473?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/danielabrozzoni",
        "html_url": "https://github.com/danielabrozzoni",
        "followers_url": "https://api.github.com/users/danielabrozzoni/followers",
        "following_url": "https://api.github.com/users/danielabrozzoni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/danielabrozzoni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/danielabrozzoni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/danielabrozzoni/subscriptions",
        "organizations_url": "https://api.github.com/users/danielabrozzoni/orgs",
        "repos_url": "https://api.github.com/users/danielabrozzoni/repos",
        "events_url": "https://api.github.com/users/danielabrozzoni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/danielabrozzoni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#pullrequestreview-2340337601",
      "submitted_at": "2024-10-01T13:37:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
    },
    {
      "event": "reviewed",
      "id": 2354996475,
      "node_id": "PRR_kwDOABII586MXmT7",
      "url": null,
      "actor": null,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 9a723c784ad5170b1e01e91f018e5794a51dd038, but implementation has a few rough edges described below, which would recommend fixing.\r\n\r\nAlso I think it would be a lot clearer to squash the two commits. If second commit is a problem for \"(very) low end hardware\" as described, I think it might make sense to make  fee_threshold a std::optional parameter so callers running on slow hardware can skip the fee calculation. Alternately could tweak sleep_until to make sure the function is sleeping a minimum amount of time.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#pullrequestreview-2354996475",
      "submitted_at": "2024-10-08T17:20:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
    },
    {
      "event": "reviewed",
      "id": 2349619672,
      "node_id": "PRR_kwDOABII586MDFnY",
      "url": null,
      "actor": null,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK\r\n\r\nCherry-picked bitcoin-mine from #30437 to exercise some of the interface (on top of 9a723c784ad5170b1e01e91f018e5794a51dd038).\r\n\r\n```\r\ngit cherry-pick aec7e7d897741fe25fbf54995e1825772e0872d7\r\ngit cherry-pick 2227afac0372358287fb879f3b0bd07fd653f3f8\r\n\r\nmake -C depends NO_QT=1 MULTIPROCESS=1\r\nHOST_PLATFORM=\"x86_64-pc-linux-gnu\"\r\ncmake -B build --toolchain=depends/$HOST_PLATFORM/toolchain.cmake\r\n```\r\n\r\nAdded the following to `bitcoin-mine.cpp`\r\n```diff\r\ndiff --git a/src/bitcoin-mine.cpp b/src/bitcoin-mine.cpp\r\nindex 278413df86..5ec64fcd31 100644\r\n--- a/src/bitcoin-mine.cpp\r\n+++ b/src/bitcoin-mine.cpp\r\n@@ -120,5 +120,30 @@ MAIN_FUNCTION\r\n         tfm::format(std::cout, \"Tip hash is null.\\n\");\r\n     }\r\n \r\n+    CAmount fee{500};\r\n+    tfm::format(std::cout, \"waitFeesChanged() with fee_threshold=%u, and max timeout\\n\", fee);\r\n+    tfm::format(std::cout, \"Generate one block to see return=false\\n\");\r\n+    bool ret = mining->waitFeesChanged(tip->hash, fee); // wait max timeout\r\n+    tfm::format(std::cout, \"waitFeesChanged() returned %s\\n\", (ret)? \"true\" : \"false\");\r\n+    tip = mining->getTip();\r\n+\r\n+    tfm::format(std::cout, \"Add a transaction to the mempool with fee < 500 sats (no return)\\n\");\r\n+    tfm::format(std::cout, \"then add a transaction to the mempool with fee >= 500 sats (return true)\\n\");\r\n+    ret = mining->waitFeesChanged(tip->hash, fee); // wait max timeout\r\n+    tfm::format(std::cout, \"waitFeesChanged() returned %s\\n\", (ret)? \"true\" : \"false\");\r\n+\r\n+    MillisecondsDouble timeout{5000};\r\n+    tfm::format(std::cout, \"waitFeesChanged() with fee_threshold=%u, and timeout 5000\\n\", fee);\r\n+    tfm::format(std::cout, \"Wait 5 seconds to see return=false\\n\");\r\n+    ret = mining->waitFeesChanged(tip->hash, fee, {}, timeout);\r\n+    tfm::format(std::cout, \"waitFeesChanged() returned %s\\n\", (ret)? \"true\" : \"false\");\r\n+\r\n+    tfm::format(std::cout, \"waitFeesChanged() with fee_threshold=%u, and timeout 5000\\n\", fee);\r\n+    tfm::format(std::cout, \"Do the following within 5 seconds\\n\");\r\n+    tfm::format(std::cout, \"Add a transaction to the mempool with fee < 500 sats (no return)\\n\");\r\n+    tfm::format(std::cout, \"then add a transaction to the mempool with fee >= 500 sats (return true)\\n\");\r\n+    ret = mining->waitFeesChanged(tip->hash, fee, {}, timeout);\r\n+    tfm::format(std::cout, \"waitFeesChanged() returned %s\\n\", (ret)? \"true\" : \"false\");\r\n+\r\n     return EXIT_SUCCESS;\r\n }\r\n```\r\n\r\nCompiled and ran bitcoin-node:\r\n```\r\ncmake --build build -j18\r\nbuild/src/bitcoin-node -regtest -printtoconsole -debug=ipc -ipcbind=unix\r\n```\r\n\r\nCreated a wallet and generated some coins for it.\r\n```\r\nbuild/src/bitcoin-cli createwallet test\r\nbuild/src/bitcoin-cli -generate 105\r\n```\r\n\r\n<details>\r\n<summary>Ran bitcoin-mine while performing bitcoin-cli actions in another terminal.</summary>\r\n\r\n```\r\ndev@bdev02:~/bitcoin$ build/src/bitcoin-mine \r\nConnected to bitcoin-node\r\nTip hash is 7fb7fad5993fbbf52a4623a7cc7fedfd34f1190e4a44e8d67614a10d3490be3d.\r\nwaitFeesChanged() with fee_threshold=500, and max timeout\r\nGenerate one block to see return=false\r\n```\r\n\r\n```\r\ndev@bdev02:~/bitcoin$ build/src/bitcoin-cli -generate 1\r\n```\r\n\r\n```\r\nwaitFeesChanged() returned false\r\nAdd a transaction to the mempool with fee < 500 sats (no return)\r\nthen add a transaction to the mempool with fee >= 500 sats (return true)\r\n```\r\n\r\n```\r\ndev@bdev02:~/bitcoin$ build/src/bitcoin-cli -named sendtoaddress amount=3 address=bcrt1qhxcq73xjhtl7eyqkzuwemwpn2ljnala4mc6uwj fee_rate=1 && sleep 1 && build/src/bitcoin-cli -named sendtoaddress amount=3 address=bcrt1qhxcq73xjhtl7eyqkzuwemwpn2ljnala4mc6uwj fee_rate=5\r\n```\r\n\r\n```\r\nwaitFeesChanged() returned true\r\n```\r\n\r\n```\r\nwaitFeesChanged() with fee_threshold=500, and timeout 5000\r\nWait 5 seconds to see return=false\r\nwaitFeesChanged() returned false\r\nwaitFeesChanged() with fee_threshold=500, and timeout 5000\r\nDo the following within 5 seconds\r\nAdd a transaction to the mempool with fee < 500 sats (no return)\r\nthen add a transaction to the mempool with fee >= 500 sats (return true)\r\n```\r\n\r\n```\r\ndev@bdev02:~/bitcoin$ build/src/bitcoin-cli -named sendtoaddress amount=3 address=bcrt1qhxcq73xjhtl7eyqkzuwemwpn2ljnala4mc6uwj fee_rate=1 && sleep 1 && build/src/bitcoin-cli -named sendtoaddress amount=3 address=bcrt1qhxcq73xjhtl7eyqkzuwemwpn2ljnala4mc6uwj fee_rate=5\r\n```\r\n\r\n```\r\nwaitFeesChanged() returned true\r\n```\r\n</details>\r\n\r\nGenerally seemed to work well.\r\n\r\nI did, however, run into a repeatable segfault that appears to be occurring with bitcoin_node when running bitcoin-mine (which calls  `waitFeesChanged()`), interrupting bitcoin-mine (CTRL-C while it waits for change), then generating a block (with `bitcoin-cli`).  Feels a bit DoSsy.  Could be something I'm overlooking/messed up on my end.  Not sure.  Please request more details if needed.\r\n\r\n<details>\r\n<summary>bitcoin-node gdb trace</summary>\r\n\r\n```\r\n2024-10-06T17:11:13Z [ipc] {bitcoin-node-67256/b-capnp-loop-67260} IPC server post request  #4 {bitcoin-node-67256/b-capnp-loop-67291 (from bitcoin-mine-67289/bitcoin-mine-67289)}\r\n\r\nThread 3 \"b-capnp-loop\" received signal SIGPIPE, Broken pipe.\r\n[Switching to Thread 0x7ffff6dfe6c0 (LWP 67260)]\r\n__GI___writev (iovcnt=2, iov=0x7ffff6dfc6c0, fd=31) at ../sysdeps/unix/sysv/linux/writev.c:26\r\n26      ../sysdeps/unix/sysv/linux/writev.c: No such file or directory.\r\n(gdb) c\r\nContinuing.\r\n2024-10-06T17:11:23Z [ipc] {bitcoin-node-67256/b-capnp-loop-67260} IPC server: socket disconnected.\r\n2024-10-06T17:11:23Z [ipc] {bitcoin-node-67256/b-capnp-loop-67260} IPC server destroy N2mp11ProxyServerIN3ipc5capnp8messages4InitEEE\r\n2024-10-06T17:11:26Z CreateNewBlock(): block weight: 888 txs: 0 fees: 0 sigops 400\r\n2024-10-06T17:11:26Z Saw new header hash=7227516712ea6f9f8fb24763a3ba8eeb3ecee4d0640f1227a41320b66cf6605a height=111\r\n2024-10-06T17:11:26Z UpdateTip: new best=7227516712ea6f9f8fb24763a3ba8eeb3ecee4d0640f1227a41320b66cf6605a height=111 version=0x20000000 log2_work=7.807355 tx=118 date='2024-10-06T17:11:26Z' progress=1.000000 cache=0.3MiB(8txo)\r\n2024-10-06T17:11:26Z [test] AddToWallet 20a7fcb543900a59764414197f5aaf36e85454dc916c4049c4fe4f0eb31381e4  new Confirmed (block=7227516712ea6f9f8fb24763a3ba8eeb3ecee4d0640f1227a41320b66cf6605a, height=111, index=0)\r\n\r\nThread 30 \"b-capnp-loop\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7fff9d7fa6c0 (LWP 67291)]\r\n0x00007ffff7cc0193 in std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) ()\r\n   from /lib/x86_64-linux-gnu/libstdc++.so.6\r\n(gdb) bt\r\n#0  0x00007ffff7cc0193 in std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) ()\r\n   from /lib/x86_64-linux-gnu/libstdc++.so.6\r\n#1  0x0000555555a889d9 in std::_Rb_tree<mp::Connection*, std::pair<mp::Connection* const, mp::ProxyClient<mp::Thread> >, std::_Select1st<std::pair<mp::Connection* const, mp::ProxyClient<mp::Thread> > >, std::less<mp::Connection*>, std::allocator<std::pair<mp::Connection* const, mp::ProxyClient<mp::Thread> > > >::_M_erase_aux (__position=..., this=<optimized out>)\r\n    at /usr/include/c++/12/bits/stl_tree.h:2488\r\n#2  std::_Rb_tree<mp::Connection*, std::pair<mp::Connection* const, mp::ProxyClient<mp::Thread> >, std::_Select1st<std::pair<mp::Connection* const, mp::ProxyClient<mp::Thread> > >, std::less<mp::Connection*>, std::allocator<std::pair<mp::Connection* const, mp::ProxyClient<mp::Thread> > > >::erase[abi:cxx11](std::_Rb_tree_iterator<std::pair<mp::Connection* const, mp::ProxyClient<mp::Thread> > >) (__position=..., this=<optimized out>) at /usr/include/c++/12/bits/stl_tree.h:1209\r\n#3  std::map<mp::Connection*, mp::ProxyClient<mp::Thread>, std::less<mp::Connection*>, std::allocator<std::pair<mp::Connection* const, mp::ProxyClient<mp::Thread> > > >::erase[abi:cxx11](std::_Rb_tree_iterator<std::pair<mp::Connection* const, mp::ProxyClient<mp::Thread> > >) (__position=..., this=<optimized out>) at /usr/include/c++/12/bits/stl_map.h:1086\r\n#4  mp::PassField<mp::Accessor<mp::mining_fields::Context, 17>, mp::ServerInvokeContext<mp::ProxyServer<ipc::capnp::messages::Mining>, capnp::CallContext<ipc::capnp::messages::Mining::WaitFeesChangedParams, ipc::capnp::messages::Mining::WaitFeesChangedResults> >, mp::ServerField<1, mp::Accessor<mp::mining_fields::CurrentTip, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::FeeThreshold, 1>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Options, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Timeout, 1>, mp::ServerRet<mp::Accessor<mp::mining_fields::Result, 2>, mp::ServerCall> > > > >, mp::TypeList<uint256, long, node::BlockCreateOptions const&, std::chrono::duration<double, std::ratio<1l, 1000l> > > >(mp::Priority<1>, mp::TypeList<>, mp::ServerInvokeContext<mp::ProxyServer<ipc::capnp::messages::Mining>, capnp::CallContext<ipc::capnp::messages::Mining::WaitFeesChangedParams, ipc::capnp::messages::Mining::WaitFeesChangedResults> >&, mp::ServerField<1, mp::Accessor<mp::mining_fields::CurrentTip, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::FeeThreshold, 1>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Options, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Timeout, 1>, mp::ServerRet<mp::Accessor<mp::mining_fields::Result, 2>, mp::ServerCall> > > > > const&, mp::TypeList<uint256, long, node::BlockCreateOptions const&, std::chrono::duration<double, std::ratio<1l, 1000l> > >&&)::{lambda()#1}::operator()()::{lambda()#2}::operator()() const (__closure=<synthetic pointer>)\r\n    at ../../../depends/x86_64-pc-linux-gnu/include/mp/proxy-types.h:156\r\n#5  mp::PassField<mp::Accessor<mp::mining_fields::Context, 17>, mp::ServerInvokeContext<mp::ProxyServer<ipc::capnp::messages::Mining>, capnp::CallContext<ipc::capnp::messages::Mining::WaitFeesChangedParams, ipc::capnp::messages::Mining::WaitFeesChangedResults> >, mp::ServerField<1, mp::Accessor<mp::mining_fields::CurrentTip, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::FeeThreshold, 1>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Options, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Timeout, 1>, mp::ServerRet<mp::Accessor<mp::mining_fields::Result, 2>, mp::ServerCall> > > > >, mp::TypeList<uint256, long, node::BlockCreateOptions const&, std::chrono::duration<double, std::ratio<1l, 1000l> > > >(mp::Priority<1>, mp::TypeList<>, mp::ServerInvokeContext<mp::ProxyServer<ipc::capnp::messages::Mining>, capnp::CallContext<ipc::capnp::messages::Mining::WaitFeesChangedParams, ipc::capnp::messages::Mining::WaitFeesChangedResults> >&, mp::ServerField<1, mp::Accessor<mp::mining_fields::CurrentTip, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::FeeThreshold, 1>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Options, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Timeout, 1>, mp::ServerRet<mp::Accessor<mp::mining_fields::Result, 2>, mp::ServerCall> > > > > const&, mp::TypeList<uint256, long, node::BlockCreateOptions const&, std::chrono::duration<double, std::ratio<1l, 1000l> > >&&)::{lambda()#1}::operator()()::{lambda()#2}::operator()() const (__closure=<synthetic pointer>)\r\n    at ../../../depends/x86_64-pc-linux-gnu/include/mp/proxy-types.h:156\r\n#6  kj::_::Deferred<mp::PassField<mp::Accessor<mp::mining_fields::Context, 17>, mp::ServerInvokeContext<mp::ProxyServer<ipc::capnp::messages::Mining>, capnp::CallContext<ipc::capnp::messages::Mining::WaitFeesChangedParams, ipc::capnp::messages::Mining::WaitFeesChangedResults> >, mp::ServerField<1, mp::Accessor<mp::mining_fields::CurrentTip, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::FeeThreshold, 1>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Options, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Timeout, 1>, mp::ServerRet<mp::Accessor<mp::mining_fields::Result, 2>, mp::ServerCall> > > > >, mp::TypeList<uint256, long, node::BlockCreateOptions const&, std::chrono::duration<double, std::ratio<1l, 1000l> > > >(mp::Priority<1>, mp::TypeList<>, mp::ServerInvokeContext<mp::ProxyServer<ipc::capnp::messages::Mining>, capnp::CallContext<ipc::capnp::messages::Mining::WaitFeesChangedParams, ipc::capnp::messages::Mining::WaitFeesChangedResults> >&, mp::ServerField<1, mp::Accessor<mp::mining_fields::CurrentTip, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::FeeThreshold, 1>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Options, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Timeout, 1>, mp::ServerRet<mp::Accessor<mp::mining_fields::Result, 2>, mp::ServerCall> > > > > const&, mp::TypeList<uint256, long, node::BlockCreateOptions const&, std::chrono::duration<double, std::ratio<1l, 1000l> > >&&)::{lambda()#1}::operator()()::{lambda()#2}>::run() (this=0x7fff9d7f9250)\r\n    at ../../../depends/x86_64-pc-linux-gnu/include/kj/common.h:2001\r\n#7  kj::_::Deferred<mp::PassField<mp::Accessor<mp::mining_fields::Context, 17>, mp::ServerInvokeContext<mp::ProxyServer<ipc::capnp::messages::Mining>, capnp::CallContext<ipc::capnp::messages::Mining::WaitFeesChangedParams, ipc::capnp::messages::Mining::WaitFeesChangedResults> >, mp::ServerField<1, mp::Accessor<mp::mining_fields::CurrentTip, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fi--Type <RET> for more, q to quit, c to continue without paging--\r\nelds::FeeThreshold, 1>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Options, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Timeout, 1>, mp::ServerRet<mp::Accessor<mp::mining_fields::Result, 2>, mp::ServerCall> > > > >, mp::TypeList<uint256, long, node::BlockCreateOptions const&, std::chrono::duration<double, std::ratio<1l, 1000l> > > >(mp::Priority<1>, mp::TypeList<>, mp::ServerInvokeContext<mp::ProxyServer<ipc::capnp::messages::Mining>, capnp::CallContext<ipc::capnp::messages::Mining::WaitFeesChangedParams, ipc::capnp::messages::Mining::WaitFeesChangedResults> >&, mp::ServerField<1, mp::Accessor<mp::mining_fields::CurrentTip, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::FeeThreshold, 1>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Options, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Timeout, 1>, mp::ServerRet<mp::Accessor<mp::mining_fields::Result, 2>, mp::ServerCall> > > > > const&, mp::TypeList<uint256, long, node::BlockCreateOptions const&, std::chrono::duration<double, std::ratio<1l, 1000l> > >&&)::{lambda()#1}::operator()()::{lambda()#2}>::~Deferred() (this=0x7fff9d7f9250, __in_chrg=<optimized out>)\r\n    at ../../../depends/x86_64-pc-linux-gnu/include/kj/common.h:1990\r\n#8  mp::PassField<mp::Accessor<mp::mining_fields::Context, 17>, mp::ServerInvokeContext<mp::ProxyServer<ipc::capnp::messages::Mining>, capnp::CallContext<ipc::capnp::messages::Mining::WaitFeesChangedParams, ipc::capnp::messages::Mining::WaitFeesChangedResults> >, mp::ServerField<1, mp::Accessor<mp::mining_fields::CurrentTip, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::FeeThreshold, 1>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Options, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Timeout, 1>, mp::ServerRet<mp::Accessor<mp::mining_fields::Result, 2>, mp::ServerCall> > > > >, mp::TypeList<uint256, long, node::BlockCreateOptions const&, std::chrono::duration<double, std::ratio<1l, 1000l> > > >(mp::Priority<1>, mp::TypeList<>, mp::ServerInvokeContext<mp::ProxyServer<ipc::capnp::messages::Mining>, capnp::CallContext<ipc::capnp::messages::Mining::WaitFeesChangedParams, ipc::capnp::messages::Mining::WaitFeesChangedResults> >&, mp::ServerField<1, mp::Accessor<mp::mining_fields::CurrentTip, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::FeeThreshold, 1>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Options, 17>, mp::ServerField<1, mp::Accessor<mp::mining_fields::Timeout, 1>, mp::ServerRet<mp::Accessor<mp::mining_fields::Result, 2>, mp::ServerCall> > > > > const&, mp::TypeList<uint256, long, node::BlockCreateOptions const&, std::chrono::duration<double, std::ratio<1l, 1000l> > >&&)::{lambda()#1}::operator()() (__closure=0x7fffe801b640) at ../../../depends/x86_64-pc-linux-gnu/include/mp/proxy-types.h:161\r\n#9  0x0000555555d5145f in mp::ProxyServer<mp::ThreadMap>::makeThread(capnp::CallContext<mp::ThreadMap::MakeThreadParams, mp::ThreadMap::MakeThreadResults>)::{lambda()#1}::operator()() const ()\r\n#10 0x00007ffff7cd44a3 in ?? () from /lib/x86_64-linux-gnu/libstdc++.so.6\r\n#11 0x00007ffff7aa8144 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442\r\n#12 0x00007ffff7b287dc in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81\r\n(gdb) \r\n```\r\n</details>",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#pullrequestreview-2349619672",
      "submitted_at": "2024-10-08T17:43:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
    },
    {
      "event": "referenced",
      "id": 14562297292,
      "node_id": "REFE_lADOABII586YbhvmzwAAAANj-wXM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14562297292",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "0bc674186d2316602f5d421774fe24784a11ee8f",
      "commit_url": "https://api.github.com/repos/ryanofsky/libmultiprocess/commits/0bc674186d2316602f5d421774fe24784a11ee8f",
      "created_at": "2024-10-08T20:07:07Z"
    },
    {
      "event": "commented",
      "id": 2400758677,
      "node_id": "IC_kwDOABII586PGKuV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2400758677",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-08T20:26:53Z",
      "updated_at": "2024-10-08T20:26:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31003#pullrequestreview-2349619672\r\n\r\n> I did, however, run into a repeatable segfault that appears to be occurring with bitcoin_node when running bitcoin-mine (which calls `waitFeesChanged()`), interrupting bitcoin-mine (CTRL-C while it waits for change), then generating a block (with `bitcoin-cli`). Feels a bit DoSsy. Could be something I'm overlooking/messed up on my end. Not sure. Please request more details if needed.\r\n\r\n@tdb3 Thanks for reporting this and providing the stack trace. I think I was able to figure out the problem based on your description and implemented a potential fix in https://github.com/chaincodelabs/libmultiprocess/pull/118. If you want to test out the fix you can try cherry-picking 41d94fa0c31ce0c48401dffa73b523859dcd8df8 on top of this PR.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#issuecomment-2400758677",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31003"
    },
    {
      "event": "mentioned",
      "id": 14562501588,
      "node_id": "MEE_lADOABII586YbhvmzwAAAANj_iPU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14562501588",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-08T20:26:55Z"
    },
    {
      "event": "subscribed",
      "id": 14562501598,
      "node_id": "SE_lADOABII586YbhvmzwAAAANj_iPe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14562501598",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-08T20:26:55Z"
    },
    {
      "event": "commented",
      "id": 2404586122,
      "node_id": "IC_kwDOABII586PUxKK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2404586122",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-10T09:32:56Z",
      "updated_at": "2024-10-10T09:32:56Z",
      "author_association": "MEMBER",
      "body": "Thanks for the feedback, and great job finding that bug @tdb3.\r\n\r\n(It might be two weeks before I get to updating this PR)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#issuecomment-2404586122",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31003"
    },
    {
      "event": "mentioned",
      "id": 14587833288,
      "node_id": "MEE_lADOABII586YbhvmzwAAAANlgKvI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14587833288",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-10T09:32:58Z"
    },
    {
      "event": "subscribed",
      "id": 14587833314,
      "node_id": "SE_lADOABII586YbhvmzwAAAANlgKvi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14587833314",
      "actor": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-10T09:32:58Z"
    },
    {
      "event": "referenced",
      "id": 14656632013,
      "node_id": "REFE_lADOABII586YbhvmzwAAAANpmnTN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14656632013",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "7f1d33f81c48585cba6ea6c20afc1cd64bea2772",
      "commit_url": "https://api.github.com/repos/ryanofsky/libmultiprocess/commits/7f1d33f81c48585cba6ea6c20afc1cd64bea2772",
      "created_at": "2024-10-15T12:25:05Z"
    },
    {
      "event": "referenced",
      "id": 14683463500,
      "node_id": "REFE_lADOABII586YbhvmzwAAAANrM99M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14683463500",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "9d11042772a2957fe0deaf1955ec33e318085817",
      "commit_url": "https://api.github.com/repos/ryanofsky/libmultiprocess/commits/9d11042772a2957fe0deaf1955ec33e318085817",
      "created_at": "2024-10-16T15:49:28Z"
    },
    {
      "event": "referenced",
      "id": 14683787615,
      "node_id": "REFE_lADOABII586YbhvmzwAAAANrONFf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14683787615",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "245581d3e33faacc99934ecf952505e04d5c28b7",
      "commit_url": "https://api.github.com/repos/chaincodelabs/libmultiprocess/commits/245581d3e33faacc99934ecf952505e04d5c28b7",
      "created_at": "2024-10-16T16:05:44Z"
    },
    {
      "event": "reviewed",
      "id": 2375240087,
      "node_id": "PRR_kwDOABII586Nk0mX",
      "url": null,
      "actor": null,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#pullrequestreview-2375240087",
      "submitted_at": "2024-10-17T13:30:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1781581459",
      "pull_request_review_id": 2338316156,
      "id": 1781581459,
      "node_id": "PRRC_kwDOABII585qMMaT",
      "diff_hunk": "@@ -17,10 +17,11 @@ interface Mining $Proxy.wrap(\"interfaces::Mining\") {\n     isInitialBlockDownload @1 (context :Proxy.Context) -> (result: Bool);\n     getTip @2 (context :Proxy.Context) -> (result: Common.BlockRef, hasResult: Bool);\n     waitTipChanged @3 (context :Proxy.Context, currentTip: Data, timeout: Float64) -> (result: Common.BlockRef);\n-    createNewBlock @4 (scriptPubKey: Data, options: BlockCreateOptions) -> (result: BlockTemplate);\n-    processNewBlock @5 (context :Proxy.Context, block: Data) -> (newBlock: Bool, result: Bool);\n-    getTransactionsUpdated @6 (context :Proxy.Context) -> (result: UInt32);\n-    testBlockValidity @7 (context :Proxy.Context, block: Data, checkMerkleRoot: Bool) -> (state: BlockValidationState, result: Bool);\n+    waitFeesChanged @4 (context :Proxy.Context, currentTip: Data, feeThreshold: Int64, options: BlockCreateOptions, timeout: Float64) -> (result: Bool);",
      "path": "src/ipc/capnp/mining.capnp",
      "position": 8,
      "original_position": 8,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "original_commit_id": "a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "a87589abfde4f2f1dfba0f3f1f5745f7acfef365: @ryanofsky or should I make this `@9` and leave the other numbers untouched? ",
      "created_at": "2024-09-30T18:31:50Z",
      "updated_at": "2024-09-30T18:31:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#discussion_r1781581459",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1781581459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1781650328",
      "pull_request_review_id": 2338427801,
      "id": 1781650328,
      "node_id": "PRRC_kwDOABII585qMdOY",
      "diff_hunk": "@@ -17,10 +17,11 @@ interface Mining $Proxy.wrap(\"interfaces::Mining\") {\n     isInitialBlockDownload @1 (context :Proxy.Context) -> (result: Bool);\n     getTip @2 (context :Proxy.Context) -> (result: Common.BlockRef, hasResult: Bool);\n     waitTipChanged @3 (context :Proxy.Context, currentTip: Data, timeout: Float64) -> (result: Common.BlockRef);\n-    createNewBlock @4 (scriptPubKey: Data, options: BlockCreateOptions) -> (result: BlockTemplate);\n-    processNewBlock @5 (context :Proxy.Context, block: Data) -> (newBlock: Bool, result: Bool);\n-    getTransactionsUpdated @6 (context :Proxy.Context) -> (result: UInt32);\n-    testBlockValidity @7 (context :Proxy.Context, block: Data, checkMerkleRoot: Bool) -> (state: BlockValidationState, result: Bool);\n+    waitFeesChanged @4 (context :Proxy.Context, currentTip: Data, feeThreshold: Int64, options: BlockCreateOptions, timeout: Float64) -> (result: Bool);",
      "path": "src/ipc/capnp/mining.capnp",
      "position": 8,
      "original_position": 8,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "original_commit_id": "a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
      "in_reply_to_id": 1781581459,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> [a87589a](https://github.com/bitcoin/bitcoin/commit/a87589abfde4f2f1dfba0f3f1f5745f7acfef365): @ryanofsky or should I make this `@9` and leave the other numbers untouched?\r\n\r\nYou can but it shouldn't matter, as long as nothing outside the build is depending on the interface. So far I've just renumbered everything like your current PR does. I even have a hacky renumbering script `capnp-renum`, that I pipe iinto from vim to renumber structs and interfaces:\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nimport sys\r\nimport re\r\n\r\nnext = 0 if len(sys.argv) < 2 else int(sys.argv[1])\r\n\r\ndef f(m):\r\n  global next\r\n  next += 1\r\n  return \"@\" + str(next - 1)\r\n\r\nsys.stdout.write(re.sub(r\"@\\d+\", f, sys.stdin.read()))\r\n\r\n```",
      "created_at": "2024-09-30T19:39:58Z",
      "updated_at": "2024-09-30T19:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#discussion_r1781650328",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1781650328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1782244032",
      "pull_request_review_id": 2339324247,
      "id": 1782244032,
      "node_id": "PRRC_kwDOABII585qOuLA",
      "diff_hunk": "@@ -17,10 +17,11 @@ interface Mining $Proxy.wrap(\"interfaces::Mining\") {\n     isInitialBlockDownload @1 (context :Proxy.Context) -> (result: Bool);\n     getTip @2 (context :Proxy.Context) -> (result: Common.BlockRef, hasResult: Bool);\n     waitTipChanged @3 (context :Proxy.Context, currentTip: Data, timeout: Float64) -> (result: Common.BlockRef);\n-    createNewBlock @4 (scriptPubKey: Data, options: BlockCreateOptions) -> (result: BlockTemplate);\n-    processNewBlock @5 (context :Proxy.Context, block: Data) -> (newBlock: Bool, result: Bool);\n-    getTransactionsUpdated @6 (context :Proxy.Context) -> (result: UInt32);\n-    testBlockValidity @7 (context :Proxy.Context, block: Data, checkMerkleRoot: Bool) -> (state: BlockValidationState, result: Bool);\n+    waitFeesChanged @4 (context :Proxy.Context, currentTip: Data, feeThreshold: Int64, options: BlockCreateOptions, timeout: Float64) -> (result: Bool);",
      "path": "src/ipc/capnp/mining.capnp",
      "position": 8,
      "original_position": 8,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "original_commit_id": "a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
      "in_reply_to_id": 1781581459,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, well the numbering here doesn't conflict with #30955 and there's no other proposed interface change pending. So I'll keep the renumbering here.",
      "created_at": "2024-10-01T07:22:40Z",
      "updated_at": "2024-10-01T07:22:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#discussion_r1782244032",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1782244032"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 20,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1788625072",
      "pull_request_review_id": 2349619672,
      "id": 1788625072,
      "node_id": "PRRC_kwDOABII585qnECw",
      "diff_hunk": "@@ -71,6 +71,18 @@ class Mining\n      */\n     virtual BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout = MillisecondsDouble::max()) = 0;\n \n+    /**\n+     * Waits for fees in the next block to rise, a new tip or the timeout.\n+     *\n+     * @param[in] current_tip   block hash that the most recent template builds on\n+     * @param[in] fee_threshold how far total fees for the next block should rise (currently ignored)\n+     * @param[in] options       options for creating the block, should match those\n+     *                          passed to createNewBlock (currently ignored)\n+     *\n+     * @returns true if fees increased, false if a new tip arrives or the timeout occurs\n+     */",
      "path": "src/interfaces/mining.h",
      "position": null,
      "original_position": 13,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "original_commit_id": "a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "non-blocking nitty nit:  Could include all function arguments as params in the doxygen comments.  Feel free to ignore.",
      "created_at": "2024-10-05T14:48:28Z",
      "updated_at": "2024-10-08T17:43:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#discussion_r1788625072",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1788625072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
        }
      },
      "start_line": null,
      "original_start_line": 74,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1788625591",
      "pull_request_review_id": 2349619672,
      "id": 1788625591,
      "node_id": "PRRC_kwDOABII585qnEK3",
      "diff_hunk": "@@ -71,6 +71,18 @@ class Mining\n      */\n     virtual BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout = MillisecondsDouble::max()) = 0;\n \n+    /**\n+     * Waits for fees in the next block to rise, a new tip or the timeout.\n+     *\n+     * @param[in] current_tip   block hash that the most recent template builds on\n+     * @param[in] fee_threshold how far total fees for the next block should rise (currently ignored)\n+     * @param[in] options       options for creating the block, should match those\n+     *                          passed to createNewBlock (currently ignored)\n+     *\n+     * @returns true if fees increased, false if a new tip arrives or the timeout occurs",
      "path": "src/interfaces/mining.h",
      "position": 12,
      "original_position": 12,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "original_commit_id": "a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
      "in_reply_to_id": null,
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> calls getTransactionsUpdated once per second. This returns true anytime a transaction is added to the mempool, even if it has no impact on fees in the best block.\r\n\r\nnon-blocking nit: The description in the first commit could be updated to be more accurate (so even if the 2nd commit isn't included, the interface is documented accurately).  Maybe just add a note, e.g. `(current interim behavior is to return true for any mempool change, not just fee increased)`.",
      "created_at": "2024-10-05T14:51:40Z",
      "updated_at": "2024-10-08T17:54:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#discussion_r1788625591",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1788625591"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1792180834",
      "pull_request_review_id": 2354996475,
      "id": 1792180834,
      "node_id": "PRRC_kwDOABII585q0oJi",
      "diff_hunk": "@@ -957,6 +957,35 @@ class MinerImpl : public Mining\n         return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n     }\n \n+    bool waitFeesChanged(uint256 current_tip, CAmount fee_threshold, const BlockCreateOptions& options, MillisecondsDouble timeout) override\n+    {\n+        if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono",
      "path": "src/node/interfaces.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "original_commit_id": "a87589abfde4f2f1dfba0f3f1f5745f7acfef365",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Introduce waitFeesChanged() mining interface\" (a87589abfde4f2f1dfba0f3f1f5745f7acfef365)\r\n\r\nWould suggest deleting this. I don't think this can do anything because the value passed to the sleep function is already capped by `now + tick`",
      "created_at": "2024-10-08T16:26:43Z",
      "updated_at": "2024-10-08T17:20:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#discussion_r1792180834",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1792180834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 962,
      "original_line": 962,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1792221843",
      "pull_request_review_id": 2354996475,
      "id": 1792221843,
      "node_id": "PRRC_kwDOABII585q0yKT",
      "diff_hunk": "@@ -977,9 +980,18 @@ class MinerImpl : public Mining\n                 return false;\n             }\n \n-            // TODO: when cluster mempool is available, actually calculate\n-            // fees for the next block. This is currently too expensive.\n-            if (context()->mempool->GetTransactionsUpdated() > last_mempool_update) return true;\n+            // Did anything change at all?\n+            if (context()->mempool->GetTransactionsUpdated() != last_mempool_update) {",
      "path": "src/node/interfaces.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "original_commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"Have waitFeesChanged() frequently make a template\" (9a723c784ad5170b1e01e91f018e5794a51dd038)\r\n\r\nIt seems like there is a bug here (also present in the previous commit) where `last_mempool_update` variable is not updated during the loop, so once the value changes a single time, this check will always be true, and the same block could be assembled wastefully every tick.\r\n\r\nAlso, it seems like there is also a race condition in the opposite direction that could lead to stale results, where a client could call waitFeesChanged at the same time as a transaction is added to the mempool reaching the fee_threshold. In this case there is a race because if GetTransactionsUpdated on line 967 is called too late, it willl cause this function to sleep and wait for more transactions even though the fees are already over the threshold. Giving last_mempool_update an initial value of 0 would avoid this race.\r\n\r\nSeparately it also looks like this will throw a std::bad_optional_access exception if getTip returns nullopt.\r\n\r\nWould suggest the following simplifications and fixes to make this function have more reliable behavior.\r\n\r\n```diff\r\n--- a/src/node/interfaces.cpp\r\n+++ b/src/node/interfaces.cpp\r\n@@ -959,29 +959,22 @@ public:\r\n \r\n     bool waitFeesChanged(uint256 current_tip, CAmount fee_threshold, const BlockCreateOptions& options, MillisecondsDouble timeout) override\r\n     {\r\n-        if (timeout > std::chrono::years{100}) timeout = std::chrono::years{100}; // Upper bound to avoid UB in std::chrono\r\n         auto now{std::chrono::steady_clock::now()};\r\n         const auto deadline = now + timeout;\r\n         const MillisecondsDouble tick{1000};\r\n \r\n-        unsigned int last_mempool_update{context()->mempool->GetTransactionsUpdated()};\r\n-\r\n         BlockAssembler::Options assemble_options{options};\r\n         ApplyArgsManOptions(*Assert(m_node.args), assemble_options);\r\n         // It's not necessary to verify the template, since we don't return it.\r\n         // This is also faster.\r\n         assemble_options.test_block_validity = false;\r\n \r\n-        while (!chainman().m_interrupt) {\r\n-            now = std::chrono::steady_clock::now();\r\n-            if (now >= deadline) break;\r\n-\r\n-            if (getTip().value().hash != current_tip) {\r\n-                return false;\r\n-            }\r\n-\r\n+        unsigned int last_mempool_update{0};\r\n+        while (now < deadline && !chainman().m_interrupt && getTip().value_or(BlockRef{}).hash == current_tip) {\r\n             // Did anything change at all?\r\n-            if (context()->mempool->GetTransactionsUpdated() != last_mempool_update) {\r\n+            unsigned int mempool_update{context()->mempool->GetTransactionsUpdated()};\r\n+            if (mempool_update != last_mempool_update) {\r\n+                last_mempool_update = mempool_update;\r\n                 auto block_template{BlockAssembler{chainman().ActiveChainstate(), context()->mempool.get(), assemble_options}.CreateNewBlock(CScript())};\r\n \r\n                 CAmount fees = 0;\r\n@@ -994,6 +987,7 @@ public:\r\n             }\r\n \r\n             std::this_thread::sleep_until(std::min(deadline, now + tick));\r\n+            now = std::chrono::steady_clock::now();\r\n         }\r\n         return false;\r\n     }\r\n```",
      "created_at": "2024-10-08T16:59:06Z",
      "updated_at": "2024-10-08T17:20:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#discussion_r1792221843",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1792221843"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 984,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804784541",
      "pull_request_review_id": 2375240087,
      "id": 1804784541,
      "node_id": "PRRC_kwDOABII585rktOd",
      "diff_hunk": "@@ -71,6 +71,18 @@ class Mining\n      */\n     virtual BlockRef waitTipChanged(uint256 current_tip, MillisecondsDouble timeout = MillisecondsDouble::max()) = 0;\n \n+    /**\n+     * Waits for fees in the next block to rise, a new tip or the timeout.\n+     *\n+     * @param[in] current_tip   block hash that the most recent template builds on\n+     * @param[in] fee_threshold how far total fees for the next block should rise\n+     * @param[in] options       options for creating the block, should match those\n+     *                          passed to createNewBlock\n+     *\n+     * @returns true if fees increased, false if a new tip arrives or the timeout occurs\n+     */\n+    virtual bool waitFeesChanged(uint256 current_tip, CAmount fee_threshold, const node::BlockCreateOptions& options = {}, MillisecondsDouble timeout = MillisecondsDouble::max()) = 0;",
      "path": "src/interfaces/mining.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "original_commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldn't this return a blocktemplate instead? Requiring a second round-trip after getting a notification is just unnecessary latency.",
      "created_at": "2024-10-17T13:24:52Z",
      "updated_at": "2024-10-17T13:30:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#discussion_r1804784541",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804784541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804793319",
      "pull_request_review_id": 2375240087,
      "id": 1804793319,
      "node_id": "PRRC_kwDOABII585rkvXn",
      "diff_hunk": "@@ -957,6 +957,47 @@ class MinerImpl : public Mining\n         return BlockRef{chainman().ActiveChain().Tip()->GetBlockHash(), chainman().ActiveChain().Tip()->nHeight};\n     }\n \n+    bool waitFeesChanged(uint256 current_tip, CAmount fee_threshold, const BlockCreateOptions& options, MillisecondsDouble timeout) override",
      "path": "src/node/interfaces.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "original_commit_id": "9a723c784ad5170b1e01e91f018e5794a51dd038",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It'd be nice if `bitcoin.conf` could specify some options to restrict the fee threshold/timeout to some window. That way (once we drop CNB from the interface, see #31109) the protocol is at least kinda robust against trivial DoS attacks, which would be nice for teeing it up to be served over TCP in the future (or the inevitable exposing it over netcat that'll happen).",
      "created_at": "2024-10-17T13:29:59Z",
      "updated_at": "2024-10-17T13:30:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31003#discussion_r1804793319",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804793319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31003"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 960,
      "original_line": 960,
      "side": "RIGHT"
    }
  ]
}