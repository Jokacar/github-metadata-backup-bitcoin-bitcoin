{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909",
    "id": 1034258699,
    "node_id": "PR_kwDOABII5849pYkL",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/25909",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/25909.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/25909.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/d811ec8fb6c545a137751d35669563b7ee2e6d2f",
    "number": 25909,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "wallet: coverage for receiving txes with same id but different witness data",
    "user": {
      "login": "furszy",
      "id": 5377650,
      "node_id": "MDQ6VXNlcjUzNzc2NTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/furszy",
      "html_url": "https://github.com/furszy",
      "followers_url": "https://api.github.com/users/furszy/followers",
      "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
      "organizations_url": "https://api.github.com/users/furszy/orgs",
      "repos_url": "https://api.github.com/users/furszy/repos",
      "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/furszy/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Based on #11240 context, adding test coverage for the behavior introduced in #11225 and to the current wallet limitations.\r\n\r\nThis is the first step towards adding the ability to store multiple transactions with same tx id but different witness data in the wallet. Verifying and testing the current behavior before introducing the new features.\r\n\r\nThe following cases are covered:\r\n\r\n1) Two p2wpkh spending transactions with the same hash are received:\r\nThe first one with segwit data stripped, and the second one with segwit data.\r\n   \r\n   Result ->  the wallet will update the stored tx, saving the witness data.\r\n\r\n2) Two p2wsh multisig spending txes with the same hash but a different witness are received:\r\nThe first is added to the wallet via the mempool acceptance flow.\r\nwhile the second one, is added to the wallet via the block connection flow.\r\n\r\n   Result -> the wallet will NOT update the stored transaction. The first received transaction\r\nwill take precedence over any following-up transaction. Detached to the fact that the\r\noriginal transaction didn't get into a block and the second one did.\r\n\r\nExtra Note:\r\nDid it on an unit test merely because wanted to review other parts of the sources while was doing it. Could migrate it into a functional test if reviewers wants it as well.",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2022-08-23T14:16:13Z",
    "updated_at": "2023-09-21T10:42:44Z",
    "closed_at": "2023-09-21T10:42:43Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "d2f53d44290024f36b09006060cfc7c4b4a1ce1c",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "furszy:2022_wallet_test_witness_data_storage",
      "ref": "2022_wallet_test_witness_data_storage",
      "sha": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 143624913,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDM2MjQ5MTM=",
        "name": "bitcoin-core",
        "full_name": "furszy/bitcoin-core",
        "owner": {
          "login": "furszy",
          "id": 5377650,
          "node_id": "MDQ6VXNlcjUzNzc2NTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/furszy",
          "html_url": "https://github.com/furszy",
          "followers_url": "https://api.github.com/users/furszy/followers",
          "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
          "organizations_url": "https://api.github.com/users/furszy/orgs",
          "repos_url": "https://api.github.com/users/furszy/repos",
          "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/furszy/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/furszy/bitcoin-core",
        "description": "Bitcoin-Core",
        "fork": true,
        "url": "https://api.github.com/repos/furszy/bitcoin-core",
        "archive_url": "https://api.github.com/repos/furszy/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/furszy/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/furszy/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/furszy/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/furszy/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/furszy/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/furszy/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/furszy/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/furszy/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/furszy/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/furszy/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/furszy/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/furszy/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/furszy/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/furszy/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/furszy/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/furszy/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/furszy/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/furszy/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/furszy/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/furszy/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/furszy/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/furszy/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/furszy/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/furszy/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/furszy/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/furszy/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:furszy/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/furszy/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/furszy/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/furszy/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/furszy/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/furszy/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/furszy/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/furszy/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/furszy/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/furszy/bitcoin-core/hooks",
        "svn_url": "https://github.com/furszy/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 3,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 385388,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-09-21T10:08:38Z",
        "created_at": "2018-08-05T15:28:43Z",
        "updated_at": "2023-08-30T13:12:58Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "cac29f5cd66f005ce65edd697990d495a904a1f1",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35719,
        "stargazers_count": 71444,
        "watchers_count": 71444,
        "size": 240058,
        "default_branch": "master",
        "open_issues_count": 666,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-09-21T10:35:35Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-09-21T10:35:37Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 177,
    "deletions": 1,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 7,
    "comments": 7
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T14:34:22Z",
      "updated_at": "2022-08-23T14:34:22Z",
      "source": {
        "issue": {
          "id": 255331848,
          "node_id": "MDU6SXNzdWUyNTUzMzE4NDg=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11240",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11240/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11240/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11240/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/11240",
          "number": 11240,
          "state": "open",
          "state_reason": null,
          "title": "Wallet should be able to store multiple transactions with same txid",
          "body": "Pre-segwit, malleated transactions would have a different txid and therefore be accepted and stored by the wallet when seen on the network.\r\n\r\nPost-segwit, it's possible for a malleated transaction that is seen on the network to be ignored by the wallet, because we index the wallet db by txid, and we are currently only able to store one entry for a given txid (and I have no idea whether this assumption is easy to change).  This means that if a malleated transaction were mined on the network, we would only store the original version of the transaction.  While this doesn't appear to have any direct impact on our wallet's behavior, this could frustrate wallet users who expect the stored transaction to be the same as the one mined.\r\n\r\nWithin the current paradigm (of storing a single transaction per txid), we could instead store the latest seen version of any transaction, so that if a malleated version of a transaction is mined, that will get stored in our wallet and we'd forget about any previous version.  However, that isn't an ideal solution either: suppose the malleated version of the transaction violates local mempool policy, and the block containing the malleated transaction gets reorged out.  If the wallet would replace the non-malleated transaction with the malleated one when it was received, we'd have no way to rebroadcast the transaction again after such a reorg.  And since I think losing a signed transaction (which we may not be able to reproduce) is a terrible outcome, I think we should for now continue to keep whatever original signed version of a transaction that we see, and not replace.\r\n\r\nSlightly relevant to this: #11225 adds the ability to replace a transaction that has no witness with one that has a witness, under the reasoning that this is only possible if we have upgraded a wallet that was pre-segwit, and are now receiving the full transaction post-upgrade.  Since any transaction that is valid with a witness must be invalid under segwit's rules without the witness, doing this specific replacement should put the wallet in a strictly better position (where it might now be storing a valid transaction, which is possibly the same as the version of the transaction which was/will be mined).\r\n\r\n",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "created_at": "2017-09-05T16:13:38Z",
          "updated_at": "2022-08-23T14:34:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "renamed",
      "id": 7242642221,
      "node_id": "RTE_lADOABII585QWVuGzwAAAAGvsfMt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7242642221",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T14:35:38Z",
      "rename": {
        "from": "wallet: test coverage for receiving txes with same id but different witness data",
        "to": "wallet: coverage for receiving txes with same id but different witness data"
      }
    },
    {
      "event": "commented",
      "id": 1224236117,
      "node_id": "IC_kwDOABII585I-FxV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1224236117",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T15:29:19Z",
      "updated_at": "2023-07-20T21:32:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [satsie](https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1233646763) |\n| Approach ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1082819802) |\n| Stale ACK | [aureleoules](https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1167130870) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1224236117",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "labeled",
      "id": 7243327378,
      "node_id": "LE_lADOABII585QWVuGzwAAAAGvvGeS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7243327378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T15:52:43Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T18:24:34Z",
      "updated_at": "2022-08-23T18:24:34Z",
      "source": {
        "issue": {
          "id": 1267157159,
          "node_id": "PR_kwDOABII5845cksp",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25325",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25325/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25325/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25325/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25325",
          "number": 25325,
          "state": "closed",
          "state_reason": null,
          "title": "Add pool based memory resource",
          "body": "A memory resource similar to `std::pmr::unsynchronized_pool_resource`, but optimized for node-based containers. The goal is to be able to cache more coins with the same memory usage, and allocate/deallocate faster.\r\n\r\nThis is a reimplementation of #22702. The goal was to implement it in a way that is simpler to review & test\r\n\r\n* There is now a generic `PoolResource` for allocating/deallocating memory. This has practically the same API as `std::pmr::memory_resource`. (Unfortunately I cannot use std::pmr because libc++ simply doesn't implement that API).\r\n* Thanks to sipa there is now a fuzzer for PoolResource! On a fast machine I ran it for ~770 million executions without finding any issue.\r\n\r\n* The estimation of the correct node size is now gone, PoolResource now has multiple pools and just needs to be created large enough to have space for the unordered_map nodes.\r\n\r\nI ran benchmarks with #22702, mergebase, and this PR. Frequency locked Intel i7-8700, clang++ 13.0.1 to reindex up to block 690000.\r\n\r\n```sh\r\nbitcoind -dbcache=5000 -assumevalid=00000000000000000002a23d6df20eecec15b21d32c75833cce28f113de888b7 -reindex-chainstate -printtoconsole=0 -stopatheight=690000\r\n```\r\n\r\nThe performance is practically identical with #22702, just 0.4% slower. It's ~21% faster than master:\r\n\r\n![Progress in Million Transactions over Time(2)](https://user-images.githubusercontent.com/14386/173288685-91952ade-f304-4825-8bfb-0725a71ca17b.png)\r\n\r\n![Size of Cache in MiB over Time](https://user-images.githubusercontent.com/14386/173291421-e6b410be-ac77-479b-ad24-5fafcebf81eb.png)\r\nNote that on cache drops mergebase's memory doesnt go so far down because it does not free the `CCoinsMap` bucket array.\r\n\r\n![Size of Cache in Million tx over Time(1)](https://user-images.githubusercontent.com/14386/173288703-a80c9c9e-93c8-4a16-9df8-610c89c61cc4.png)\r\n",
          "user": {
            "login": "martinus",
            "id": 14386,
            "node_id": "MDQ6VXNlcjE0Mzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martinus",
            "html_url": "https://github.com/martinus",
            "followers_url": "https://api.github.com/users/martinus/followers",
            "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
            "organizations_url": "https://api.github.com/users/martinus/orgs",
            "repos_url": "https://api.github.com/users/martinus/repos",
            "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/martinus/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 37,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25325",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25325",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25325.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25325.patch"
          },
          "closed_at": "2023-04-20T20:20:32Z",
          "created_at": "2022-06-10T07:16:06Z",
          "updated_at": "2023-04-21T04:12:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-23T19:40:29Z",
      "updated_at": "2022-08-23T19:40:29Z",
      "source": {
        "issue": {
          "id": 1207463736,
          "node_id": "PR_kwDOABII5842Yh4P",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24914/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24914",
          "number": 24914,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Load database records in a particular order",
          "body": "Currently when we load a wallet, we just iterate through all of the records in the database and add them completely statelessly. However we have some records which do rely on other records being loaded before they are. To deal with this, we use `CWalletScanState` to hold things temporarily until all of the records have been read and then we load the stateful things.\r\n\r\nHowever this can be slow, and with some future improvements, can cause some pretty drastic slowdowns to retain this pattern. So this PR changes the way we load records by choosing to load the records in a particular order. This lets us do things such as loading a descriptor record, then finding and loading that descriptor's cache and key records. In the future, this will also let us use `IsMine` when loading transactions as then `IsMine` will actually be working as we now always load keys and descriptors before transactions.\r\n\r\nIn order to get records of a specific type, this PR includes some refactors to how we do database cursors. Functionality is also added to retrieve a cursor that will give us records beginning with a specified prefix.\r\n\r\nLastly, one thing that iterating the entire database let us do was to find unknown records. However even if unknown records were found, we would not do anything with this information except output a number in a log line. With this PR, we would no longer be aware of any unknown records. This does not change functionality as we don't do anything with unknown records, and having unknown records is not an error. Now we would just not be aware that unknown records even exist.",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24914",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24914",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24914.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24914.patch"
          },
          "closed_at": "2023-06-27T23:03:39Z",
          "created_at": "2022-04-18T21:18:28Z",
          "updated_at": "2023-06-27T23:03:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1082819802,
      "node_id": "PRR_kwDOABII585AioTa",
      "url": null,
      "actor": null,
      "commit_id": "9024059e9e805620514744b8cdca6dd677793234",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1082819802",
      "submitted_at": "2022-08-23T20:47:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7251249255,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAGwNUhn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7251249255",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T13:57:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7253400665,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAGwVhxZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7253400665",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-24T18:37:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7255529840,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAGwdplw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7255529840",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-25T02:22:57Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-08-26T11:39:58Z",
      "updated_at": "2022-08-26T11:39:58Z",
      "source": {
        "issue": {
          "id": 1315657410,
          "node_id": "PR_kwDOABII5847-7hZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25685",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25685/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25685/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25685/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25685",
          "number": 25685,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: Faster transaction creation by removing pre-set-inputs fetching responsibility from Coin Selection",
          "body": "#### # Context (Current Flow on Master)\r\n\r\nIn the transaction creation process, in order to select which coins the new transaction will spend,\r\nwe first obtain all the available coins known by the wallet, which means walking-through the\r\nwallet txes map, gathering the ones that fulfill certain spendability requirements in a vector.\r\n\r\nThis coins vector is then provided to the Coin Selection process, which first checks if the user\r\nhas manually selected any input (which could be internal, aka known by the wallet, or external),\r\nand if it does, it fetches them by searching each of them inside the wallet and/or inside the\r\nCoin Control external tx data.\r\n\r\nThen, after finding the pre-selected-inputs and gathering them in a vector, the Coin Selection\r\nprocess walks-through the entire available coins vector once more just to erase coins that are\r\nin both vectors. So the Coin Selection process doesn’t pick them twice (duplicate inputs inside\r\nthe same transaction).\r\n\r\n#### # Process Workflow Changes\r\n\r\nNow, a new method, `FetchCoins` will be responsible for:\r\n1) Lookup the user pre-selected-inputs (which can be internal or external).\r\n2) And, fetch the available coins in the wallet (excluding the already fetched ones).\r\n\r\nWhich will occur prior to the Coin Selection process. Which allows us to never include the\r\npre-selected-inputs inside the available coins vector in the first place, as well as doing other\r\nnice improvements (written below).\r\n\r\nSo, Coin Selection can perform its main responsibility without mixing it with having to fetch\r\ninternal/external coins nor any slow and unneeded duplicate coins verification.\r\n\r\n#### # Summarizing the Improvements:\r\n\r\n1) If any pre-selected-input lookup fail, the process will return the error right away.\r\n    (before, the wallet was fetching all the wallet available coins, walking through the\r\n    entire txes map, and then failing for an invalid pre-selected-input inside SelectCoins)\r\n\r\n2) The pre-selected-inputs lookup failure causes are properly described on the return error.\r\n    (before, we were returning an \"Insufficient Funds\" error for everything, even if the failure\r\n    was due a not solvable external input)\r\n\r\n3) **Faster Coin Selection**: no longer need to \"remove the pre-set inputs from the available coins\r\n    vector so that Coin Selection doesn't pick them\" (which meant to loop-over the entire\r\n    available coins vector at Coin Selection time, erasing duplicate coins that were pre-selected).\r\n   \r\n    Now, the available coins vector, which is built after the pre-selected-inputs fetching,\r\n    doesn’t include the already selected inputs in the first place.\r\n\r\n4) **Faster transaction creation** for transactions that only use manually selected inputs.\r\n\r\n    We now will return early, as soon as we finish fetching the pre-selected-inputs and\r\n    not perform the resources expensive calculation of walking-through the entire wallet\r\n    txes map to obtain the available coins (coins that we will not use).\r\n\r\n---------------------------\r\n\r\nAdded a new bench (f6d0bb2) measuring the transaction creation process, for a wallet with ~250k UTXO, only using the pre-selected-inputs inside coin control. Setting `m_allow_other_inputs=false` to disallow the wallet to include coins automatically.\r\n\r\n#### Result on this PR (tip f6d0bb2d):\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,048,675.00 |              953.58 |    0.3% |      0.06 | `WalletCreateTransaction`\r\n\r\nvs\r\n\r\n#### Result on master (tip 4a4289e2):\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|       96,373,458.20 |               10.38 |    0.2% |      5.30 | `WalletCreateTransaction`\r\n\r\nThe benchmark took to run in master: **96.37 milliseconds**, while in this PR: **1 millisecond**  🚀 .",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 30,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25685",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25685",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25685.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25685.patch"
          },
          "closed_at": "2022-10-27T21:49:29Z",
          "created_at": "2022-07-23T13:19:19Z",
          "updated_at": "2023-05-27T01:48:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1092685575,
      "node_id": "PRR_kwDOABII585BIQ8H",
      "url": null,
      "actor": null,
      "commit_id": "398e2476657a761d47942936c8832ec7229291e3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1092685575",
      "submitted_at": "2022-09-01T02:03:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
    },
    {
      "event": "commented",
      "id": 1233646763,
      "node_id": "IC_kwDOABII585Jh_Sr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1233646763",
      "actor": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T02:05:45Z",
      "updated_at": "2022-09-01T02:05:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've reviewed the diff (398e2476657a761d47942936c8832ec7229291e3), checked out the code and run the tests (using `./src/test/test_bitcoin --log_level=all --run_test=wallet_transaction_tests`). As an extremely new (aspiring) contributor with limited knowledge, this all looks fine to me. However I don't feel comfortable enough in my own abilities to give it a real ACK.\r\n\r\nI added extra assertions locally for my own learning. Didn't want to clutter the diff with individual code comments, so I will share them here. I don't know if they are even useful or just redundant. For me, the main thing is it is not immediately obvious that the existing assertions cover the expected presence/absence of witness data. \r\n\r\nThe assertions on the transaction IDs (like `txid` in the first test with the two p2wpkh transactions) make sense to anyone who understands that when there is no witness data, the witness hash is the same as the tx hash (per `transaction.cpp.ComputeWitnessHash()`). I'm not sure how obvious this is others reading the code, or if there are inefficiencies related to explicitly checking the witness data. It could be a non issue for those that spend more time here than me.\r\n\r\nApologies in advance if there are any C++ gotchas with pointers and references that I am not aware of :)\r\n\r\n```\r\n\t// From the first transaction in the first test case:\r\n        BOOST_CHECK(wtx_no_witness->GetWitnessHash() == txid);\r\n        BOOST_CHECK(wtx_no_witness->tx->HasWitness() == 0); // additional assertion to verify that the transaction in the wallet has no witness data\r\n```\r\n\r\n```\r\n\t// From the second transaction in the first test case:\r\n        BOOST_CHECK(wtx_with_witness->GetWitnessHash() != txid);\r\n        BOOST_CHECK(wtx_with_witness->tx->HasWitness() == 1); // additional assertion to verify that the transaction in the wallet now has witness data\r\n\r\n```\r\n\r\nAside from that I had a few questions to help me understand the PR better:\r\n\r\n1. `wallet_transaction_tests.CreateMultisigScriptAndImportDescriptor`: Is there any reason why this test code creates a 3-of-5 multisig instead of a 2-of-3?\r\n2. Was the removal of `src/test/util/wallet.h` and `src/test/util.wallet.cpp` part of routine cleanup? Because there is a `src/wallet/test` folder with way more in it and it doesn't make sense to have wallet unit tests in two places?",
      "user": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1233646763",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-01T21:23:24Z",
      "updated_at": "2022-09-01T21:23:24Z",
      "source": {
        "issue": {
          "id": 1359383041,
          "node_id": "PR_kwDOABII584-PV2_",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25979",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25979/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25979/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25979/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25979",
          "number": 25979,
          "state": "open",
          "state_reason": null,
          "title": "[WIP] wallet: standardize change output detection process",
          "body": "Depends on https://github.com/bitcoin/bitcoin/pull/27601, please go there first.\r\n\r\nThis work aims to define, and implement a base standard mechanism to\r\ndetect individual change outputs.\r\n\r\n### Context\r\n\r\nCurrently, the wallet detects whether an output is change or not based\r\non data stored in the address book.\r\n\r\nThere is no notion of “change outputs”, the wallet detects change scripts.\r\n\r\nConnoting that any address book record modification has implications\r\non all the historical outputs related to that particular destination. Meaning\r\nthat all those outputs can either be change or not. There is no middle-ground\r\ngranular distinction.\r\n\r\n#### How Change Detection Currently Works?\r\n\r\nThe wallet walks-through the transaction outputs, extracts the script\r\ndestination and verify the following two points:\r\n\r\n1) If the destination doesn't exist in the address book, then the script\r\n    is a \"change address\".\r\n   \r\n2) If the destination exists in the address book, but it doesn't have a\r\n     label, then the script is a \"change address\".\r\n\r\n### Motivation\r\n\r\nThere are a good number of problems in the current approach:\r\n\r\n- We make the wallet dependent on an external structure, with separate storage.\r\n   Which has to be updated and maintained along with the wallet state.\r\n\r\n- It cannot be maintained nor recovered across different wallet instances.\r\n   Cannot re-create the, possibly custom, address book data only by importing\r\n   the wallet descriptor string.\r\n\r\n- As the address book is an structure that the user can freely modify, the change\r\n   detection process might differ through different wallets.\r\n \r\n- The current rudimentary assumptions of \"no address book entry\" or \"no label set for the address book entry\"\r\n  to denote that certain script destination is change or not can easily be broken:\r\n  E.g. derive an address from one of the wallet’s external paths manually. Then send coins to it.\r\n  As the receive destination wasn't created inside the wallet, the wallet has no associated address book entry.\r\n  So, the reception is invalidly detected as change (added a test case for it).\r\n\r\n- The wallet can't detect change outputs on more complex scripts such as multi-sig change outputs.\r\n\r\n- The wallet is not able to detect change outputs going to an internal address if the internal address has a label.\r\n  (E.g. the user can manually set a label for the internal address and, doing that, make that all the change\r\n  outputs, in the wallet history, that were sent to the destination are no longer detected as change).\r\n\r\n- There isn’t a way to distinguish the external reception of coins into an internal address. Coins reception on any\r\n   internal address are always detected as change.\r\n\r\n### New Change Detection Mechanism Goals\r\n\r\nAiming to:\r\n\r\n* Define a base mechanism to align different wallet implementations. Preventing each piece of software\r\n  from diverging on the basic change outputs distinction.\r\n\r\n* Detect change outputs on-demand without requiring to maintain an external data structure synced with the\r\n   latest wallet state.\r\n\r\n* Independently, and accurately, detect change outputs regardless data stored in structures that the user\r\n   can freely modify.\r\n\r\n* Granular distinction between change vs non-change outputs that were sent to the same internal address.\r\n  E.g. the reception of coins, from an external source, on internal addresses will not longer be detected\r\n  as change anymore.\r\n\r\n* Expand the change detection to more complex scripts such as a multi-sig protected addresses. (While they\r\n  are added into the wallet on an internal spkm)\r\n\r\n#### Change Output Detection Rules\r\n\r\nA transaction output is change if it fulfills the following points:\r\n\r\n1) At least one of the parent transaction inputs is from the wallet. (If none of them are, then the wallet is receiving coins\r\n    on an internal address).\r\n\r\n2) The script extracted destination is from the wallet and is located in one of the internal script pub key manager.\r\n    (e.g. derived from an internal derivation path)\r\n\r\n#### What about legacy wallets?\r\n\r\nIf the legacy wallet is HD post-split, we have an internal derivation path, so we can follow the same process as\r\ndescriptors wallet. Unless the destination is on the pre-split key pool, in which case, we fallback to the follow-up\r\ncase.\r\n\r\nIf the legacy wallet is pre-split, we continue using the address book as we either have an HD wallet with keys\r\nderived only on the external path, or we are using raw keypool.\r\n\r\n———————————————————————\r\n\r\n#### Extra Note\r\nThis PR, in about 85% at least, is about expanding the current test coverage for the change output detection area.\r\n\r\n#### TO DO (still WIP):\r\n\r\n* [x] Save “internal” flag on non-active descriptors so the wallet can use them on the change detection process.\r\n   (which will fix the currently failing test cases).\r\n* [ ] Re-organize commits so tests always pass.\r\n* [ ] Verify backwards compatibility.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25979",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25979",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25979.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25979.patch"
          },
          "created_at": "2022-09-01T20:40:07Z",
          "updated_at": "2023-07-20T10:57:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1235565173,
      "node_id": "IC_kwDOABII585JpTp1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1235565173",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-02T14:21:45Z",
      "updated_at": "2022-09-02T17:20:02Z",
      "author_association": "MEMBER",
      "body": "> The assertions on the transaction IDs (like txid in the first test with the two p2wpkh transactions) make sense to anyone who understands that when there is no witness data, the witness hash is the same as the tx hash (per transaction.cpp.ComputeWitnessHash()). I'm not sure how obvious this is others reading the code, or if there are inefficiencies related to explicitly checking the witness data. It could be a non issue for those that spend more time here than me.\r\n\r\nYep, non-issue. It comes from the segwit definitions (BIP141).\r\nThe transaction id is the hash of the transaction data serialized. The witness transaction id is the hash of the transaction data serialized + a marker, flag and witness data.\r\n\r\nif the witness data doesn't exist (or isn't there), then you are serializing only the regular transaction fields, thus why the tx id is equal to the witness id.\r\n\r\n> wallet_transaction_tests.CreateMultisigScriptAndImportDescriptor: Is there any reason why this test code creates a 3-of-5 multisig instead of a 2-of-3?\r\n\r\nNot really. For the test purposes, it could had been a 1-of-2 as well. I just liked more to present a scenario where the user looses data that is hard to re-do if keys are spread across different devices/places.\r\n\r\n> Was the removal of src/test/util/wallet.h and src/test/util.wallet.cpp part of routine cleanup? Because there is a src/wallet/test folder with way more in it and it doesn't make sense to have wallet unit tests in two places?\r\n\r\nBoth files were just containing utility functions to interact with the wallet. None of them are unit tests.\r\nThey were sharing the same purpose and the wallet code should be placed inside the wallet directory.\r\n\r\nPlus, as `wallet/test/util.h` and `wallet/test/util.cpp` were not part of the util library, we weren't able to use the functions on the bench and unit test modules (them are on different units). Which would had forced me to duplicate the `DuplicateMockDatabase` function that was inside of one of benchmarks to be able to use it in the new unit test case.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1235565173",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-09-22T06:12:49Z",
      "updated_at": "2022-09-22T06:12:49Z",
      "source": {
        "issue": {
          "id": 1381623925,
          "node_id": "PR_kwDOABII584_YzZB",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26153",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26153/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26153/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26153/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26153",
          "number": 26153,
          "state": "closed",
          "state_reason": null,
          "title": "Reduce wasted pseudorandom bytes in ChaCha20 + various improvements",
          "body": "This is an alternative to #25354 (by my benchmarking, somewhat faster), subsumes #25712, and adds additional test vectors.\r\n\r\nIt separates the multiple-of-64-bytes-only \"core\" logic (which becomes simpler) from a layer around which performs caching/slicing to support arbitrary byte amounts. Both have their uses (in particular, the MuHash3072 code can benefit from multiple-of-64-bytes assumptions), plus the separation results in more readable code. Also, since FastRandomContext effectively had its own (more naive) caching on top of ChaCha20, that can be dropped in favor of ChaCha20's new built-in caching.\r\n\r\nI thought about rebasing #25712 on top of this, but the changes before are fairly extensive, so redid it instead.",
          "user": {
            "login": "sipa",
            "id": 548488,
            "node_id": "MDQ6VXNlcjU0ODQ4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sipa",
            "html_url": "https://github.com/sipa",
            "followers_url": "https://api.github.com/users/sipa/followers",
            "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
            "organizations_url": "https://api.github.com/users/sipa/orgs",
            "repos_url": "https://api.github.com/users/sipa/repos",
            "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sipa/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 14,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26153",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26153",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26153.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26153.patch"
          },
          "closed_at": "2023-02-15T14:59:06Z",
          "created_at": "2022-09-21T23:22:32Z",
          "updated_at": "2023-07-18T18:37:33Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-05T22:47:46Z",
      "updated_at": "2022-10-05T22:47:46Z",
      "source": {
        "issue": {
          "id": 1269628212,
          "node_id": "PR_kwDOABII5845knyj",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25361",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25361/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25361/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25361/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25361",
          "number": 25361,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Cipher suite",
          "body": "This PR supersedes #20962 and introduces a two-layered cipher suite used in the latest draft of [BIP324](https://github.com/bitcoin/bips/pull/1378).\r\n\r\n* Inner layer uses [RFC8439](https://datatracker.ietf.org/doc/html/rfc8439) which comes with a formal [security analysis](https://eprint.iacr.org/2014/613.pdf) so any novelty introduced by our cipher suite still offers a baseline confidence in confidentiality and authenticity. The RFC8439 instance is re-keyed every 256 messages for forward secrecy.\r\n* Outer layer uses a forward secure version of ChaCha20, `FSChaCha20` which re-keys itself every 256 messages for forward secrecy. It is used to encrypt the message length resulting in a pseudorandom byte stream.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25361",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25361",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25361.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25361.patch"
          },
          "closed_at": "2023-05-06T11:11:09Z",
          "created_at": "2022-06-13T15:40:56Z",
          "updated_at": "2023-05-06T11:11:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-06T17:01:36Z",
      "updated_at": "2022-10-06T17:01:36Z",
      "source": {
        "issue": {
          "id": 1167366626,
          "node_id": "PR_kwDOABII5840WLLa",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24545/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24545",
          "number": 24545,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Enable v2 P2P encrypted transport",
          "body": "This PR brings together all other BIP324 PRs and enables v2 encrypted P2P transport.\r\n\r\nBuilds on top of PRs: #25361, #23233, #23561, #23432. It looks like there's a lot of commits, but **only the last 12 commits belong in this PR**. The rest will be merged with upstream PRs.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).\r\n\r\nBIP324 is [here](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki).\r\n\r\n### Running a v2 node\r\n#### Get the code\r\n```\r\ngit remote add bip324 git@github.com:dhruv/bitcoin.git\r\ngit fetch bip324\r\ngit checkout bip324/bip324-enable\r\n```\r\n\r\n#### Build for your OS\r\n\r\nFollow the appropriate instructions [here](https://github.com/bitcoin/bitcoin/blob/master/doc/README.md)\r\n\r\n#### Run the node\r\n\r\n```\r\nsrc/bitcoind -conf=CONFIG_FILE -v2transport=1\r\n```\r\n\r\n#### Connect with a friend's v2 node\r\n```\r\nsrc/bitcoin-cli -conf=CONFIG_FILE addnode \"FRIEND_IP:FRIEND_PORT\" \"add\" true\r\n```\r\nThe last parameter(`p2p_v2:true`) signals to your node that the peer is running a v2 supportive client and we should attempt to make an encrypted P2P connection (you're simulating the `NODE_P2P_V2` service flag advertisement manually). Should that fail however (say because the peer told you mistakenly, lied, etc.), this code will downgrade the connection to unencrypted v1 transport.\r\n\r\n### Things you are helpful to test\r\n\r\n* If your friend's node is a v2 node, you can see with wireshark that the bytes are pseudorandom (the easiest way to confirm this is that with a v1 connection, wireshark will tell you it has detected a Bitcoin connection and it'll even parse out the metadata like message type, etc; with v2, wireshark has no idea -- of course that _could_ be because wireshark does simply not know v2, but it is because the bytestream is pseudorandom)\r\n* Compare the v2 encrypted session id exposed via `getpeerinfo` as `v2_session_id` with your friend.\r\n* Add another peer that is actually v1, but try `addnode` still indicating v2 support. You should see with wireshark that after a failed attempt at a v2 handshake, the connection is downgraded to unencrypted v1 and wireshark can parse it.\r\n\r\nI've been told there are v2 nodes running at (happy to update the list as more people run persistent v2 nodes; message me and I'll add it here):\r\n```\r\nbe.anyone.eu.org\r\nrp7k2go3s5lyj3fnj6zn62ktarlrsft2ohlsxkyd7v3e3idqyptvread.onion:8333\r\njdcoysubtxazi7dketpyb5rnjorvxad4onftveohash2pdwkgw4bvnqd.onion:8333\r\nxci6cphki2pdb5qe7axzrcxcxabkbm24z4zlv2hn4ziy6grquqco2kyd.onion:8333\r\nslvtesfgg3mkksqqzh67al4sq6dx3rhlzqepa4ny7jonzuckg6msf3id.onion:8333\r\ngifm4fnj3vua664xhgeanx5fnpco3txkqy4amr4txbfsciiyrkxpf2qd.onion:8333\r\n300:5ecb:6b8a:d837::3:8333\r\n300:5ecb:6b8a:d837::a6d6:8333\r\n2001:470:1f1a:365::2:8333\r\n2001:470:1f1b:365:aa20:66ff:fe3f:1909:8333\r\n184.74.240.157:8533\r\n95.179.145.232:8333\r\n```",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 47,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24545",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24545",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24545.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24545.patch"
          },
          "closed_at": "2023-05-06T11:14:46Z",
          "created_at": "2022-03-12T18:43:06Z",
          "updated_at": "2023-09-15T02:47:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-06T18:38:34Z",
      "updated_at": "2022-10-06T18:38:34Z",
      "source": {
        "issue": {
          "id": 1059245454,
          "node_id": "PR_kwDOABII584uzo7R",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23561/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23561",
          "number": 23561,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Handshake prerequisites",
          "body": "Depends on #25361 for some constants, and on https://github.com/bitcoin-core/secp256k1/pull/1129 for ellswift integrated XDH but can be reviewed independently. Only the last 5 commits belong to this PR.\r\n\r\nThis PR adds xonly [ECDH](https://gist.github.com/dhruv/5b1275751bc98f3b64bcafce7876b489#Initial_handshake) and [HKDF](https://gist.github.com/dhruv/5b1275751bc98f3b64bcafce7876b489#keys-and-session-id-derivation) key derivation code for BIP324. Unit, bench and fuzz tests are included.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23561",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23561",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23561.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23561.patch"
          },
          "closed_at": "2023-04-18T08:50:23Z",
          "created_at": "2021-11-20T22:50:38Z",
          "updated_at": "2023-04-18T08:50:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-06T19:19:54Z",
      "updated_at": "2022-10-06T19:19:54Z",
      "source": {
        "issue": {
          "id": 1021384855,
          "node_id": "PR_kwDOABII584s9UYg",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23233/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/23233",
          "number": 23233,
          "state": "closed",
          "state_reason": null,
          "title": "BIP324: Add encrypted p2p transport {de}serializer",
          "body": "Revives #18242. Depends on #25361 (please review that first, the last 4 commits are to be reviewed here).\r\n\r\nThis PR adds a p2p message transport {de}serializer for encrypted packets leveraging the BIP324 specification.\r\n\r\nThe dependency tree for BIP324 PRs is [here](https://bip324.com/sections/code-review/).",
          "user": {
            "login": "dhruv",
            "id": 856960,
            "node_id": "MDQ6VXNlcjg1Njk2MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/856960?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhruv",
            "html_url": "https://github.com/dhruv",
            "followers_url": "https://api.github.com/users/dhruv/followers",
            "following_url": "https://api.github.com/users/dhruv/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dhruv/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dhruv/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dhruv/subscriptions",
            "organizations_url": "https://api.github.com/users/dhruv/orgs",
            "repos_url": "https://api.github.com/users/dhruv/repos",
            "events_url": "https://api.github.com/users/dhruv/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dhruv/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 34,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23233",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/23233",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/23233.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/23233.patch"
          },
          "closed_at": "2023-05-06T11:11:30Z",
          "created_at": "2021-10-08T19:01:33Z",
          "updated_at": "2023-05-06T11:11:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-10T16:34:53Z",
      "updated_at": "2022-10-10T16:34:53Z",
      "source": {
        "issue": {
          "id": 1403073198,
          "node_id": "PR_kwDOABII585AfUHt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26286",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26286/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26286/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26286/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26286",
          "number": 26286,
          "state": "closed",
          "state_reason": null,
          "title": "test: Remove unused txmempool include from tests",
          "body": "Seems odd to include this heavy header in all tests despite it only being used in a few tests.\r\n\r\nCan be reviewed with `--color-moved=dimmed-zebra --ignore-all-space`",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26286",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26286",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26286.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26286.patch"
          },
          "closed_at": "2022-10-19T07:43:42Z",
          "created_at": "2022-10-10T12:11:26Z",
          "updated_at": "2022-10-19T08:16:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 7619628933,
      "node_id": "LE_lADOABII585QWVuGzwAAAAHGKk-F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7619628933",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-19T09:30:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7682761913,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAHJ7aS5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7682761913",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T14:12:07Z"
    },
    {
      "event": "commented",
      "id": 1293587259,
      "node_id": "IC_kwDOABII585NGpM7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1293587259",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T14:12:16Z",
      "updated_at": "2022-10-27T14:12:16Z",
      "author_association": "MEMBER",
      "body": "rebased, conflicts solved.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1293587259",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "unlabeled",
      "id": 7682958609,
      "node_id": "UNLE_lADOABII585QWVuGzwAAAAHJ8KUR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7682958609",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T14:32:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 7686413967,
      "node_id": "LE_lADOABII585QWVuGzwAAAAHKJV6P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7686413967",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-10-27T22:56:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7715636284,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAHL40Q8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7715636284",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T17:33:32Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7716006038,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAHL6OiW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7716006038",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T18:20:42Z"
    },
    {
      "event": "unlabeled",
      "id": 7716531996,
      "node_id": "UNLE_lADOABII585QWVuGzwAAAAHL8O8c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7716531996",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-01T19:28:01Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1165360702,
      "node_id": "PRR_kwDOABII585Fdf4-",
      "url": null,
      "actor": null,
      "commit_id": "326d03085a2e41d021d42f8ce324df235c907b19",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 326d03085a2e41d021d42f8ce324df235c907b19\r\n\r\nGreat refactoring and I verified that the tests correctly test the behavior intended.",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1165360702",
      "submitted_at": "2022-11-03T09:56:42Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7733285927,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAHM8JQn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7733285927",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T15:20:17Z"
    },
    {
      "event": "commented",
      "id": 1302274957,
      "node_id": "IC_kwDOABII585NnyON",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1302274957",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T15:21:39Z",
      "updated_at": "2022-11-03T15:21:39Z",
      "author_association": "MEMBER",
      "body": "Updated per @aureleoules feedback, thanks!\r\n\r\nTiny [diff](https://github.com/bitcoin/bitcoin/compare/326d03085a2e41d021d42f8ce324df235c907b19..312f3673618c83ddfcbc5e2c23722029bed47eb4). Only moved from using the test coinbase key to use the custom one, no functional changes.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1302274957",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "mentioned",
      "id": 7733298546,
      "node_id": "MEE_lADOABII585QWVuGzwAAAAHM8MVy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7733298546",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T15:21:39Z"
    },
    {
      "event": "subscribed",
      "id": 7733298559,
      "node_id": "SE_lADOABII585QWVuGzwAAAAHM8MV_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7733298559",
      "actor": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-03T15:21:39Z"
    },
    {
      "event": "reviewed",
      "id": 1167130870,
      "node_id": "PRR_kwDOABII585FkQD2",
      "url": null,
      "actor": null,
      "commit_id": "312f3673618c83ddfcbc5e2c23722029bed47eb4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "reACK 312f3673618c83ddfcbc5e2c23722029bed47eb4",
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1167130870",
      "submitted_at": "2022-11-03T15:23:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-20T02:06:13Z",
      "updated_at": "2022-11-20T02:06:13Z",
      "source": {
        "issue": {
          "id": 1455276823,
          "node_id": "PR_kwDOABII585DN8Df",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26532",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26532/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26532/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26532/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26532",
          "number": 26532,
          "state": "closed",
          "state_reason": null,
          "title": "wallet: bugfix, invalid crypted key \"checksum_valid\" set",
          "body": "At wallet load time, the crypted key \"checksum_valid\" variable is always set to false. Which, on every wallet decryption call, forces the process to re-write all the ckeys to db when it's not needed.\r\n\r\nNote:\r\nThe first commit fixes the issue, the two commits in the middle are cleanups so `DuplicateMockDatabase`\r\ncan be used without duplicating code. And, the last one is pure test coverage for the crypted keys loading\r\nprocess.\r\n\r\nIncludes test coverage for the following scenarios:\r\n\r\n1) \"All ckeys checksums valid\" test:\r\nLoads an encrypted wallet with all the crypted keys with a valid checksum and\r\nverifies that 'CWallet::Unlock' doesn't force an entire crypted keys re-write.\r\n\r\n    (we force a complete ckeys re-write if we find any missing crypted key checksum\r\nduring the wallet loading process)\r\n\r\n2) \"Missing checksum in one ckey\" test:\r\nVerifies that loading up a wallet with, at least one, 'ckey' with no checksum\r\ntriggers a complete re-write of the crypted keys.\r\n\r\n3) \"Invalid ckey checksum error\" test:\r\nVerifies that loading up a ckey with an invalid checksum stops the wallet loading\r\nprocess with a corruption error.\r\n\r\n4) \"Invalid ckey pubkey error\" test:\r\nVerifies that loading up a ckey with an invalid pubkey stops the wallet loading\r\nprocess with a corruption error.",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26532",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26532",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26532.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26532.patch"
          },
          "closed_at": "2022-11-29T23:55:20Z",
          "created_at": "2022-11-18T14:55:54Z",
          "updated_at": "2023-05-27T01:47:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 7917760746,
      "node_id": "LE_lADOABII585QWVuGzwAAAAHX73Dq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7917760746",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-11-30T01:20:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ4MTFlYzhmYjZjNTQ1YTEzNzc1MWQzNTY2OTU2M2I3ZWUyZTZkMmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "tree": {
        "sha": "762b9a8b3609a06e7ccd94a248ce14f3ff4597fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/762b9a8b3609a06e7ccd94a248ce14f3ff4597fc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 762b9a8b3609a06e7ccd94a248ce14f3ff4597fc\nparent cac29f5cd66f005ce65edd697990d495a904a1f1\nauthor furszy <matiasfurszyfer@protonmail.com> 1660919617 -0300\ncommitter furszy <matiasfurszyfer@protonmail.com> 1670108694 -0300\n\nwallet: test coverage for receive txes with same id but different witness data\n\nThe following cases are covered:\n\n1) Two p2wpkh transactions with the same hash are received:\n   The first one with segwit data stripped, and the second one with segwit data.\n\n   Result -> the wallet will update the stored tx, saving the witness data.\n\n2) Two p2wsh multisig spending txes with the same hash but a different witness are received:\n   The first is added to the wallet via the mempool acceptance flow.\n   while the second one, is added to the wallet via the block connection flow.\n\n   Result -> the wallet will NOT update the stored transaction, the first received\n         transaction will take precedence over any following-up transaction. Don't care\n         if the original transaction didn't get into a block and the second one did.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEA++0fqwRHQpmlZfQXdI8zGhqpiMFAmOL1hcACgkQXdI8zGhq\npiNhng/9GxLaPK/cyDXlfK0n3L3dJcK3sg+VE12EBClg/yh6EtPpcvn+4y9D9Gup\nesdvnnlHbNCaRMGWpWYy6kbHoqPGU/6YNjw0V7aioYSRR/01yhR0ErbVsQ2cQkFC\n2ViN4yW7fMKGfzGK4PiyAQMSBQS0LrozTR5A+eOO/oxPSYXBWIGURF/eIqpBWpBr\nx8xt3FlS8QGc8d/IXjZPk2Zp9Qy4hTRzLop4amaMION8nx+sFIApGssz0hRaUAeD\n0PcNa4JgP5W6VQIVvJuJ2rQy9nEsma4iyqN705tdhRmlbVQLp/N8JZgN84u661Hu\n5Ia90EqX1jMAPqjYvgGD0r2iQubKwVGOvdMMKcUIWJMadrfxhzlm28AdUAMlYmIp\nIW1IDeJGlMWWm/cUmXUx0JGlsrYnR/30x8OWQu5bvxQqJF0Mnx/zYhGzm5QBaKWO\n1j6XLTvaVykwQgOSWw7dPc3w7GPe+mY3aJWVN9wcE5l+jtmmUZDB5KiZP67jEytl\nhlbFqOqgfx1Hh24aGNTF+QNb8LcVuHjutGWbtsclmtS1sVRMhLyPFH3O1oWBgaS1\nFS4u/iqKfpN//JlbDx6w5+IABNH8j8pH8vIP4qZcyHXUWzBPPkw4G3VrbVLjdwRS\nyTy9ArwrtbRRq2J2Bn0oX+9wsV/iDCJGIRCN3mUQSrebPH7ulbs=\n=bieR\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cac29f5cd66f005ce65edd697990d495a904a1f1",
          "sha": "cac29f5cd66f005ce65edd697990d495a904a1f1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cac29f5cd66f005ce65edd697990d495a904a1f1"
        }
      ],
      "message": "wallet: test coverage for receive txes with same id but different witness data\n\nThe following cases are covered:\n\n1) Two p2wpkh transactions with the same hash are received:\n   The first one with segwit data stripped, and the second one with segwit data.\n\n   Result -> the wallet will update the stored tx, saving the witness data.\n\n2) Two p2wsh multisig spending txes with the same hash but a different witness are received:\n   The first is added to the wallet via the mempool acceptance flow.\n   while the second one, is added to the wallet via the block connection flow.\n\n   Result -> the wallet will NOT update the stored transaction, the first received\n         transaction will take precedence over any following-up transaction. Don't care\n         if the original transaction didn't get into a block and the second one did.",
      "committer": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-12-03T23:04:54Z"
      },
      "author": {
        "name": "furszy",
        "email": "matiasfurszyfer@protonmail.com",
        "date": "2022-08-19T14:33:37Z"
      },
      "sha": "d811ec8fb6c545a137751d35669563b7ee2e6d2f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 7947185372,
      "node_id": "HRFPE_lADOABII585QWVuGzwAAAAHZsGzc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7947185372",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-03T23:08:01Z"
    },
    {
      "event": "unlabeled",
      "id": 7947217638,
      "node_id": "UNLE_lADOABII585QWVuGzwAAAAHZsOrm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/7947217638",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-12-03T23:45:41Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1268146166,
      "node_id": "PRR_kwDOABII585Lll_2",
      "url": null,
      "actor": null,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> Result -> the wallet will NOT update the stored transaction. The first received transaction\r\nwill take precedence over any following-up transaction. Detached to the fact that the\r\noriginal transaction didn't get into a block and the second one did.\r\n\r\nWhile it's good to have tests for the behavior that occurs, having tests for incorrect behavior is probably not something we want to be doing as it can make the bug last a lot longer. If the intention is to have a followup soon that fixes the bug, then I would prefer that these test changes just get rolled into that rather than be their own PR. Otherwise the test needs a big warning that it is testing actual incorrect behavior, and not intended behavior.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#pullrequestreview-1268146166",
      "submitted_at": "2023-01-24T19:24:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-02-11T20:27:30Z",
      "updated_at": "2023-02-11T20:27:30Z",
      "source": {
        "issue": {
          "id": 1463636841,
          "node_id": "PR_kwDOABII585DqW4U",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26567/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26567",
          "number": 26567,
          "state": "closed",
          "state_reason": null,
          "title": "Wallet: estimate the size of signed inputs using descriptors",
          "body": "The wallet currently estimates the size of a signed input by doing a dry run of the signing logic. This is unnecessary since all outputs we can sign for can be represented by a descriptor, and we can derive the size of a satisfaction (\"signature\") directly from the descriptor itself.\r\nIn addition, the current approach does not generalize well: dry runs of the signing logic are only possible for the most basic scripts. See for instance the discussion in #24149 around that.\r\n\r\nThis introduces a method to get the maximum size of a satisfaction from a descriptor, and makes the wallet use that instead of the dry-run.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/60",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/60/labels",
            "id": 9286970,
            "node_id": "MI_kwDOABII584AjbU6",
            "number": 60,
            "state": "open",
            "title": "26.0",
            "description": "",
            "creator": {
              "login": "fanquake",
              "id": 863730,
              "node_id": "MDQ6VXNlcjg2MzczMA==",
              "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/fanquake",
              "html_url": "https://github.com/fanquake",
              "followers_url": "https://api.github.com/users/fanquake/followers",
              "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
              "organizations_url": "https://api.github.com/users/fanquake/orgs",
              "repos_url": "https://api.github.com/users/fanquake/repos",
              "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/fanquake/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 8,
            "closed_issues": 45,
            "created_at": "2023-04-15T11:36:05Z",
            "updated_at": "2023-09-21T10:08:03Z"
          },
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26567",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26567",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26567.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26567.patch"
          },
          "closed_at": "2023-09-06T17:31:32Z",
          "created_at": "2022-11-24T17:15:50Z",
          "updated_at": "2023-09-07T08:03:02Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 9862827670,
      "node_id": "CTDE_lADOABII585QWVuGzwAAAAJL3s6W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9862827670",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-19T13:47:44Z"
    },
    {
      "event": "commented",
      "id": 1728173331,
      "node_id": "IC_kwDOABII585nAdUT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728173331",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:38:30Z",
      "updated_at": "2023-09-20T17:38:30Z",
      "author_association": "MEMBER",
      "body": "Are you still working on this?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1728173331",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "commented",
      "id": 1729314675,
      "node_id": "IC_kwDOABII585nEz9z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1729314675",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-21T10:42:43Z",
      "updated_at": "2023-09-21T10:42:43Z",
      "author_association": "MEMBER",
      "body": "> Are you still working on this?\r\n\r\nnot really. Closing for now.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#issuecomment-1729314675",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25909"
    },
    {
      "event": "closed",
      "id": 10433563198,
      "node_id": "CE_lADOABII585QWVuGzwAAAAJt44o-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10433563198",
      "actor": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-21T10:42:43Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953094777",
      "pull_request_review_id": 1082819802,
      "id": 953094777,
      "node_id": "PRRC_kwDOABII5844zxJ5",
      "diff_hunk": "@@ -609,6 +609,7 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n     bool CanGetAddresses(bool internal = false) const override;\n \n     std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script) const override;\n+    std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script, bool include_private) const { return GetSigningProvider(script, true); }",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 4,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "9024059e9e805620514744b8cdca6dd677793234",
      "in_reply_to_id": null,
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`include_private` parameter is not being used.\r\n\r\n```suggestion\r\n    std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script, bool include_private) const { return GetSigningProvider(script, include_private); }\r\n```",
      "created_at": "2022-08-23T20:47:37Z",
      "updated_at": "2022-08-23T20:47:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r953094777",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953094777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 612,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953838926",
      "pull_request_review_id": 1083867253,
      "id": 953838926,
      "node_id": "PRRC_kwDOABII58442m1O",
      "diff_hunk": "@@ -609,6 +609,7 @@ class DescriptorScriptPubKeyMan : public ScriptPubKeyMan\n     bool CanGetAddresses(bool internal = false) const override;\n \n     std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script) const override;\n+    std::unique_ptr<SigningProvider> GetSolvingProvider(const CScript& script, bool include_private) const { return GetSigningProvider(script, true); }",
      "path": "src/wallet/scriptpubkeyman.h",
      "position": null,
      "original_position": 4,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "9024059e9e805620514744b8cdca6dd677793234",
      "in_reply_to_id": 953094777,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ups, thanks. Pushed.",
      "created_at": "2022-08-24T13:57:43Z",
      "updated_at": "2022-08-24T13:57:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r953838926",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/953838926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 612,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960156515",
      "pull_request_review_id": 1092685575,
      "id": 960156515,
      "node_id": "PRRC_kwDOABII5845OtNj",
      "diff_hunk": "@@ -4,12 +4,187 @@\n \n #include <wallet/transaction.h>\n \n+#include <wallet/coincontrol.h>\n+#include <kernel/chain.h>\n+#include <validation.h>\n+#include <wallet/receive.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n \n namespace wallet {\n-BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, WalletTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, BasicTestingSetup)\n+\n+const CWalletTx* GenBlockAndRetrieveMinedTx(TestChain100Setup& context, const CMutableTransaction& tx_to_mine, const CScript& coinbase_script, CWallet& wallet)\n+{\n+    const CBlock& block = context.CreateAndProcessBlock({tx_to_mine}, coinbase_script);\n+    wallet.blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return context.m_node.chainman->ActiveChain().Tip()), &block));\n+    return Assert(WITH_LOCK(wallet.cs_wallet, return wallet.GetWalletTx(tx_to_mine.GetHash())));\n+}\n+\n+const CWalletTx* SendCoinsAndGenBlock(TestChain100Setup& context, const CScript& scriptpubkey, CAmount amount, CWallet& from_wallet, const CScript& coinbase_script)\n+{\n+    CCoinControl coin_control;\n+    auto op_tx = Assert(CreateTransaction(from_wallet, {{scriptpubkey, amount, true}}, 1, coin_control));\n+    return GenBlockAndRetrieveMinedTx(context, CMutableTransaction(*op_tx->tx), GetScriptForDestination(PKHash(context.coinbaseKey.GetPubKey().GetID())), from_wallet);\n+}\n+\n+void CreateMultisigScriptAndImportDescriptor(CWallet& wallet, CScript& multisig_script_out, std::vector<CKey>& priv_keys)\n+{\n+    auto spkm = static_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, false));\n+    std::vector<CPubKey> pks;\n+    std::string pks_str; // descriptor data\n+    for (int i=0; i < 5; i++) {\n+        CTxDestination multi_dest = *Assert(spkm->GetNewDestination(OutputType::BECH32));\n+        auto provider = Assert(spkm->GetSolvingProvider(GetScriptForDestination(multi_dest), /*include_private=*/ true));\n+        CKeyID witness_id = ToKeyID(*Assert(std::get_if<WitnessV0KeyHash>(&multi_dest)));\n+        CPubKey pubkey;\n+        BOOST_CHECK(provider->GetPubKey(witness_id, pubkey));\n+        CKey priv_key;\n+        BOOST_CHECK(provider->GetKey(witness_id, priv_key));\n+        pks.emplace_back(pubkey);\n+        priv_keys.emplace_back(priv_key);\n+        pks_str += HexStr(pubkey) + ((i < 4) ? \",\" : \"\");\n+    }\n+\n+    // Import descriptor to watch the multisig script\n+    std::string descriptor = \"wsh(multi(3,\" + pks_str + \"))\";\n+    FlatSigningProvider keys;\n+    std::string error;\n+    std::unique_ptr<Descriptor> parsed_desc = Parse(descriptor, keys, error, /*require_checksum=*/false);\n+    WalletDescriptor w_desc(std::move(parsed_desc), 0, 0, 0, 0);\n+    Assert(WITH_LOCK(wallet.cs_wallet, return wallet.AddWalletDescriptor(w_desc, keys, \"multisig_descriptor\", false)));\n+    multisig_script_out = GetScriptForMultisig(3, pks);\n+}\n+\n+// Test wallet receiving txes with the same id and different witness data.\n+// The following cases are covered:\n+//\n+//   1) Two p2wpkh transactions with the same hash are received:\n+//      The first one with segwit data stripped, and the second one with segwit data.\n+//      The wallet must update the stored tx, saving the witness data.\n+//\n+//   2) Two p2wsh multisig spending txes with the same hash but a different witness are received:\n+//      The first is added to the wallet by the mempool acceptance flow.\n+//      while the second one, is added to the wallet by the block connection flow.\n+//\n+//      Note: Right now, the wallet will NOT update the stored transaction, the first received\n+//            transaction will take precedence over any following-up transaction. Don't care\n+//            if the first transaction didn't get into a block and the second did.\n+//\n+BOOST_FIXTURE_TEST_CASE(store_segwit_tx_data, TestChain100Setup)\n+{\n+    // Create wallet and generate few more blocks to confirm balance\n+    std::unique_ptr<CWallet> wallet = CreateSyncedWallet(*m_node.chain, WITH_LOCK(cs_main, return m_node.chainman->ActiveChain()), m_args, coinbaseKey);\n+    const auto& coinbase_dest_script = GetScriptForDestination(*Assert(wallet->GetNewDestination(OutputType::BECH32, \"coinbase\")));\n+    for (int i=0; i<10; i++) {\n+        const CBlock& block = CreateAndProcessBlock({}, coinbase_dest_script);\n+        wallet->blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return m_node.chainman->ActiveChain().Tip()), &block));\n+    }\n+    BOOST_ASSERT(GetBalance(*wallet).m_mine_trusted == COIN * 50 * 10);\n+\n+    // create the P2WPKH output that will later be spent\n+    const auto& dest_script = GetScriptForDestination(*Assert(wallet->GetNewDestination(OutputType::BECH32, \"\")));\n+    uint256 recv_tx_hash = SendCoinsAndGenBlock(*this, dest_script, 10 * COIN, *wallet, coinbase_dest_script)->GetHash();\n+\n+    //   1) Two p2wpkh transactions with the same hash are received:\n+    //      The first one with segwit data stripped, and the second one with segwit data.\n+    //      The wallet must update the stored tx, saving the witness data.\n+    {\n+        // Create the spending tx, strip the witness data and verify that the wallet accepts it\n+        CCoinControl coin_control;\n+        coin_control.m_allow_other_inputs = false;\n+        coin_control.Select({recv_tx_hash, 0});\n+        auto op_spend_tx = Assert(CreateTransaction(*wallet, {{dest_script, 10 * COIN, true}}, 1, coin_control));\n+        BOOST_ASSERT(op_spend_tx->tx->HasWitness());\n+        const uint256& txid = op_spend_tx->tx->GetHash();\n+\n+        CMutableTransaction mtx(*op_spend_tx->tx);\n+        CScriptWitness witness_copy = mtx.vin[0].scriptWitness;\n+        mtx.vin[0].scriptWitness.SetNull();\n+        wallet->transactionAddedToMempool(MakeTransactionRef(mtx), /*mempool_sequence=*/0);\n+        const CWalletTx* wtx_no_witness = Assert(WITH_LOCK(wallet->cs_wallet, return wallet->GetWalletTx(txid)));\n+        BOOST_CHECK(wtx_no_witness->GetWitnessHash() == txid);\n+\n+        // Re-set the witness and verify that the wallet updates the tx witness data by including the tx in a block\n+        mtx.vin[0].scriptWitness = witness_copy;\n+        const CWalletTx* wtx_with_witness = GenBlockAndRetrieveMinedTx(*this, mtx, coinbase_dest_script, *wallet);\n+        BOOST_CHECK(wtx_with_witness->GetWitnessHash() != txid);\n+\n+        // Reload the wallet as it would be reloaded from disk and check that the witness data is still there.\n+        // (flush the previous wallet first)\n+        wallet->Flush();\n+        DatabaseOptions options;\n+        std::unique_ptr<CWallet> wallet_reloaded = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args,\n+                                                                             DuplicateMockDatabase(wallet->GetDatabase(),options));\n+        BOOST_ASSERT(wallet_reloaded->LoadWallet() == DBErrors::LOAD_OK);\n+        const CWalletTx* reloaded_wtx_with_witness = WITH_LOCK(wallet_reloaded->cs_wallet, return wallet_reloaded->GetWalletTx(txid));\n+        BOOST_CHECK_EQUAL(reloaded_wtx_with_witness->GetWitnessHash(), wtx_with_witness->GetWitnessHash());\n+    }\n+\n+\n+    //   2) Two p2wsh multisig transactions with the same hash but a different witness are received:\n+    //      The first is added to the wallet by the mempool acceptance flow.\n+    //      while the second one, is added to the wallet by the block connection flow.\n+    //\n+    //      Note: Right now, the wallet will NOT update the stored transaction, the first received\n+    //            transaction will take precedence over any following-up transaction. Don't care\n+    //            if the first transaction didn't get into a block and the second did.\n+    {\n+        // Setup context: Create the 3-of-5 multisig script and add the descriptor to the wallet\n+        CScript multisig_script;\n+        std::vector<CKey> priv_keys;\n+        CreateMultisigScriptAndImportDescriptor(*wallet, multisig_script, priv_keys);\n+\n+        // Lock coins in the multisig script\n+        const CWalletTx* multisig_tx = SendCoinsAndGenBlock(*this, GetScriptForDestination(WitnessV0ScriptHash(multisig_script)), 3 * COIN, *wallet, coinbase_dest_script);\n+\n+        // Now create a transaction that spends the funds locked in the multisig script\n+        CCoinControl coin_control;\n+        coin_control.m_allow_other_inputs = false;\n+        coin_control.Select({multisig_tx->GetHash(), 0});\n+        auto op_spend_tx = Assert(CreateTransaction(*wallet, {{dest_script, 2 * COIN, true}}, 1, coin_control, /*sign=*/false));\n+\n+        // Now the real test begins, create unsigned tx\n+        CMutableTransaction unsigned_tx(*op_spend_tx->tx);\n+        std::map<COutPoint, Coin> coins;\n+        coins[unsigned_tx.vin[0].prevout] = Coin(multisig_tx->tx->vout[unsigned_tx.vin[0].prevout.n], /*nHeightIn=*/113, /*fCoinBaseIn=*/false);\n+\n+        // 1) Use the first three keys and add tx to wallet via mempool acceptance:\n+        FillableSigningProvider keystore_1;\n+        for (int i=0; i<3; i++) BOOST_ASSERT(keystore_1.AddKey(priv_keys[i]));\n+        BOOST_ASSERT(keystore_1.AddCScript(multisig_script));\n+        std::map<int, bilingual_str> input_errors;\n+        CMutableTransaction signed_tx_1 = unsigned_tx;\n+        Assert(SignTransaction(signed_tx_1, &keystore_1, coins, SIGHASH_DEFAULT, input_errors));\n+\n+        const CTransactionRef& spend_from_multisig_tx_1 = MakeTransactionRef(signed_tx_1);\n+        wallet->transactionAddedToMempool(spend_from_multisig_tx_1, /*mempool_sequence=*/0);\n+        const CWalletTx* wtx_spending_multisig_1 = Assert(WITH_LOCK(wallet->cs_wallet, return wallet->GetWalletTx(signed_tx_1.GetHash())));\n+        BOOST_CHECK(wtx_spending_multisig_1->GetWitnessHash() == spend_from_multisig_tx_1->GetWitnessHash());\n+\n+        // 2) Use the last keys and try to add tx to wallet via block connection:\n+        FillableSigningProvider keystore_2;\n+        for (int i=priv_keys.size()-1; i>=2; i--) keystore_2.AddKey(priv_keys[i]);\n+        BOOST_ASSERT(keystore_2.AddCScript(multisig_script));\n+        CMutableTransaction signed_tx_2 = unsigned_tx;\n+        Assert(SignTransaction(signed_tx_2, &keystore_2, coins, SIGHASH_DEFAULT, input_errors));\n+\n+        // Assert that the tx id is equal to the other tx but the witness data is different\n+        BOOST_ASSERT(signed_tx_1.GetHash() == signed_tx_2.GetHash());\n+        BOOST_ASSERT(signed_tx_1.vin[0].scriptWitness.stack != signed_tx_2.vin[0].scriptWitness.stack);\n+\n+        // Now connect the block and verify current behavior\n+        const CWalletTx* wtx = GenBlockAndRetrieveMinedTx(*this, signed_tx_2, coinbase_dest_script, *wallet);\n+\n+        // Important: current wallet behavior will NOT update the input witness data.\n+        // The wallet will only see the witness data of the first seen tx.\n+        BOOST_CHECK(wtx->GetHash() == signed_tx_2.GetHash());\n+        BOOST_CHECK(wtx->GetWitnessHash() != MakeTransactionRef(signed_tx_2)->GetWitnessHash());\n+    }",
      "path": "src/wallet/test/wallet_transaction_tests.cpp",
      "position": 184,
      "original_position": 184,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "398e2476657a761d47942936c8832ec7229291e3",
      "in_reply_to_id": null,
      "user": {
        "login": "satsie",
        "id": 1823216,
        "node_id": "MDQ6VXNlcjE4MjMyMTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1823216?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/satsie",
        "html_url": "https://github.com/satsie",
        "followers_url": "https://api.github.com/users/satsie/followers",
        "following_url": "https://api.github.com/users/satsie/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/satsie/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/satsie/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/satsie/subscriptions",
        "organizations_url": "https://api.github.com/users/satsie/orgs",
        "repos_url": "https://api.github.com/users/satsie/repos",
        "events_url": "https://api.github.com/users/satsie/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/satsie/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In the other test case with the two p2wpkh transactions, there is a step at the end to reload the wallet from disk. Is there any value in doing the same here?\r\n\r\n```\r\n        // Reload the wallet as it would be reloaded from disk and check that the witness data from the first transaction is still there.\r\n        // (flush the previous wallet first)\r\n        wallet->Flush();\r\n        DatabaseOptions options;\r\n        std::unique_ptr<CWallet> wallet_reloaded = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args,\r\n                                                                             DuplicateMockDatabase(wallet->GetDatabase(),options));\r\n        BOOST_ASSERT(wallet_reloaded->LoadWallet() == DBErrors::LOAD_OK);\r\n        const CWalletTx* reloaded_wtx_with_original_witness = WITH_LOCK(wallet_reloaded->cs_wallet, return wallet_reloaded->GetWalletTx(wtx->GetHash()));\r\n        BOOST_CHECK_EQUAL(reloaded_wtx_with_original_witness->GetWitnessHash(), MakeTransactionRef(signed_tx_1)->GetWitnessHash());\r\n\r\n```",
      "created_at": "2022-09-01T02:03:17Z",
      "updated_at": "2022-09-01T02:03:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r960156515",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/960156515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 186,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/961665380",
      "pull_request_review_id": 1094849022,
      "id": 961665380,
      "node_id": "PRRC_kwDOABII5845Udlk",
      "diff_hunk": "@@ -4,12 +4,187 @@\n \n #include <wallet/transaction.h>\n \n+#include <wallet/coincontrol.h>\n+#include <kernel/chain.h>\n+#include <validation.h>\n+#include <wallet/receive.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n \n namespace wallet {\n-BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, WalletTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, BasicTestingSetup)\n+\n+const CWalletTx* GenBlockAndRetrieveMinedTx(TestChain100Setup& context, const CMutableTransaction& tx_to_mine, const CScript& coinbase_script, CWallet& wallet)\n+{\n+    const CBlock& block = context.CreateAndProcessBlock({tx_to_mine}, coinbase_script);\n+    wallet.blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return context.m_node.chainman->ActiveChain().Tip()), &block));\n+    return Assert(WITH_LOCK(wallet.cs_wallet, return wallet.GetWalletTx(tx_to_mine.GetHash())));\n+}\n+\n+const CWalletTx* SendCoinsAndGenBlock(TestChain100Setup& context, const CScript& scriptpubkey, CAmount amount, CWallet& from_wallet, const CScript& coinbase_script)\n+{\n+    CCoinControl coin_control;\n+    auto op_tx = Assert(CreateTransaction(from_wallet, {{scriptpubkey, amount, true}}, 1, coin_control));\n+    return GenBlockAndRetrieveMinedTx(context, CMutableTransaction(*op_tx->tx), GetScriptForDestination(PKHash(context.coinbaseKey.GetPubKey().GetID())), from_wallet);\n+}\n+\n+void CreateMultisigScriptAndImportDescriptor(CWallet& wallet, CScript& multisig_script_out, std::vector<CKey>& priv_keys)\n+{\n+    auto spkm = static_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, false));\n+    std::vector<CPubKey> pks;\n+    std::string pks_str; // descriptor data\n+    for (int i=0; i < 5; i++) {\n+        CTxDestination multi_dest = *Assert(spkm->GetNewDestination(OutputType::BECH32));\n+        auto provider = Assert(spkm->GetSolvingProvider(GetScriptForDestination(multi_dest), /*include_private=*/ true));\n+        CKeyID witness_id = ToKeyID(*Assert(std::get_if<WitnessV0KeyHash>(&multi_dest)));\n+        CPubKey pubkey;\n+        BOOST_CHECK(provider->GetPubKey(witness_id, pubkey));\n+        CKey priv_key;\n+        BOOST_CHECK(provider->GetKey(witness_id, priv_key));\n+        pks.emplace_back(pubkey);\n+        priv_keys.emplace_back(priv_key);\n+        pks_str += HexStr(pubkey) + ((i < 4) ? \",\" : \"\");\n+    }\n+\n+    // Import descriptor to watch the multisig script\n+    std::string descriptor = \"wsh(multi(3,\" + pks_str + \"))\";\n+    FlatSigningProvider keys;\n+    std::string error;\n+    std::unique_ptr<Descriptor> parsed_desc = Parse(descriptor, keys, error, /*require_checksum=*/false);\n+    WalletDescriptor w_desc(std::move(parsed_desc), 0, 0, 0, 0);\n+    Assert(WITH_LOCK(wallet.cs_wallet, return wallet.AddWalletDescriptor(w_desc, keys, \"multisig_descriptor\", false)));\n+    multisig_script_out = GetScriptForMultisig(3, pks);\n+}\n+\n+// Test wallet receiving txes with the same id and different witness data.\n+// The following cases are covered:\n+//\n+//   1) Two p2wpkh transactions with the same hash are received:\n+//      The first one with segwit data stripped, and the second one with segwit data.\n+//      The wallet must update the stored tx, saving the witness data.\n+//\n+//   2) Two p2wsh multisig spending txes with the same hash but a different witness are received:\n+//      The first is added to the wallet by the mempool acceptance flow.\n+//      while the second one, is added to the wallet by the block connection flow.\n+//\n+//      Note: Right now, the wallet will NOT update the stored transaction, the first received\n+//            transaction will take precedence over any following-up transaction. Don't care\n+//            if the first transaction didn't get into a block and the second did.\n+//\n+BOOST_FIXTURE_TEST_CASE(store_segwit_tx_data, TestChain100Setup)\n+{\n+    // Create wallet and generate few more blocks to confirm balance\n+    std::unique_ptr<CWallet> wallet = CreateSyncedWallet(*m_node.chain, WITH_LOCK(cs_main, return m_node.chainman->ActiveChain()), m_args, coinbaseKey);\n+    const auto& coinbase_dest_script = GetScriptForDestination(*Assert(wallet->GetNewDestination(OutputType::BECH32, \"coinbase\")));\n+    for (int i=0; i<10; i++) {\n+        const CBlock& block = CreateAndProcessBlock({}, coinbase_dest_script);\n+        wallet->blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return m_node.chainman->ActiveChain().Tip()), &block));\n+    }\n+    BOOST_ASSERT(GetBalance(*wallet).m_mine_trusted == COIN * 50 * 10);\n+\n+    // create the P2WPKH output that will later be spent\n+    const auto& dest_script = GetScriptForDestination(*Assert(wallet->GetNewDestination(OutputType::BECH32, \"\")));\n+    uint256 recv_tx_hash = SendCoinsAndGenBlock(*this, dest_script, 10 * COIN, *wallet, coinbase_dest_script)->GetHash();\n+\n+    //   1) Two p2wpkh transactions with the same hash are received:\n+    //      The first one with segwit data stripped, and the second one with segwit data.\n+    //      The wallet must update the stored tx, saving the witness data.\n+    {\n+        // Create the spending tx, strip the witness data and verify that the wallet accepts it\n+        CCoinControl coin_control;\n+        coin_control.m_allow_other_inputs = false;\n+        coin_control.Select({recv_tx_hash, 0});\n+        auto op_spend_tx = Assert(CreateTransaction(*wallet, {{dest_script, 10 * COIN, true}}, 1, coin_control));\n+        BOOST_ASSERT(op_spend_tx->tx->HasWitness());\n+        const uint256& txid = op_spend_tx->tx->GetHash();\n+\n+        CMutableTransaction mtx(*op_spend_tx->tx);\n+        CScriptWitness witness_copy = mtx.vin[0].scriptWitness;\n+        mtx.vin[0].scriptWitness.SetNull();\n+        wallet->transactionAddedToMempool(MakeTransactionRef(mtx), /*mempool_sequence=*/0);\n+        const CWalletTx* wtx_no_witness = Assert(WITH_LOCK(wallet->cs_wallet, return wallet->GetWalletTx(txid)));\n+        BOOST_CHECK(wtx_no_witness->GetWitnessHash() == txid);\n+\n+        // Re-set the witness and verify that the wallet updates the tx witness data by including the tx in a block\n+        mtx.vin[0].scriptWitness = witness_copy;\n+        const CWalletTx* wtx_with_witness = GenBlockAndRetrieveMinedTx(*this, mtx, coinbase_dest_script, *wallet);\n+        BOOST_CHECK(wtx_with_witness->GetWitnessHash() != txid);\n+\n+        // Reload the wallet as it would be reloaded from disk and check that the witness data is still there.\n+        // (flush the previous wallet first)\n+        wallet->Flush();\n+        DatabaseOptions options;\n+        std::unique_ptr<CWallet> wallet_reloaded = std::make_unique<CWallet>(m_node.chain.get(), \"\", m_args,\n+                                                                             DuplicateMockDatabase(wallet->GetDatabase(),options));\n+        BOOST_ASSERT(wallet_reloaded->LoadWallet() == DBErrors::LOAD_OK);\n+        const CWalletTx* reloaded_wtx_with_witness = WITH_LOCK(wallet_reloaded->cs_wallet, return wallet_reloaded->GetWalletTx(txid));\n+        BOOST_CHECK_EQUAL(reloaded_wtx_with_witness->GetWitnessHash(), wtx_with_witness->GetWitnessHash());\n+    }\n+\n+\n+    //   2) Two p2wsh multisig transactions with the same hash but a different witness are received:\n+    //      The first is added to the wallet by the mempool acceptance flow.\n+    //      while the second one, is added to the wallet by the block connection flow.\n+    //\n+    //      Note: Right now, the wallet will NOT update the stored transaction, the first received\n+    //            transaction will take precedence over any following-up transaction. Don't care\n+    //            if the first transaction didn't get into a block and the second did.\n+    {\n+        // Setup context: Create the 3-of-5 multisig script and add the descriptor to the wallet\n+        CScript multisig_script;\n+        std::vector<CKey> priv_keys;\n+        CreateMultisigScriptAndImportDescriptor(*wallet, multisig_script, priv_keys);\n+\n+        // Lock coins in the multisig script\n+        const CWalletTx* multisig_tx = SendCoinsAndGenBlock(*this, GetScriptForDestination(WitnessV0ScriptHash(multisig_script)), 3 * COIN, *wallet, coinbase_dest_script);\n+\n+        // Now create a transaction that spends the funds locked in the multisig script\n+        CCoinControl coin_control;\n+        coin_control.m_allow_other_inputs = false;\n+        coin_control.Select({multisig_tx->GetHash(), 0});\n+        auto op_spend_tx = Assert(CreateTransaction(*wallet, {{dest_script, 2 * COIN, true}}, 1, coin_control, /*sign=*/false));\n+\n+        // Now the real test begins, create unsigned tx\n+        CMutableTransaction unsigned_tx(*op_spend_tx->tx);\n+        std::map<COutPoint, Coin> coins;\n+        coins[unsigned_tx.vin[0].prevout] = Coin(multisig_tx->tx->vout[unsigned_tx.vin[0].prevout.n], /*nHeightIn=*/113, /*fCoinBaseIn=*/false);\n+\n+        // 1) Use the first three keys and add tx to wallet via mempool acceptance:\n+        FillableSigningProvider keystore_1;\n+        for (int i=0; i<3; i++) BOOST_ASSERT(keystore_1.AddKey(priv_keys[i]));\n+        BOOST_ASSERT(keystore_1.AddCScript(multisig_script));\n+        std::map<int, bilingual_str> input_errors;\n+        CMutableTransaction signed_tx_1 = unsigned_tx;\n+        Assert(SignTransaction(signed_tx_1, &keystore_1, coins, SIGHASH_DEFAULT, input_errors));\n+\n+        const CTransactionRef& spend_from_multisig_tx_1 = MakeTransactionRef(signed_tx_1);\n+        wallet->transactionAddedToMempool(spend_from_multisig_tx_1, /*mempool_sequence=*/0);\n+        const CWalletTx* wtx_spending_multisig_1 = Assert(WITH_LOCK(wallet->cs_wallet, return wallet->GetWalletTx(signed_tx_1.GetHash())));\n+        BOOST_CHECK(wtx_spending_multisig_1->GetWitnessHash() == spend_from_multisig_tx_1->GetWitnessHash());\n+\n+        // 2) Use the last keys and try to add tx to wallet via block connection:\n+        FillableSigningProvider keystore_2;\n+        for (int i=priv_keys.size()-1; i>=2; i--) keystore_2.AddKey(priv_keys[i]);\n+        BOOST_ASSERT(keystore_2.AddCScript(multisig_script));\n+        CMutableTransaction signed_tx_2 = unsigned_tx;\n+        Assert(SignTransaction(signed_tx_2, &keystore_2, coins, SIGHASH_DEFAULT, input_errors));\n+\n+        // Assert that the tx id is equal to the other tx but the witness data is different\n+        BOOST_ASSERT(signed_tx_1.GetHash() == signed_tx_2.GetHash());\n+        BOOST_ASSERT(signed_tx_1.vin[0].scriptWitness.stack != signed_tx_2.vin[0].scriptWitness.stack);\n+\n+        // Now connect the block and verify current behavior\n+        const CWalletTx* wtx = GenBlockAndRetrieveMinedTx(*this, signed_tx_2, coinbase_dest_script, *wallet);\n+\n+        // Important: current wallet behavior will NOT update the input witness data.\n+        // The wallet will only see the witness data of the first seen tx.\n+        BOOST_CHECK(wtx->GetHash() == signed_tx_2.GetHash());\n+        BOOST_CHECK(wtx->GetWitnessHash() != MakeTransactionRef(signed_tx_2)->GetWitnessHash());\n+    }",
      "path": "src/wallet/test/wallet_transaction_tests.cpp",
      "position": 184,
      "original_position": 184,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "398e2476657a761d47942936c8832ec7229291e3",
      "in_reply_to_id": 960156515,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nop, there is no value doing that here.\r\nThe test here validates the current limitation of not updating the existent transaction. As there is no wtx update, there is no write to disk, there by there is no reason to test a reload.\r\n\r\nAnd even if the wallet limitation wouldn't exist, the first reload test case is enough to verify the record durability. Sources flow wise, replace a tx with no witness is exactly the same as replacing a tx with witness.",
      "created_at": "2022-09-02T13:12:22Z",
      "updated_at": "2022-09-02T13:12:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r961665380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/961665380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 186,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011849338",
      "pull_request_review_id": 1165360702,
      "id": 1011849338,
      "node_id": "PRRC_kwDOABII5848T5h6",
      "diff_hunk": "@@ -4,12 +4,187 @@\n \n #include <wallet/transaction.h>\n \n+#include <wallet/coincontrol.h>\n+#include <kernel/chain.h>\n+#include <validation.h>\n+#include <wallet/receive.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n \n namespace wallet {\n-BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, WalletTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, BasicTestingSetup)\n+\n+const CWalletTx* GenBlockAndRetrieveMinedTx(TestChain100Setup& context, const CMutableTransaction& tx_to_mine, const CScript& coinbase_script, CWallet& wallet)\n+{\n+    const CBlock& block = context.CreateAndProcessBlock({tx_to_mine}, coinbase_script);\n+    wallet.blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return context.m_node.chainman->ActiveChain().Tip()), &block));\n+    return Assert(WITH_LOCK(wallet.cs_wallet, return wallet.GetWalletTx(tx_to_mine.GetHash())));\n+}\n+\n+const CWalletTx* SendCoinsAndGenBlock(TestChain100Setup& context, const CScript& scriptpubkey, CAmount amount, CWallet& from_wallet, const CScript& coinbase_script)",
      "path": "src/wallet/test/wallet_transaction_tests.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "326d03085a2e41d021d42f8ce324df235c907b19",
      "in_reply_to_id": null,
      "user": {
        "login": "aureleoules",
        "id": 22493292,
        "node_id": "MDQ6VXNlcjIyNDkzMjky",
        "avatar_url": "https://avatars.githubusercontent.com/u/22493292?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aureleoules",
        "html_url": "https://github.com/aureleoules",
        "followers_url": "https://api.github.com/users/aureleoules/followers",
        "following_url": "https://api.github.com/users/aureleoules/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/aureleoules/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/aureleoules/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/aureleoules/subscriptions",
        "organizations_url": "https://api.github.com/users/aureleoules/orgs",
        "repos_url": "https://api.github.com/users/aureleoules/repos",
        "events_url": "https://api.github.com/users/aureleoules/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/aureleoules/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`coinbase_script` is unused",
      "created_at": "2022-11-02T14:28:55Z",
      "updated_at": "2022-11-03T09:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r1011849338",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1011849338"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013049794",
      "pull_request_review_id": 1167123734,
      "id": 1013049794,
      "node_id": "PRRC_kwDOABII5848YenC",
      "diff_hunk": "@@ -4,12 +4,187 @@\n \n #include <wallet/transaction.h>\n \n+#include <wallet/coincontrol.h>\n+#include <kernel/chain.h>\n+#include <validation.h>\n+#include <wallet/receive.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n \n namespace wallet {\n-BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, WalletTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, BasicTestingSetup)\n+\n+const CWalletTx* GenBlockAndRetrieveMinedTx(TestChain100Setup& context, const CMutableTransaction& tx_to_mine, const CScript& coinbase_script, CWallet& wallet)\n+{\n+    const CBlock& block = context.CreateAndProcessBlock({tx_to_mine}, coinbase_script);\n+    wallet.blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return context.m_node.chainman->ActiveChain().Tip()), &block));\n+    return Assert(WITH_LOCK(wallet.cs_wallet, return wallet.GetWalletTx(tx_to_mine.GetHash())));\n+}\n+\n+const CWalletTx* SendCoinsAndGenBlock(TestChain100Setup& context, const CScript& scriptpubkey, CAmount amount, CWallet& from_wallet, const CScript& coinbase_script)",
      "path": "src/wallet/test/wallet_transaction_tests.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "326d03085a2e41d021d42f8ce324df235c907b19",
      "in_reply_to_id": 1011849338,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "pushed, thanks",
      "created_at": "2022-11-03T15:20:24Z",
      "updated_at": "2022-11-03T15:20:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r1013049794",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1013049794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 27,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085810309",
      "pull_request_review_id": 1268146166,
      "id": 1085810309,
      "node_id": "PRRC_kwDOABII585AuCaF",
      "diff_hunk": "@@ -4,12 +4,187 @@\n \n #include <wallet/transaction.h>\n \n+#include <wallet/coincontrol.h>\n+#include <kernel/chain.h>\n+#include <validation.h>\n+#include <wallet/receive.h>\n+#include <wallet/spend.h>\n+#include <wallet/test/util.h>\n #include <wallet/test/wallet_test_fixture.h>\n \n #include <boost/test/unit_test.hpp>\n \n namespace wallet {\n-BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, WalletTestingSetup)\n+BOOST_FIXTURE_TEST_SUITE(wallet_transaction_tests, BasicTestingSetup)\n+\n+const CWalletTx* GenBlockAndRetrieveMinedTx(TestChain100Setup& context, const CMutableTransaction& tx_to_mine, const CScript& coinbase_script, CWallet& wallet)\n+{\n+    const CBlock& block = context.CreateAndProcessBlock({tx_to_mine}, coinbase_script);\n+    wallet.blockConnected(kernel::MakeBlockInfo(WITH_LOCK(cs_main, return context.m_node.chainman->ActiveChain().Tip()), &block));\n+    return Assert(WITH_LOCK(wallet.cs_wallet, return wallet.GetWalletTx(tx_to_mine.GetHash())));\n+}\n+\n+const CWalletTx* SendCoinsAndGenBlock(TestChain100Setup& context, const CScript& scriptpubkey, CAmount amount, CWallet& from_wallet, const CScript& coinbase_script)\n+{\n+    CCoinControl coin_control;\n+    auto op_tx = Assert(CreateTransaction(from_wallet, {{scriptpubkey, amount, true}}, 1, coin_control));\n+    return GenBlockAndRetrieveMinedTx(context, CMutableTransaction(*op_tx->tx), coinbase_script, from_wallet);\n+}\n+\n+void CreateMultisigScriptAndImportDescriptor(CWallet& wallet, CScript& multisig_script_out, std::vector<CKey>& priv_keys)\n+{\n+    auto spkm = static_cast<DescriptorScriptPubKeyMan*>(wallet.GetScriptPubKeyMan(OutputType::BECH32, false));\n+    std::vector<CPubKey> pks;\n+    std::string pks_str; // descriptor data\n+    for (int i=0; i < 5; i++) {\n+        CTxDestination multi_dest = *Assert(spkm->GetNewDestination(OutputType::BECH32));\n+        auto provider = Assert(spkm->GetSolvingProvider(GetScriptForDestination(multi_dest), /*include_private=*/ true));",
      "path": "src/wallet/test/wallet_transaction_tests.cpp",
      "position": 39,
      "original_position": 39,
      "commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "original_commit_id": "d811ec8fb6c545a137751d35669563b7ee2e6d2f",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I would strongly prefer that we don't have to add new methods to DescSPKM that can export individual keys. This test could just as easily work with generating new random CKeys for the private keys.",
      "created_at": "2023-01-24T19:22:05Z",
      "updated_at": "2023-01-24T19:24:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/25909#discussion_r1085810309",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085810309"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25909"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    }
  ]
}