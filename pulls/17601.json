{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601",
    "id": 345406514,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzQ1NDA2NTE0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17601",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/17601.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/17601.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/eb3b20e157f79da5afff18af30eb8cf224c980ff",
    "number": 17601,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Validation: Move CheckBlock() mutation guard to AcceptBlock()",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We do not mark any blocks that fail `CheckBlock()` as `BLOCK_FAILED_VALID`\r\nsince they could have been mutated and marking a valid-but-mutated block\r\nas invalid would prevent us from ever syncing to that chain. See\r\nhttps://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016697.html\r\nfor full details.\r\n\r\nThe current guard against marking `CheckBlock()` failed blocks as invalid\r\nis by calling `CheckBlock()` prior to `AcceptBlock()` in `ProcessNewBlock()`.\r\nThat is brittle since `AcceptBlock()` has an implicit assumption that any\r\nblock submitted has been checked for mutation. A future change to\r\n`ProcessNewBlock()` could overlook that implicit assumption and introduce\r\na consensus failure.\r\n\r\nMove the mutation guard logic into `AcceptBlock()` and\r\nadd comments to explain why we never mark `CheckBlock()` failed blocks as\r\ninvalid.\r\n",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-11-25T20:37:30Z",
    "updated_at": "2022-02-15T10:33:17Z",
    "closed_at": "2020-07-09T05:54:07Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "0c4f35732a12586a410f47369591141572b8c937",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "jnewbery:2019-11-checkblock-in-acceptblock",
      "ref": "2019-11-checkblock-in-acceptblock",
      "sha": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 68248485,
        "node_id": "MDEwOlJlcG9zaXRvcnk2ODI0ODQ4NQ==",
        "name": "bitcoin",
        "full_name": "jnewbery/bitcoin",
        "owner": {
          "login": "jnewbery",
          "id": 1063656,
          "node_id": "MDQ6VXNlcjEwNjM2NTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jnewbery",
          "html_url": "https://github.com/jnewbery",
          "followers_url": "https://api.github.com/users/jnewbery/followers",
          "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
          "organizations_url": "https://api.github.com/users/jnewbery/orgs",
          "repos_url": "https://api.github.com/users/jnewbery/repos",
          "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jnewbery/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/jnewbery/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jnewbery/bitcoin",
        "archive_url": "https://api.github.com/repos/jnewbery/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jnewbery/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jnewbery/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jnewbery/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jnewbery/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jnewbery/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jnewbery/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jnewbery/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jnewbery/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jnewbery/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jnewbery/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jnewbery/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jnewbery/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jnewbery/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jnewbery/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jnewbery/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jnewbery/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jnewbery/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jnewbery/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jnewbery/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jnewbery/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jnewbery/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jnewbery/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jnewbery/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jnewbery/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jnewbery/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jnewbery/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jnewbery/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jnewbery/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jnewbery/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jnewbery/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jnewbery/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jnewbery/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jnewbery/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jnewbery/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jnewbery/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jnewbery/bitcoin/hooks",
        "svn_url": "https://github.com/jnewbery/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 219109,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-04-21T11:07:55Z",
        "created_at": "2016-09-14T22:29:05Z",
        "updated_at": "2021-07-06T16:23:27Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3f9e6a3c1ce8710364a815ac1796b45ccf1325b5",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T19:06:37Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 20,
    "deletions": 18,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 7,
    "comments": 6
  },
  "events": [
    {
      "event": "labeled",
      "id": 2829543946,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI4Mjk1NDM5NDY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2829543946",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T20:37:46Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "commented",
      "id": 558351518,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM1MTUxOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/558351518",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-25T21:37:59Z",
      "updated_at": "2020-06-14T12:31:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19271 (validation: Warm coins cache during prevalidation to connect blocks faster by andrewtoth)\n* #15545 ([doc] explain why CheckBlock() is called before AcceptBlock by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-558351518",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601"
    },
    {
      "event": "reviewed",
      "id": 327758786,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI3NzU4Nzg2",
      "url": null,
      "actor": null,
      "commit_id": "bdf7b9df31b1aff2dd0f096afc96b00d16ba4ae4",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nMaybe hold for follow-up but did you look to remove `CheckBlockHeader` from `CheckBlock` given it's called now in `AcceptBlockHeader` which is call in `AcceptBlock` ? I think that's okay if we add a `CheckBlockHeader` in `TestBlockValidity`.\r\n\r\nOn the DoS-side we now have `AcceptBlockHeader` called before `CheckBlock`, I think that's better given block header checks are cheaper than block ones.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#pullrequestreview-327758786",
      "submitted_at": "2019-12-05T18:51:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
    },
    {
      "event": "reviewed",
      "id": 328046644,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzI4MDQ2NjQ0",
      "url": null,
      "actor": null,
      "commit_id": "c433cc43719c7428281351f2426621b1aa36fb05",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#pullrequestreview-328046644",
      "submitted_at": "2019-12-06T08:09:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T21:26:20Z",
      "updated_at": "2020-02-11T21:26:20Z",
      "source": {
        "issue": {
          "id": 522996339,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxMDg3NDU5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17479",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17479/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17479/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17479/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17479",
          "number": 17479,
          "state": "closed",
          "state_reason": null,
          "title": "Return BlockValidationState from ProcessNewBlock if CheckBlock/AcceptBlock fails",
          "body": "Net processing now passes a `BlockValidationState` object into `ProcessNewBlock()`. If `CheckBlock()` or `AcceptBlock()` fails, then PNB returns to net processing without calling the (asynchronous) `BlockChecked` Validation Interface method. net processing can use the invalid `BlockValidationState` returned to punish peers.\r\n\r\n`CheckBlock()` and `AcceptBlock()` represent the DoS checks on a block (ie PoW and malleability). Net processing wants to know about those failed checks immediately and shouldn't have to wait on a callback. Other validation interface clients don't care about net processing submitting bogus malleated blocks to validation, so they don't need to be notified of `BlockChecked`.\r\n\r\nFurthermore, if PNB returns a valid `BlockValidationState`, we never need to try to process (non-malleated) copies of the block from other peers. That makes it much easier to move the best chain activation logic to a background thread in future work.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17479",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17479",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17479.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17479.patch"
          },
          "closed_at": "2020-09-16T09:21:37Z",
          "created_at": "2019-11-14T17:17:43Z",
          "updated_at": "2022-02-15T10:47:36Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T21:56:58Z",
      "updated_at": "2020-02-11T21:56:58Z",
      "source": {
        "issue": {
          "id": 501828257,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzI0MDI1NDk2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17037",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17037/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17037/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17037/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/17037",
          "number": 17037,
          "state": "closed",
          "state_reason": null,
          "title": "Testschains: Many regtests with different genesis and default datadir",
          "body": "And bip70 name.\r\nAnd on demand (meaning you don't have to mine a genesis block for it to pass minimal pow).\r\n\r\nThis allows the daemon to create a new regtest-like chains on demand.\r\nThe hash of the genesis block is dependent on the \"petname\" of the chain.\r\nExamples: \"regtest2, custom, chain_2, aaa, bbbb\"\r\n\r\nThe hash of the genesis block could depend on more things.\r\nFor example, for signet chains, it could depend on the signet_blockscript in the case of BIP325 (signet) https://github.com/bitcoin/bitcoin/pull/16411/\r\n\r\nIn fact, #16411 could be simplified if this was merged first, for the genesis block wouldn't need to be mined anymore (which requires a special case in grindblock which in turn requires CreateSignetGenesisBlock to be exposed in chainparams). So I guess perhaps signet could be counted as a use case, or perhaps only part of this.\r\n\r\nBut why would somebody want more than one regtest?\r\n\r\nI'm personally using it for doing cross-chain payments in lightning, see https://github.com/jtimon/multi-ln-demo/blob/master/conf/bitcoind.conf\r\nI would like to work on what I call \"cross chain trampoline payments\" and I plan to keep using it for that too.\r\n\r\nI imagine other developers could find this useful for other developments involving bitcoin-like chains.\r\nFor example atomic swaps or submarine swaps.\r\n\r\nOf course, an alternative for these use cases is to use other regtests from other bitcoin-like networks, for example litecoin regtest or liquid regtest.\r\n\r\nAnother use case is creating temporal testnets for testing upcoming features.\r\nFor example, had this been in place before segwit, when \"segwitnet\" (was that its name) was created, it could have simply been some shared configuration instead of an additional hardoced chainparams.\r\nSomething like:\r\n\r\n```\r\n[segwitnet]\r\nsegwitheight=0\r\nrpcport=18555\r\nport=18556\r\n...\r\n```\r\n\r\nWe're not going to use it for a segwitnet now, obviously, but perhaps for a taprootnet or something.\r\nPerhaps #17032 would be needed too for this use case in particular to be more useful though, or at least make that for some of the fields that are different between testnet3 and regtest.\r\n",
          "user": {
            "login": "jtimon",
            "id": 1008458,
            "node_id": "MDQ6VXNlcjEwMDg0NTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jtimon",
            "html_url": "https://github.com/jtimon",
            "followers_url": "https://api.github.com/users/jtimon/followers",
            "following_url": "https://api.github.com/users/jtimon/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jtimon/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jtimon/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
            "organizations_url": "https://api.github.com/users/jtimon/orgs",
            "repos_url": "https://api.github.com/users/jtimon/repos",
            "events_url": "https://api.github.com/users/jtimon/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jtimon/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 241832923,
              "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
              "name": "Utils/log/libs",
              "description": "",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17037",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/17037",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/17037.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/17037.patch"
          },
          "closed_at": "2020-05-06T13:33:28Z",
          "created_at": "2019-10-03T03:17:56Z",
          "updated_at": "2022-02-15T10:44:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T22:02:29Z",
      "updated_at": "2020-02-11T22:02:29Z",
      "source": {
        "issue": {
          "id": 499835217,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MzIyNDU2MTI0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16981",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16981/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16981/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/16981/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/16981",
          "number": 16981,
          "state": "closed",
          "state_reason": null,
          "title": "Improve runtime performance of --reindex",
          "body": "### Background\r\nDuring the first part of reindexing, `LoadExternalBlockFile()` sequentially reads raw blocks from the `blocks/blk00nnn.dat` files (rather than receiving them from peers, as with initial block download) and eventually adds all of them to the block index. When an individual block is initially read, it can't be immediately added unless all its ancestors have been added, which is rare (only about 8% of the time), because the blocks are not sorted by height. When the block can't be immediately added to the block index, its disk location is saved in a map so it can be added later. When its parent is later added to the block index, `LoadExternalBlockFile()` reads and deserializes the block from disk a second time and adds it to the block index. Most blocks (92%) get deserialized twice.\r\n\r\n### This PR\r\nDuring the initial read, it's rarely useful to deserialize the entire block; only the header is needed to determine if the block can be added to the block index immediately. This change to `LoadExternalBlockFile()` initially deserializes only a block's header, then deserializes the entire block only if it can be added immediately. This reduces reindex time on mainnet by 7 hours on a Raspberry Pi, which translates to around a 25% reduction in the first part of reindexing (adding blocks to the index), and about a 6% reduction in overall reindex time. \r\n\r\nSummary: The performance gain is the result of deserializing each block only once, except its header which is deserialized twice, but the header is only 80 bytes.",
          "user": {
            "login": "LarryRuane",
            "id": 8321330,
            "node_id": "MDQ6VXNlcjgzMjEzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8321330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarryRuane",
            "html_url": "https://github.com/LarryRuane",
            "followers_url": "https://api.github.com/users/LarryRuane/followers",
            "following_url": "https://api.github.com/users/LarryRuane/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/LarryRuane/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/LarryRuane/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/LarryRuane/subscriptions",
            "organizations_url": "https://api.github.com/users/LarryRuane/orgs",
            "repos_url": "https://api.github.com/users/LarryRuane/repos",
            "events_url": "https://api.github.com/users/LarryRuane/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/LarryRuane/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 326918230,
              "node_id": "MDU6TGFiZWwzMjY5MTgyMzA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage",
              "name": "Resource usage",
              "color": "981023",
              "default": false
            },
            {
              "id": 4658146127,
              "node_id": "LA_kwDOABII588AAAABFaWrTw",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Benchmark",
              "name": "Needs Benchmark",
              "description": "",
              "color": "172389",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 87,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/16981",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/16981",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/16981.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/16981.patch"
          },
          "closed_at": "2022-11-16T00:24:55Z",
          "created_at": "2019-09-29T00:17:47Z",
          "updated_at": "2022-11-16T15:33:08Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-11T23:05:32Z",
      "updated_at": "2020-02-11T23:05:32Z",
      "source": {
        "issue": {
          "id": 417769670,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjU4NjkyMzk4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15545",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15545/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15545/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15545/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15545",
          "number": 15545,
          "state": "closed",
          "state_reason": null,
          "title": "[doc] explain why CheckBlock() is called before AcceptBlock",
          "body": "Based on https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016697.html and its PDF attachment.",
          "user": {
            "login": "Sjors",
            "id": 10217,
            "node_id": "MDQ6VXNlcjEwMjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sjors",
            "html_url": "https://github.com/Sjors",
            "followers_url": "https://api.github.com/users/Sjors/followers",
            "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
            "organizations_url": "https://api.github.com/users/Sjors/orgs",
            "repos_url": "https://api.github.com/users/Sjors/repos",
            "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/Sjors/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 148216,
              "node_id": "MDU6TGFiZWwxNDgyMTY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Docs",
              "name": "Docs",
              "color": "02d7e1",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15545",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15545",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15545.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15545.patch"
          },
          "closed_at": "2021-06-04T07:52:15Z",
          "created_at": "2019-03-06T12:03:11Z",
          "updated_at": "2022-08-16T17:23:50Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGRkMjRiNjQ3MDVkNTMxNzllNjQxNjFkNGNkMWQ1YjFkOTFmMDg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8dd24b64705d53179e64161d4cd1d5b1d91f089",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a8dd24b64705d53179e64161d4cd1d5b1d91f089",
      "tree": {
        "sha": "86835e2ac74402ed81e136a20b4aae133be17504",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86835e2ac74402ed81e136a20b4aae133be17504"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f9e6a3c1ce8710364a815ac1796b45ccf1325b5",
          "sha": "3f9e6a3c1ce8710364a815ac1796b45ccf1325b5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3f9e6a3c1ce8710364a815ac1796b45ccf1325b5"
        }
      ],
      "message": "[validation] Move CheckBlock() mutation guard to AcceptBlock()\n\nWe do not mark any blocks that fail CheckBlock() as BLOCK_FAILED_VALID\nsince they could have been mutated and marking a valid-but-mutated block\nas invalid would prevent us from ever syncing to that chain. See\nhttps://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016697.html\nfor full details.\n\nThe current guard against marking CheckBlock() failed blocks as invalid\nis by calling CheckBlock() prior to AcceptBlock() in ProcessNewBlock().\nThat is brittle since AcceptBlock() has an implicit assumption that any\nblock submitted has been checked for mutation. A future change to\nProcessNewBlock() could overlook that implicit assumption and introduce\na consensus failure.\n\nIn this commit we move the mutation guard logic into AcceptBlock() and\nadd comments to explain why we never mark CheckBlock() failed blocks as\ninvalid.",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-03-13T17:01:05Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-18T18:41:18Z"
      },
      "sha": "a8dd24b64705d53179e64161d4cd1d5b1d91f089"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjNiMjBlMTU3Zjc5ZGE1YWZmZjE4YWYzMGViOGNmMjI0Yzk4MGZm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "tree": {
        "sha": "eec4092184a75f94d820cc0a2bdc44aff4c34886",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eec4092184a75f94d820cc0a2bdc44aff4c34886"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8dd24b64705d53179e64161d4cd1d5b1d91f089",
          "sha": "a8dd24b64705d53179e64161d4cd1d5b1d91f089",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a8dd24b64705d53179e64161d4cd1d5b1d91f089"
        }
      ],
      "message": "[validation] Remove unused pindex outparam from AcceptBlock()",
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-03-13T17:01:07Z"
      },
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-11-18T19:43:41Z"
      },
      "sha": "eb3b20e157f79da5afff18af30eb8cf224c980ff"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 3127524903,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MzEyNzUyNDkwMw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3127524903",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-13T17:03:55Z"
    },
    {
      "event": "commented",
      "id": 598823045,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODgyMzA0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/598823045",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-13T17:04:13Z",
      "updated_at": "2020-03-13T17:04:13Z",
      "author_association": "MEMBER",
      "body": "Rebased on latest master and removed the final commit.\r\n\r\n@ariard \r\n> Maybe hold for follow-up but did you look to remove `CheckBlockHeader` from `CheckBlock`\r\n\r\nAs you note, if we did that, we'd need to add `CheckBlockHeader()` to `TestBlockValidity()` and also `CVerifyDB::VerifyDB()`. I don't think that counts as a simplification.\r\n",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-598823045",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601"
    },
    {
      "event": "mentioned",
      "id": 3127525898,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50MzEyNzUyNTg5OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3127525898",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-13T17:04:13Z"
    },
    {
      "event": "subscribed",
      "id": 3127525901,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDMxMjc1MjU5MDE=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3127525901",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-13T17:04:13Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-04-14T01:15:05Z",
      "updated_at": "2020-04-14T01:15:05Z",
      "source": {
        "issue": {
          "id": 421531882,
          "node_id": "MDExOlB1bGxSZXF1ZXN0MjYxNTYxNTQ3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15606",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/15606/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/15606",
          "number": 15606,
          "state": "closed",
          "state_reason": null,
          "title": "assumeutxo",
          "body": "**See the proposal for assumeutxo [here](https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal).**\r\n\r\nTesting instructions can be found below the \"Progress\" section.\r\n\r\n---\r\n\r\n### Progress\r\n\r\nAll items here have corresponding commits here, but are unchecked if they haven't been merged yet.\r\n\r\n- [x] **Chainstate interface**\r\n  - https://github.com/bitcoin/bitcoin/pull/15976\r\n- [x] **Localize chainstate data**\r\n  - https://github.com/bitcoin/bitcoin/pull/16443\r\n- [x] **Share block data**\r\n  - https://github.com/bitcoin/bitcoin/pull/16194\r\n- [x] **Deglobalize chainstate**\r\n  - https://github.com/bitcoin/bitcoin/pull/15948\r\n- [x] **UpdateTip/CheckBlockIndex** modifications\r\n  - https://github.com/bitcoin/bitcoin/pull/21526\r\n- [x] **ChainstateManager**\r\n  - https://github.com/bitcoin/bitcoin/pull/17737\r\n- [x] **Mempool**\r\n  - https://github.com/bitcoin/bitcoin/pull/22415\r\n- [x] **LoadBlockIndex**\r\n  - https://github.com/bitcoin/bitcoin/pull/23174\r\n- [x] **Init/teardown**\r\n  - https://github.com/bitcoin/bitcoin/pull/24232\r\n  - https://github.com/bitcoin/bitcoin/pull/25667\r\n  - https://github.com/bitcoin/bitcoin/pull/25740\r\n- [x] **Wallet**: includes avoiding rescans when assumed-valid block data is in use\r\n  - https://github.com/bitcoin/bitcoin/pull/23997\r\n  - https://github.com/bitcoin/bitcoin/pull/26282\r\n- [ ] **P2P**: minor changes are made to `init.cpp` and `net_processing.cpp` to make simultaneous IBD across multiple chainstates work.\r\n  - #24008 \r\n- [ ] **Pruning**: implement correct pruning behavior when using a background chainstate\r\n- [ ] **Blockfile separation**: to prevent \"fragmentation\" in blockfile storage, have background chainstates use separate blockfiles from active snapshot chainstates to avoid interleaving heights and impairing pruning.\r\n- [ ] **Indexing**: all existing `CValidationInterface` events are given with an additional parameter, ChainstateRole, and all indexers ignore events from ChainstateRole::ASSUMEDVALID so that indexation only happens sequentially.\r\n- [ ] Raise error when both `-reindex` and assumeutxo are in use.\r\n- [ ] **RPC**: introduce RPC commands `dumptxoutset`, `loadtxoutset`, and (the probably temporary) `monitorsnapshot`.\r\n  - https://github.com/bitcoin/bitcoin/pull/16899\r\n- [ ] **Release docs & first assumeutxo commitment**: add notes and a particular assumeutxo hash value for first AU-enabled release.\r\n  - This will complete the project and allow use of UTXO snapshots for faster node bootstrap.\r\n- [ ] *(optional)* **Coinscache optimization**: allow flushing chainstate data without emptying the coins cache; results in better performance after UTXO snapshot load.\r\n  - https://github.com/bitcoin/bitcoin/pull/17487\r\n  - https://github.com/bitcoin/bitcoin/pull/27008\r\n\r\n---\r\n\r\n### Testing\r\n\r\n#### For fun (~5min)\r\n\r\nIf you want to do a quick test, you can run `./contrib/devtools/test_utxo_snapshots.sh` and follow the instructions. This is mostly obviated by the functional tests, though.\r\n\r\n#### For real (longer)\r\n\r\nIf you'd like to experience a real usage of assumeutxo, you can do that too.\r\nI've cut a new snapshot at height 788'000 (http://img.jameso.be/utxo-788000.dat - but you can do it yourself with `./contrib/devtools/utxo_snapshot.sh` if you want). Download that, and then create a datadir for testing:\r\n```sh\r\n$ cd ~/src/bitcoin  # or whatever\r\n\r\n# get the snapshot\r\n$ curl http://img.jameso.be/utxo-788000.dat > utxo-788000.dat\r\n\r\n# you'll want to do this if you like copy/pasting \r\n$ export AU_DATADIR=/home/${USER}/au-test # or wherever\r\n\r\n$ mkdir ${AU_DATADIR}\r\n$ vim ${AU_DATADIR}/bitcoin.conf\r\n\r\ndbcache=8000  # or, you know, something high\r\nblockfilterindex=1\r\ncoinstatsindex=1\r\nprune=3000\r\nlogthreadnames=1\r\n```\r\nObtain this branch, build it, and then start bitcoind:\r\n```sh\r\n$ git remote add jamesob https://github.com/jamesob/bitcoin\r\n$ git fetch jamesob utxo-dumpload-compressed\r\n$ git checkout jamesob/utxo-dumpload-compressed\r\n\r\n$ ./configure $conf_args && make  # (whatever you like to do here)\r\n\r\n# start 'er up and watch the logs\r\n$ ./src/bitcoind -datadir=${AU_DATADIR}\r\n```\r\nThen, in some other window, load the snapshot\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} loadtxoutset $(pwd)/utxo-788000.dat\r\n```\r\n\r\nYou'll see some log messages about headers retrieval and waiting to see the snapshot in the headers chain. Once you get the full headers chain, you'll spend a decent amount of time (~10min) loading the snapshot, checking it, and flushing it to disk. After all that happens, you should be syncing to tip in pretty short order, and you'll see the occasional `[background validation]` log message go by.\r\n\r\nIn yet another window, you can check out chainstate status with\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} getchainstates\r\n```\r\nas well as usual favorites like `getblockchaininfo`.\r\n\r\n---\r\n\r\n### Original change description\r\n\r\nFor those unfamiliar with assumeutxo, here's a brief summary from [the issue](https://github.com/bitcoin/bitcoin/issues/15605) (where any conceptual discussion not specific to this implementation should happen):\r\n\r\n> assumeutxo would be a way to initialize a node using a headers chain and a serialized version of the UTXO state which was generated from another node at some block height. A client making use of this UTXO \"snapshot\" would specify a hash and expect the content of the resulting UTXO set to yield this hash after deserialization. \r\n> \r\n> This would allow users to bootstrap a usable pruned node & wallet far more quickly (and with less disk usage) than waiting for a full initial block download to complete, since we only have to sync blocks between the base of the snapshot and the current network tip. Needless to say this is at expense of accepting a different trust model, though how different this really ends up being from `assumevalid` in effect is worth debate.\r\n\r\nIn short, this is an interesting change because it would allow nodes to get up and running within minutes given a ~3GB file (at time of writing) under an almost identical trust model to assumevalid.\r\n\r\nIn this implementation, I add a few RPC commands: `dumptxoutset` creates a UTXO snapshot and writes it to disk, and `loadtxoutset` intakes a snapshot from disk, constructs and activates chainstate based on it, and continues a from-scratch initial block download in the background for the sole purpose of validating the snapshot. Once the snapshot is validated, we throw away the chainstate used for background validation.\r\n\r\nThe assumeutxo procedure as implemented is as follows:\r\n\r\n1. A UTXO snapshot is loaded with the `loadtxoutset <path>` RPC command.\r\n1. A new chainstate (`CChainState`) is initialized using `ChainstateManager::ActivateSnapshot()`:\r\n   1. The serialized UTXO data is read in and various sanity checks are performed, e.g. compare expected coin count, recompute the hash and compare it with assumeutxo hash in source code.\r\n   1. We \"fast forward\" `new_chainstate->m_chain` to have a tip at the base of the snapshot (with or without block data). Lacking block data, we fake the `nTx` counts of the constituent `CBlockIndex` entries.\r\n   1. `LoadChainTip()` is called on the new snapshot and it is installed as our active chainstate.\r\n1. The new assumed-valid chainstate is now our active, and so that enters IBD until it is synced to the network's tip. Presumably the snapshot would be taken relatively close to the current tip but far enough away to avoid meaningful reorgs, say 10,000 blocks deep.\r\n1. Once the active chainstate is out of IBD, our old validation chain continues IBD \"in the background\" while the active chainstate services requests from most of the system.\r\n1. Once the background validation chainstate reaches a height equal the base of the snapshot, we take the hash of its UTXO set and ensure it equals the expected hash based on the snapshot. If the hashes are equivalent, we delete the validation chainstate and move on without event; if they aren't, we log loudly and fall back to the validation chainstate (we should probably just shut down).\r\n\r\nThe implicit assumption is that the background validation chain will always be a subset of the assumed-valid snapshot chain while the latter is active. We don't properly handle reorgs that go deeper than the base of the snapshot.\r\n\r\n### Changes (already merged/outdated)\r\n\r\n![chainstate-beforeafter (1)](https://user-images.githubusercontent.com/73197/54435797-a16b0780-4707-11e9-89c3-c90b5686804d.png)\r\n \r\nThe crux of this change is in removing any assumptions in the codebase that there is a single chainstate, i.e. any references to global variables `chainActive`, `pcoinsTip`, et al. need to be replaced with functions that return the relevant chainstate data at that moment in time. This change also takes `CChainState` to its logical conclusion by making it more self-contained - any references to globals like `chainActive` are removed with class-local references (`m_chain`).\r\n\r\nA few minor notes on the implementation:\r\n\r\n- When we attempt to load a wallet with a BestBlock locator lower than the base of a snapshot and the snapshot has not yet been validated, we refuse to load the wallet.\r\n\r\n- For additional notes, see [the new assumeutxo docs](https://github.com/jamesob/bitcoin/blob/utxo-dumpload-compressed/doc/assumeutxo.md).",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 66,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/15606",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/15606",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/15606.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/15606.patch"
          },
          "closed_at": "2023-05-08T15:09:24Z",
          "created_at": "2019-03-15T13:58:22Z",
          "updated_at": "2023-05-08T15:09:24Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-06-14T04:15:11Z",
      "updated_at": "2020-06-14T04:15:11Z",
      "source": {
        "issue": {
          "id": 638265437,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDM0MDgxNzAx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19271",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19271/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19271/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19271/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19271",
          "number": 19271,
          "state": "closed",
          "state_reason": null,
          "title": "validation: Warm coins cache during prevalidation to connect blocks faster",
          "body": "[Retrieving coins from disk is a significant source of `ConnectBlock` latency](https://github.com/bitcoin/bitcoin/pull/18941#issuecomment-633684774). This PR increases `ConnectBlock` speed by retrieving coins from disk on a separate thread before `ConnectBlock` is reached. When a block is passed into `ProcessNewBlock` it is immediately warmed before prevalidation checks are begun.\r\n\r\nBenchmarking IBD with `-prune=10000` and default `-dbcache` from blocks `600000-633000` gives a 7.1% increase in speed. Since this is only really useful when blocks take a long time to prevalidate, benchmarks from genesis only give a 2.3% increase. However, this should keep increasing as more large blocks get mined, so it will be even more useful in the future. Of course this will be less useful with high `-dbcache` values.",
          "user": {
            "login": "andrewtoth",
            "id": 237213,
            "node_id": "MDQ6VXNlcjIzNzIxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewtoth",
            "html_url": "https://github.com/andrewtoth",
            "followers_url": "https://api.github.com/users/andrewtoth/followers",
            "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
            "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
            "repos_url": "https://api.github.com/users/andrewtoth/repos",
            "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 18,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19271",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19271",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19271.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19271.patch"
          },
          "closed_at": "2020-08-07T02:30:49Z",
          "created_at": "2020-06-14T01:40:05Z",
          "updated_at": "2022-02-15T10:34:39Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 655917446,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTkxNzQ0Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/655917446",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T05:54:07Z",
      "updated_at": "2020-07-09T05:54:07Z",
      "author_association": "MEMBER",
      "body": "Closing this for now. I think it's the right change, but it's not high priority and there doesn't seem to be much interest.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-655917446",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601"
    },
    {
      "event": "closed",
      "id": 3528081057,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzUyODA4MTA1Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3528081057",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T05:54:07Z"
    },
    {
      "event": "reviewed",
      "id": 445426274,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NDI2Mjc0",
      "url": null,
      "actor": null,
      "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I agree this is a good change, as well as, in increasing order of preference, the items in your comment https://github.com/bitcoin/bitcoin/pull/17601/#discussion_r392311705.\r\n\r\nACK eb3b20e157f79da5afff18af30eb8cf224c980ff code review, built and tested after rebasing onto master.\r\n\r\n\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#pullrequestreview-445426274",
      "submitted_at": "2020-07-09T09:04:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
    },
    {
      "event": "commented",
      "id": 656008937,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjAwODkzNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656008937",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T09:08:02Z",
      "updated_at": "2020-07-09T09:09:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "GitHub doesn't seem to parse its own link https://github.com/bitcoin/bitcoin/pull/17601/#discussion_r392311705 (`https://github.com/bitcoin/bitcoin/pull/17601/#discussion_r392311705`) correctly, so I meant the items in the following comment, in increasing order of preference:\r\n\r\n> I think this should either:\r\n> \r\n>     * be a comment in `CheckBlock` saying that `cs_main` should usually be held when calling `CheckBlock`\r\n> \r\n>     * add an `AssertLockHeld(cs_main)` to `CheckBlock` (and also add that to `FillBlock` and update the callers in bench to hold the lock)\r\n> \r\n>     * remove `fChecked` so that `CheckBlock` doesn't need to hold `cs_main`\r\n\r\n",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-656008937",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601"
    },
    {
      "event": "commented",
      "id": 656017677,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjAxNzY3Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656017677",
      "actor": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T09:25:07Z",
      "updated_at": "2020-07-09T09:25:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think it's the right change, but it's not high priority and there doesn't seem to be much interest.\r\n\r\nI empathise with this sentiment and have closed my own pull requests for the same reason, combined with the growing stack of open PRs needing attention and thinking I shouldn't have too many PRs open. That said, unless a squeaky wheel calls for grease, review attention seems to be flood-or-drought. Dormant, then suddenly, unexpectedly present. So I guess what matters most is if the PR author is still interested in their own PR.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-656017677",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601"
    },
    {
      "event": "commented",
      "id": 656022875,
      "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjAyMjg3NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/656022875",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-07-09T09:35:45Z",
      "updated_at": "2020-07-09T09:35:45Z",
      "author_association": "MEMBER",
      "body": "This is consensus-critical and the changing the ordering of checks here could potentially introduce very subtle consensus failures, and so this PR requires very careful review. I have 9 other PRs open and more branches that I haven't PRed and I'd prefer to focus review attention on those.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#issuecomment-656022875",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17601"
    },
    {
      "event": "locked",
      "id": 6073803692,
      "node_id": "LOE_lADOABII584ffZLPzwAAAAFqBuOs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073803692",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:33:17Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354475171",
      "pull_request_review_id": 327758786,
      "id": 354475171,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDQ3NTE3MQ==",
      "diff_hunk": "@@ -3769,18 +3781,9 @@ bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<cons\n         if (fNewBlock) *fNewBlock = false;\n         BlockValidationState state;\n \n-        // CheckBlock() does not support multi-threaded block validation because CBlock::fChecked can cause data race.",
      "path": "src/validation.cpp",
      "position": 50,
      "original_position": 28,
      "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "original_commit_id": "bdf7b9df31b1aff2dd0f096afc96b00d16ba4ae4",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If you keep CheckBlock as it is can we keep this to inform future refactors ?",
      "created_at": "2019-12-05T18:26:23Z",
      "updated_at": "2020-03-13T17:03:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354475171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354475171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3805,
      "original_line": 3805,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354481122",
      "pull_request_review_id": 327758786,
      "id": 354481122,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDQ4MTEyMg==",
      "diff_hunk": "@@ -3726,9 +3726,21 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n         if (pindex->nChainWork < nMinimumChainWork) return true;\n     }\n \n-    if (!CheckBlock(block, state, chainparams.GetConsensus()) ||\n-        !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev)) {\n+    if (!CheckBlock(block, state, chainparams.GetConsensus())) {\n+        // Never mark a block as invalid if CheckBlock() fails.  This is\n+        // protective against consensus failure if there are any unknown forms\n+        // of block mutation that cause CheckBlock() to fail; see e.g.\n+        // CVE-2012-2459 and\n+        // https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016697.html.\n+        // Because CheckBlock() is not very expensive, the anti-DoS benefits of",
      "path": "src/validation.cpp",
      "position": 30,
      "original_position": 12,
      "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "original_commit_id": "bdf7b9df31b1aff2dd0f096afc96b00d16ba4ae4",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You said here than not caching failure is okay because CheckBlock() isn't very expensive but at same time we use `fChecked` to return early to avoid reprocessing. It seems a bit an inconsistent position. If it's cheap enough we shouldn't bother with `fChecked` and lock tacking shouldn't cover CheckBlock? Or we could split CheckBlock between CheckBlockIntegrity and CheckBlockValidity and have a `fDefinitelyInvalid` to skip both if see block again?",
      "created_at": "2019-12-05T18:39:16Z",
      "updated_at": "2020-03-13T17:03:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354481122",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354481122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3768,
      "original_line": 3768,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354482841",
      "pull_request_review_id": 327758786,
      "id": 354482841,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDQ4Mjg0MQ==",
      "diff_hunk": "@@ -3775,18 +3775,15 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool *fNewBlock)\n {\n     AssertLockNotHeld(cs_main);\n-\n     {\n-        if (fNewBlock) *fNewBlock = false;\n-        BlockValidationState state;\n-\n         LOCK(cs_main);\n \n+        BlockValidationState state;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "original_commit_id": "c433cc43719c7428281351f2426621b1aa36fb05",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: keep struct construction outside of cs_main, that's still a concurrency",
      "created_at": "2019-12-05T18:42:53Z",
      "updated_at": "2020-03-13T17:03:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354482841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354482841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3781,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354706030",
      "pull_request_review_id": 328046644,
      "id": 354706030,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM1NDcwNjAzMA==",
      "diff_hunk": "@@ -3775,18 +3775,15 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool *fNewBlock)\n {\n     AssertLockNotHeld(cs_main);\n-\n     {\n-        if (fNewBlock) *fNewBlock = false;\n-        BlockValidationState state;\n-\n         LOCK(cs_main);\n \n+        BlockValidationState state;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "original_commit_id": "c433cc43719c7428281351f2426621b1aa36fb05",
      "in_reply_to_id": 354482841,
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> that's still a concurrency\r\n\r\nWhat you mean?",
      "created_at": "2019-12-06T08:08:05Z",
      "updated_at": "2020-03-13T17:03:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r354706030",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/354706030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3781,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392293960",
      "pull_request_review_id": 374387314,
      "id": 392293960,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI5Mzk2MA==",
      "diff_hunk": "@@ -3775,18 +3775,15 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<const CBlock> pblock, bool fForceProcessing, bool *fNewBlock)\n {\n     AssertLockNotHeld(cs_main);\n-\n     {\n-        if (fNewBlock) *fNewBlock = false;\n-        BlockValidationState state;\n-\n         LOCK(cs_main);\n \n+        BlockValidationState state;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "original_commit_id": "c433cc43719c7428281351f2426621b1aa36fb05",
      "in_reply_to_id": 354482841,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think @ariard means that there's no need to construct the `BlockValidationState` object within the `cs_main` scope. That's true, but constructing this object is very cheap, so I don't think it's a problem (and placing the variable declaration next to where it's used make this clearer).\r\n\r\nI'm actually going to remove this commit from the PR, since I don't think it's necessary (and may make it more likely to introduce a bug, since the callers to `ProcessNewBlock()` in net_processing don't check the return code of the function before using the `fNewBlock` out param.",
      "created_at": "2020-03-13T15:19:40Z",
      "updated_at": "2020-03-13T17:03:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392293960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392293960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3781,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392307204",
      "pull_request_review_id": 374404551,
      "id": 392307204,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMwNzIwNA==",
      "diff_hunk": "@@ -3726,9 +3726,21 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n         if (pindex->nChainWork < nMinimumChainWork) return true;\n     }\n \n-    if (!CheckBlock(block, state, chainparams.GetConsensus()) ||\n-        !ContextualCheckBlock(block, state, chainparams.GetConsensus(), pindex->pprev)) {\n+    if (!CheckBlock(block, state, chainparams.GetConsensus())) {\n+        // Never mark a block as invalid if CheckBlock() fails.  This is\n+        // protective against consensus failure if there are any unknown forms\n+        // of block mutation that cause CheckBlock() to fail; see e.g.\n+        // CVE-2012-2459 and\n+        // https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-February/016697.html.\n+        // Because CheckBlock() is not very expensive, the anti-DoS benefits of",
      "path": "src/validation.cpp",
      "position": 30,
      "original_position": 12,
      "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "original_commit_id": "bdf7b9df31b1aff2dd0f096afc96b00d16ba4ae4",
      "in_reply_to_id": 354481122,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`fChecked` is a slightly different caching mechanism. It's stored on the `CBlock` object and prevents having to do the merkle root and POW checking for the same object more than once. The `CBlock` object is new each time we redownload a block, so this caching doesn't prevent us from re-checking an invalid block downloaded more than once. On the other hand, the `BlockManager.m_block_index` is what prevents us from checking an invalid block downloaded a second time.\r\n\r\nWe may actually be able to remove `fChecked` after this PR. Before this PR, we call `CheckBlock` three times on the same block:\r\n\r\n1. from `ProcessNewBlock()`\r\n2. from `AcceptBlock()`\r\n3. from `ConnectBlock()`\r\n\r\n(1) is removed by this PR and (3) is not on the critical path for compact block relay (since we relay the compact block as soon as we've done the merkle tree/pow checks the first time, and before we save to disk or connect the block).",
      "created_at": "2020-03-13T15:41:37Z",
      "updated_at": "2020-03-13T17:03:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392307204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392307204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3768,
      "original_line": 3768,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392311705",
      "pull_request_review_id": 374410306,
      "id": 392311705,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMxMTcwNQ==",
      "diff_hunk": "@@ -3769,18 +3781,9 @@ bool ProcessNewBlock(const CChainParams& chainparams, const std::shared_ptr<cons\n         if (fNewBlock) *fNewBlock = false;\n         BlockValidationState state;\n \n-        // CheckBlock() does not support multi-threaded block validation because CBlock::fChecked can cause data race.",
      "path": "src/validation.cpp",
      "position": 50,
      "original_position": 28,
      "commit_id": "eb3b20e157f79da5afff18af30eb8cf224c980ff",
      "original_commit_id": "bdf7b9df31b1aff2dd0f096afc96b00d16ba4ae4",
      "in_reply_to_id": 354475171,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this should either:\r\n\r\n- be a comment in `CheckBlock` saying that `cs_main` should usually be held when calling `CheckBlock`\r\n- add an `AssertLockHeld(cs_main)` to `CheckBlock` (and also add that to `FillBlock` and update the callers in bench to hold the lock)\r\n- remove `fChecked` so that `CheckBlock` doesn't need to hold `cs_main`\r\n",
      "created_at": "2020-03-13T15:49:00Z",
      "updated_at": "2020-03-13T17:03:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17601#discussion_r392311705",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/392311705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17601"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3805,
      "original_line": 3805,
      "side": "LEFT"
    }
  ]
}