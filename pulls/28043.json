{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043",
    "id": 1424579402,
    "node_id": "PR_kwDOABII585U6VtK",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28043",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28043.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28043.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
    "number": 28043,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "fuzz: Test headers pre-sync through p2p interface",
    "user": {
      "login": "dergoegge",
      "id": 8077169,
      "node_id": "MDQ6VXNlcjgwNzcxNjk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dergoegge",
      "html_url": "https://github.com/dergoegge",
      "followers_url": "https://api.github.com/users/dergoegge/followers",
      "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
      "organizations_url": "https://api.github.com/users/dergoegge/orgs",
      "repos_url": "https://api.github.com/users/dergoegge/repos",
      "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dergoegge/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This PR adds a regression fuzz test for #26355 and [some of the bugs](https://github.com/bitcoin/bitcoin/pull/25717/commits/ed6cddd98e32263fc116a4380af6d66da20da990) found during review of #25717.\r\n\r\nShould give us more confidence in doing #25725.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/61",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/61/labels",
      "id": 9334188,
      "node_id": "MI_kwDOABII584Ajm2s",
      "number": 61,
      "state": "open",
      "title": "27.0",
      "description": "",
      "creator": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 7,
      "closed_issues": 12,
      "created_at": "2023-04-27T08:01:57Z",
      "updated_at": "2023-11-17T08:35:17Z"
    },
    "created_at": "2023-07-07T12:05:27Z",
    "updated_at": "2023-11-17T10:34:28Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "f48c07da0188889daccece0301208a662484486d",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "dergoegge:2023-07-fuzz-pow",
      "ref": "2023-07-fuzz-pow",
      "sha": "924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 315023492,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMTUwMjM0OTI=",
        "name": "bitcoin",
        "full_name": "dergoegge/bitcoin",
        "owner": {
          "login": "dergoegge",
          "id": 8077169,
          "node_id": "MDQ6VXNlcjgwNzcxNjk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dergoegge",
          "html_url": "https://github.com/dergoegge",
          "followers_url": "https://api.github.com/users/dergoegge/followers",
          "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
          "organizations_url": "https://api.github.com/users/dergoegge/orgs",
          "repos_url": "https://api.github.com/users/dergoegge/repos",
          "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dergoegge/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/dergoegge/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/dergoegge/bitcoin",
        "archive_url": "https://api.github.com/repos/dergoegge/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dergoegge/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dergoegge/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dergoegge/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dergoegge/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dergoegge/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dergoegge/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dergoegge/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dergoegge/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/dergoegge/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/dergoegge/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/dergoegge/bitcoin/events",
        "forks_url": "https://api.github.com/repos/dergoegge/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/dergoegge/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dergoegge/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dergoegge/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dergoegge/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dergoegge/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dergoegge/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dergoegge/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dergoegge/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dergoegge/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/dergoegge/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/dergoegge/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dergoegge/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dergoegge/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dergoegge/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:dergoegge/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/dergoegge/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/dergoegge/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dergoegge/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/dergoegge/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/dergoegge/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/dergoegge/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/dergoegge/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dergoegge/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/dergoegge/bitcoin/hooks",
        "svn_url": "https://github.com/dergoegge/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 232049,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-11-15T14:18:32Z",
        "created_at": "2020-11-22T11:41:30Z",
        "updated_at": "2023-05-05T12:10:28Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "54bdb6e0745934ad9ae6c77628f2382a83b9a1f0",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35962,
        "stargazers_count": 72245,
        "watchers_count": 72245,
        "size": 245027,
        "default_branch": "master",
        "open_issues_count": 642,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-11-17T11:52:27Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-11-17T11:38:58Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 215,
    "deletions": 9,
    "changed_files": 6,
    "commits": 3,
    "review_comments": 8,
    "comments": 4
  },
  "events": [
    {
      "event": "commented",
      "id": 1625314105,
      "node_id": "IC_kwDOABII585g4FM5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1625314105",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T12:05:30Z",
      "updated_at": "2023-11-15T21:00:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28043).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26812](https://github.com/bitcoin/bitcoin/pull/26812) (test: add end-to-end tests for CConnman and PeerManager by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#issuecomment-1625314105",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043"
    },
    {
      "event": "labeled",
      "id": 9754392485,
      "node_id": "LE_lADOABII585q5aJSzwAAAAJFaDel",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9754392485",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T12:05:32Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 9754397489,
      "node_id": "CTDE_lADOABII585q5aJSzwAAAAJFaEsx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9754397489",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T12:06:03Z"
    },
    {
      "event": "commented",
      "id": 1625315268,
      "node_id": "IC_kwDOABII585g4FfE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1625315268",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T12:06:22Z",
      "updated_at": "2023-07-07T12:06:22Z",
      "author_association": "MEMBER",
      "body": "Draft until #27499 is in.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#issuecomment-1625315268",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T21:09:16Z",
      "updated_at": "2023-07-07T21:09:16Z",
      "source": {
        "issue": {
          "id": 1789806361,
          "node_id": "PR_kwDOABII585Ut7YI",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28031/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28031",
          "number": 28031,
          "state": "open",
          "state_reason": null,
          "title": "Package Relay 1/3: Introduce TxDownloadManager and improve orphan-handling",
          "body": "This is milestone 1 of package relay p2p changes. See #27463 for full project tracking.\r\n\r\nPlease see #27742 for how this PR fits into the big picture. I strongly suggest that reviewers look at that PR first to decide if they are comfortable with the overall approach.\r\n\r\nThis PR is mainly refactors, with a few behavior changes and improvements:\r\n- Introduces `TxDownloadManager`, which handles all transaction downloading. It contains the `TxRequestTracker`, `TxOrphanage`, and filters for `AlreadyHaveTx`.\r\n- Updates logs for tx {validation, relay, orphans} to include both txid and wtxid when possible.\r\n- Adds a new log category, `TXPACKAGES`. Logging in the orphanage is changed from `MEMPOOL` to `TXPACKAGES`.\r\n- Adds support for tracking when multiple peers provided the same tx in the orphanage.\r\n- Makes `TxDownloadManager` responsible for tracking the orphans we need to resolve and deciding how/when to resolve them.\r\n- Adds all announcers of an orphan as potential resolution candidates. This tracker is a `TxDownloadManager` which helps us schedule requests.\r\n   - In this PR, \"orphan resolution\" means requesting missing parents by `getdata(MSG_TX | MSG_WITNESS_FLAG, missing_txid)`.\r\n    - In a future PR, we'll add another resolution method, requesting ancestor wtxids using `getdata(MSG_ANCPKGINFO, orphan_wtxid)`.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 10,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28031",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28031",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28031.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28031.patch"
          },
          "created_at": "2023-07-05T15:30:40Z",
          "updated_at": "2023-10-20T14:44:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-07T23:10:14Z",
      "updated_at": "2023-07-07T23:10:14Z",
      "source": {
        "issue": {
          "id": 1724281348,
          "node_id": "PR_kwDOABII585RQ35P",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27742/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27742",
          "number": 27742,
          "state": "open",
          "state_reason": null,
          "title": "[NO MERGE] BIP331 Ancestor Package Relay",
          "body": "**WORK IN PROGRESS.** Please do not run it for any use other than testing.\r\n  \r\nThis PR is not meant for merge. This branch exists to help reviewers see what package relay would look like all together. I will open separate PRs for these components and expect to add more tests, docs, and polish along the way. This PR contains all of the functionality built in a linear manner. However, since there are pieces in various areas of the codebase and they can make progress in parallel, commits don't necessarily need to be merged in this order.\r\n\r\n**See #27463 for what PR(s) are open for review right now.**\r\n\r\n## Note to Reviewers\r\n\r\nThe major purpose of this PR is to solicit \"approach\" review.\r\n\r\nThis is a large project, and the first few p2p commits essentially define the interface. I'd like to get rough consensus on approach before we start looking at code details and merging PRs, because I believe it will help us \"get useful stuff in\" faster and avoid premature optimizations.\r\n\r\nHere are some questions I hope are answered before we try to merge anything (originally https://github.com/bitcoin/bitcoin/pull/27742#issuecomment-1572205313):\r\n\r\n1. Does the proposed protocol look sound?\r\n2. Are these 3 milestones appropriate?\r\n3. Is there important functionality that is in the \"todo improvements\" section but should be included in one of the 3 milestones? Alternatively, is there not-that-important stuff in the milestones that we should defer until later?\r\n4. Does it make sense to have this PeerManager <-> TxDownloadMan interface?\r\n\r\nComments about naming, typos, code details, etc. are also appreciated but please note I may wait until their respective PRs are open to incorporate your comments. Thank you for your patience.\r\n\r\n### Design Docs\r\n\r\nBIP: https://github.com/bitcoin/bips/pull/1382\r\nOrphanage changes: https://gist.github.com/glozow/7c0ff639f996e660146314edffa6f06c\r\n\r\n## Project Structure\r\n\r\n### 3 Major Milestones\r\n\r\nThis project is split into 3 milestones, each of which gives us something useful.\r\n\r\n1. Modularize and improve orphan-handling (also some refactoring).\r\n\t- Introduce a `TxDownloadManager` class, responsible for downloading transactions that have been announced to us.\r\n\t- Use all announcers as potential candidates for resolving an orphan. Add a `TxRequestTracker` Orphan Request Tracker which helps track orphans we need to resolve. Preferentially request orphan resolution from outbounds, preferred relay, etc., over inbounds.\r\n\r\n2. When package relay peers are available, use `ancpkginfo` instead of missing parents when handling orphans.\r\n\t- Add `sendpackages` negotiation logic.\r\n\t- Add a separate rejections filter for transactions that are eligible for reconsideration when validated together as a package, so that children of low-feerate transactions are still considered.\r\n\t- Send `getdata(MSG_ANCPKGINFO)` to package relay peers for orphan resolution. Use `ancpkginfo` to request missing ancestors through normal individual transaction relay.\r\n\r\n3. Download and validate ancestor packages using `getpkgtxns` and `pkgtxns`.\r\n\t- Add support for `getpkgtxns` and `pkgtxns`. Send a `pkgtxns` using the list of missing transactions from `ancpkginfo`.\r\n\t- Ensure we can process \"normal\" orphans even if a peer is trying to overwhelm/churn our orphanage. Do this by \"opportunistically\" protecting orphans from random eviction if they were sent by package relay peers, and redownloading orphans if we cannot afford to protect them. Each peer is allocated a certain amount of orphans they can protect at a time (\"token bucket\" style but the number of tokens is static for now). Outbound peers get more than inbounds.\r\n\t- If a transaction's parent(s) are below the fee filter, don't announce it (save the bandwidth of legacy nodes).\r\n\r\n###  Todo improvements \r\nThese could be added to the milestones or deferred until basic functionality is deployed.\r\n- Store orphans serialized instead of as CTransactionRefs to significantly reduce their memory usage.\r\n- Perhaps try to keep orphans in disk and/or process them asynchronously, given the incredibly DoSable nature of orphan handling.\r\n- Dynamically allocate tokens for orphan protection. For example, if a long-standing inbound peer continuously provides good packages for orphans, they should have more tokens. If a peer is obviously serving us garbage, reduce their tokens.\r\n- Detect when we have received all the transactions for a package, regardless of how (individual or block or other), and return `PackageToValidate`  in `GetTxToReconsider`.\r\n- New format for mempool.dat, packages instead of transactions.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27742",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27742",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27742.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27742.patch"
          },
          "created_at": "2023-05-24T15:38:55Z",
          "updated_at": "2023-09-19T08:50:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-08T00:43:28Z",
      "updated_at": "2023-07-08T00:43:28Z",
      "source": {
        "issue": {
          "id": 1650131834,
          "node_id": "PR_kwDOABII585NZG7Z",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27385",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27385/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27385/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27385/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27385",
          "number": 27385,
          "state": "open",
          "state_reason": null,
          "title": "net, refactor: extract Network and BIP155Network logic to node/network",
          "body": "This extracts the `Network` and `BIP155Network` logic to `node/network`.  The code has been living between `netaddress` and `netbase` and some compilation units include these large files when they only need a `Network` enum or related method.  Separating the code to a standalone unit in `node` improves code separation and helps with using only what is needed.\r\n\r\nI verified the `include` headers with https://cirrus-ci.com/task/6749578737745920 generated by https://github.com/bitcoin/bitcoin/pull/27385/commits/8f647a65d3484c7acd2d97f4b055c582d7734b6f while this was in draft and carefully narrowed them down to the most relevant ones.\r\n\r\nPossible todos for a follow-up: upgrade `Network` to an `enum class`, e.g. `NET_I2P` becomes `Network::I2P` and https://github.com/bitcoin/bitcoin/pull/27385/commits/5cfa3fb8b5815aaf96483a63526e5f0bf3c0a06b.",
          "user": {
            "login": "jonatack",
            "id": 2415484,
            "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonatack",
            "html_url": "https://github.com/jonatack",
            "followers_url": "https://api.github.com/users/jonatack/followers",
            "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
            "organizations_url": "https://api.github.com/users/jonatack/orgs",
            "repos_url": "https://api.github.com/users/jonatack/repos",
            "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jonatack/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27385",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27385",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27385.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27385.patch"
          },
          "created_at": "2023-03-31T22:40:50Z",
          "updated_at": "2023-10-23T17:45:03Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-08T02:01:03Z",
      "updated_at": "2023-07-08T02:01:03Z",
      "source": {
        "issue": {
          "id": 1519092836,
          "node_id": "PR_kwDOABII585Godbn",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26812",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26812/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26812/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26812/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26812",
          "number": 26812,
          "state": "open",
          "state_reason": null,
          "title": "test: add end-to-end tests for CConnman and PeerManager",
          "body": "Add fuzz and unit tests that write (fuzzed) data to a mocked socket and inspect what CConnman/PeerManager have written back to the socket, or check the internal state to verify that the behavior is as expected.\r\n\r\nThis is now possible, after most of https://github.com/bitcoin/bitcoin/pull/21878 has been merged - we don't do any syscalls (e.g. `connect()`, `recv()`) from the high level code and using a mocked socket allows testing the entire networking stack without opening actual network connections.",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 28,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26812",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26812",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26812.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26812.patch"
          },
          "created_at": "2023-01-04T14:39:37Z",
          "updated_at": "2023-11-17T11:00:15Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-08T02:29:12Z",
      "updated_at": "2023-07-08T02:29:12Z",
      "source": {
        "issue": {
          "id": 1471685707,
          "node_id": "PR_kwDOABII585EFGFt",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26621/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26621",
          "number": 26621,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Continue moving application data from CNode to Peer",
          "body": "This PR picks up a subset of changes from #24970 and additionally moves `m_bip152_highbandwith{to,from}`, `nTimeOffset`, `nVersion`, `m_greates_common_version`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26621",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26621",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26621.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26621.patch"
          },
          "closed_at": "2023-09-28T20:06:13Z",
          "created_at": "2022-12-01T17:26:32Z",
          "updated_at": "2023-09-28T20:06:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-08T03:51:50Z",
      "updated_at": "2023-07-08T03:51:50Z",
      "source": {
        "issue": {
          "id": 1299238264,
          "node_id": "PR_kwDOABII5847Ho23",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25572/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25572",
          "number": 25572,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Introduce EvictionManager and use it for the inbound eviction logic",
          "body": "This PR splits off the next couple commits from #25268 that introduce the `EvictionManager` and use it for  the inbound eviction logic.\r\n\r\nOne instance of the `EvictionManager` is created at start up and passed as a reference to the connection and peer managers. The connection and peer managers report all eviction relevant information (for inbound connections) to the eviction manager who ultimately suggests nodes to evict as the result of `EvictionManager::SelectNodeToEvict`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 11,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25572",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25572",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25572.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25572.patch"
          },
          "closed_at": "2023-09-28T20:06:18Z",
          "created_at": "2022-07-08T16:39:49Z",
          "updated_at": "2023-09-28T20:06:18Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-08T04:05:40Z",
      "updated_at": "2023-07-08T04:05:40Z",
      "source": {
        "issue": {
          "id": 1258121997,
          "node_id": "PR_kwDOABII5844-S2D",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25268/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25268",
          "number": 25268,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Introduce EvictionManager",
          "body": "At the moment, the eviction logic is mangled across two different components (`CConnman`, `PeerManager`), so we can't really test it in isolation. This is not completely true for the inbound eviction logic as it exists as static functions in `net.{h.cpp}` for which tests already exist. However, the outbound eviction logic is not covered by any fuzz tests and is only testable by spinning up both a connman and peerman.\r\n\r\nThis PR splits out the eviction logic into its own component `EvictionManager`. In addition to isolating the eviction logic, we get rid of several layer violations (e.g. `CConnman::ForEachNode/ForNode` calls, `CNode::m_last_block_time`, etc.) between `net` and `net processing`.\r\n\r\nOne instance of the `EvictionManager` is created at start up and passed as a reference to the connection and peer managers. The connection and peer managers report all eviction relevant information to the eviction manager who ultimately suggests nodes to evict as the result of `EvictionManager::SelectInboundNodeToEvict` and `EvictionManager::SelectOutboundNodesToEvict`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25268",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25268",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25268.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25268.patch"
          },
          "closed_at": "2023-09-28T20:06:22Z",
          "created_at": "2022-06-02T12:34:15Z",
          "updated_at": "2023-09-28T20:06:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1520679325,
      "node_id": "PRR_kwDOABII585ao7md",
      "url": null,
      "actor": null,
      "commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#pullrequestreview-1520679325",
      "submitted_at": "2023-07-08T09:38:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
    },
    {
      "event": "labeled",
      "id": 9845427791,
      "node_id": "LE_lADOABII585q5aJSzwAAAAJK1U5P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9845427791",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-18T04:54:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-19T01:36:49Z",
      "updated_at": "2023-07-19T01:36:49Z",
      "source": {
        "issue": {
          "id": 1676602375,
          "node_id": "PR_kwDOABII585OwvrE",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27499",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27499/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27499/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27499/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27499",
          "number": 27499,
          "state": "closed",
          "state_reason": null,
          "title": "net processing, refactor: Decouple PeerManager from gArgs",
          "body": "This PR decouples `PeerManager` from our global args manager by introducing `PeerManager::Options`.",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27499",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27499",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27499.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27499.patch"
          },
          "closed_at": "2023-07-25T09:42:33Z",
          "created_at": "2023-04-20T12:13:36Z",
          "updated_at": "2023-07-25T15:03:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1544111927,
      "node_id": "PRR_kwDOABII585cCUc3",
      "url": null,
      "actor": null,
      "commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#pullrequestreview-1544111927",
      "submitted_at": "2023-07-24T19:21:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
    },
    {
      "event": "labeled",
      "id": 9910180230,
      "node_id": "LE_lADOABII585q5aJSzwAAAAJOsVmG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9910180230",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T10:54:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9910970392,
      "node_id": "HRFPE_lADOABII585q5aJSzwAAAAJOvWgY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9910970392",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T12:19:03Z"
    },
    {
      "event": "ready_for_review",
      "id": 9910983351,
      "node_id": "RFRE_lADOABII585q5aJSzwAAAAJOvZq3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9910983351",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T12:20:25Z"
    },
    {
      "event": "commented",
      "id": 1649733407,
      "node_id": "IC_kwDOABII585iVO8f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1649733407",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T12:20:44Z",
      "updated_at": "2023-07-25T12:20:44Z",
      "author_association": "MEMBER",
      "body": "Rebased and un-drafted, ready for review!",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#issuecomment-1649733407",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9911027522,
      "node_id": "HRFPE_lADOABII585q5aJSzwAAAAJOvkdC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9911027522",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T12:25:00Z"
    },
    {
      "event": "unlabeled",
      "id": 9911587590,
      "node_id": "UNLE_lADOABII585q5aJSzwAAAAJOxtMG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9911587590",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T13:12:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9912365746,
      "node_id": "UNLE_lADOABII585q5aJSzwAAAAJO0rKy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9912365746",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-25T14:08:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1545352861,
      "node_id": "PRR_kwDOABII585cHDad",
      "url": null,
      "actor": null,
      "commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#pullrequestreview-1545352861",
      "submitted_at": "2023-07-28T09:48:03Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-30T14:42:19Z",
      "updated_at": "2023-07-30T14:42:19Z",
      "source": {
        "issue": {
          "id": 1678541218,
          "node_id": "PR_kwDOABII585O3QRm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27509/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
          "number": 27509,
          "state": "open",
          "state_reason": null,
          "title": "Relay own transactions only via short-lived Tor or I2P connections",
          "body": "To improve privacy, relay locally submitted transactions (from the wallet or via RPC) to the P2P network only via Tor or I2P short-lived connections.\r\n\r\n* Introduce a new connection type for relaying sensitive data (our own transactions) with the following properties:\r\n  * started whenever there are local unbroadcast transactions to be sent\r\n  * only opened to Tor or I2P peers\r\n  * opened regardless of max connections limits\r\n  * after handshake is completed one local transaction is pushed to the peer and the connection is closed\r\n  * ignore all incoming messages after handshake is completed\r\n\r\n* Relay locally submitted transactions (from the wallet or via RPC) using this new mechanism, to a few Tor or I2P peers.\r\n\r\n* Hide those transactions from `GETDATA` and `MEMPOOL` requests, as if we don't have them.\r\n\r\n* Once we get an `INV` from somebody, request the transaction with `GETDATA`, as if we didn't have it before.\r\n\r\n* After we receive the full transaction as a `TX` message, in reply to our `GETDATA` request, only then consider the transaction has propagated through the network and remove it from the unbroadcast list.\r\n\r\n* `INV` it to others as a result of the `TX` message we get, like what we do with transactions that are not ours.\r\n\r\nThe messages exchange should look like this:\r\n\r\n```\r\ntx-sender >--- connect -------> tx-recipient\r\ntx-sender >--- VERSION -------> tx-recipient\r\ntx-sender <--- VERSION -------< tx-recipient\r\ntx-sender <--- WTXIDRELAY ----< tx-recipient (maybe) \r\ntx-sender <--- SENDADDRV2 ----< tx-recipient (maybe) \r\ntx-sender <--- SENDTXRCNCL ---< tx-recipient (maybe) \r\ntx-sender <--- VERACK --------< tx-recipient\r\ntx-sender >--- VERACK --------> tx-recipient\r\ntx-sender >--- TX ------------> tx-recipient\r\ntx-sender >--- PING ----------> tx-recipient\r\ntx-sender <--- PONG ----------< tx-recipient\r\ntx-sender disconnects\r\n```\r\n\r\nWhenever a new local transaction is received (from the wallet or RPC), the node will send it to 5 (`SENSITIVE_RELAY_NUM_BROADCAST_PER_TX`) recipients right away. If after 10-15 mins we still have not heard anything about the transaction from the network, then it will be sent to 5 more peers (see `PeerManagerImpl::ReattemptInitialBroadcast()`).\r\n\r\nA few considerations:\r\n* The short-lived sensitive relay connections are very cheap and fast wrt network traffic. It is expected that some of those peers will blackhole the transaction. Just one honest/proper peer is enough for successful propagation.\r\n* The peers that receive the transaction could deduce that this is initial transaction broadcast from the transaction originator. This is ok, they can't identify the sender.\r\n\r\nTODO:\r\n* [x] Disable if `-connect` is used or Tor and I2P are not reachable.\r\n* [x] Use I2P transient connections even if listening on I2P.\r\n* [x] Do something with the user-agent string (could reveal identity if it has been personalized) and make sure no identifying information in the `VERSION` message. Done: took the [suggestion below](https://github.com/bitcoin/bitcoin/pull/27509#issuecomment-1517896418).\r\n* [x] Improve the condition when we consider the transaction seen by the network: right now a single INV from somebody suffices (this is still an improvement over `master` which is ok right after pushing the tx to a peer). We could wait for more than one INV, from peers that we have selected (outbound) and that are specifically not the ones we broadcasted to (via short-lived connection). Edit: One `INV` should be enough because after that we broadcast the transaction to everybody we are connected to (like if it is not ours).\r\n* [ ] Idea: start with one connection per transaction (not 5 as it is now), optimistically assuming it will be sufficient. (numbers are examples) After 1 minute, if still not received from the network, try 2 connections, after a few minutes try more. If still unsuccessful after 10 minutes, then fall back to the old mechanism.\r\n\r\nThis is supposed to address:\r\nhttps://github.com/bitcoin/bitcoin/issues/3828\r\nhttps://github.com/bitcoin/bitcoin/issues/14692\r\nhttps://github.com/bitcoin/bitcoin/issues/19042\r\nhttps://github.com/bitcoin/bitcoin/issues/24557\r\nhttps://github.com/bitcoin/bitcoin/issues/25450\r\n",
          "user": {
            "login": "vasild",
            "id": 266751,
            "node_id": "MDQ6VXNlcjI2Njc1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vasild",
            "html_url": "https://github.com/vasild",
            "followers_url": "https://api.github.com/users/vasild/followers",
            "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
            "organizations_url": "https://api.github.com/users/vasild/orgs",
            "repos_url": "https://api.github.com/users/vasild/repos",
            "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/vasild/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 59,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27509",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27509",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27509.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27509.patch"
          },
          "created_at": "2023-04-21T13:39:19Z",
          "updated_at": "2023-10-02T10:28:17Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9960839540,
      "node_id": "HRFPE_lADOABII585q5aJSzwAAAAJRtll0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9960839540",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-31T08:28:07Z"
    },
    {
      "event": "labeled",
      "id": 10199491293,
      "node_id": "LE_lADOABII585q5aJSzwAAAAJf7-Ld",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10199491293",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-26T11:48:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10333815880,
      "node_id": "HRFPE_lADOABII585q5aJSzwAAAAJn8YRI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10333815880",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T12:52:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10335772966,
      "node_id": "HRFPE_lADOABII585q5aJSzwAAAAJoD2Em",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10335772966",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T15:22:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10344914168,
      "node_id": "HRFPE_lADOABII585q5aJSzwAAAAJomtz4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10344914168",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T10:26:54Z"
    },
    {
      "event": "unlabeled",
      "id": 10345867455,
      "node_id": "UNLE_lADOABII585q5aJSzwAAAAJoqWi_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10345867455",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T11:55:07Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T12:50:44Z",
      "updated_at": "2023-09-12T12:50:44Z",
      "source": {
        "issue": {
          "id": 1320160464,
          "node_id": "PR_kwDOABII5848NcnN",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25725",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25725/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25725/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25725/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25725",
          "number": 25725,
          "state": "open",
          "state_reason": null,
          "title": "consensus: Remove mainnet checkpoints",
          "body": "Once we have logic at the p2p layer to avoid permanently storing headers unless they lead to a sufficiently high work chain, we no longer need to use checkpoints to protect against spam from low-difficulty headers.\r\n\r\nWaiting for #28043.",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 192202000,
              "node_id": "MDU6TGFiZWwxOTIyMDIwMDA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus",
              "name": "Consensus",
              "color": "009800",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/16",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/16",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/16/labels",
            "id": 710147,
            "node_id": "MDk6TWlsZXN0b25lNzEwMTQ3",
            "number": 16,
            "state": "open",
            "title": "Future",
            "description": "Undefined future version",
            "creator": {
              "login": "laanwj",
              "id": 126646,
              "node_id": "MDQ6VXNlcjEyNjY0Ng==",
              "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/laanwj",
              "html_url": "https://github.com/laanwj",
              "followers_url": "https://api.github.com/users/laanwj/followers",
              "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
              "organizations_url": "https://api.github.com/users/laanwj/orgs",
              "repos_url": "https://api.github.com/users/laanwj/repos",
              "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/laanwj/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 3,
            "closed_issues": 11,
            "created_at": "2014-07-04T06:53:52Z",
            "updated_at": "2022-09-13T14:38:09Z"
          },
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25725",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25725",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25725.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25725.patch"
          },
          "created_at": "2022-07-27T21:56:19Z",
          "updated_at": "2023-09-27T01:06:13Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T18:59:42Z",
      "updated_at": "2023-10-02T18:59:42Z",
      "source": {
        "issue": {
          "id": 1921960561,
          "node_id": "PR_kwDOABII585brNkC",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28558",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28558/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28558/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28558/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28558",
          "number": 28558,
          "state": "closed",
          "state_reason": null,
          "title": "Make PeerManager own a FastRandomContext",
          "body": "This lets us avoid some non-determinism in tests (also see #28537).",
          "user": {
            "login": "dergoegge",
            "id": 8077169,
            "node_id": "MDQ6VXNlcjgwNzcxNjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dergoegge",
            "html_url": "https://github.com/dergoegge",
            "followers_url": "https://api.github.com/users/dergoegge/followers",
            "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
            "organizations_url": "https://api.github.com/users/dergoegge/orgs",
            "repos_url": "https://api.github.com/users/dergoegge/repos",
            "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dergoegge/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28558",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28558",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28558.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28558.patch"
          },
          "closed_at": "2023-10-05T13:06:48Z",
          "created_at": "2023-10-02T13:48:47Z",
          "updated_at": "2023-10-05T15:58:53Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 10564664008,
      "node_id": "LE_lADOABII585q5aJSzwAAAAJ1s_rI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10564664008",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-05T14:27:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY1MmVjYWNlYTZjYmNhYzI0NTNjZTRlOTk1NjI4MmI0NWNkNzllMTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/652ecacea6cbcac2453ce4e9956282b45cd79e15",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/652ecacea6cbcac2453ce4e9956282b45cd79e15",
      "tree": {
        "sha": "c11d6fa8425f4128847a9c85f977a3536fa98592",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c11d6fa8425f4128847a9c85f977a3536fa98592"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54bdb6e0745934ad9ae6c77628f2382a83b9a1f0",
          "sha": "54bdb6e0745934ad9ae6c77628f2382a83b9a1f0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/54bdb6e0745934ad9ae6c77628f2382a83b9a1f0"
        }
      ],
      "message": "Allow mocking CheckProofOfWork",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-10-06T09:22:21Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-07-07T10:22:15Z"
      },
      "sha": "652ecacea6cbcac2453ce4e9956282b45cd79e15"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA1N2JlOTg1Mjc4ZGM3MjNlMzVmYzc0NjgzMGUyYmEwNzBmNDFhNzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/057be985278dc723e35fc746830e2ba070f41a79",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/057be985278dc723e35fc746830e2ba070f41a79",
      "tree": {
        "sha": "d2c5c257c05bd187dc8f0418fb6d746f384dca49",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2c5c257c05bd187dc8f0418fb6d746f384dca49"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/652ecacea6cbcac2453ce4e9956282b45cd79e15",
          "sha": "652ecacea6cbcac2453ce4e9956282b45cd79e15",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/652ecacea6cbcac2453ce4e9956282b45cd79e15"
        }
      ],
      "message": "[net processing] Make MAX_HEADERS_RESULT a PeerManager option",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-10-06T09:23:28Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-07-07T08:52:22Z"
      },
      "sha": "057be985278dc723e35fc746830e2ba070f41a79"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkyNGU2ZWEzODdmOGVjYzUwYjgyYmY4MTE3ODUyMGZmY2QyYjVjOGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "tree": {
        "sha": "086a725e6500ef6e63dfd44cc64ad5eb7afd409c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/086a725e6500ef6e63dfd44cc64ad5eb7afd409c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/057be985278dc723e35fc746830e2ba070f41a79",
          "sha": "057be985278dc723e35fc746830e2ba070f41a79",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/057be985278dc723e35fc746830e2ba070f41a79"
        }
      ],
      "message": "[fuzz] Test headers sync through the p2p interface",
      "committer": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-10-06T09:23:29Z"
      },
      "author": {
        "name": "dergoegge",
        "email": "n.goeggi@gmail.com",
        "date": "2023-07-06T14:55:17Z"
      },
      "sha": "924e6ea387f8ecc50b82bf81178520ffcd2b5c8c"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10572876657,
      "node_id": "HRFPE_lADOABII585q5aJSzwAAAAJ2MUtx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10572876657",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-06T09:33:38Z"
    },
    {
      "event": "unlabeled",
      "id": 10584771394,
      "node_id": "UNLE_lADOABII585q5aJSzwAAAAJ25stC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10584771394",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-08T17:26:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "milestoned",
      "id": 10777073046,
      "node_id": "MIE_lADOABII585q5aJSzwAAAAKCXRWW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10777073046",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-26T09:15:23Z",
      "milestone": {
        "title": "27.0"
      }
    },
    {
      "event": "labeled",
      "id": 10989145968,
      "node_id": "LE_lADOABII585q5aJSzwAAAAKPAQ9w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10989145968",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-17T03:28:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1816123363,
      "node_id": "IC_kwDOABII585sP9fj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1816123363",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-17T10:34:26Z",
      "updated_at": "2023-11-17T10:34:26Z",
      "author_association": "MEMBER",
      "body": "```\r\ntest/fuzz/p2p_headers_sync.cpp:187:96:   required from here\r\n./primitives/transaction.h:327:42: error: ‘class CVectorWriter’ has no member named ‘GetParams’\r\n  327 |         SerializeTransaction(*this, s, s.GetParams());\r\n      |                                        ~~^~~~~~~~~\r\nmake[2]: *** [Makefile:17531: test/fuzz/fuzz-p2p_headers_sync.o] Error 1\r\nmake[2]: Leaving directory '/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src'\r\nmake[1]: *** [Makefile:20246: install-recursive] Error 1\r\nmake[1]: Leaving directory '/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src'\r\nmake: *** [Makefile:811: install-recursive] Error 1\r\n\r\nExit status: 2������������������������������������������������������������������������������������������������������������������������",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#issuecomment-1816123363",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28043"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257196740",
      "pull_request_review_id": 1520679325,
      "id": 1257196740,
      "node_id": "PRRC_kwDOABII585K70zE",
      "diff_hunk": "@@ -43,9 +46,19 @@ struct CNodeStateStats {\n class PeerManager : public CValidationInterface, public NetEventsInterface\n {\n public:\n+    struct Options {\n+        BanMan* banman{nullptr};\n+        bool ignore_incoming_txs{false};\n+        bool reconcile_txs{false};\n+        uint32_t max_orphan_txs{DEFAULT_MAX_ORPHAN_TRANSACTIONS};\n+        size_t max_extra_txs{DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN};\n+        bool capture_messages{false};\n+        uint32_t max_headers_result{MAX_HEADERS_RESULTS};",
      "path": "src/net_processing.h",
      "position": 14,
      "original_position": 21,
      "commit_id": "924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "original_commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Looks like this is the only option that is required by the fuzz target, so maybe remove the others for now to hopefully reduce the number of conflicting pulls and remove the dependency on the other pull?",
      "created_at": "2023-07-08T09:38:11Z",
      "updated_at": "2023-07-08T09:38:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1257196740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1257196740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258057941",
      "pull_request_review_id": 1521779648,
      "id": 1258057941,
      "node_id": "PRRC_kwDOABII585K_HDV",
      "diff_hunk": "@@ -43,9 +46,19 @@ struct CNodeStateStats {\n class PeerManager : public CValidationInterface, public NetEventsInterface\n {\n public:\n+    struct Options {\n+        BanMan* banman{nullptr};\n+        bool ignore_incoming_txs{false};\n+        bool reconcile_txs{false};\n+        uint32_t max_orphan_txs{DEFAULT_MAX_ORPHAN_TRANSACTIONS};\n+        size_t max_extra_txs{DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN};\n+        bool capture_messages{false};\n+        uint32_t max_headers_result{MAX_HEADERS_RESULTS};",
      "path": "src/net_processing.h",
      "position": 14,
      "original_position": 21,
      "commit_id": "924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "original_commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "in_reply_to_id": 1257196740,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "3 of the PRs are mine (I don't care about rebasing) and the package relay stuff is gonna conflict either way, so I'd prefer keeping it as is.",
      "created_at": "2023-07-10T10:37:59Z",
      "updated_at": "2023-07-10T10:38:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1258057941",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258057941"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272659160",
      "pull_request_review_id": 1544111927,
      "id": 1272659160,
      "node_id": "PRRC_kwDOABII585L2zzY",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     const std::vector<const char*>& extra_args = {})\n+        : TestingSetup(chain_type, extra_args)\n+    {\n+        PeerManager::Options peerman_opts;\n+        peerman_opts.banman = m_node.banman.get();\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           *m_node.chainman, *m_node.mempool,\n+                                           peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    (void)connman.ReceiveMsgFrom(connection, msg);\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // Doesn't need to be a valid block but it needs to have one transaction\n+    // for compact block construction.\n+    CBlock block{header};\n+    block.vtx.push_back(MakeTransactionRef(CMutableTransaction{}));\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    // Reduce proof-of-work check to one bit.\n+    g_check_pow_mock = [](uint256 hash, unsigned int, const Consensus::Params&) {\n+        return (hash.data()[31] & 0x80) == 0;\n+    };",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 127,
      "original_position": 127,
      "commit_id": "924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "original_commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "in_reply_to_id": null,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why not disabling it completely instead of mocking it?",
      "created_at": "2023-07-24T19:21:25Z",
      "updated_at": "2023-07-24T19:21:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1272659160",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1272659160"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": 124,
      "original_start_line": 124,
      "start_side": "RIGHT",
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1273450317",
      "pull_request_review_id": 1545327630,
      "id": 1273450317,
      "node_id": "PRRC_kwDOABII585L509N",
      "diff_hunk": "@@ -0,0 +1,198 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     const std::vector<const char*>& extra_args = {})\n+        : TestingSetup(chain_type, extra_args)\n+    {\n+        PeerManager::Options peerman_opts;\n+        peerman_opts.banman = m_node.banman.get();\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           *m_node.chainman, *m_node.mempool,\n+                                           peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    (void)connman.ReceiveMsgFrom(connection, msg);\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // Doesn't need to be a valid block but it needs to have one transaction\n+    // for compact block construction.\n+    CBlock block{header};\n+    block.vtx.push_back(MakeTransactionRef(CMutableTransaction{}));\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    // Reduce proof-of-work check to one bit.\n+    g_check_pow_mock = [](uint256 hash, unsigned int, const Consensus::Params&) {\n+        return (hash.data()[31] & 0x80) == 0;\n+    };",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": 127,
      "original_position": 127,
      "commit_id": "924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "original_commit_id": "4407469bd697d50beb9afe4bb946d55952c1893d",
      "in_reply_to_id": 1272659160,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My thinking was that this should result in more coverage because we'll also cover paths for invalid PoW.",
      "created_at": "2023-07-25T12:23:12Z",
      "updated_at": "2023-07-25T12:23:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1273450317",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1273450317"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": 124,
      "original_start_line": 124,
      "start_side": "RIGHT",
      "line": 127,
      "original_line": 127,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1273466446",
      "pull_request_review_id": 1545352861,
      "id": 1273466446,
      "node_id": "PRRC_kwDOABII585L545O",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     const std::vector<const char*>& extra_args = {})\n+        : TestingSetup(chain_type, extra_args)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    (void)connman.ReceiveMsgFrom(connection, msg);\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // Doesn't need to be a valid block but it needs to have one transaction\n+    // for compact block construction.\n+    CBlock block{header};\n+    block.vtx.push_back(MakeTransactionRef(CMutableTransaction{}));\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    // Reduce proof-of-work check to one bit.\n+    g_check_pow_mock = [](uint256 hash, unsigned int, const Consensus::Params&) {\n+        return (hash.data()[31] & 0x80) == 0;\n+    };\n+\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {\"-checkpoints=0\"});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);\n+\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        std::vector<std::function<void()>> actions = {",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": null,
      "original_position": 159,
      "commit_id": "924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "original_commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "How is this different from CallOneOf?",
      "created_at": "2023-07-25T12:35:21Z",
      "updated_at": "2023-07-28T09:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1273466446",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1273466446"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278551101",
      "pull_request_review_id": 1553624235,
      "id": 1278551101,
      "node_id": "PRRC_kwDOABII585MNSQ9",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     const std::vector<const char*>& extra_args = {})\n+        : TestingSetup(chain_type, extra_args)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    (void)connman.ReceiveMsgFrom(connection, msg);\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // Doesn't need to be a valid block but it needs to have one transaction\n+    // for compact block construction.\n+    CBlock block{header};\n+    block.vtx.push_back(MakeTransactionRef(CMutableTransaction{}));\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    // Reduce proof-of-work check to one bit.\n+    g_check_pow_mock = [](uint256 hash, unsigned int, const Consensus::Params&) {\n+        return (hash.data()[31] & 0x80) == 0;\n+    };\n+\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {\"-checkpoints=0\"});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);\n+\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        std::vector<std::function<void()>> actions = {",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": null,
      "original_position": 159,
      "commit_id": "924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "original_commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "in_reply_to_id": 1273466446,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it's not, iirc I had some trouble with thread safety annotations but I'll give `CallOneOf` another try",
      "created_at": "2023-07-30T11:12:47Z",
      "updated_at": "2023-07-30T11:12:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1278551101",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278551101"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278891247",
      "pull_request_review_id": 1554119998,
      "id": 1278891247,
      "node_id": "PRRC_kwDOABII585MOlTv",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     const std::vector<const char*>& extra_args = {})\n+        : TestingSetup(chain_type, extra_args)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    (void)connman.ReceiveMsgFrom(connection, msg);\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // Doesn't need to be a valid block but it needs to have one transaction\n+    // for compact block construction.\n+    CBlock block{header};\n+    block.vtx.push_back(MakeTransactionRef(CMutableTransaction{}));\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    // Reduce proof-of-work check to one bit.\n+    g_check_pow_mock = [](uint256 hash, unsigned int, const Consensus::Params&) {\n+        return (hash.data()[31] & 0x80) == 0;\n+    };\n+\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {\"-checkpoints=0\"});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);\n+\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        std::vector<std::function<void()>> actions = {",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": null,
      "original_position": 159,
      "commit_id": "924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "original_commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "in_reply_to_id": 1273466446,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't think you can use annotations one way or the other. As soon as you assign to `std::function<void()>`, the annotations are dropped, so you might as well not have them in the first place.\r\n\r\nIf you want them, and use `CallOneOf`, you can use the same trick to wrap each annotated lambda into a `std::function<void()>{lambda_bla}` temporary to achieve the same result of dropping any annotations.",
      "created_at": "2023-07-31T07:29:25Z",
      "updated_at": "2023-07-31T07:29:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1278891247",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278891247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278954263",
      "pull_request_review_id": 1554221712,
      "id": 1278954263,
      "node_id": "PRRC_kwDOABII585MO0sX",
      "diff_hunk": "@@ -0,0 +1,197 @@\n+#include <blockencodings.h>\n+#include <net.h>\n+#include <net_processing.h>\n+#include <netmessagemaker.h>\n+#include <node/peerman_args.h>\n+#include <pow.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/net.h>\n+#include <test/util/script.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+\n+namespace {\n+constexpr uint32_t FUZZ_MAX_HEADERS_RESULTS{16};\n+\n+class HeadersSyncSetup : public TestingSetup\n+{\n+    std::vector<CNode*> m_connections;\n+\n+public:\n+    HeadersSyncSetup(const ChainType chain_type = ChainType::MAIN,\n+                     const std::vector<const char*>& extra_args = {})\n+        : TestingSetup(chain_type, extra_args)\n+    {\n+        PeerManager::Options peerman_opts;\n+        node::ApplyArgsManOptions(*m_node.args, peerman_opts);\n+        peerman_opts.max_headers_result = FUZZ_MAX_HEADERS_RESULTS;\n+        m_node.peerman = PeerManager::make(*m_node.connman, *m_node.addrman,\n+                                           m_node.banman.get(), *m_node.chainman,\n+                                           *m_node.mempool, peerman_opts);\n+\n+        CConnman::Options options;\n+        options.m_msgproc = m_node.peerman.get();\n+        m_node.connman->Init(options);\n+    }\n+\n+    void ResetAndInitialize() EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+    void SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+        EXCLUSIVE_LOCKS_REQUIRED(NetEventsInterface::g_msgproc_mutex);\n+};\n+\n+void HeadersSyncSetup::ResetAndInitialize()\n+{\n+    m_connections.clear();\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    connman.StopNodes();\n+\n+    NodeId id{0};\n+    std::vector<ConnectionType> conn_types = {};\n+    conn_types.resize(1, ConnectionType::OUTBOUND_FULL_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::BLOCK_RELAY);\n+    conn_types.resize(conn_types.size() + 1, ConnectionType::INBOUND);\n+\n+    for (auto conn_type : conn_types) {\n+        CAddress addr{};\n+        m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false));\n+        CNode& p2p_node = *m_connections.back();\n+\n+        connman.Handshake(\n+            /*node=*/p2p_node,\n+            /*successfully_connected=*/true,\n+            /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*local_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\n+            /*version=*/PROTOCOL_VERSION,\n+            /*relay_txs=*/true);\n+\n+        connman.AddTestNode(p2p_node);\n+    }\n+}\n+\n+void HeadersSyncSetup::SendMessage(FuzzedDataProvider& fuzzed_data_provider, CSerializedNetMsg&& msg)\n+{\n+    auto& connman = static_cast<ConnmanTestMsg&>(*m_node.connman);\n+    CNode& connection = *PickValue(fuzzed_data_provider, m_connections);\n+\n+    (void)connman.ReceiveMsgFrom(connection, msg);\n+    connection.fPauseSend = false;\n+    try {\n+        connman.ProcessMessagesOnce(connection);\n+    } catch (const std::ios_base::failure&) {\n+    }\n+    m_node.peerman->SendMessages(&connection);\n+}\n+\n+CBlockHeader ConsumeHeader(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    CBlockHeader header;\n+    header.nNonce = 0;\n+    // Either use the previous difficulty or let the fuzzer choose\n+    header.nBits = fuzzed_data_provider.ConsumeBool() ?\n+                       prev_nbits :\n+                       fuzzed_data_provider.ConsumeIntegralInRange<uint32_t>(0x17058EBE, 0x1D00FFFF);\n+    header.nTime = fuzzed_data_provider.ConsumeIntegral<uint32_t>();\n+    header.hashPrevBlock = prev_hash;\n+    return header;\n+}\n+\n+CBlock ConsumeBlock(FuzzedDataProvider& fuzzed_data_provider, const uint256& prev_hash, uint32_t prev_nbits)\n+{\n+    auto header = ConsumeHeader(fuzzed_data_provider, prev_hash, prev_nbits);\n+    // Doesn't need to be a valid block but it needs to have one transaction\n+    // for compact block construction.\n+    CBlock block{header};\n+    block.vtx.push_back(MakeTransactionRef(CMutableTransaction{}));\n+    return block;\n+}\n+\n+void FinalizeHeader(CBlockHeader& header)\n+{\n+    while (!CheckProofOfWork(header.GetHash(), header.nBits, Params().GetConsensus())) {\n+        ++(header.nNonce);\n+    }\n+}\n+\n+// Global setup works for this test as state modification (specifically in the\n+// block index) would indicate a bug.\n+HeadersSyncSetup* g_testing_setup;\n+\n+void initialize()\n+{\n+    // Reduce proof-of-work check to one bit.\n+    g_check_pow_mock = [](uint256 hash, unsigned int, const Consensus::Params&) {\n+        return (hash.data()[31] & 0x80) == 0;\n+    };\n+\n+    static auto setup = MakeNoLogFileContext<HeadersSyncSetup>(ChainType::MAIN, {\"-checkpoints=0\"});\n+    g_testing_setup = setup.get();\n+}\n+} // namespace\n+\n+FUZZ_TARGET(p2p_headers_sync, .init = initialize)\n+{\n+    ChainstateManager& chainman = *g_testing_setup->m_node.chainman;\n+\n+    LOCK(NetEventsInterface::g_msgproc_mutex);\n+\n+    g_testing_setup->ResetAndInitialize();\n+\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+\n+    CBlockHeader base{Params().GenesisBlock()};\n+    SetMockTime(Params().GenesisBlock().nTime);\n+\n+    size_t original_index_size{WITH_LOCK(cs_main, return chainman.m_blockman.m_block_index.size())};\n+\n+    LIMITED_WHILE(fuzzed_data_provider.remaining_bytes(), 100)\n+    {\n+        auto finalized_block = [&]() {\n+            auto prev = WITH_LOCK(cs_main,\n+                                  return PickValue(fuzzed_data_provider, chainman.m_blockman.m_block_index))\n+                            .second.GetBlockHeader();\n+            CBlock block = ConsumeBlock(fuzzed_data_provider, prev.GetHash(), prev.nBits);\n+            FinalizeHeader(block);\n+            return block;\n+        };\n+\n+        std::vector<std::function<void()>> actions = {",
      "path": "src/test/fuzz/p2p_headers_sync.cpp",
      "position": null,
      "original_position": 159,
      "commit_id": "924e6ea387f8ecc50b82bf81178520ffcd2b5c8c",
      "original_commit_id": "8a7feb65732742b2bd88263e751e9f9cdc21fdce",
      "in_reply_to_id": 1273466446,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "switched to `CallOneOf` and used `NO_THREAD_SAFETY_ANALYSIS`.",
      "created_at": "2023-07-31T08:27:46Z",
      "updated_at": "2023-07-31T08:27:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28043#discussion_r1278954263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1278954263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28043"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 159,
      "side": "RIGHT"
    }
  ]
}