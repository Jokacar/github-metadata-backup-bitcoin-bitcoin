{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30595",
    "id": 2005623544,
    "node_id": "PR_kwDOABII5853i2L4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30595",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30595.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30595.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30595/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30595/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/acca9ee21652d8cffac14926511c2d7a3e40043d",
    "number": 30595,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "kernel: Introduce initial C header API",
    "user": {
      "login": "TheCharlatan",
      "id": 8421793,
      "node_id": "MDQ6VXNlcjg0MjE3OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheCharlatan",
      "html_url": "https://github.com/TheCharlatan",
      "followers_url": "https://api.github.com/users/TheCharlatan/followers",
      "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
      "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
      "repos_url": "https://api.github.com/users/TheCharlatan/repos",
      "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is a first attempt at introducing a C header for the libbitcoinkernel library that may be used by external applications for interfacing with Bitcoin Core's validation logic. It currently is limited to operations on blocks. This is a conscious choice, since it already offers a lot of powerful functionality, but sits just on the cusp of still being reviewable scope-wise while giving some pointers on how the rest of the API could look like.\r\n\r\nThe current design was informed by the development of some small tools using the C header:\r\n\r\n* A re-implementation (part of this pull request) of [bitcoin-chainstate](https://github.com/bitcoin/bitcoin/blob/master/src/bitcoin-chainstate.cpp).\r\n* A re-implementation of the python [block linearize](https://github.com/bitcoin/bitcoin/tree/master/contrib/linearize) scripts: https://github.com/TheCharlatan/bitcoin/tree/kernelLinearize \r\n* A silent payment scanner: https://github.com/josibake/silent-payments-scanner\r\n* An electrs index builder: https://github.com/josibake/electrs/commits/electrs-kernel-integration\r\n\r\nNext to the C++ header also made available in this pull request, rust bindings are available here:  https://github.com/TheCharlatan/rust-bitcoinkernel. The rust bindings include unit and fuzz tests for the API.\r\n\r\nThe header currently exposes logic for enabling the following functionality:\r\n* Feature-parity with the now deprecated libbitcoin-consensus\r\n* Optimized sha256 implementations that were not available to previous users of libbitcoin-consensus thanks to a static kernel context\r\n* Full support for logging as well as control over categories and severity\r\n* Feature parity with the existing experimental bitcoin-chainstate\r\n* Traversing the block index as well and using block index entries for reading block and undo data.\r\n* Running the chainstate in memory\r\n* Reindexing (both full and chainstate-only)\r\n* Interrupting long-running functions\r\n\r\nThe pull request introduces a new kernel-only test binary that purely relies on the kernel C header and the C++ standard library. This is intentionally done to show its capabilities without relying on other code inside the project. This may be relaxed to include some of the existing utilities, or even be merged into the existing test suite.\r\n\r\n#### How can I review this PR?\r\n\r\nScrutinize the commit messages, run the tests, write your own little applications using the library, let your favorite code sanitizer loose on it, hook it up to your fuzzing infrastructure, profile the difference between the existing bitcoin-chainstate and the bitcoin-chainstate introduced here, be nitty on the documentation, police the C interface, opine on your own API design philosophy.\r\n\r\nTo get a feeling for the API, read through the tests, or one of the examples.\r\n\r\nPlease try to avoid nits for the tests, these can wait for later and easily be improved over time. Docs exhaustively explaining all the intricacies of the internal goings-on of the library can also be added later.\r\n\r\nTo configure this PR for making the shared library and the bitcoin-chainstate and test_kernel utilities available:\r\n```\r\ncmake -B build -DBUILD_KERNEL_LIB=ON -DBUILD_UTIL_CHAINSTATE=ON\r\n```\r\n\r\nOnce compiled the library is part of the build artifacts that can be installed with:\r\n```\r\ncmake --install build\r\n```\r\n\r\nPython headers might also be useful for testing. [ctypeslib2](https://pypi.org/project/ctypeslib2/)'s [clang2py](https://github.com/trolldbois/ctypeslib/blob/master/ctypeslib/clang2py.py) can be used to auto-generate bindings:\r\n```\r\nclang2py src/kernel/bitcoinkernel.h -l /path/to/bitcoin/src/.libs/libbitcoinkernel.so > test_wrapper.py\r\n```\r\n\r\n#### Why a C header (and not a C++ header)\r\n\r\n* Shipping a shared library with a C++ header is hard, because of name mangling.\r\n* Mature and well-supported tooling for integrating C exists for nearly every popular language.\r\n* C offers a reasonably stable ABI\r\n\r\nAlso see https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2285719575.\r\n\r\n#### What about versioning?\r\n\r\nThe header and library are still experimental and I would expect this to remain so for some time, so best not to worry about versioning yet.\r\n\r\n#### Potential future additions\r\n\r\nIn future, the C header could be expanded to support (some of these have been roughly implemented):\r\n\r\n* Handling transactions, block headers, coins cache, utxo set, meta data, and the mempool\r\n* Adapters for an abstract coins store\r\n* Adapters for an abstract block store\r\n* Allocators and buffers for more efficient memory usage\r\n* An \"[io-less](https://sans-io.readthedocs.io/how-to-sans-io.html)\" interface\r\n\r\n#### Current drawbacks\r\n\r\n* For external applications to read the block index of an existing Bitcoin Core node, Bitcoin Core needs to shut down first, since leveldb does not support reading across multiple processes. Other than migrating away from leveldb, there does not seem to be a solution for this problem.\r\n* The fatal error handling through the notifications is awkward.\r\n* Handling shared pointers in the interfaces is unfortunate. They make ownership and freeing of the resources fuzzy and poison the interfaces with additional types and complexity. However, they seem to be an artifact of the current code that interfaces with the validation engine. The validation engine itself does not seem to make extensive use of these shared pointers.\r\n* If multiple instances of the same type of objects are used, there is no mechanism for distinguishing the log messages produced by each of them.\r\n* The background leveldb compaction thread may not finish in time leading to a non-clean exit. There seems to be nothing we can do about this, outside of patching leveldb.",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      }
    ],
    "created_at": "2024-08-06T09:18:27Z",
    "updated_at": "2024-09-12T22:52:25Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "c7f56b8e0852fb81a4341d6c67bd4f7471e0b2bc",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "TheCharlatan:kernelApi",
      "ref": "kernelApi",
      "sha": "acca9ee21652d8cffac14926511c2d7a3e40043d",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 94456368,
        "node_id": "MDEwOlJlcG9zaXRvcnk5NDQ1NjM2OA==",
        "name": "bitcoin",
        "full_name": "TheCharlatan/bitcoin",
        "owner": {
          "login": "TheCharlatan",
          "id": 8421793,
          "node_id": "MDQ6VXNlcjg0MjE3OTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheCharlatan",
          "html_url": "https://github.com/TheCharlatan",
          "followers_url": "https://api.github.com/users/TheCharlatan/followers",
          "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
          "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
          "repos_url": "https://api.github.com/users/TheCharlatan/repos",
          "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/TheCharlatan/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/TheCharlatan/bitcoin",
        "archive_url": "https://api.github.com/repos/TheCharlatan/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/TheCharlatan/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/TheCharlatan/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/TheCharlatan/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/TheCharlatan/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/TheCharlatan/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/TheCharlatan/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/TheCharlatan/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/TheCharlatan/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/TheCharlatan/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/TheCharlatan/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/TheCharlatan/bitcoin/events",
        "forks_url": "https://api.github.com/repos/TheCharlatan/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/TheCharlatan/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/TheCharlatan/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/TheCharlatan/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/TheCharlatan/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/TheCharlatan/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/TheCharlatan/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/TheCharlatan/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/TheCharlatan/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/TheCharlatan/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/TheCharlatan/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/TheCharlatan/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/TheCharlatan/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:TheCharlatan/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/TheCharlatan/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/TheCharlatan/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/TheCharlatan/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/TheCharlatan/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/TheCharlatan/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/TheCharlatan/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/TheCharlatan/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/TheCharlatan/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/TheCharlatan/bitcoin/hooks",
        "svn_url": "https://github.com/TheCharlatan/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 247007,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-12T21:19:07Z",
        "created_at": "2017-06-15T16:03:35Z",
        "updated_at": "2024-09-06T10:47:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "cf0120ff024aa73a56f2975c832fda6aa8146dfa",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36157,
        "stargazers_count": 78357,
        "watchers_count": 78357,
        "size": 268336,
        "default_branch": "master",
        "open_issues_count": 666,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-09-12T18:52:19Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-09-12T22:20:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30595"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 4412,
    "deletions": 2,
    "changed_files": 14,
    "commits": 19,
    "review_comments": 7,
    "comments": 13
  },
  "events": [
    {
      "event": "commented",
      "id": 2270798867,
      "node_id": "IC_kwDOABII586HWaQT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2270798867",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T09:18:31Z",
      "updated_at": "2024-09-12T00:37:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30595).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [josibake](https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2325848908) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30814](https://github.com/bitcoin/bitcoin/pull/30814) (kernel: Create usable static kernel library by TheCharlatan)\n* [#30315](https://github.com/bitcoin/bitcoin/pull/30315) (Stratum v2 Transport by Sjors)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#29346](https://github.com/bitcoin/bitcoin/pull/29346) (Stratum v2 Noise Protocol by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2270798867",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "labeled",
      "id": 13775536223,
      "node_id": "LE_lADOABII586SDdapzwAAAAM1FgBf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13775536223",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T09:18:33Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13776622682,
      "node_id": "HRFPE_lADOABII586SDdapzwAAAAM1JpRa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13776622682",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T10:42:04Z"
    },
    {
      "event": "labeled",
      "id": 13776623455,
      "node_id": "LE_lADOABII586SDdapzwAAAAM1Jpdf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13776623455",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T10:42:07Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2270967742,
      "node_id": "IC_kwDOABII586HXDe-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2270967742",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T10:42:08Z",
      "updated_at": "2024-08-06T10:42:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/28396412371</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2270967742",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13776932895,
      "node_id": "HRFPE_lADOABII586SDdapzwAAAAM1K1Af",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13776932895",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T11:07:12Z"
    },
    {
      "event": "unlabeled",
      "id": 13778638981,
      "node_id": "UNLE_lADOABII586SDdapzwAAAAM1RViF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13778638981",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T13:18:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2274440199,
      "node_id": "IC_kwDOABII586HkTQH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2274440199",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T22:14:51Z",
      "updated_at": "2024-08-07T22:14:51Z",
      "author_association": "MEMBER",
      "body": "Very cool. Can't wait to dig in when I have some free time.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2274440199",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "commented",
      "id": 2284621389,
      "node_id": "IC_kwDOABII586ILI5N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2284621389",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-12T18:05:53Z",
      "updated_at": "2024-08-12T18:05:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "This seems to offer a lot of nice features, but can you explain the tradeoffs of wrapping the C++ interface in C instead of using C++ from rust directly? It seems like having a C middle layer introduces a lot of boilerplate, and I'm wondering if it is really necessary. For example it seems like there is a rust cxx crate (https://docs.rs/cxx/latest/cxx/, https://chatgpt.com/share/dd4dde59-66d6-4486-88a6-2f42144be056) that lets you call C++ directly from Rust and avoid the need for C boilerplate. It looks like https://cppyy.readthedocs.io/en/latest/index.html is an even more full-featured way of calling c++ from python.\r\n\r\nAnother drawback of going through a C API seems like not just increased boilerplate, but reduced safety. For example, the implementation is using reinterpret_cast everywhere and it seems like the exposed C functions use a `kernel_ErrorCode` enum type with the union of every possible error type, so callers don't have a way to know which functions can return which errors.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2284621389",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "commented",
      "id": 2285719575,
      "node_id": "IC_kwDOABII586IPVAX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2285719575",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-13T08:54:20Z",
      "updated_at": "2024-09-03T12:03:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you for the questions and kicking this discussion off @ryanofsky! I'll update the PR description with a better motiviation re. C vs C++ header, but will also try to answer your questions here.\r\n\r\n> This seems to offer a lot of nice features, but can you explain the tradeoffs of wrapping the C++ interface in C instead of using C++ from rust directly? It seems like having a C middle layer introduces a lot of boilerplate, and I'm wondering if it is really necessary. For example it seems like there is a rust cxx crate (https://docs.rs/cxx/latest/cxx/, https://chatgpt.com/share/dd4dde59-66d6-4486-88a6-2f42144be056) that lets you call C++ directly from Rust and avoid the need for C boilerplate. It looks like https://cppyy.readthedocs.io/en/latest/index.html is an even more full-featured way of calling c++ from python.\r\n\r\nIt is true that the interoperability between C++ and Rust has become very good. In fact there is someone working on wrapping the entirety of Bitcoin Core in Rust: https://github.com/klebs6/bitcoin-rs.\r\n\r\nDuring the last Core Dev meeting in Berlin I also asked if a C API were desirable in the first place ([notes here](https://btctranscripts.com/bitcoin-core-dev-tech/2024-04/kernel/)) during the libbitcoinkernel session. I moved forward with this implementation, because the consensus at the time with many contributors in the room was that it was desirable. The reasons for this as discussed during the session at the meeting can be briefly summarised:\r\n\r\n* Shipping a shared library with a C++ header is hard\r\n* Mature and well-supported tooling for integrating C exists for nearly every popular language.\r\n* C offers a reasonably stable ABI\r\n\r\nSo if we want the broadest possible support, across as many languages as possible with both dynamic and statically compiled libraries, a C header is the go-to option. I'm speculating here, but a C++ header might also make future standard version bumps and adoption of new standard library features harder. If having some trade-offs with compatibility, library portability, and language support is acceptable, a C++ header might be acceptaple though. It would be nice to hear more reviewers give their opinions here. \r\n\r\nI'd also like to add that two libraries that we use and depend on in this project, [minisketch](https://github.com/sipa/minisketch/tree/master) and [zeromq](https://github.com/zeromq/libzmq/), use the same pattern. They are C++ codebases, that only expose a C API that in both instances can be used with a C++ RAII wrapper. So there is precedent in the free software ecosystem for doing things this way.\r\n\r\nThe quality of C++ language interop seems to vary a lot between languages. Python and Rust seem to have decent support, ziglang on the other hand has no support for C++ bindings. JVM family languages are a bit hit and miss, and many of the common academic and industrial data analysis languages, like Julia, R, and Matlab have no support for direct C++ bindings. The latter category should not be disregarded as potential future users, since this library might be useful to access Bitcoin Core data for data analysis projects.\r\n\r\n> Another drawback of going through a C API seems like not just increased boilerplate, but reduced safety. For example, the implementation is using reinterpret_cast everywhere\r\n\r\nI feel like the reduced type safety due to casting is bit of a red herring. The type casting can be harder to abuse if you always use a dedicated helper function for interpreting passed in data types (as I believe is implemented here). Casting is also a pattern used in many other projects; both minisketch and libzmq use similar type casts extensively. It should definitely be possible to scrutinize the API in this PR to a point where it offers decent safety to its users as well as contributors to and maintainers of this code base.\r\n\r\nThe concerns around boilerplate are more serious in my view, but at least with the current internal code and headers I feel like exposing a _safe_ C++ API is not trivial either. The current headers do not lend themselves to it well, for example through tricky locking mechanics, exposing boost types, or confusing lifetimes. There also comes a point where we should probably stop extensively refactoring internal code for the kernel. I've heard some voices during the last two Core Dev meetings with concerns that the kernel project might turn the validation code into an extensive forever building site. Having some boilerplate and glue to abstract some the ugliness and make it safe seems like an acceptable solution for this dilemma. If this means boilerplate is required anyway, I would personally prefer a C API.\r\n\r\nSome of the boilerplate-y duplicate definitions in the header could be dropped again eventually if some of the `enum`s are moved to C-style `enum`s instead of `class enum`. As long as they are properly namespaced, I don't see a big drawback for this. Similarly, some of the structs could be defined in a way where they can be used on both sides using pimpl or similar idioms. All in all, most of these translations seem very straightforward.\r\n\r\nIt might be interesting to see how some of the RPC methods could be re-implemented using the kernel header. There have been some RPC implementation bugs over the years that were due to unsafe usage of our internal code within the method implementations. Using the kernel header instead might make this safer and reduce boilerplate. To  be clear, I am not suggesting replacing the implementations, but separately re-implementing some of them to show where the kernel header might shine.\r\n\r\n> it seems like the exposed C functions use a kernel_ErrorCode enum type with the union of every possible error type, so callers don't have a way to know which functions can return which errors.\r\n\r\nWe have disagreed on the design of this before. If I understood you correctly, consolidating all error codes into a single enumeration was one of the reasons you opened your version for handling fatal errors in the kernel: https://github.com/bitcoin/bitcoin/pull/29700 as an alternative to my original: https://github.com/bitcoin/bitcoin/pull/29642. I am still a bit torn by the two approaches. I get that it may be useful to exactly see which errors may be encountered by invoking a certain routine, but at the same time I get the feeling this often ends up splintering the error handling to the point where you end up with a catch all approach after all. I also think that it is nice to have a single, central list for looking up all error codes and defining some routines for handling them in close proximity to their definition. It would be nice to finally hear some more voices besides the two of us discussing this. real-or-random has recently provided some good points on error handling in the libsecp [silent payments pr](https://github.com/bitcoin-core/secp256k1/pull/1519#issuecomment-2142599641) (that I mostly did not adopt in this PR) and argues that most error codes are not useful to the user. As mentioned in the description, error handling is a weak spot of this pull request and I would like to improve it.\r\n\r\n\r\n",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2285719575",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "mentioned",
      "id": 13860034421,
      "node_id": "MEE_lADOABII586SDdapzwAAAAM6H1d1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13860034421",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-13T08:54:22Z"
    },
    {
      "event": "subscribed",
      "id": 13860034437,
      "node_id": "SE_lADOABII586SDdapzwAAAAM6H1eF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13860034437",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-13T08:54:22Z"
    },
    {
      "event": "commented",
      "id": 2286604343,
      "node_id": "IC_kwDOABII586IStA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2286604343",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-13T16:01:30Z",
      "updated_at": "2024-08-13T17:31:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "I guess another thing I'd like to know is if this is the initial C API, and the implementation is around 3000 lines, and it doesn't handle \"transactions, block headers, coins cache, utxo set, meta data, and the mempool\", how much bigger do you think it will get if it does cover most of the things you would like it to cover? Like is this 20%, 30%, or 50% of the expected size?\r\n\r\nI like the idea of reviewing and merging this PR, and establishing a way to interoperate with rust libraries and external projects. I just think going forward we should not lock ourselves into an approach that requires everything to go through a C interface. As we build on this and add features, we should experiment with other approaches that use C++ directly, especially when it can reduce boilerplate and avoid bugs.\r\n\r\nThanks for pointing to me to the other error handling discussion. I very much agree with the post that says having a single error handling path is highly desirable. I especially agree with this in cases where detailed error messages are still provided (keeping in mind that error handling != error reporting, you can return simple error states with detailed messages or logging). Of course there are places where callers do need to handle separate error cases, especially when there are temporary failures, timeouts, and interruptions, and in these cases functions should return 2 or 3 error states instead of 1. But I don't think there is a reason in modern application code for functions to be able to return 5, 10, 20, or 50 error states generally. In low-level or very general OS, networking or DBMS code it might make sense, but for application code it seems like a cargo cult programming practice that made IBM service manuals very impressive in the 1980s but does not have a present day rationale. There are special cases, but I don't think it should be a normal thing for functions to be returning 15 error codes if we are trying to provide a safe and easy to use API.\r\n\r\nAgain though, if this approach is the easiest way to get cross-language interoperability working right now, I think we should try it. I just think we should be looking for ways to make things simpler and safer going forward.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2286604343",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "commented",
      "id": 2286994610,
      "node_id": "IC_kwDOABII586IUMSy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2286994610",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-13T19:38:46Z",
      "updated_at": "2024-08-13T19:38:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I guess another thing I'd like to know is if this is the initial C API, and the implementation is around 3000 lines, and it doesn't handle \"transactions, block headers, coins cache, utxo set, meta data, and the mempool\", how much bigger do you think it will get if it does cover most of the things you would like it to cover? Like is this 20%, 30%, or 50% of the expected size?\r\n\r\nI think a fair comparison would be comparing the amount of code \"glue\" required, e.g. the size of the `bitcoinkernel.cpp` file in this pull request. The size of the header is very dependent on the detail of documentation and I think judging it by the amount of test code is also hard. On my branch including iterators for the UTXO set, handling headers, and simple mempool processing, basically all the stuff required to drop-in replace the calls to validation code in `net_processing` with the C API, is about similar in size: https://github.com/bitcoin/bitcoin/pull/30595/files#diff-cc28221ef8d0c7294dda4e3df9f70bb6c062006b387468380c2c2cc02b6762c3 . The code on that branch is more hacky than the code here, so I would expect a bit less than a doubling in size to get all the features  required to run a full node with transaction relay.\r\n\r\n> In low-level or very general OS, networking or DBMS code it might make sense, but for application code it seems like a cargo cult programming practice that made IBM service manuals very impressive in the 1980s but does not have a present day rationale.\r\n\r\nHeh, well put. I think for most functions here it could be feasible to have more concise error codes without too much effort, but I feel like I have to detach from this a bit before being able to come up with an alternative.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2286994610",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "commented",
      "id": 2287225308,
      "node_id": "IC_kwDOABII586IVEnc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2287225308",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-13T22:09:05Z",
      "updated_at": "2024-08-13T22:09:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think for most functions here it could be feasible to have more concise error codes without too much effort, but I feel like I have to detach from this a bit before being able to come up with an alternative.\r\n\r\nThanks, I think I'd need to look at this more to give concrete suggestions, but I'd hope most functions would just return a simple success or failure status, with a descriptive error message in the case of failure. When functions need to return more complicated information or can fail in different ways that callers will want to distinguish, it should be easy to return the relevant information in custom struct or enum types. I think it's usually better for functions to return simpler custom types than more complicated shared types, because it lets callers know what values functions can return just by looking at their declarations.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2287225308",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "labeled",
      "id": 13908890225,
      "node_id": "LE_lADOABII586SDdapzwAAAAM9CNJx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13908890225",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T10:00:58Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14044032945,
      "node_id": "HRFPE_lADOABII586SDdapzwAAAANFFu-x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14044032945",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-28T10:10:14Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14058087390,
      "node_id": "HRFPE_lADOABII586SDdapzwAAAANF7WPe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14058087390",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T08:48:07Z"
    },
    {
      "event": "unlabeled",
      "id": 14059546247,
      "node_id": "UNLE_lADOABII586SDdapzwAAAANGA6aH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14059546247",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T10:35:37Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14070483742,
      "node_id": "HRFPE_lADOABII586SDdapzwAAAANGqose",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14070483742",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T21:11:37Z"
    },
    {
      "event": "labeled",
      "id": 14075219831,
      "node_id": "LE_lADOABII586SDdapzwAAAANG8s93",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14075219831",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T04:56:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14077777424,
      "node_id": "UNLE_lADOABII586SDdapzwAAAANHGdYQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14077777424",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T08:59:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14095507400,
      "node_id": "HRFPE_lADOABII586SDdapzwAAAANIKF_I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14095507400",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-01T19:46:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14095512074,
      "node_id": "HRFPE_lADOABII586SDdapzwAAAANIKHIK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14095512074",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-01T19:48:20Z"
    },
    {
      "event": "commented",
      "id": 2323487524,
      "node_id": "IC_kwDOABII586KfZsk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2323487524",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-01T20:29:45Z",
      "updated_at": "2024-09-01T20:29:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think for most functions here it could be feasible to have more concise error codes without too much effort, but I feel like I have to detach from this a bit before being able to come up with an alternative.\r\n\r\nCompletely got rid of the `kernel_Error` with the last push. Thanks for laying out your logic ryanofsky, I feel like this is cleaner now. When looking at the Rust wrapper, the code seems much clearer too. Errors are now communicated through nullptr or false values. Where required, so far only for the verification functions, a richer status code is communicated to the developer.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2323487524",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "commented",
      "id": 2325264926,
      "node_id": "IC_kwDOABII586KmLoe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2325264926",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T20:13:34Z",
      "updated_at": "2024-09-02T20:13:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the update. It's good to drop the error codes so the C API can correspond 1:1 with the C++ API and not be tied to a more old fashioned and cumbersome error handling paradigm (for callers that want to know which errors are possible and not have to code defensively or fall back to failing generically).\r\n\r\nI am still -0 on the approach of introducing a C API to begin with, but happy to help review this and get merged and maintain it if other developers think this is the right approach to take (short term or long term). **It would be great to have more concept and approach ACKs for this PR** particularly from the @theuni who commented earlier and @josibake who seems to have some projects built on this and linked in the PR description.\r\n\r\nI think personally, if I wanted to use bitcoin core code from python or rust I would use tools like:\r\n\r\n- https://github.com/pybind/pybind11\r\n- https://docs.rs/cxx/latest/cxx/\r\n- https://hkalbasi.github.io/zngur/\r\n\r\nAnd interoperate with C++ directly,  instead of wrapping the C++ interface in a C interface first. Tools like these do not support all C++ types and features, and can make it necessary to selectively wrap more complicated C++ interfaces with simpler C++ interfaces, or even C interfaces, but I don't think this would be a justification for preemptively requiring every C++ type and function to be wrapped in C before it can be exposed. I just think the resulting boilerplate code:\r\n\r\n```c++\r\nkernel_Warning cast_kernel_warning(kernel::Warning warning)\r\n{\r\n    switch (warning) {\r\n    case kernel::Warning::UNKNOWN_NEW_RULES_ACTIVATED:\r\n        return kernel_Warning::kernel_LARGE_WORK_INVALID_CHAIN;\r\n    case kernel::Warning::LARGE_WORK_INVALID_CHAIN:\r\n        return kernel_Warning::kernel_LARGE_WORK_INVALID_CHAIN;\r\n    } // no default case, so the compiler can warn about missing cases\r\n    assert(false);\r\n}\r\n```\r\n\r\nand duplicative type definitions and documentation:\r\n\r\n```c++\r\n/**\r\n * A struct for holding the kernel notification callbacks. The user data pointer\r\n * may be used to point to user-defined structures to make processing the\r\n * notifications easier.\r\n */\r\ntypedef struct {\r\n    void* user_data;                         //!< Holds a user-defined opaque structure that is passed to the notification callbacks.\r\n    kernel_NotifyBlockTip block_tip;         //!< The chain's tip was updated to the provided block index.\r\n    kernel_NotifyHeaderTip header_tip;       //!< A new best block header was added.\r\n    kernel_NotifyProgress progress;          //!< Reports on current block synchronization progress.\r\n    kernel_NotifyWarningSet warning_set;     //!< A warning issued by the kernel library during validation.\r\n    kernel_NotifyWarningUnset warning_unset; //!< A previous condition leading to the issuance of a warning is no longer given.\r\n    kernel_NotifyFlushError flush_error;     //!< An error encountered when flushing data to disk.\r\n    kernel_NotifyFatalError fatal_error;     //!< A un-recoverable system error encountered by the library.\r\n} kernel_NotificationInterfaceCallbacks;\r\n```\r\n\r\nare fundamentally unnecessary and not worth effort of writing and maintaining when C++ is not a new or unusual language and not meaningfully less accessible or interoperable than C is.\r\n\r\nThere are legitimate reasons to wrap C++ in C. One reason would be to provide ABI compatibility. Another would be to make code accessible with dlopen/dlsym. But I think even in these cases you would want to wrap C++ in C selectively, or just define an intermediate C interface to pass pointers but use C++ on either side of the interface. I don't think you would want to drop down to C when not otherwise needed.\r\n\r\nThis is just to explain my point of view though. Overall I think this is very nice work, and I want to help with it, not hold it up.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2325264926",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "mentioned",
      "id": 14106972079,
      "node_id": "MEE_lADOABII586SDdapzwAAAANI10-v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14106972079",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T20:13:35Z"
    },
    {
      "event": "subscribed",
      "id": 14106972088,
      "node_id": "SE_lADOABII586SDdapzwAAAANI10-4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14106972088",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T20:13:35Z"
    },
    {
      "event": "mentioned",
      "id": 14106972097,
      "node_id": "MEE_lADOABII586SDdapzwAAAANI10_B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14106972097",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T20:13:35Z"
    },
    {
      "event": "subscribed",
      "id": 14106972099,
      "node_id": "SE_lADOABII586SDdapzwAAAANI10_D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14106972099",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T20:13:35Z"
    },
    {
      "event": "commented",
      "id": 2325272366,
      "node_id": "IC_kwDOABII586KmNcu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2325272366",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T20:24:15Z",
      "updated_at": "2024-09-02T20:25:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "Another idea worth mentioning is that a bitcoin kernel C API could be implemented as a separate C library depending on the C++ library. The new code here does not necessarily need to be part of the main bitcoin core git repository, and it could be in a separate project. A benefit of this approach is it could relieve bitcoin core developers from the responsibility of updating the C API and API documention when they change the C++ code. But a drawback is that C API might not always be up to date with latest version of bitcoin core code and could be broken between releases. Also it might not be as well reviewed or understood and might have more bugs.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2325272366",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "commented",
      "id": 2325848908,
      "node_id": "IC_kwDOABII586KoaNM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2325848908",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T07:59:36Z",
      "updated_at": "2024-09-03T07:59:36Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nAlso an implicit approach ACK despite not heavily reviewing the code (yet). I have been focusing on using the kernel library in proof of concept applications to get a better sense of how well the library works for downstream users and to hopefully uncover any pain points preemptively. A few of these projects are linked in the PR description.\r\n\r\nRegarding a C header vs C++ header, thanks @ryanofsky for taking the time to explain your thought process. I think you raise some excellent points. I'll try to respond as best I can, despite being slightly out of my depth on this topic 😅 \r\n\r\n---\r\n\r\nFor me, the value of libbitcoinkernel is only fully realised with the broadest possible language support and ease of use for downstream projects. This is why I strongly prefer the C header approach for the following reasons:\r\n\r\n1. Mature tooling for C language bindings\r\n2. Stable ABI\r\n3. Well established pattern in other open source projects\r\n\r\nIf we agree that broad language support is a goal of libbitcoinkernel, highlighting languages that _do not_ support C++ bindings is a much more compelling argument for a C header than highlighting languages that _do_ support C++ bindings as an argument for a C++ header.\r\n\r\nRegarding some of the mentioned languages/tools which do have C++ language binding support: \r\n\r\n> Tools like these do not support all C++ types and features, and can make it necessary to selectively wrap more complicated C++ interfaces with simpler C++ interfaces, or even C interfaces\r\n\r\nIn this example, who is doing the wrapping to be able to use these tools? If it's us, this seems much more complicated to ship and maintain a mixed wrapper and also feels over engineered to a specific set of tools and languages. It also does nothing for languages that do not support C++ bindings at all. As @TheCharlatan mentioned, languages favoured by academia lack C++ binding support and making libbitcoinkernel useful for academic research is a particularly important use case of libbitcoinkernel for me. \r\n\r\nIf we are exposing just a C++ header and expecting the downstream user to wrap selective parts in C interfaces to use libbitcoinkernel, we've eroded a fundamental value proposition of libbitcoinkernel, in my opinion. Namely, we want to provide a safe to use consensus library for users and minimise the risk of downstream projects introducing consensus bugs. Requiring downstream projects to write their own C++/C interfaces to be able to use kernel means that a) they just won't use libbitcoinkernel or b) will introduce bugs when writing these wrappers. Said differently, if boilerplate will be needed for broad language support, I would prefer we focus our energy on writing and reviewing boilerplate code that ensures the usefulness of the library for the broadest possible user base, instead of requiring a subset of users to each write their own boilerplate without any review from us.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2325848908",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "mentioned",
      "id": 14110905700,
      "node_id": "MEE_lADOABII586SDdapzwAAAANJE1Vk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14110905700",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T07:59:37Z"
    },
    {
      "event": "subscribed",
      "id": 14110905724,
      "node_id": "SE_lADOABII586SDdapzwAAAANJE1V8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14110905724",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T07:59:37Z"
    },
    {
      "event": "mentioned",
      "id": 14110905746,
      "node_id": "MEE_lADOABII586SDdapzwAAAANJE1WS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14110905746",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T07:59:38Z"
    },
    {
      "event": "subscribed",
      "id": 14110905768,
      "node_id": "SE_lADOABII586SDdapzwAAAANJE1Wo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14110905768",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T07:59:38Z"
    },
    {
      "event": "labeled",
      "id": 14121577521,
      "node_id": "LE_lADOABII586SDdapzwAAAANJtiwx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14121577521",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T21:47:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14132738442,
      "node_id": "HRFPE_lADOABII586SDdapzwAAAANKYHmK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14132738442",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T14:55:31Z"
    },
    {
      "event": "unlabeled",
      "id": 14134579721,
      "node_id": "UNLE_lADOABII586SDdapzwAAAANKfJIJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14134579721",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-04T16:58:53Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14235825318,
      "node_id": "LE_lADOABII586SDdapzwAAAANQhXSm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14235825318",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T16:28:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNiNmMxZmU3OTkyZWRlMWM3ZGU4MGQ2MTVmNzYyYWViNDJmNmE2NDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b6c1fe7992ede1c7de80d615f762aeb42f6a643",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3b6c1fe7992ede1c7de80d615f762aeb42f6a643",
      "tree": {
        "sha": "173685e11da0c8d068bf5e2b2fca31c4ce5ae663",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/173685e11da0c8d068bf5e2b2fca31c4ce5ae663"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 173685e11da0c8d068bf5e2b2fca31c4ce5ae663\nparent cf0120ff024aa73a56f2975c832fda6aa8146dfa\nauthor TheCharlatan <seb.kung@gmail.com> 1716885172 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175579 +0200\n\nkernel: Introduce initial kernel C header API\n\nAs a first step, implement the equivalent of what was implemented in the\nnow deprecated libbitcoinconsensus header. Also add a test binary to\nexercise the header and library.\n\nUnlike the deprecated libbitcoinconsensus the kernel library can now use\nthe hardware-accelerated sha256 implementations thanks for its\nstatically-initialzed context. The functions kept around for\nbackwards-compatibility in the libbitcoinconsensus header are not ported\nover. As a new header, it should not be burdened by previous\nimplementations. Also add a new error code for handling invalid flag\ncombinations, which would otherwise cause a crash.\n\nThe macros used in the new C header were adapted from the libsecp256k1\nheader.\n\nTo make use of the C header from C++ code, a C++ header is also\nintroduced for wrapping the C header. This makes it safer and easier to\nuse from C++ code.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWVwACgkQm3m0VpHb\nQXNGHxAAkvOBHMZZsXf6/PsSpvH063Umi5DKa7/L+RHg+75Xed8aaT+YnhQtiltw\nRvQWzNlI9UOJ7Lxkyfz7aoS7rkYBi5O1ODt9NHy0Nu+GdHO18eURjXhpb0QR0V99\nHAUXIjh+tChIW0PLl6IU7dot0yrFVxLUG90ayvjjOjmGG5pc90+44Zr6FlV/DEb6\nizYb2hZ7v9FAgB+ek1l/CLCxGuDJgv8p35/OWLPLSGBvglR3NtXSlRPySnqRoe++\nbn25Hmx7c04O21cGBCTXSG+Oz08CzWpfERBDMDdlfyHfXCcYL+UUsniFuq4Hc9L4\nNizYj2M+HksH8CowqFb1KoF/OHIjR4n3ClIbRUe7toVhGjsorwFAQFOmaL0xkmrp\n0gCBV5wkCH1Xnx8Cdv3j0Agp8oQjaALJ5byuRVN5NcrvGSj2nebDeAV4xfl8Rzzs\nmi5BAAmstnV2e/AmSkU7zflLgM4O+gETGq5BQMCimK64m3lUu2xKjfJqcJQ8U0ed\naJZqIE1IaLnznqc1ztpaetWkZuaKmnmZx3AqNEbcZVgChV+hjtqelDpuj6igvbHt\nSiDAwcxrw6br44KK/ge0ElaA1To5Ngw728dx3NzEeIE0A+FFOze6sFbVME7BbnMT\nyIyfC908oqo+PcOk11fcqxBdBhA3GwbKZVUwNppYC8dPd7A2tpQ=\n=0uS0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf0120ff024aa73a56f2975c832fda6aa8146dfa",
          "sha": "cf0120ff024aa73a56f2975c832fda6aa8146dfa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cf0120ff024aa73a56f2975c832fda6aa8146dfa"
        }
      ],
      "message": "kernel: Introduce initial kernel C header API\n\nAs a first step, implement the equivalent of what was implemented in the\nnow deprecated libbitcoinconsensus header. Also add a test binary to\nexercise the header and library.\n\nUnlike the deprecated libbitcoinconsensus the kernel library can now use\nthe hardware-accelerated sha256 implementations thanks for its\nstatically-initialzed context. The functions kept around for\nbackwards-compatibility in the libbitcoinconsensus header are not ported\nover. As a new header, it should not be burdened by previous\nimplementations. Also add a new error code for handling invalid flag\ncombinations, which would otherwise cause a crash.\n\nThe macros used in the new C header were adapted from the libsecp256k1\nheader.\n\nTo make use of the C header from C++ code, a C++ header is also\nintroduced for wrapping the C header. This makes it safer and easier to\nuse from C++ code.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:12:59Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-28T08:32:52Z"
      },
      "sha": "3b6c1fe7992ede1c7de80d615f762aeb42f6a643"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkxMmQ1YWEzYmZkMDY5NWE4ZjhiZTczZWVlMTljNzQ3YzBiMGMxNjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/912d5aa3bfd0695a8f8be73eee19c747c0b0c160",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/912d5aa3bfd0695a8f8be73eee19c747c0b0c160",
      "tree": {
        "sha": "37d760ca4e64401709e16143e40051effe9d759f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37d760ca4e64401709e16143e40051effe9d759f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 37d760ca4e64401709e16143e40051effe9d759f\nparent 3b6c1fe7992ede1c7de80d615f762aeb42f6a643\nauthor TheCharlatan <seb.kung@gmail.com> 1716992025 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175582 +0200\n\nkernel: Add logging to kernel library C header\n\nExposing logging in the kernel library allows users to follow what is\ngoing on when using it. Users of the C header can use\n`kernel_logging_connection_create(...)` to pass a callback function to\nBitcoin Core's internal logger. Additionally the level and severity can\nbe globally configured.\n\nBy default, the logger buffers messages until\n`kernel_loggin_connection_create(...)` is called. If the user does not\nwant any logging messages, it is recommended that\n`kernel_disable_logging()` is called, which permanently disables the\nlogging and any buffering of messages.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWV4ACgkQm3m0VpHb\nQXO6NRAAy2PIWIDCX7T6d1yCE87DbHaw7lrgMklYVoBnn5zlawWpVmP5f0lW/H3S\nMk84eTmLmQDdzXjUaOBt2UsxiYUN5eoW1+1R69AZS8apahcbgz51riESdITCxXZV\nvhvUCnDP4FcNpOyVMvn53IWycTHNUHEuLYK4OpJqC0gt38egjN3PoRsymakvAfcm\nLXT5CECvy/o+aN1eyyzcSSv1MHuuojuN+O8xABaCKphAlRhrc51kfTcijycXtZ+Y\n/H151gh4RmPy8tNHsCCIIHBSKq3f1j7tg5/qHbkF40x2ALPOaD3lCcffftxRcScp\nEtSlwCCXk9dTYeANHi42dt4lWD/bBBMfmb/IWh9NyUYWrKT8FbV25a+teamzs0wE\n28VyrXOXR8St6F/ruU3N3+wkuCMcBmeFeZvjv88PdQ/lCaQ4rOvpGqqjVqCWbMfW\nu9MX4HiU2yG4D4zOwNkrcP3g8gJyW2R+m7Yl0im+XU6Ux9QwVHvqEZSaVpQkhquk\nvEPOCA6QaPvYqZoqxJck25qRxc0GD9IlTQc15YZt0eT0BXrUmhC0bbQ4BjI+Rcnt\nkgkMmyw4ulGq6NDgnVuHRD8BUDL5ODrgzqi1CN1en00lHbkptJugxI3Zi8joaHFZ\nQOTv4RZiPFQc2GB3yo2/I5nNqqtW3bq+hn6he3tNBYRg/h5sULc=\n=miyi\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b6c1fe7992ede1c7de80d615f762aeb42f6a643",
          "sha": "3b6c1fe7992ede1c7de80d615f762aeb42f6a643",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3b6c1fe7992ede1c7de80d615f762aeb42f6a643"
        }
      ],
      "message": "kernel: Add logging to kernel library C header\n\nExposing logging in the kernel library allows users to follow what is\ngoing on when using it. Users of the C header can use\n`kernel_logging_connection_create(...)` to pass a callback function to\nBitcoin Core's internal logger. Additionally the level and severity can\nbe globally configured.\n\nBy default, the logger buffers messages until\n`kernel_loggin_connection_create(...)` is called. If the user does not\nwant any logging messages, it is recommended that\n`kernel_disable_logging()` is called, which permanently disables the\nlogging and any buffering of messages.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:02Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-29T14:13:45Z"
      },
      "sha": "912d5aa3bfd0695a8f8be73eee19c747c0b0c160"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkYzkyYzEwYjY4ZDJmZTJlM2RlMmM0ZGEzYzIzMWVlOTAxMjZiZjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dc92c10b68d2fe2e3de2c4da3c231ee90126bf0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0dc92c10b68d2fe2e3de2c4da3c231ee90126bf0",
      "tree": {
        "sha": "c86f4ae41af480e801865c23e6fa0cc707787329",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c86f4ae41af480e801865c23e6fa0cc707787329"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c86f4ae41af480e801865c23e6fa0cc707787329\nparent 912d5aa3bfd0695a8f8be73eee19c747c0b0c160\nauthor TheCharlatan <seb.kung@gmail.com> 1717418147 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175584 +0200\n\nkernel: Add kernel library context object\n\nThe context introduced here holds the objects that will be required for\nrunning validation tasks, such as the chosen chain parameters, callbacks\nfor validation events, and an interrupt utility. These will be used in a\nfew commits, once the chainstate manager is introduced.\n\nThis commit also introduces conventions for defining option objects. A\ncommon pattern throughout the C header will be:\n```\noptions = object_option_create();\nobject = object_create(options);\n```\nThis allows for more consistent usage of a \"builder pattern\" for\nobjects where options can be configured independently from\ninstantiation.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWWAACgkQm3m0VpHb\nQXPSTw//SkwffB4w1uudKGmJm1VCGml8MWpHi/9rNFACcfL6ayZe49ju/KHS7xrN\nJXPb/wOzoYKk5zi0MK+ncJfDcn3nmpt64cn5QVd+WqW1h3TZyAKyYN4EHEMedz2y\nPZ6pxmoDm9qCFCUec7kgipQlP87c9mtLhajSJq/KVp5Im8oB00NvWookcZ9CHPr4\n6esiKMmCo851NfCN5hspAQEJO3LMArui36PRpHqIO5FjvhmuEry4eUqiINj+athO\nyzvneMqPNCq3SHe9tEF/mrzQyVlB6TnFDcEf604U38fQSGbwjaRMeZomIXzhXoxY\nxsrx1vTZP1g7l6Jjb7MX6p4MH7cuZmRehYn6i0PVBLeJefZiaZcnt6tZRTfZYHNZ\n8p3iDGKkcATYW66rc85/A+wGWmLKLL0IecMqrc6RehhSuG4JKwvI4MKrJHnpRDbj\nTasCEcTJR2ZozseRD7k7KJ0Or4DilrH4W9LaXH2erAdTR78KSLuoR5+2C8ezXSgj\nHjQ196X6p1HYh7/Hyo37nSpYkKKYgvxwXXRrKlxWc2WSYBt3cl1E0X92XXHwIesH\nosHvdx5nBe9hwOJ6Imz2P9zlNy7BABppXSBSXl+p5lBvVWaOp7BfEF4C+dK5wQzi\nhq0hO47sAQPr1ptsWT0xY1s6YCaM+pur3gTr404HrCl+ZjRDJko=\n=PLiW\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/912d5aa3bfd0695a8f8be73eee19c747c0b0c160",
          "sha": "912d5aa3bfd0695a8f8be73eee19c747c0b0c160",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/912d5aa3bfd0695a8f8be73eee19c747c0b0c160"
        }
      ],
      "message": "kernel: Add kernel library context object\n\nThe context introduced here holds the objects that will be required for\nrunning validation tasks, such as the chosen chain parameters, callbacks\nfor validation events, and an interrupt utility. These will be used in a\nfew commits, once the chainstate manager is introduced.\n\nThis commit also introduces conventions for defining option objects. A\ncommon pattern throughout the C header will be:\n```\noptions = object_option_create();\nobject = object_create(options);\n```\nThis allows for more consistent usage of a \"builder pattern\" for\nobjects where options can be configured independently from\ninstantiation.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:04Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-03T12:35:47Z"
      },
      "sha": "0dc92c10b68d2fe2e3de2c4da3c231ee90126bf0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUyYzVhMjkxZDdjZDRjYmZmZWJkN2RjNWJiNmEzYjA5ZmJmMTI3NGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52c5a291d7cd4cbffebd7dc5bb6a3b09fbf1274a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/52c5a291d7cd4cbffebd7dc5bb6a3b09fbf1274a",
      "tree": {
        "sha": "4f225a974ebf472fc53541b572e42f07a0bd1cd9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f225a974ebf472fc53541b572e42f07a0bd1cd9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 4f225a974ebf472fc53541b572e42f07a0bd1cd9\nparent 0dc92c10b68d2fe2e3de2c4da3c231ee90126bf0\nauthor TheCharlatan <seb.kung@gmail.com> 1717418695 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175585 +0200\n\nkerenl: Add chain params context option to C header\n\nAs a first option, add the chainparams. For now these can only be\ninstantiated with default values. In future they may be expanded to take\ntheir own options for regtest and signet configurations.\n\nThis commit also introduces a unique pattern for setting the option\nvalues. Since the number of potential future options that may be\nconfigured is not really bounded, it may hurt discoverability in the\nheader to just add a function for each of them. Instead add a single\nfunction for setting the options of an option object, in this case\n`kernel_context_options_set(...)`, that takes a unique identifier and a\nvoid* value as arguments. The user passes the option value to be\nconfigured as a void pointer alongside its identifier. Valid option\nvalues are tagged internally in their struct and checked if their value\nmatches with the selected identifier when calling the `*_set(...)`\nfunction.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWWEACgkQm3m0VpHb\nQXND1A/+O+N2GwjidEHHkDW+AafjNBSb0xphWVPw2j9z1zheMisgKrjeYAbLaJDo\ntIvtwpvW+V4ylE15z+a542f5Ze8Su7Wql5Oswfqtd6w9o8gd9le/8AhUvL4aMqpV\n3XsXpZLiUz7AM9lNVDDrtMbiyVyY/e3rLO96Y+fSyY7ZINlRsxnX5gSbXai59t9i\nWpeAfU8ExfWT6U0eoj04UGV6T3KMwO19T70KudLI6TrHiZygWpg++MSL9Ag12lCD\nePJDLhU359Qvq5JhwSW296zRkbCDhkqSbAd318SACG2175f17vZ5U22QCCHkkLoO\nX8v0rdR/A2mMj339iEnrNY4C8TZmWGLi978x9svqP194bfY/NI4kq7WQRj9TA6xC\ngFcK14Ibl5e6fAKGWzKePkdnfkOEXDxsfgikrxhJbM8w8MglN7do5145ifDb7rd0\nZzk5Er7wTU+jC1Dz/p5xHVJO1X8WlG9U2LloKH3gEiogYxfV60JNbz621m3aGb0n\nk6rpil8BSPpC5VIxMXA+RqKTzae7OYdIT0yO/mO0O9OeIe/gL93OTvWhgmf00AUU\nnOhqW2psEpGKz9g1pNqGTSeuHOjqwzkgMLlnQl84ZRbl/OdiQaoBCDJMGL3KtH95\nNuLdjjR0WBv3gf5W0/DJXKJoQIlwv00zQBqtzqV3T0dNPhWe8xY=\n=sF33\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dc92c10b68d2fe2e3de2c4da3c231ee90126bf0",
          "sha": "0dc92c10b68d2fe2e3de2c4da3c231ee90126bf0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0dc92c10b68d2fe2e3de2c4da3c231ee90126bf0"
        }
      ],
      "message": "kerenl: Add chain params context option to C header\n\nAs a first option, add the chainparams. For now these can only be\ninstantiated with default values. In future they may be expanded to take\ntheir own options for regtest and signet configurations.\n\nThis commit also introduces a unique pattern for setting the option\nvalues. Since the number of potential future options that may be\nconfigured is not really bounded, it may hurt discoverability in the\nheader to just add a function for each of them. Instead add a single\nfunction for setting the options of an option object, in this case\n`kernel_context_options_set(...)`, that takes a unique identifier and a\nvoid* value as arguments. The user passes the option value to be\nconfigured as a void pointer alongside its identifier. Valid option\nvalues are tagged internally in their struct and checked if their value\nmatches with the selected identifier when calling the `*_set(...)`\nfunction.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:05Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-03T12:44:55Z"
      },
      "sha": "52c5a291d7cd4cbffebd7dc5bb6a3b09fbf1274a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEzMGY5Njc1NTJmZTdkZDNhMWZjNzE3MWQ4NjFlYmUwMjU2NGJhOGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/130f967552fe7dd3a1fc7171d861ebe02564ba8b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/130f967552fe7dd3a1fc7171d861ebe02564ba8b",
      "tree": {
        "sha": "f907f6839dcf9b55307dd9eb58a6194749c01fe0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f907f6839dcf9b55307dd9eb58a6194749c01fe0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f907f6839dcf9b55307dd9eb58a6194749c01fe0\nparent 52c5a291d7cd4cbffebd7dc5bb6a3b09fbf1274a\nauthor TheCharlatan <seb.kung@gmail.com> 1717419089 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175587 +0200\n\nkernel: Add notifications context option to C header\n\nThe notifications are used for notifying on connected blocks and on\nwarning and fatal error conditions.\n\nThe user of the C header may define callbacks that gets passed to the\ninternal notification object in the\n`kernel_NotificationInterfaceCallbacks` struct. Each of the callbacks\ntake a `user_data` argument that gets populated from the `user_data`\nvalue in the struct. It can be used to recreate the structure containing\nthe callbacks on the user's side, or to give the callbacks additional\ncontextual information.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWWMACgkQm3m0VpHb\nQXPIJhAAsXPY1a0pweia/ahsN1fsewXd0eIzF+cojw4y93sEFOICyA0Jvl5UpvME\nVjqVTLjTewMsKZ7rDPDXpXh+gJ90wiDjiNv1jqJLA2zvtcWlsgmuju/H6a1stggo\nfLTHHsWOxaHnPQIKXijxsY7SgbHo5Qd3ar3bJrXLmL6SrwA9RZYoySzJIlUwdw9f\niyC7bGX3BM0260qghv9QPjXXlI3ZGmJ3FbDS72Ykj8E7IFAc6qtFAf4cg15gJ471\nrgmSjFNcaqTfLT+xU8bEfJBhRcZMX4OyriSN3Yc1ZAZlTifS2eubaU/bJLuKgNa3\nMsGOq/C5hKl1LyIiOV2qGwO4xS86V7anLTFflTNsvlcwqcb8N6EdtDRzhDn0In3+\ngXLxhNzPaBmXz/MS6gY4lwyNLk6BwO/mekp6EWfffugMqEVus27DGScBAFR7cDJ7\n/0Hd4GWN6JJQLNriiBMD/+xNT7F/y+36PxUkzDJgztzE96h+8fQ2DrFEmHtwVsH6\npj86W4phQEPSBim93kg6g10fbUMVgnLZnn2rDsd+au77j/tilLe9PxIcq/7UMDRc\npetSamIHYkP20fUL76AvdLEgExlzVTLEwTYJh40xy+a8EPO/1aJBAFlGge9MMlzr\n++GmuKKarizFhwIn9S/YN2MIVHGhoQQLEw6+MuFQqzMRwLrZiFE=\n=AGzn\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52c5a291d7cd4cbffebd7dc5bb6a3b09fbf1274a",
          "sha": "52c5a291d7cd4cbffebd7dc5bb6a3b09fbf1274a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/52c5a291d7cd4cbffebd7dc5bb6a3b09fbf1274a"
        }
      ],
      "message": "kernel: Add notifications context option to C header\n\nThe notifications are used for notifying on connected blocks and on\nwarning and fatal error conditions.\n\nThe user of the C header may define callbacks that gets passed to the\ninternal notification object in the\n`kernel_NotificationInterfaceCallbacks` struct. Each of the callbacks\ntake a `user_data` argument that gets populated from the `user_data`\nvalue in the struct. It can be used to recreate the structure containing\nthe callbacks on the user's side, or to give the callbacks additional\ncontextual information.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:07Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-03T12:51:29Z"
      },
      "sha": "130f967552fe7dd3a1fc7171d861ebe02564ba8b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUyYWI4ODllM2FlMjY5NjRmZDc0MWU3NTJmMzAwMGY0NzA5NDNjZGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52ab889e3ae26964fd741e752f3000f470943cdf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/52ab889e3ae26964fd741e752f3000f470943cdf",
      "tree": {
        "sha": "edd342945fb3ac3e1a4e7ccf56148c79033fc7f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/edd342945fb3ac3e1a4e7ccf56148c79033fc7f6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree edd342945fb3ac3e1a4e7ccf56148c79033fc7f6\nparent 130f967552fe7dd3a1fc7171d861ebe02564ba8b\nauthor TheCharlatan <seb.kung@gmail.com> 1716922728 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175588 +0200\n\nkernel: Add chainstate manager object to C header\n\nThis is the main driver class for anything validation related, so expose\nit here.\n\nCreating the chainstate manager and block manager options will currently\nalso trigger the creation of their respectively configured directories.\n\nThe chainstate manager and block manager options were not consolidated\ninto a single object, since the kernel might eventually introduce a\nblock manager object for the purposes of being a light-weight block\nstore reader.\n\nThe chainstate manager will associate with the context with which it was\ncreated for the duration of its lifetime. It is only valid if that\ncontext remains in memory too.\n\nThe tests now also create dedicated temporary directories. This is\nsimilar to the behaviour in the existing unit test framework.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWWQACgkQm3m0VpHb\nQXPsDw//elroQZDFw60JrYuBpiMSHmzHiGAvoJy4d5H/snujsZIGl/QlEqIh8kWt\nn9LITEup6xlL62lvju9edhDOAr6y8ldtfz/2C4DfNC2MUaypNvMdvtMD+Ue2CPGf\nooCvxHJf/2PgM11IvXqLIrCLCV3c5YPd6t1JtvTPv21h2rUYK/nHuDEHCwyssAsq\nMIXGnFIQi8oFwQBamGR46mzm8/VEyxDwEETHv0UjUpYAgdtKXQN2DcSox0wSLVzO\n8jQL9Y5T0DRvdHE9d1xqlEkdG6ZeTC8vpqVkxD7/sbmFzZ7NdY++7J5fbqRRsB+A\nMPFEU10gLMRWWF8IDRXBB2xEVKc3inEqyWAGsFaUlLT6ExHueGrBCnCD4HMKw48r\n6AmMoLaYW+LtHBj7+W94+SFbwFnyR39E0RLw879XS1aM2CAizluP9RW2YQ3NE671\n+9UfbVq0CTrfBtuWvNVPi2/nUhSV5xIcOrx6P+ge1D5r4jLdsqYhEJgb4RuI0CHY\nzidgg/gxE+RxAjm+PmlHSqRXAo+sL+bSklz3ynU+r21XCs3BPOjmFcup0KPE8Wu4\n5gClY+inX8SMUvI9HS28uKHHPJbKl/aeBanqN0Q8aIYDRqRi1nv0yv8Ntb5HKsXM\npRfTowyazkuxwipZjn15VdaqnIhehx86YjHveOtUen6WaA1ArHY=\n=TVtR\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/130f967552fe7dd3a1fc7171d861ebe02564ba8b",
          "sha": "130f967552fe7dd3a1fc7171d861ebe02564ba8b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/130f967552fe7dd3a1fc7171d861ebe02564ba8b"
        }
      ],
      "message": "kernel: Add chainstate manager object to C header\n\nThis is the main driver class for anything validation related, so expose\nit here.\n\nCreating the chainstate manager and block manager options will currently\nalso trigger the creation of their respectively configured directories.\n\nThe chainstate manager and block manager options were not consolidated\ninto a single object, since the kernel might eventually introduce a\nblock manager object for the purposes of being a light-weight block\nstore reader.\n\nThe chainstate manager will associate with the context with which it was\ncreated for the duration of its lifetime. It is only valid if that\ncontext remains in memory too.\n\nThe tests now also create dedicated temporary directories. This is\nsimilar to the behaviour in the existing unit test framework.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:08Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-28T18:58:48Z"
      },
      "sha": "52ab889e3ae26964fd741e752f3000f470943cdf"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVlNjU3ZmI2OWMzNTE2NDQwMTU3ZTJlOTU2MzY2MzBjMDU0NDAwNDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee657fb69c3516440157e2e95636630c05440043",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ee657fb69c3516440157e2e95636630c05440043",
      "tree": {
        "sha": "f499f89396de796ab80ab893901d461ff2a433dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f499f89396de796ab80ab893901d461ff2a433dd"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f499f89396de796ab80ab893901d461ff2a433dd\nparent 52ab889e3ae26964fd741e752f3000f470943cdf\nauthor TheCharlatan <seb.kung@gmail.com> 1716982085 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175589 +0200\n\nKernel: Add chainstate loading to kernel C header\n\nThe `kernel_chainstate_manager_load_chainstate(...)` function is the\nfinal step required to prepare the chainstate manager for future tasks.\nIts main responsibility is loading the coins and block tree indexes.\n\nThough its `context` argument is not strictly required this was added to\nensure that the context remains in memory for this operation. This\npattern of a \"dummy\" context will be re-used for functions introduced in\nlater commits.\n\nThe chainstate load options will be populated over the next few commits.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWWUACgkQm3m0VpHb\nQXPb9hAAsS/5Qt/nVC+LKb/wn6zoXaaBiI4WgY1kmamLiR9mektPY2j3x+YHwRgf\nsjTaSUNUEvHpy0CY0Dj9DIlM6r3kL/aVp32HWMBOIwBB4Dif5b1BoHkbmo+iRUX/\nthu1QY4YDPSOiH4Ma6CN19mgka5of8LRCD7TKPz0W6btSxhlhMgwM+d4HaTPRBJQ\n8r6q9s+UkhseY05FrUTjKYYs05/Brd7S0b+22YRZJpRDaiLZOZvOHoDgFyZoEt+0\niEFQuSqp9WmhlVnfaipnyQuTdxx4SHRtCMYSHVQze2d9R7bjXtV/VrwiCR1xiLIP\nf7f/fSvaivaa26xiug24PFwvng/rF8gGvBK1RxEawac7h5Dbk6QObL/K6DReLJKR\njudYChZob6tuw3drgyAzR5ODkCw6PKNNUvu94CAWmb1ZKHXQxey/z/ZLkMgNzgzB\nt2IsbSMmbeSta2vkQCcIahxG9cREAyWsdXCy1m7/7Tui5C2FLCCKbXynA3wam6Lj\nkPPjyu+X6VwARG33SeaePsoOaNNa82nVUC2vBJNMiAmhpRqPD7nQWUgI9YdCxVCw\nMsikaOoNmr/mouh9mKctncSItZ9LwpIj3dcHmpc48x8whGatRbCAzhw4jHIrVDsg\nDdFeOWpEkV04O3GKOiMqAosWFPSbYrH+FS7NjX6Fj/gfWaTLU5k=\n=6tut\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52ab889e3ae26964fd741e752f3000f470943cdf",
          "sha": "52ab889e3ae26964fd741e752f3000f470943cdf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/52ab889e3ae26964fd741e752f3000f470943cdf"
        }
      ],
      "message": "Kernel: Add chainstate loading to kernel C header\n\nThe `kernel_chainstate_manager_load_chainstate(...)` function is the\nfinal step required to prepare the chainstate manager for future tasks.\nIts main responsibility is loading the coins and block tree indexes.\n\nThough its `context` argument is not strictly required this was added to\nensure that the context remains in memory for this operation. This\npattern of a \"dummy\" context will be re-used for functions introduced in\nlater commits.\n\nThe chainstate load options will be populated over the next few commits.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:09Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-29T11:28:05Z"
      },
      "sha": "ee657fb69c3516440157e2e95636630c05440043"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlmN2FjMWMxMWE3MWEyMjE0ZmIzNDJkZjUyNGMyMzU2M2MzZjJlNGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f7ac1c11a71a2214fb342df524c23563c3f2e4f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9f7ac1c11a71a2214fb342df524c23563c3f2e4f",
      "tree": {
        "sha": "daca23171608fe37a8045d9825d17605c5b1d90e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/daca23171608fe37a8045d9825d17605c5b1d90e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree daca23171608fe37a8045d9825d17605c5b1d90e\nparent ee657fb69c3516440157e2e95636630c05440043\nauthor TheCharlatan <seb.kung@gmail.com> 1718657423 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175590 +0200\n\nkernel: Add block validation to C header\n\nThe added function allows the user process and validate a given block\nwith the chainstate manager. The *_process_block(...) function does some\npreliminary checks on the block before passing it to\n`ProcessNewBlock(...)`. These are similar to the checks in the\n`submitblock()` rpc.\n\nRicher processing of the block validation result will be made available\nin the following commits through the validation interface.\n\nThe commits also adds a utility for serializing a `CBlock`\n(`kernel_block_create()`) that may then be passed to the library for\nprocessing.\n\nThe tests exercise the function for both mainnet and regtest. The\ncommit also adds the data of 206 regtest blocks (some blocks also\ncontain transactions).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWWYACgkQm3m0VpHb\nQXPyvBAA0CgUEDUveSS0IpiWARW5PUhTC2Omm7CCxuyZxHZyy91f/4REF3O45Moy\nJbt65cIUj7JcpGFkKbokgjHQxqrfDco5OQ0zceEfNP/HcDI5KYGcY9m2oagRGbcw\nAYJcUTDtCwcoipV/pgwAmVxFqqFIOHZvn1c31jYjxOJtOCPZOL7zWdwuU5wQUiNT\naTIBeYXMCDJfuNiY99TxSSDZF7Oq0LyInWRVhWu8tzqgkfdxtWmCY6tFtPC5fHbs\njnHAewLf+PjtjJvoaTynpxolndaw+O22ZeGb2tEEQJBdbvmInidpk5V6UnefF6jr\n/IQjDiA0Q4c6XRJqcweTp9K8OIS4kVlH/uxGzaK/IjC2Ly4Q7cm5q8ejqmQLopi5\nZCpEsUe64maX67BpQijcaB0auPhi/zugpdL4EmSuKLHQcFHccihPsFq9vm5xe4Gq\n9o4yIATvfw6I4mxLUd9+7vdSC5TVD1jKbbrbksnoQnJWnEha3RYtPIDpP6KtfiD8\nIOYyNrZTb6h8JaY/zSM6NPC8XPrbCfHYt1mPGidr6qxQmNw9/5K62CZuicD90VXw\ng9RMflivjE6/xVk/RGx4PyV70YVMnQ3MmU8smWffzdd9VMiUuefhdM54hZ7Ssqd5\nq6qqkloyzQbCHNFDCMYx4OXIXpDJ4KzS+iS5nOfUH+cDDJALXNg=\n=Q5dA\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ee657fb69c3516440157e2e95636630c05440043",
          "sha": "ee657fb69c3516440157e2e95636630c05440043",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ee657fb69c3516440157e2e95636630c05440043"
        }
      ],
      "message": "kernel: Add block validation to C header\n\nThe added function allows the user process and validate a given block\nwith the chainstate manager. The *_process_block(...) function does some\npreliminary checks on the block before passing it to\n`ProcessNewBlock(...)`. These are similar to the checks in the\n`submitblock()` rpc.\n\nRicher processing of the block validation result will be made available\nin the following commits through the validation interface.\n\nThe commits also adds a utility for serializing a `CBlock`\n(`kernel_block_create()`) that may then be passed to the library for\nprocessing.\n\nThe tests exercise the function for both mainnet and regtest. The\ncommit also adds the data of 206 regtest blocks (some blocks also\ncontain transactions).",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:10Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-17T20:50:23Z"
      },
      "sha": "9f7ac1c11a71a2214fb342df524c23563c3f2e4f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU3YmMyZWMyNjZkOGNhYjA2MDE1NTQyOWIzMDY4OGFjMDY2ZWQzMWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57bc2ec266d8cab060155429b30688ac066ed31d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/57bc2ec266d8cab060155429b30688ac066ed31d",
      "tree": {
        "sha": "d199d5a263055f697f55a3287fb1329fdda2df44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d199d5a263055f697f55a3287fb1329fdda2df44"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d199d5a263055f697f55a3287fb1329fdda2df44\nparent 9f7ac1c11a71a2214fb342df524c23563c3f2e4f\nauthor TheCharlatan <seb.kung@gmail.com> 1718657447 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175592 +0200\n\nkernel: Add options for reindexing in C header\n\nAdds options for wiping the chainstate and block tree indexes to the\nchainstate load options. In combination and once the\n`*_import_blocks(...)` function is added in a later commit, this\ntriggers a reindex. For now, it just wipes the existing data.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWWgACgkQm3m0VpHb\nQXOq7Q//aFfqppnjhkUG0v+guC9Rx4Ss6Eqz3ILJil9RW+a6vlNaEYf2sUUpFSS8\n1/hAhgwjw79ahRsycMiXfFmWgZ4qLEKPqkTA417oGnzsZ978Dpw8OUkB4c/Cqg6w\nEAZlUJoQdI5t3F4jATWn8c44RM1sCmafNrcFEOFFH4ESajxST1rRxTt2xTB069oh\nsiK9cfIN5WYodh8M5kS3L8nwhW6vlvI7C5zKIB97VRYjGy0mT5MUBWZOasUKcxmG\n586qsDoQS6Xe8fngmTKC49gzHM0XvjStYPjuFtfPeCxMNaPRZCGmphlJeVRjtTTW\n8GjsFXF8WfKNeI5hXYSfApzomXqHHouZ7/6lwYKkrYD9y8Riyf4iBh7B7RhFK7v+\nvzn4Bk5vyf4F51VsYHFqVnVyTs8CCvac9tVFIIaedr1ZDlgNJUChXG310gzskhSw\nXH0k18wYIeyD1QMk8SX5sghJxB9mM+KqpN5DiRupcg5RIY0RXoXnJ5b/51PXTp9U\nkwVhQ7SJ5KlBxWw+8cMRfNGMeV+1pKp6xoa/fRZFGDB43/vdJPX7NK9iM7S+jHUA\nfZ+ZAA1jEwMF7qh1Ra04iXe4e6ulJ9UjAdR5yxyBf07NJ/hO2FF25vJe07u7h9b0\nPXDZnhzU0kPrCM6aWOXP3NJ7wc7bW8XdzY2j4cJWUwjILICHN2s=\n=sqKZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f7ac1c11a71a2214fb342df524c23563c3f2e4f",
          "sha": "9f7ac1c11a71a2214fb342df524c23563c3f2e4f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9f7ac1c11a71a2214fb342df524c23563c3f2e4f"
        }
      ],
      "message": "kernel: Add options for reindexing in C header\n\nAdds options for wiping the chainstate and block tree indexes to the\nchainstate load options. In combination and once the\n`*_import_blocks(...)` function is added in a later commit, this\ntriggers a reindex. For now, it just wipes the existing data.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:12Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-17T20:50:47Z"
      },
      "sha": "57bc2ec266d8cab060155429b30688ac066ed31d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU1Y2MwNDM0ODhmMzY4OWE2MmE3MmJlODJiYzEwZDNlMTQ2YWQwYjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5cc043488f3689a62a72be82bc10d3e146ad0b9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e5cc043488f3689a62a72be82bc10d3e146ad0b9",
      "tree": {
        "sha": "93ba464d105b562411170f1f2fac0503300ea854",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93ba464d105b562411170f1f2fac0503300ea854"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 93ba464d105b562411170f1f2fac0503300ea854\nparent 57bc2ec266d8cab060155429b30688ac066ed31d\nauthor TheCharlatan <seb.kung@gmail.com> 1719083290 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175593 +0200\n\nkernel: Add chainstate load options for in-memory dbs in C header\n\nThis allows a user to run the kernel without creating on-disk files for\nthe block tree and chainstate indexes. This is potentially useful in\nscenarios where the user needs to do some ephemeral validation\noperations.\n\nOne specific use case is when linearizing the blocks on disk. The block\nfiles store blocks out of order, so a program may utilize the library\nand its header to read the blocks with one chainstate manager, and then\nwrite them back in order, and without orphans, with another chainstate\nmaanger. To save disk resources and if the indexes are not required once\ndone, it may be beneficial to keep the indexes in memory for the\nchainstate manager that writes the blocks back again.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWWkACgkQm3m0VpHb\nQXNzEhAAhz4GrmX+tUapam+9VwygbV/LBdFYIew8jCLP6N/oDKv4KtjdUsfMTL2u\nzg33uZfZxrxOcPcdcnUbOd1A0MnBzEXxykiEtge3/+IMt8Deh3fBkA3lf2xf/ylR\nXMUoSntK5juZNMXpp8FUZQ1roiYWKp+dZ98bIgY5OG36dxlFcXFN7BH15PyM1e5b\n8hI7FhbG8THZ69j3TfQ2SG0Kb1ptk/CTSnQ62Xw67V3nm2bHb+ESvvaSgIQLIxSF\n/HH9qKGcJ8NduvbbI5QTB8cDeFDIGg+/ktzB4f9esFORw1mjsNznepkH+km4u2mV\nqxl9gPzjESZ5v22rKqhTAJhXQ+xuSiTNwV9BmPJ0Estcq8w9hS577xTUiJ6vzUi/\n/3Ig5BK0Jr4A1zr9BqdCwKUaaKqy8/9yJNjg4uDXUYCmIVyhNYRRvuvbt41UkYp0\n9ah7ToApsQhE8X+xqHHPmxoKjs2NLUuZkv371yXHOOgxL3KzcfYpECBngfgHqNQ2\nrNT4fkfArZKumxEnZyo0r+ltNH7F76eJ//ncZfopvvoNGNRLAqFMFA6Wwq7z97VW\nH+mzQU0BANJVajr8MWhiMMVgSnIGu+VDV8fVSSz3IDri7hz62MRVn7mLFJCd7757\nN56+nsbQgtWM38RZJi0GAz9eo6bYxctb4A2s2w8+W9WYO+NycBU=\n=8Nh3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57bc2ec266d8cab060155429b30688ac066ed31d",
          "sha": "57bc2ec266d8cab060155429b30688ac066ed31d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/57bc2ec266d8cab060155429b30688ac066ed31d"
        }
      ],
      "message": "kernel: Add chainstate load options for in-memory dbs in C header\n\nThis allows a user to run the kernel without creating on-disk files for\nthe block tree and chainstate indexes. This is potentially useful in\nscenarios where the user needs to do some ephemeral validation\noperations.\n\nOne specific use case is when linearizing the blocks on disk. The block\nfiles store blocks out of order, so a program may utilize the library\nand its header to read the blocks with one chainstate manager, and then\nwrite them back in order, and without orphans, with another chainstate\nmaanger. To save disk resources and if the indexes are not required once\ndone, it may be beneficial to keep the indexes in memory for the\nchainstate manager that writes the blocks back again.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:13Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-22T19:08:10Z"
      },
      "sha": "e5cc043488f3689a62a72be82bc10d3e146ad0b9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZiOGEzNjQwOWNlMDAxODhmOGEyOWIzZTJlNTI0NzY0OGM4ZGRjZDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb8a36409ce00188f8a29b3e2e5247648c8ddcd1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fb8a36409ce00188f8a29b3e2e5247648c8ddcd1",
      "tree": {
        "sha": "ca6928df3520ee39b12e914c335b871448e8e04c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca6928df3520ee39b12e914c335b871448e8e04c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ca6928df3520ee39b12e914c335b871448e8e04c\nparent e5cc043488f3689a62a72be82bc10d3e146ad0b9\nauthor TheCharlatan <seb.kung@gmail.com> 1717060948 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175594 +0200\n\nkernel: Add import blocks function to C header\n\nThe `kernel_import_blocks` function is used to both trigger a reindex,\nif the indexes were previously wiped through the chainstate load\noptions, or import the block data of a single block file.\n\nThe behaviour of the import can be verified through the test logs.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWWoACgkQm3m0VpHb\nQXNoChAAqjjJ0o4DGeikHEInrlAXClsHDnvtx9SsFrmTNg8earoctesmbqVqHKMU\njSVtrpMKdSTAkXXtF5wMtLkfvT/XsVBYOoHRLGwaozaav56YVbVS3t6oO2KyJAFC\nAljJBUuXs3K/xXkxdPeSELN8kIfaNu5v6kZJAW9Rshp/qlkSR3zJDAHi71GV0uc4\nT1c8ovxnKLHFNn++sH0+9J9eR37etpCZO7vPsM9GJwkg1F9cPkNWu5V/XVZQc55E\nOhWoh+JzMHDyuJFkA++iZsnm3uDMG3WevaOyE2bwwhAscm55Lsivox/6epYYWRDJ\nCH7zJOvi1RKdcaSU+VFGn0M/b/8USNJw/LWnfoKMZw0BQAUv8fcle9bQpe11/S7N\ndjCz1KCgAPd/FzWS9I+9aX6oEQ4CUd+ZjMWFUZred64S0jNqT0eHClO1KG4KKwoQ\n6gcWF2cS9ypSWRCOtu1atwSIS/HFII8TSuMpy78tN0cZ+PMhboBUObawSj3DpIk5\ncCd1R0742x36Ft8qe4BgQgh0Xzf2v8V5luAgzSI4vAEdFHrKmlEF+Ah1x+g6/bA+\nQvx49UGKadJa8oU9DWZGu530Xx0jc7sRnaWid59xTslCfIGT00MwMkEViZTbfY0i\nxdcTakFV8qvV6T+uFDXov+morO2eUzfcTB9V7T+KHcRwNsV8MaI=\n=JvxQ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5cc043488f3689a62a72be82bc10d3e146ad0b9",
          "sha": "e5cc043488f3689a62a72be82bc10d3e146ad0b9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e5cc043488f3689a62a72be82bc10d3e146ad0b9"
        }
      ],
      "message": "kernel: Add import blocks function to C header\n\nThe `kernel_import_blocks` function is used to both trigger a reindex,\nif the indexes were previously wiped through the chainstate load\noptions, or import the block data of a single block file.\n\nThe behaviour of the import can be verified through the test logs.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:14Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-30T09:22:28Z"
      },
      "sha": "fb8a36409ce00188f8a29b3e2e5247648c8ddcd1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRkMDkwMzIyZTk5NmQyNjBjMzFlOWQzZGZjMzljNTU5ZTFhMWU2MjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d090322e996d260c31e9d3dfc39c559e1a1e621",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4d090322e996d260c31e9d3dfc39c559e1a1e621",
      "tree": {
        "sha": "0f4d7ea4b41c4fc266423a82d81e69d8c3b01c41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f4d7ea4b41c4fc266423a82d81e69d8c3b01c41"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0f4d7ea4b41c4fc266423a82d81e69d8c3b01c41\nparent fb8a36409ce00188f8a29b3e2e5247648c8ddcd1\nauthor TheCharlatan <seb.kung@gmail.com> 1717575640 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175595 +0200\n\nkernel: Add interrupt function to C header\n\nCalling interrupt can halt long-running functions associated with\nobjects that were created through the passed-in context.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWWsACgkQm3m0VpHb\nQXOFfA//cxiAFCml/FOy01E0tHDaowsGUl7ynKt2WCUzoZ13cxoM+JJ8exB4nKTP\nU0ntmQ1yPZMW+vq1YbD1pyJBqS8YPNGI0TjlW+fNH1t1sSZ5TGiGuj+eb8nJF8IX\ncifaAdGiYxBIy1bajpMNy17Z/oJawTi2LE+vt3Wc5cMHD+YHhL49yJaJvIArUIP0\ntyvsAHUXB4zsDd+9hGk8jrn6SqTGy/PN+raJ1ntyRg9f7gLEe8GNRRu4ajzlmsov\nlutFWg0eqZeuVlpcvQMtYNHn7SEzf3eOtROX+flcR0foKpvLXyJs5tmOL2J+037+\nTALoniF9S7LIiLFB0Iwq7MJgdROCLlL6n/f7eho8dZ7LhiAv8WLeFCrFKwAv/dGd\nJqy7UFRY/Dk5+5OU27LgDQmQahNC6kv3du2ERDsb24mMgoEXTylMGVu2vTI4Z15K\nsPPXv4XmloXTzAnSXBoFm8c4GPCytOXEaaQOLu3ylfEhBQGzlKimwBEImOTacf5/\n5+7s7ZOgR67wKn2tiyU0JPntKyzIV06COWzkEeVe/mcwoYW5Q/zIGm2aS+0xgdDL\n0bSc65UtV3A29XPD3xLkwrrvOsN9eEfDhDqaezZVm7uiU/GsjcjPgYfgZ+Ogauga\nUEw65s8QGDmUIO6l2C0SibvViFBiRhk+I1cnWnq+CIa+GSSir2s=\n=/7nR\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb8a36409ce00188f8a29b3e2e5247648c8ddcd1",
          "sha": "fb8a36409ce00188f8a29b3e2e5247648c8ddcd1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fb8a36409ce00188f8a29b3e2e5247648c8ddcd1"
        }
      ],
      "message": "kernel: Add interrupt function to C header\n\nCalling interrupt can halt long-running functions associated with\nobjects that were created through the passed-in context.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:15Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-05T08:20:40Z"
      },
      "sha": "4d090322e996d260c31e9d3dfc39c559e1a1e621"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYzYTBlMWMwYzFlZmU1M2VkODA5ZTUzY2Q0YzI1MjRhNWY3YmEwOWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3a0e1c0c1efe53ed809e53cd4c2524a5f7ba09f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f3a0e1c0c1efe53ed809e53cd4c2524a5f7ba09f",
      "tree": {
        "sha": "b937dc2dffb2cb341fe90cdf283ab4b70a38e050",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b937dc2dffb2cb341fe90cdf283ab4b70a38e050"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b937dc2dffb2cb341fe90cdf283ab4b70a38e050\nparent 4d090322e996d260c31e9d3dfc39c559e1a1e621\nauthor TheCharlatan <seb.kung@gmail.com> 1717102788 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175597 +0200\n\nkernel: Add validation interface and task runner to C header\n\nThis adds the infrastructure required to process validation events. For\nnow the external validation interface only has support for the\n`BlockChecked` callback, but support for the other internal validation\ninterface methods can be added in the future.\n\nBoth the validation interface and the task runner follow a architecture\nfor defining their callbacks and ownership that is similar to the\nnotifications.\n\nThe task runner is registered with a context, which internally creates a\nunique ValidationSignals object. When the user creates a new chainstate\nmanager the validation signals are internally passed to the chainstate\nmanager through the context.\n\nThe user has great flexibility when defining the callbacks of the task\nrunner, allowing for immediate, asynchronous, or threaded processing of\nthe inserted validation events. A validation event has to be processed\nthrough the `kernel_execute_event_and_destroy` function.\n\nA validation interface can register for validation events with a\ncontext. Internally the passed in validation interface is registerd with\nthe validation signals of a context.\n\nThe BlockChecked callback introduces a seperate type for a non-owned\nblock. Since a library-internal object owns this data, the user needs to\nbe explicitly prevented from deleting it. In a later commit a utility\nwill be added to copy its data.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWW0ACgkQm3m0VpHb\nQXN+RhAAgX+q/OoCDJmP6WuI5pnWIyeE8KUcYS5IWO1eRkW1AvK7h3hd+CWyJoFU\n6amQP50yUITXJILsHQkZEoYLHy3qxTYP5aWVHGu70Db+UsWkHinlQDikCO2Yz+Xv\n1rXwzY0LcgjHmKfUfQtsgO/KySReL/L9PvUmkAdta1nRHL/Y8rTs9Z55BKgj8jWw\nbL1mdB3BSQMFUZPpI+Mte8V1WnLh+XZuMIeZcllBEcbu/DQXXqF7zsSRZsdpVmij\nxcVueAjgLmWC88wmEQMPPTgdUGiydy0/4Ej/Owwd0wd1DW8ArgmbvYoGmKPn78u3\nDVI3UoWJTfDX2Z0GC1NtAt1LLt82T60+sxJcZWJEQJV3GLJ/5OcL5Ww206oOuH/N\nT+fKu9NltmLIiwnUDgaXRqqzpI+9yXKHp3PI6dfabgtImMzgX1kNBTSAIlNMjx28\nPXnX2TgPFXA9NvTSlGFjyc9MaXxQjy/N6xLWPtLSr6zHIefxlxWfG7QaLQG49x4T\nib4WZYjCj64zRodnVoUFdbv+iMxyVTVO1wE/mRdV08r2PeuSVoHC2+zXrjeQCaPY\nEcD0BEDcoZ5rwON4pK7S7cZqIVjYhQ/PBvtduMyqhpxftU9Han3dUlQTcrBpf3vu\n2l2qF2xJ6vtDDsZcJVwo+oD8OF4p6dFxoU9Gq60M/BXUj/lw3dU=\n=Nld0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d090322e996d260c31e9d3dfc39c559e1a1e621",
          "sha": "4d090322e996d260c31e9d3dfc39c559e1a1e621",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4d090322e996d260c31e9d3dfc39c559e1a1e621"
        }
      ],
      "message": "kernel: Add validation interface and task runner to C header\n\nThis adds the infrastructure required to process validation events. For\nnow the external validation interface only has support for the\n`BlockChecked` callback, but support for the other internal validation\ninterface methods can be added in the future.\n\nBoth the validation interface and the task runner follow a architecture\nfor defining their callbacks and ownership that is similar to the\nnotifications.\n\nThe task runner is registered with a context, which internally creates a\nunique ValidationSignals object. When the user creates a new chainstate\nmanager the validation signals are internally passed to the chainstate\nmanager through the context.\n\nThe user has great flexibility when defining the callbacks of the task\nrunner, allowing for immediate, asynchronous, or threaded processing of\nthe inserted validation events. A validation event has to be processed\nthrough the `kernel_execute_event_and_destroy` function.\n\nA validation interface can register for validation events with a\ncontext. Internally the passed in validation interface is registerd with\nthe validation signals of a context.\n\nThe BlockChecked callback introduces a seperate type for a non-owned\nblock. Since a library-internal object owns this data, the user needs to\nbe explicitly prevented from deleting it. In a later commit a utility\nwill be added to copy its data.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:17Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-30T20:59:48Z"
      },
      "sha": "f3a0e1c0c1efe53ed809e53cd4c2524a5f7ba09f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhhOWQ4NzA4NWYxZThjYzA4MmI1NTU5YTE0YTQwMjczNWJlN2U3NjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a9d87085f1e8cc082b5559a14a402735be7e764",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8a9d87085f1e8cc082b5559a14a402735be7e764",
      "tree": {
        "sha": "86ab014f96517e551646488e5f5903fea35854d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86ab014f96517e551646488e5f5903fea35854d4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 86ab014f96517e551646488e5f5903fea35854d4\nparent f3a0e1c0c1efe53ed809e53cd4c2524a5f7ba09f\nauthor TheCharlatan <seb.kung@gmail.com> 1717155240 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175598 +0200\n\nkernel: Add functions for the block validation state to C header\n\nThese allow for the interpretation of the data in a `BlockChecked`\nvalidation interface callback. This is useful to get richer information\nin case a block failed to validate.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWW4ACgkQm3m0VpHb\nQXO4Sw//Wvl+78TNnOig9GnqGgXnJIcgLPQ8P9+Zdye7P+ViezPE68PkU1wb5P9n\ngxjKsUvwc3ga0OmB3fZZOMXqdG+YrN8dGtoHWcY9J006QIpu7SmjHIU4qoS+H+Aw\nBRhvcXnRzsDbZdFKSRSi7XXk7xXRl6qLUVpcr7ylO4T1Hqw5zEf5wE3EN43FCZzv\nbNhe6RFRhEJKEbT5m/lfAnUiQuI56xcRDFrYGNaQWpNXrjWLS9vyVqq1k34bLxCa\ntPSMz0j4gJikwEPoTmFrM+B+LDBJoimR5RWnesehSWTmhD5nW2dL1yXs7G50V9vT\n/jsp2EfQpgXnQiOrJ0HJ0hLZowNjYby12aL14sEU4WPbv0OeXgvWVRt20igWccUP\nBVDJwZpFk9WRSuipn5ujgcBeDTUQlcEuwHS+nWNTW8EIQ0GwT1JDTUoQd3KFt9lT\nSzsXahlw4a+iPhCTq1lY7DQEEws6MtXdL6/ishyIcM1GfamvK3soHlJkV7MZBgA7\nRQW5MTZaOPmReSom1Azu5BzHJARDAy9mPNCz+AYa5w0ZW1sG+w5BsDcTv5tHp9S+\nHccHle8fPSbOokmSR+DrXVHlt6D3nGtjU/N5bVr55w7ZayQn4N8nIHRLK7ZmQV9/\nutWEIidjuEs8Bnsnon2UElc9Yyoj9H/6Qgba5iFugHXzby1X1GI=\n=Uc8M\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3a0e1c0c1efe53ed809e53cd4c2524a5f7ba09f",
          "sha": "f3a0e1c0c1efe53ed809e53cd4c2524a5f7ba09f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f3a0e1c0c1efe53ed809e53cd4c2524a5f7ba09f"
        }
      ],
      "message": "kernel: Add functions for the block validation state to C header\n\nThese allow for the interpretation of the data in a `BlockChecked`\nvalidation interface callback. This is useful to get richer information\nin case a block failed to validate.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:18Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-05-31T11:34:00Z"
      },
      "sha": "8a9d87085f1e8cc082b5559a14a402735be7e764"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYyMjFkNjBiNWE5OWI0OTkwNWFmZjY2ZTM1YmMwOGUyYWZiNmI2NDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6221d60b5a99b49905aff66e35bc08e2afb6b647",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6221d60b5a99b49905aff66e35bc08e2afb6b647",
      "tree": {
        "sha": "7268df33531ed90e9022e40879848774e85e70a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7268df33531ed90e9022e40879848774e85e70a8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 7268df33531ed90e9022e40879848774e85e70a8\nparent 8a9d87085f1e8cc082b5559a14a402735be7e764\nauthor TheCharlatan <seb.kung@gmail.com> 1717235572 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175599 +0200\n\nkernel: Add function for copying  block data to C header\n\nThis adds functions for copying serialized block data into a user-owned\nvariable-sized byte array.\n\nUse it in the tests for verifying the implementation of the validation\ninterface's `BlockChecked` method.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWW8ACgkQm3m0VpHb\nQXNv9g/9FF4yHFv8hpErDcmCFA/hVCdZ5HyFOO2WDcGRfZjygz8CZrYOzW6D6m9k\nJkvvAKXPK35/9chAZy16Krb6YPhSl+Thp5c379iv1qYAejAsZ1TATDnCTGczmYmL\nefreymvZY6SK0L7/ACp16du0YjcQVkGToRvnbMBbHMrbp32YwclCaYTFrrXysIbL\n8PoVFdGF/x3RJZPUrYO6QOs98e+QmQB7z1xwvon0jmPm9BscB3EMNyHHMJ9hm+8W\nXYKbLigZhm2jp7kQKud3jJOsDLAGFxTWzmlEhGoZefmbom4ApvJdqeFK+dzfeBp2\nICvXvrkPOHtTRIK93N29e2bxNIlA0vXCqDxaxcmalcdQsMfMkwYwSpO6wnKGUee5\nCCjwyfl/PV+ZelrIj3Exb4R2xGaVT83BMaK5dfAyj2lI+WqzuFAmu0hhidufRTXb\nhbJl3pr2FmLompy+xy+sPyY8i8qSEFCxGCa5xVQpvQ8yTlP2KfGc2OG6p99radV3\ngfqtNKQZSpDu9fSTVRQmRMjyRvY6HBG+VX4vCnBcCVfqHgirAQ2cUmpJD5yngMJ+\nufogkZNgIt2H0S4IEHThGqRd2ZmDoGhLS550AbgGrHLin9bZ+Des/E3y26kyjAII\nFf/kvCnsRLd/msdnDb3o/eP+H8juATkkwCw314Z3PcOWnwOPrz4=\n=hOMI\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a9d87085f1e8cc082b5559a14a402735be7e764",
          "sha": "8a9d87085f1e8cc082b5559a14a402735be7e764",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8a9d87085f1e8cc082b5559a14a402735be7e764"
        }
      ],
      "message": "kernel: Add function for copying  block data to C header\n\nThis adds functions for copying serialized block data into a user-owned\nvariable-sized byte array.\n\nUse it in the tests for verifying the implementation of the validation\ninterface's `BlockChecked` method.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:19Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-01T09:52:52Z"
      },
      "sha": "6221d60b5a99b49905aff66e35bc08e2afb6b647"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlhNjQ5ZmY1M2RlNGFkZDg0MjI2YTc2NjM1ODFkOGI3NWE2NDU2ZDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a649ff53de4add84226a7663581d8b75a6456d6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9a649ff53de4add84226a7663581d8b75a6456d6",
      "tree": {
        "sha": "2eb2926198cb6f5fd708e7fab35d6cd3a5a79ac4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2eb2926198cb6f5fd708e7fab35d6cd3a5a79ac4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 2eb2926198cb6f5fd708e7fab35d6cd3a5a79ac4\nparent 6221d60b5a99b49905aff66e35bc08e2afb6b647\nauthor TheCharlatan <seb.kung@gmail.com> 1717239811 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175601 +0200\n\nkernel: Add functions to read block from disk to C header\n\nThis adds functions for reading a block from disk with a retrieved block\nindex entry. External services that wish to build their own index, or\nanalyze blocks can use this to retrieve block data.\n\nThe block index can now be traversed from the tip backwards. This is\nguaranteed to work, since the chainstate maintains an internal block\ntree index in memory and every block (besides the genesis) has an\nancestor.\n\nThe user can use this function to iterate through all blocks in the\nchain (starting from the tip). Once the block index entry for the\ngenesis block is reached a nullptr is returned if the user attempts to\nget the previous entry.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWXEACgkQm3m0VpHb\nQXNQWQ//VkyFuEWEC0dUyfgYQcG9Nlo0QzTRWZbGuZZyb0TLjgnEl6LVXGZzal4U\n+PoUKZGA1O9aObFWubxKKfXhEjdp/qpjJX85jh5g2VYOMJToKy+h3ZEriqe/yeut\n9zXsmutxVjgS4eVU9geWryxpfpeItbLrRVW/l2YplSn3RRERrnxBWZQZ9VE7k3ph\nSTl0JnRwdx7aPWytfHJ6T7umyt8flRvOMtGAgprLlHK0ebsE9X75hTSEoDA5RZNE\nyKd1U9yUibbYRRRNfI7B/Juoe91B7THOyfODzKGz106sNGJaxxcAwjk3GpbmgKhS\nSJXol4HChyHItRVdnR1RuEPC1DZxY+PEDftkjC8ZXEBYwBxBhxbrQk3cn0ZrpLUw\nbfSe8EXwnl2OlmOFMHMxEVyczB9412DBhv8Ba4X2CSLrbWiOxXZ8kHYkeFuxuXF4\nwHzvUiVnUV0AMz5zOj0v/daI/6jHGwWi2cnvRs63cdnvk3OaBCrN/ceqlfGTXjRw\n5z7POQgLug6ERGA++VOF7BYysjXWW70kRcKdTjf/HgfsCmyhpkM2oepxuc+dhI8o\ndVAdIAnxTVkTR27y5ULwpsReFAeU3qHaH2kZt70cLpjT3+KcRfOLWxEaDGvps9c1\nPNlzZh3ozbx+27O1dq6dH/0esjcZVvi44LEMegRfs0fQo8+/tnc=\n=HEen\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6221d60b5a99b49905aff66e35bc08e2afb6b647",
          "sha": "6221d60b5a99b49905aff66e35bc08e2afb6b647",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6221d60b5a99b49905aff66e35bc08e2afb6b647"
        }
      ],
      "message": "kernel: Add functions to read block from disk to C header\n\nThis adds functions for reading a block from disk with a retrieved block\nindex entry. External services that wish to build their own index, or\nanalyze blocks can use this to retrieve block data.\n\nThe block index can now be traversed from the tip backwards. This is\nguaranteed to work, since the chainstate maintains an internal block\ntree index in memory and every block (besides the genesis) has an\nancestor.\n\nThe user can use this function to iterate through all blocks in the\nchain (starting from the tip). Once the block index entry for the\ngenesis block is reached a nullptr is returned if the user attempts to\nget the previous entry.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:21Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-01T11:03:31Z"
      },
      "sha": "9a649ff53de4add84226a7663581d8b75a6456d6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDljNzJhNDQ3YmQ0MDk3Njc1ZTc1ZGU0YjYwNzRiOTRjZDA4OGFhYjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c72a447bd4097675e75de4b6074b94cd088aab2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9c72a447bd4097675e75de4b6074b94cd088aab2",
      "tree": {
        "sha": "b7218de5f160224306f4c501b5f44ae8c9eaa8af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7218de5f160224306f4c501b5f44ae8c9eaa8af"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b7218de5f160224306f4c501b5f44ae8c9eaa8af\nparent 9a649ff53de4add84226a7663581d8b75a6456d6\nauthor TheCharlatan <seb.kung@gmail.com> 1717246076 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175602 +0200\n\nkernel: Add function to read block undo data from disk to C header\n\nThis adds functions for reading the undo data from disk with a retrieved\nblock index entry. The undo data of a block contains all the spent\nscript pubkeys of all the transactions in a block.\n\nIn normal operations undo data is used during re-orgs. This data might\nalso be useful for building external indexes, or to scan for silent\npayment transactions.\n\nInternally the block undo data contains a vector of transaction undo\ndata which contains a vector of the spent outputs. For this reason, the\n`kernel_get_block_undo_size(...)` function is added to the header for\nretrieving the size of the transaction undo data vector, as well as the\n`kernel_get_transaction_undo_size(...) function for retrieving the size\nof each spent outputs vector contained within each transaction undo data\nentry. With these two sizes the user can iterate through the undo data\nby accessing the transaction outputs by their indeces with\n`kernel_get_undo_output_by_index`. If an invalid index is passed in, the\n`kernel_ERROR_OUT_OF_BOUNDS` error is returned again.\n\nThe returned `kernel_TransactionOutput` is entirely owned by the user\nand may be destroyed with the `kernel_transaction_output_destroy(...)`\nconvenience function.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWXIACgkQm3m0VpHb\nQXMo0Q//Zy54filMY9hPvLfykTujQtl2YUOIIpQpJWd9JV/XLQv8Iw2LgpdrhDoN\nV0BGKuo3qC4MKnfj1LO8n+IBbibPEFzM+4eo280VPcopPxHDZ+X83a017yo5vRHf\natvFgpvI1FVWHdOgRAA6NqwDyjRBF14bzfRTy1BIqA9A8bymQXsjkRoMuW1jVrhl\np6r6SsNDRiU0pJRsHC+a5omrJ2pU3SAJoZ1XQNaYLScDcXQkNfGNOBGUiFow/Yae\nd+aQReleBaiq8MZIT3HmhzfTnZFlyMX4XTyeXthJ0ORpDaBXhjempFJfbZPDo+kV\ndwzMrraEWI+xEjFNAwqjWRtb6QnYODb+SqdjVbI0aZINL0OO8EKLI5PvHLpEbvbi\n56Uuqy7HZr1Ue9uFIAfmj9kpCWhbLAqyVa1ED6Lbj2TwNOO0e56tXhHiKk1YXDLz\n9idAYuzCN6DcARZbPooDA+zcspO79r8ZcgzzC/vl0pm0m6w+R/XwKJNd8dQWFwwj\nYeGiCJpNFljTeeMEgWlAkT9EgwJQRDyJN0skDhYCls3B6gFekDTkVT17XyTJ+1rz\nX8+z1HWnyyU5l3Xdb2iPMxAj9tVDM75ui6DLrElixBsN+Sv56HCqfolNqSG4L7vQ\nZmWKioxhVnsXqXOnfE1fi6u4uGAn3643jS6xCSbyADApyUAu9To=\n=8Ycl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a649ff53de4add84226a7663581d8b75a6456d6",
          "sha": "9a649ff53de4add84226a7663581d8b75a6456d6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9a649ff53de4add84226a7663581d8b75a6456d6"
        }
      ],
      "message": "kernel: Add function to read block undo data from disk to C header\n\nThis adds functions for reading the undo data from disk with a retrieved\nblock index entry. The undo data of a block contains all the spent\nscript pubkeys of all the transactions in a block.\n\nIn normal operations undo data is used during re-orgs. This data might\nalso be useful for building external indexes, or to scan for silent\npayment transactions.\n\nInternally the block undo data contains a vector of transaction undo\ndata which contains a vector of the spent outputs. For this reason, the\n`kernel_get_block_undo_size(...)` function is added to the header for\nretrieving the size of the transaction undo data vector, as well as the\n`kernel_get_transaction_undo_size(...) function for retrieving the size\nof each spent outputs vector contained within each transaction undo data\nentry. With these two sizes the user can iterate through the undo data\nby accessing the transaction outputs by their indeces with\n`kernel_get_undo_output_by_index`. If an invalid index is passed in, the\n`kernel_ERROR_OUT_OF_BOUNDS` error is returned again.\n\nThe returned `kernel_TransactionOutput` is entirely owned by the user\nand may be destroyed with the `kernel_transaction_output_destroy(...)`\nconvenience function.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:22Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-01T12:47:56Z"
      },
      "sha": "9c72a447bd4097675e75de4b6074b94cd088aab2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY3YjY1ZjU5OTk5NTE5OGFlYjg3Mzc4ZTVhOGY5ZDM1NWY5Y2IyMmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7b65f599995198aeb87378e5a8f9d355f9cb22c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f7b65f599995198aeb87378e5a8f9d355f9cb22c",
      "tree": {
        "sha": "c716a53dcdfab0cee957eace90dbef7193f93f26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c716a53dcdfab0cee957eace90dbef7193f93f26"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c716a53dcdfab0cee957eace90dbef7193f93f26\nparent 9c72a447bd4097675e75de4b6074b94cd088aab2\nauthor TheCharlatan <seb.kung@gmail.com> 1717617940 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175603 +0200\n\nkernel: Add block index utility functions to C header\n\nAdds further functions useful for traversing the block index and\nretrieving block information.\n\nThe added `kernel_BlockIndexInfo` struct can be expanded in future to\nhold richer information about a certain block index.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWXMACgkQm3m0VpHb\nQXPd5Q/+JukX7Y2XwhH1XD1ltX7fcdprn6WCE5t1rxvf3KncF3RbaY0EzxamS9x3\n51dS9r+Dix6c3kFTBCr3G5pdSw56uw7oVQh6bhetRQ2do3UPNTTsZXLVkuUhc8uy\nUb6ezUT4ALT9QSzvKulFKPgighYycC4kVHrdbadlrqUmBTnqFZB9Nb7B9b479lD/\nBpOXjsrz801dU8r5y0qLuJZpdnoKAchJfNhLuI9pa7/qIat2uG46KPoXmKH110UC\nRB5opXsq3PYtkoCFObJ6w6RrAyzfhV3t6xgcSnGBsDfERN+A4+lmp4QreXM3EurN\nkeSjdefhl0XZD5ctlWXRshYoe6z4MIvfTOiMYMlTLCxbHVm13/i65ECAThjIDM6d\n0CZNIrwEMD81XfP3PUFTCTYBTU347jWN2XzpicS6GM0JPuvWlRYnBZrUgDNexjEe\nLEyz8IjVyoZ9+oR6D4oBK/GBUnsF6A/6ytSHxmPZaz5620csceOmfypwEj88WZTR\nv7OKqEAYtitVyeVmWDxDNp9osnEKfWF6ML2nesgytqE6TlhqBhE62gpF2KP4X2/4\n+u3KFiafztl6mkp3cDpnE86bYDXQjO9iOoLOBweWXrrJC3PfrkaKR3wZmPCcpYaB\nH9XqWr4GfZLJYW8vn854KjxcKuIcCFiIA2Ksm/3xeUwxYPQL2IQ=\n=HuIV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9c72a447bd4097675e75de4b6074b94cd088aab2",
          "sha": "9c72a447bd4097675e75de4b6074b94cd088aab2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9c72a447bd4097675e75de4b6074b94cd088aab2"
        }
      ],
      "message": "kernel: Add block index utility functions to C header\n\nAdds further functions useful for traversing the block index and\nretrieving block information.\n\nThe added `kernel_BlockIndexInfo` struct can be expanded in future to\nhold richer information about a certain block index.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:23Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-05T20:05:40Z"
      },
      "sha": "f7b65f599995198aeb87378e5a8f9d355f9cb22c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFjY2E5ZWUyMTY1MmQ4Y2ZmYWMxNDkyNjUxMWMyZDdhM2U0MDA0M2Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/acca9ee21652d8cffac14926511c2d7a3e40043d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/acca9ee21652d8cffac14926511c2d7a3e40043d",
      "tree": {
        "sha": "8d003beebcaf9c7c8bf5c834a980c7a51fe7f246",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d003beebcaf9c7c8bf5c834a980c7a51fe7f246"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8d003beebcaf9c7c8bf5c834a980c7a51fe7f246\nparent f7b65f599995198aeb87378e5a8f9d355f9cb22c\nauthor TheCharlatan <seb.kung@gmail.com> 1718382788 +0200\ncommitter TheCharlatan <seb.kung@gmail.com> 1726175604 +0200\n\nkernel: Add pure kernel bitcoin-chainstate\n\nThis showcases a re-implementation of bitcoin-chainstate only using the\nkernel C++ API header.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE8s/Eq9C5nYN+67fQm3m0VpHbQXMFAmbjWXQACgkQm3m0VpHb\nQXONYhAAslXwPYyGgl5VUM1PEeom9GFQcwiWTExvlzrvJynLz6oXspVju/uIgxu9\nT87NBFqZrELWhvdVYVwA/rBEuUUHRGXV6qY+aO9hWUggbNSHi95gh2z+YkQDMWKN\nUOsDlFRYxp60cxeyyHND4N8C32jWc33H5eSQtx1IrVWR0kfmpT7e08/kCLP5Nl3W\n3lBOwR0+GU4+Wu5UDOd0KNktbjQi/vQd4Icz/EgqEoB56MTyAYsN2bIpm3DderR1\nO4BVL84VzHq4sMNfUicYNvfk6uNwm3Nx4lXHi7pl1ekU0djDvqUShrjT6+NstPzc\nafl/Y7Ksbc6jGJ5tAVieTaNggxdaRJIItHO7AHoEpzQUm7xHFVogXZAWoVnvBJDe\n+G84aoF39b40ZtGkv0MaWtCiGWN6KAewiD1CSxQc3v+WOUA1IaFNkdIFboDRA6P7\ncUIp3KwgLVyv83tBR4IDTDxEx/Mq6rG/v8yJI9Fne1m2NTjMi3TwYfHbZnpJ/bjm\nga8IcWMhZ10iZc1oJcO9iQRSMnxGeODrzHDczlzl00P2wBI/lWPNywAzwn+jY2K8\nKQsPfhlGNr7EB4VVwnMq6Iov3O1JA3OHGbRxBGH3/vyE4/K+Nc1cglBE1E91PY4Z\nxWdvZKmeqJCV/Ch9HP3wex6eKsqHOdtnrhrRppFGSUXlrXmIr0A=\n=inkD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7b65f599995198aeb87378e5a8f9d355f9cb22c",
          "sha": "f7b65f599995198aeb87378e5a8f9d355f9cb22c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f7b65f599995198aeb87378e5a8f9d355f9cb22c"
        }
      ],
      "message": "kernel: Add pure kernel bitcoin-chainstate\n\nThis showcases a re-implementation of bitcoin-chainstate only using the\nkernel C++ API header.",
      "committer": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-09-12T21:13:24Z"
      },
      "author": {
        "name": "TheCharlatan",
        "email": "seb.kung@gmail.com",
        "date": "2024-06-14T16:33:08Z"
      },
      "sha": "acca9ee21652d8cffac14926511c2d7a3e40043d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14239085806,
      "node_id": "HRFPE_lADOABII586SDdapzwAAAANQtzTu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14239085806",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T21:19:08Z"
    },
    {
      "event": "commented",
      "id": 2347263134,
      "node_id": "IC_kwDOABII586L6GSe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2347263134",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T21:19:19Z",
      "updated_at": "2024-09-12T21:19:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased.",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30595#issuecomment-2347263134",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30595"
    },
    {
      "event": "unlabeled",
      "id": 14239824640,
      "node_id": "UNLE_lADOABII586SDdapzwAAAANQwnsA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14239824640",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T22:52:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    }
  ],
  "comments": []
}