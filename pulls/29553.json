{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553",
    "id": 1755036646,
    "node_id": "PR_kwDOABII585om7vm",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29553",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29553.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29553.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/b5292334e5e8792644123b627896359eb1da8d25",
    "number": 29553,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "assumeutxo: Add dumptxoutset height param, remove shell scripts",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This adds a height parameter to the `dumptxoutset` RPC. This internalizes the workflow that was previously done by scripts: roll back the chain to the height we actually want the snapshot from, create the snapshot, roll forward to the real tip again.\r\n\r\nThe nice thing about internalizing this functionality is that we can write tests for the code and it gives us more options to make the functionality robust. The shell scripts we have so far will be more cumbersome to maintain in the long run, especially since we will only notice later when we have broken them. I think it's safe to remove these `test_utxo_snapshots.sh` as well when we have this option in `dumptxoutset` because we have also added some good additional functional test coverage for this functionality.",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "created_at": "2024-03-04T15:58:11Z",
    "updated_at": "2024-08-22T10:58:04Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "c0d6d900e1fa135e183dcb75d898926653635a8b",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "alfonsoromanz",
        "id": 19962151,
        "node_id": "MDQ6VXNlcjE5OTYyMTUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/19962151?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfonsoromanz",
        "html_url": "https://github.com/alfonsoromanz",
        "followers_url": "https://api.github.com/users/alfonsoromanz/followers",
        "following_url": "https://api.github.com/users/alfonsoromanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfonsoromanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfonsoromanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfonsoromanz/subscriptions",
        "organizations_url": "https://api.github.com/users/alfonsoromanz/orgs",
        "repos_url": "https://api.github.com/users/alfonsoromanz/repos",
        "events_url": "https://api.github.com/users/alfonsoromanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfonsoromanz/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "fjahr:2024-03-dumptxoutset-height",
      "ref": "2024-03-dumptxoutset-height",
      "sha": "b5292334e5e8792644123b627896359eb1da8d25",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 196253948,
        "node_id": "MDEwOlJlcG9zaXRvcnkxOTYyNTM5NDg=",
        "name": "bitcoin",
        "full_name": "fjahr/bitcoin",
        "owner": {
          "login": "fjahr",
          "id": 1322187,
          "node_id": "MDQ6VXNlcjEzMjIxODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fjahr",
          "html_url": "https://github.com/fjahr",
          "followers_url": "https://api.github.com/users/fjahr/followers",
          "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
          "organizations_url": "https://api.github.com/users/fjahr/orgs",
          "repos_url": "https://api.github.com/users/fjahr/repos",
          "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/fjahr/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/fjahr/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/fjahr/bitcoin",
        "archive_url": "https://api.github.com/repos/fjahr/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/fjahr/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/fjahr/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/fjahr/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/fjahr/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/fjahr/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/fjahr/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/fjahr/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/fjahr/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/fjahr/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/fjahr/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/fjahr/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/fjahr/bitcoin/events",
        "forks_url": "https://api.github.com/repos/fjahr/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/fjahr/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/fjahr/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/fjahr/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/fjahr/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/fjahr/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/fjahr/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/fjahr/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/fjahr/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/fjahr/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/fjahr/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/fjahr/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/fjahr/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/fjahr/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/fjahr/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/fjahr/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:fjahr/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/fjahr/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/fjahr/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/fjahr/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/fjahr/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/fjahr/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/fjahr/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/fjahr/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/fjahr/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/fjahr/bitcoin/hooks",
        "svn_url": "https://github.com/fjahr/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 252603,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-21T22:22:48Z",
        "created_at": "2019-07-10T18:11:06Z",
        "updated_at": "2024-07-23T22:14:45Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "bc87ad98543299e1990ee1994d0653df3ac70093",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36061,
        "stargazers_count": 77989,
        "watchers_count": 77989,
        "size": 265575,
        "default_branch": "master",
        "open_issues_count": 668,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-08-21T17:30:07Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-08-22T09:58:15Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 341,
    "deletions": 402,
    "changed_files": 11,
    "commits": 8,
    "review_comments": 54,
    "comments": 15
  },
  "events": [
    {
      "event": "commented",
      "id": 1976911164,
      "node_id": "IC_kwDOABII58511UU8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1976911164",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-04T15:58:15Z",
      "updated_at": "2024-08-22T10:56:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29553).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2253922313) |\n| Concept ACK | [theStack](https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-1977099942), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-1980783607), [BrandonOdiwuor](https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-1919888870), [mzumsande](https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2200131865), [pablomartin4btc](https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2251181767) |\n| Stale ACK | [alfonsoromanz](https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2033825476), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2241421928) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30690](https://github.com/bitcoin/bitcoin/pull/30690) (devtools, utxo-snapshot: Fix block height out of range in script by pablomartin4btc)\n* [#30666](https://github.com/bitcoin/bitcoin/pull/30666) (validation: improve m_best_header tracking by mzumsande)\n* [#30635](https://github.com/bitcoin/bitcoin/pull/30635) (rpc: add optional blockhash to waitfornewblock by Sjors)\n* [#30409](https://github.com/bitcoin/bitcoin/pull/30409) (Introduce waitTipChanged() mining interface, replace RPCNotifyBlockChange and drop CRPCSignals by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-1976911164",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "commented",
      "id": 1977099942,
      "node_id": "IC_kwDOABII58512Cam",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1977099942",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-04T17:25:27Z",
      "updated_at": "2024-03-04T17:25:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nNice idea. I think it makes sense to do the rollback (and roll forward after dump creation) directly in the RPC call, rather than relying on potentially fragile and poorly maintained shell scripts. One suggestion: on pruned nodes, the RPC should fail early if the block of the snapshot height is below the pruned block height, similar like what the script does:\r\nhttps://github.com/bitcoin/bitcoin/blob/98005b6a17907c4f7bdcf802ee96c274492f902a/contrib/devtools/utxo_snapshot.sh#L34-L37\r\n\r\nI'm neutral about removing `test_utxo_snapshots.sh`. This seems to be more meant like an interactive demo to get familiar with AssumeUTXO and as such could still make sense for some?",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-1977099942",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "reviewed",
      "id": 1914795143,
      "node_id": "PRR_kwDOABII585yIXSH",
      "url": null,
      "actor": null,
      "commit_id": "0325335ec019620ba388ec9cef7971b21746931f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-1914795143",
      "submitted_at": "2024-03-04T18:21:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "commented",
      "id": 1977283372,
      "node_id": "IC_kwDOABII58512vMs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1977283372",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-04T19:14:21Z",
      "updated_at": "2024-03-04T19:14:21Z",
      "author_association": "MEMBER",
      "body": "Seems like this should freeze indexes, wallets, etc and hold a lock so nothing else happens during the process...?",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-1977283372",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "commented",
      "id": 1978480989,
      "node_id": "IC_kwDOABII58517Tld",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1978480989",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-05T10:51:12Z",
      "updated_at": "2024-03-05T10:51:12Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. But rather than relying on block invalidation, I would prefer to have a clean rollback. That would be useful as it's own RPC too: turn off network, call `rollback N/HASH`, turn on network and it will sync normally. See #29565.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-1978480989",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "commented",
      "id": 1980783607,
      "node_id": "IC_kwDOABII5852EFv3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1980783607",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-06T12:40:21Z",
      "updated_at": "2024-03-06T12:40:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-1980783607",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "reviewed",
      "id": 1919888870,
      "node_id": "PRR_kwDOABII585yby3m",
      "url": null,
      "actor": null,
      "commit_id": "0325335ec019620ba388ec9cef7971b21746931f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\ngreat idea moving `InvalidateBlock` and `ReconsiderBlock` to the `dumputxoset` RPC instead of relying on shell scripts",
      "user": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-1919888870",
      "submitted_at": "2024-03-06T14:20:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "labeled",
      "id": 12107196545,
      "node_id": "LE_lADOABII586BLJvCzwAAAALRpSiB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12107196545",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-13T17:50:50Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12140857324,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAALTpsfs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12140857324",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-16T20:37:24Z"
    },
    {
      "event": "unlabeled",
      "id": 12140874543,
      "node_id": "UNLE_lADOABII586BLJvCzwAAAALTpwsv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12140874543",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-16T20:47:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2002129556,
      "node_id": "IC_kwDOABII5853VhKU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2002129556",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-16T20:57:39Z",
      "updated_at": "2024-03-16T20:57:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for all the comments! Rebased and addressed feedback.\r\n\r\n> One suggestion: on pruned nodes, the RPC should fail early if the block of the snapshot height is below the pruned block height\r\n\r\nAdded, good idea!\r\n\r\n> I'm neutral about removing test_utxo_snapshots.sh. This seems to be more meant like an interactive demo to get familiar with AssumeUTXO and as such could still make sense for some?\r\n\r\nYeah, I was kind of aiming at that when I wrote \"TBD if we need additional documentation.\". Since your comment I have been thinking about it a bit more but because that script requires the person that runs it to change the code and recompile bitcoin core I think its audience was always just a tiny group, particularly I think it was useful for reviewers of the concept and code in the early days. Going forward it should be more valuable if we instead document the code properly to make it easy to grasp for contributors (the same goes for the functional tests where we essentially go through similar steps as the script) and for users we should provide easy documentation that explains the usage of the feature properly but doesn't require changing the code.\r\n\r\nI have added another commit where I am splitting off a part of the previous design doc into a separate, usage-focused doc. Let me know what you think and if you have ideas for making the usage doc more complete.\r\n\r\n> Seems like this should freeze indexes, wallets, etc, and hold a lock so nothing else happens during the process...?\r\n\r\n> But rather than relying on block invalidation, I would prefer to have a clean rollback.\r\n\r\nI think these requests are essentially the same, or at least the ideal solution to both of these will look similar.\r\n\r\nFor now, I have only added that I am setting the network to inactive and I will now work on a draft for the clean rollback. But I am still pushing this here now because I think this is already an improvement as-is and the clean rollback may be a bigger change that could also be done as a follow-up, so I don't think review needs to be blocked here. I will report back on the rollback progress here soon.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-2002129556",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "reviewed",
      "id": 1941530208,
      "node_id": "PRR_kwDOABII585zuWZg",
      "url": null,
      "actor": null,
      "commit_id": "5da057c5330a49122873b9d5f5a44aea9bff1a8d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-1941530208",
      "submitted_at": "2024-03-17T16:46:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "commented",
      "id": 2003837404,
      "node_id": "IC_kwDOABII5853cCHc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2003837404",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T12:56:03Z",
      "updated_at": "2024-03-18T12:56:03Z",
      "author_association": "MEMBER",
      "body": "> > Seems like this should freeze indexes, wallets, etc, and hold a lock so nothing else happens during the process...?\r\n> \r\n> > But rather than relying on block invalidation, I would prefer to have a clean rollback.\r\n> \r\n> I think these requests are essentially the same, or at least the ideal solution to both of these will look similar.\r\n\r\nAnother approach, suggested by @maflcko in #29565 is to rewind the UTXO set inside of a cache. If that cache is kept isolated from the rest of the node, then indexes and wallets are not affected. It's also safe to abort the process, worst case just leaving a large temp file around.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-2003837404",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "mentioned",
      "id": 12151643204,
      "node_id": "MEE_lADOABII586BLJvCzwAAAALUS1xE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12151643204",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T12:56:05Z"
    },
    {
      "event": "subscribed",
      "id": 12151643240,
      "node_id": "SE_lADOABII586BLJvCzwAAAALUS1xo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12151643240",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T12:56:05Z"
    },
    {
      "event": "commented",
      "id": 2003847400,
      "node_id": "IC_kwDOABII5853cEjo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2003847400",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T13:00:34Z",
      "updated_at": "2024-03-18T13:00:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Another approach, suggested by @maflcko in #29565 is to rewind the UTXO set inside of a cache. If that cache is kept isolated from the rest of the node, then indexes and wallets are not affected. It's also safe to abort the process, worst case just leaving a large temp file around.\r\n\r\nYes, I have a similar approach in mind. I think that is the cleanest solution if it's feasible in terms of complexity.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-2003847400",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "mentioned",
      "id": 12151710479,
      "node_id": "MEE_lADOABII586BLJvCzwAAAALUTGMP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12151710479",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T13:00:36Z"
    },
    {
      "event": "subscribed",
      "id": 12151710503,
      "node_id": "SE_lADOABII586BLJvCzwAAAALUTGMn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12151710503",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-18T13:00:36Z"
    },
    {
      "event": "labeled",
      "id": 12188444317,
      "node_id": "LE_lADOABII586BLJvCzwAAAALWfOad",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12188444317",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T17:09:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12190707596,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAALWn2-M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12190707596",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T20:04:56Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12191580246,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAALWrMBW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12191580246",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T21:28:05Z"
    },
    {
      "event": "unlabeled",
      "id": 12191631393,
      "node_id": "UNLE_lADOABII586BLJvCzwAAAALWrYgh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12191631393",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T21:33:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12237338700,
      "node_id": "LE_lADOABII586BLJvCzwAAAALZZvhM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12237338700",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-25T16:27:54Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12240085579,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAALZkOJL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12240085579",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-25T20:01:33Z"
    },
    {
      "event": "unlabeled",
      "id": 12240635448,
      "node_id": "UNLE_lADOABII586BLJvCzwAAAALZmUY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12240635448",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-25T20:52:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 12588000304,
      "node_id": "LE_lADOABII586BLJvCzwAAAALuTaQw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12588000304",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-24T08:30:21Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "reviewed",
      "id": 2033825476,
      "node_id": "PRR_kwDOABII5855ObbE",
      "url": null,
      "actor": null,
      "commit_id": "c83d7a5dec3595abe4cc6c8dcb29a016c6905a98",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code Review and Tested ACK c83d7a5dec3595abe4cc6c8dcb29a016c6905a98. My impression is that this PR is good enough as is, unless there is a specific issue with `invalidate`/`reconsider` block that I am not aware of. \r\n\r\nThis will not only prevent errors (by internalizing and testing code previously ran in scripts) but will also offer an easy way for users to create a snapshot from a specific height via RPC. If the rollback functionality gets implemented after this PR is merged, it seems straightforward to change this code to: (1) use the rollback instead of the `invalidateBlock`, and (2) remove the `ReconsiderBlock` call as the node will sync to the tip again. So I don't think the rollback feature should be a blocker for this PR.\r\n\r\nNote: for testing I ran `test/functional/feature_assumeutxo.py` to make sure the test passes, and also modified line 391 to load the snapshot created by this new test in node2, to make sure the snapshot is loaded successfully too. i.e (line 391)\r\n`loaded = n2.loadtxoutset(dump_output2['path'])`",
      "user": {
        "login": "alfonsoromanz",
        "id": 19962151,
        "node_id": "MDQ6VXNlcjE5OTYyMTUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/19962151?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfonsoromanz",
        "html_url": "https://github.com/alfonsoromanz",
        "followers_url": "https://api.github.com/users/alfonsoromanz/followers",
        "following_url": "https://api.github.com/users/alfonsoromanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfonsoromanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfonsoromanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfonsoromanz/subscriptions",
        "organizations_url": "https://api.github.com/users/alfonsoromanz/orgs",
        "repos_url": "https://api.github.com/users/alfonsoromanz/repos",
        "events_url": "https://api.github.com/users/alfonsoromanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfonsoromanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2033825476",
      "submitted_at": "2024-05-01T15:25:15Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "review_requested",
      "id": 12671722607,
      "node_id": "RRE_lADOABII586BLJvCzwAAAALzSyRv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12671722607",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T15:25:19Z",
      "requested_reviewer": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 12671722726,
      "node_id": "RRE_lADOABII586BLJvCzwAAAALzSyTm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12671722726",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T15:25:19Z",
      "requested_reviewer": {
        "login": "BrandonOdiwuor",
        "id": 15610188,
        "node_id": "MDQ6VXNlcjE1NjEwMTg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/15610188?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/BrandonOdiwuor",
        "html_url": "https://github.com/BrandonOdiwuor",
        "followers_url": "https://api.github.com/users/BrandonOdiwuor/followers",
        "following_url": "https://api.github.com/users/BrandonOdiwuor/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/BrandonOdiwuor/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/BrandonOdiwuor/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/BrandonOdiwuor/subscriptions",
        "organizations_url": "https://api.github.com/users/BrandonOdiwuor/orgs",
        "repos_url": "https://api.github.com/users/BrandonOdiwuor/repos",
        "events_url": "https://api.github.com/users/BrandonOdiwuor/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/BrandonOdiwuor/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 12671722831,
      "node_id": "RRE_lADOABII586BLJvCzwAAAALzSyVP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12671722831",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T15:25:20Z",
      "requested_reviewer": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 12671722935,
      "node_id": "RRE_lADOABII586BLJvCzwAAAALzSyW3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12671722935",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-01T15:25:21Z",
      "requested_reviewer": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "labeled",
      "id": 13043173081,
      "node_id": "LE_lADOABII586BLJvCzwAAAAMJbwbZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13043173081",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-05T00:10:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13063397291,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAAMKo5-r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13063397291",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-06T09:00:38Z"
    },
    {
      "event": "commented",
      "id": 2151786093,
      "node_id": "IC_kwDOABII586AQaZt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2151786093",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-06T09:07:50Z",
      "updated_at": "2024-06-06T09:07:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased\r\n\r\n> My impression is that this PR is good enough as is, unless there is a specific issue with invalidate/reconsider block that I am not aware of.\r\n\r\n> If the rollback functionality gets implemented after this PR is merged, it seems straightforward to change this code\r\n\r\nYes, either way, this PR should be an improvement. I am still planning to do the rollback in a cleaner way but if this PR is merged before that is ready, there should be no overhead resulting from that. It would become a refactoring follow-up that does not change the RPC interface again.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-2151786093",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "reviewed",
      "id": 2101363203,
      "node_id": "PRR_kwDOABII5859QEID",
      "url": null,
      "actor": null,
      "commit_id": "71b9fa96bfe1c936ecb10d3e5d1b95b7d24f9ea8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2101363203",
      "submitted_at": "2024-06-06T09:15:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "unlabeled",
      "id": 13063813765,
      "node_id": "UNLE_lADOABII586BLJvCzwAAAAMKqfqF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13063813765",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-06T09:33:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13068665225,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAAMK9AGJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13068665225",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-06T15:30:26Z"
    },
    {
      "event": "commented",
      "id": 2158443019,
      "node_id": "IC_kwDOABII586ApzoL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2158443019",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-10T13:53:59Z",
      "updated_at": "2024-06-10T13:53:59Z",
      "author_association": "MEMBER",
      "body": "> I am still planning to do the rollback in a cleaner way but[...] It would become a refactoring follow-up that does not change the RPC interface again.\r\n\r\nThat makes sense.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-2158443019",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "reviewed",
      "id": 2132676568,
      "node_id": "PRR_kwDOABII585_Hg_Y",
      "url": null,
      "actor": null,
      "commit_id": "6a5408dd7da4c31283cb4f632b3a7aa692a53ca3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 6a5408dd7da4c31283cb4f632b3a7aa692a53ca3. This is a really nice improvement over existing shell scripts, with a surprisingly simple implementation. I left some suggestions, but none are important and this looks good to merge in its current form. ",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2132676568",
      "submitted_at": "2024-06-21T20:03:19Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "review_requested",
      "id": 13246668153,
      "node_id": "RRE_lADOABII586BLJvCzwAAAAMVkB15",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13246668153",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-21T20:03:22Z",
      "requested_reviewer": {
        "login": "alfonsoromanz",
        "id": 19962151,
        "node_id": "MDQ6VXNlcjE5OTYyMTUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/19962151?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alfonsoromanz",
        "html_url": "https://github.com/alfonsoromanz",
        "followers_url": "https://api.github.com/users/alfonsoromanz/followers",
        "following_url": "https://api.github.com/users/alfonsoromanz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alfonsoromanz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alfonsoromanz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alfonsoromanz/subscriptions",
        "organizations_url": "https://api.github.com/users/alfonsoromanz/orgs",
        "repos_url": "https://api.github.com/users/alfonsoromanz/repos",
        "events_url": "https://api.github.com/users/alfonsoromanz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alfonsoromanz/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "referenced",
      "id": 13461006935,
      "node_id": "REFE_lADOABII586BLJvCzwAAAAMiVqpX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13461006935",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "f4849f692270f341f353806c44f2c1849879a6bf",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4849f692270f341f353806c44f2c1849879a6bf",
      "created_at": "2024-07-10T19:27:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13474660145,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAAMjJv8x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13474660145",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T16:50:39Z"
    },
    {
      "event": "labeled",
      "id": 13478549642,
      "node_id": "LE_lADOABII586BLJvCzwAAAAMjYliK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13478549642",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T21:58:51Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13479122564,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAAMjaxaE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13479122564",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-11T23:22:50Z"
    },
    {
      "event": "unlabeled",
      "id": 13482164120,
      "node_id": "UNLE_lADOABII586BLJvCzwAAAAMjmX-Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13482164120",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T05:43:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13484510243,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAAMjvUwj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13484510243",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T09:19:56Z"
    },
    {
      "event": "commented",
      "id": 2225269474,
      "node_id": "IC_kwDOABII586Eouri",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2225269474",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T10:17:52Z",
      "updated_at": "2024-07-12T10:17:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and addressed feedback from @ryanofsky and @maflcko, thank you! This now includes the check for undo data since this was made possible by merge of https://github.com/bitcoin/bitcoin/pull/29668.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-2225269474",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "mentioned",
      "id": 13485195781,
      "node_id": "MEE_lADOABII586BLJvCzwAAAAMjx8IF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13485195781",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T10:17:53Z"
    },
    {
      "event": "subscribed",
      "id": 13485195795,
      "node_id": "SE_lADOABII586BLJvCzwAAAAMjx8IT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13485195795",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T10:17:53Z"
    },
    {
      "event": "mentioned",
      "id": 13485195811,
      "node_id": "MEE_lADOABII586BLJvCzwAAAAMjx8Ij",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13485195811",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T10:17:53Z"
    },
    {
      "event": "subscribed",
      "id": 13485195824,
      "node_id": "SE_lADOABII586BLJvCzwAAAAMjx8Iw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13485195824",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-12T10:17:53Z"
    },
    {
      "event": "commented",
      "id": 2227858355,
      "node_id": "IC_kwDOABII586Eymuz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2227858355",
      "actor": {
        "login": "Asma1665",
        "id": 162090440,
        "node_id": "U_kgDOCalNyA",
        "avatar_url": "https://avatars.githubusercontent.com/u/162090440?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Asma1665",
        "html_url": "https://github.com/Asma1665",
        "followers_url": "https://api.github.com/users/Asma1665/followers",
        "following_url": "https://api.github.com/users/Asma1665/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Asma1665/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Asma1665/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Asma1665/subscriptions",
        "organizations_url": "https://api.github.com/users/Asma1665/orgs",
        "repos_url": "https://api.github.com/users/Asma1665/repos",
        "events_url": "https://api.github.com/users/Asma1665/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Asma1665/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T07:28:53Z",
      "updated_at": "2024-07-15T07:28:53Z",
      "author_association": "NONE",
      "body": "Revarse my assist",
      "user": {
        "login": "Asma1665",
        "id": 162090440,
        "node_id": "U_kgDOCalNyA",
        "avatar_url": "https://avatars.githubusercontent.com/u/162090440?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Asma1665",
        "html_url": "https://github.com/Asma1665",
        "followers_url": "https://api.github.com/users/Asma1665/followers",
        "following_url": "https://api.github.com/users/Asma1665/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Asma1665/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Asma1665/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Asma1665/subscriptions",
        "organizations_url": "https://api.github.com/users/Asma1665/orgs",
        "repos_url": "https://api.github.com/users/Asma1665/repos",
        "events_url": "https://api.github.com/users/Asma1665/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Asma1665/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-2227858355",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13503481358,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAAMk3sYO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13503481358",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T10:34:12Z"
    },
    {
      "event": "commented",
      "id": 2228190409,
      "node_id": "IC_kwDOABII586Ez3zJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2228190409",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-15T10:35:38Z",
      "updated_at": "2024-07-15T10:35:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "Fixed some outdated information in the remainin design doc and added that to the last commit.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-2228190409",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "reviewed",
      "id": 2196517706,
      "node_id": "PRR_kwDOABII586C7DNK",
      "url": null,
      "actor": null,
      "commit_id": "27767184aaa7fa94600c70334cc4122e25872ff6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 27767184aaa7fa94600c70334cc4122e25872ff6.\r\n\r\nMain change since last review is documenting dumptxoutset better and making default behavior be to dump the latest snapshot that can be loaded, instead of the current utxo set. Also improved other documentation and added NetworkDisable class to more reliably restore network state in case of error.\r\n\r\nLeft some additional suggestions but they aren't very important",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2196517706",
      "submitted_at": "2024-07-24T14:03:47Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "reviewed",
      "id": 2200131865,
      "node_id": "PRR_kwDOABII586DI1kZ",
      "url": null,
      "actor": null,
      "commit_id": "27767184aaa7fa94600c70334cc4122e25872ff6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK - though I don't like having potentially large rollbacks as default behavior, see below.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2200131865",
      "submitted_at": "2024-07-25T20:02:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "labeled",
      "id": 13768232641,
      "node_id": "LE_lADOABII586BLJvCzwAAAAM0po7B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13768232641",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-05T18:34:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI3MTA4OGExZDMxNjQ5YTNjNzgzNzI4MzU3NTU3ZjEzMWQ1ZjkzMzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/271088a1d31649a3c783728357557f131d5f9333",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/271088a1d31649a3c783728357557f131d5f9333",
      "tree": {
        "sha": "e6b7f9f00a21311d68c0d8115c5f7bca454164b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6b7f9f00a21311d68c0d8115c5f7bca454164b0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e6b7f9f00a21311d68c0d8115c5f7bca454164b0\nparent 7583eac43ca87b383ce97dda9cf625d906efae23\nauthor Fabian Jahr <fjahr@protonmail.com> 1709393820 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1723544993 +0200\n\nRPC: Extract InvalidateBlock helper\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAma7NaEVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNRyAP/Ayvo+9oWQpTnE6U8VJeJ7eI4C7S\ntHLemVnPAIx2hZ3/LnezJ155Mb9OIuogrEZElv0aigbClOeJLABA8iEoHHztdFqp\nHKrXTIDPkne3RTpvnk7xRWLElGyWHl3JT0CLxZwJ3hUPMB9bIhC+CoVtQnUqUk0j\nlziDZjpQ51riRLpuM//XPFxwpO5eTG/tMPeoM0FXBOr0MRhhn12eHnYVRnfAW+2G\nXVWL7lnVxgoyDfaD6LzCd7p2zyhZycRReKLYfoDZGfarf+0dpwhu49j36FMwU38o\nsmhkFTXMUpjwgi4XJ+72SvR3mIxUJ0qmEm15Ij1xWDbPrAFgBgvK09QCh6mRpp0l\nexPJtGZ3Sq8tr5Oi76yvzXA5shn/yatRuNwb1dK2cSzrElYwXA2LU/caNyImmiFI\nfgdBqqYajxclrmWKdxdYjKxwl4DtqxjQjgvxUMDo63uyFLix9PivI6MuNRm3OXx5\nSqZj6dfABoMhlCiYTTXzTn8JxbpycBR9ACNpZgXzznwtLCTrF+JZ0p2uPavibZ/t\nfUTuc9r/8qRbhpDnDs64x5lan2jRZLqhoX+HJzuuMkKo+LNku3FzJUjBuIUsH8jd\naLvUrJnYj4lLNhpPs9XaGWzhd0ZaD/y6wyfrLprbfKuheKOFj5WYrZBPpOKEMMl9\nll1NlaLDjxHfCBLi\n=KEjv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7583eac43ca87b383ce97dda9cf625d906efae23",
          "sha": "7583eac43ca87b383ce97dda9cf625d906efae23",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7583eac43ca87b383ce97dda9cf625d906efae23"
        }
      ],
      "message": "RPC: Extract InvalidateBlock helper",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-08-13T10:29:53Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-02T15:37:00Z"
      },
      "sha": "271088a1d31649a3c783728357557f131d5f9333"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFhZWZhMmU4NWEwN2YwNTgwY2VkZTVmZWQxMDg1ZDk4NTA4NDdmNDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1aefa2e85a07f0580cede5fed1085d9850847f48",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1aefa2e85a07f0580cede5fed1085d9850847f48",
      "tree": {
        "sha": "ee81bd9f68d492260dcc4298a4d42aa1b5f8a5f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee81bd9f68d492260dcc4298a4d42aa1b5f8a5f0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ee81bd9f68d492260dcc4298a4d42aa1b5f8a5f0\nparent 271088a1d31649a3c783728357557f131d5f9333\nauthor Fabian Jahr <fjahr@protonmail.com> 1709394147 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1723544994 +0200\n\nRPC: Extract ReconsiderBlock helper\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAma7NaIVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNlmMQAI5Aav/E+VV707e3X/TYGtEVyJNn\nfnjcKMV1K9cGw3SE8mT8xZUmhv4X7NHrF+q55drJauXl2Bdzc90WvB4NAW3KdcgN\n8G/l2KdwBpIYnC/DJmxF5wqoiO9MJnZazMewLBffYGQg5BFjzAtuao4NPi509idX\nmQuD0G9qxR4muv83UcUOIfPIQpb95P0bdATCPIS9T+cpQJvFQyGREeEfvt4yAKwy\nv3BvI8Ny7tUnfizX1rdgCLD/fgP/T3kH8oLD3X804rikCVbeUz4H3lyyP+CljTiX\nV8QpNkza3yqkTtwuuYBTRwBLlzLmljaySQpnZACWNOug19Wtab2lxGYfocHJvna4\nec5+0m2W3UAOX3MXqjP+lGbIefzYWubBqmtxb6Mk/C1u8lsMFnyNH+FUWBfMbu1x\n6ZdO6DKRPGj3EHI/YAlX3/W5X8Ujlf1XtlPTsj7k6pQFmvEktr22wfYbXXTyagA8\nEXBNtgtXd3CGLbs13QykWZ8cwnzY1jqnR+MnHUno0Oo9sEQkKPKbn139KOfrIJ5j\nkFXSOb6P+0vzGjHBXV5i/1i9ehmNeuD5WuhXro9SBc0iWXzUBk1CiI8KLB2JrIlw\nzD+dcONXMNq6KiWj+CmARZXPMTpEFl0WX/SdjR50ii3a0bMj5tnEWhItT314bgXf\nlTeOhQwju5lc8qF5\n=w7Nn\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/271088a1d31649a3c783728357557f131d5f9333",
          "sha": "271088a1d31649a3c783728357557f131d5f9333",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/271088a1d31649a3c783728357557f131d5f9333"
        }
      ],
      "message": "RPC: Extract ReconsiderBlock helper",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-08-13T10:29:54Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-02T15:42:27Z"
      },
      "sha": "1aefa2e85a07f0580cede5fed1085d9850847f48"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIyM2FiZmNhNjhmN2IzNDllNmQyZjllMDQzNjlmMGZkYzgyZDJhOTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b23abfca68f7b349e6d2f9e04369f0fdc82d2a98",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b23abfca68f7b349e6d2f9e04369f0fdc82d2a98",
      "tree": {
        "sha": "a502cbdc8e0e9561ada2124b94cb6562bb2efc24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a502cbdc8e0e9561ada2124b94cb6562bb2efc24"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a502cbdc8e0e9561ada2124b94cb6562bb2efc24\nparent 1aefa2e85a07f0580cede5fed1085d9850847f48\nauthor Fabian Jahr <fjahr@protonmail.com> 1709394238 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1723552564 +0200\n\nRPC: Add type parameter to dumptxoutset\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAma7U0IVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNceAP/RcXFdsQ5IvINww4s3cM0dHlHzx3\nsyN1lxpJdPpWMzspokS5F48HAMMjTWl/J/rqNI1SHko1bqXOH6w9nrVZEWCY4nv4\ncAP7I58B1rCf9SMchXeWqG7LBwtl9O9xRQwWlVSiNnRUi2Da63OLhIPVDUdA8U9X\nXhuDWAQzqLCp195Q7BG7T7yIPJZu+4xMYI79aFcLq0hUyE/TAMc/i+RGLK2OZ60B\nOcSAzjLFxTdyRJVuLjAmJ9SVEtKMWEu9YtEGVbI03Ioy44OmyjJQ0jyzcy5j8Yyi\nClxZSaDlJFXLU6Uo8i4L83wt50mUEfSN6bGyfTza8AYBJmtqg2VzVVV4rjOIEn6r\nl6t1o8tniAf/sSOuTmKz2mA8lGQa4Wlm3B7EOlnUx+HEPUlqJfg+EJ3SAnZDL/Px\nWEKKG8kMIeuA4ULB1bmfpyPM1prCJI+XZ5RnoUutivi+YyGz/rQWQKRReAI2OXfg\n2DWencCEHiMApsOhSGThnTKpqp1PsMvHcbowu7GROMOQArMiPg/Wcp8pqC1zikud\nFRUCuitYESlMb9zVUeTWAQ/fVb+Aei3AUKpaQAHpV/FHz6/y35u/VcYpaDIlimng\nnJ07y42Ayj2Cp3aOda3dO73K8hqfQhyx7tpfjBID7Ty7VKXgkei3bELXkd8tTVsf\nPEYuSU8Xbw4EMSU7\n=5Ywx\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1aefa2e85a07f0580cede5fed1085d9850847f48",
          "sha": "1aefa2e85a07f0580cede5fed1085d9850847f48",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1aefa2e85a07f0580cede5fed1085d9850847f48"
        }
      ],
      "message": "RPC: Add type parameter to dumptxoutset",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-08-13T12:36:04Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-02T15:43:58Z"
      },
      "sha": "b23abfca68f7b349e6d2f9e04369f0fdc82d2a98"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEwYmMzOWY5N2UzMzdkZTQ2OTQ3YjNiMmI4MWNkZGU4ZmExZTM5YTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0bc39f97e337de46947b3b2b81cdde8fa1e39a8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a0bc39f97e337de46947b3b2b81cdde8fa1e39a8",
      "tree": {
        "sha": "973cba0e040c02bc2264b36f5ae76f999687fe52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/973cba0e040c02bc2264b36f5ae76f999687fe52"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 973cba0e040c02bc2264b36f5ae76f999687fe52\nparent b23abfca68f7b349e6d2f9e04369f0fdc82d2a98\nauthor Fabian Jahr <fjahr@protonmail.com> 1709400387 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1723648897 +0200\n\ntest: Test for dumptxoutset at specific height\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAma8y4IVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNk/4QAKWSusfwbWq01ynTleqvIpMmAOqY\nTjez7a5YAAtA4XDW4Ob+gkA7OmFrg0JfEu4BuXBpS0v0yBOOSNf0mOlbppEVJiOR\nGYxGvK5zZEBRipvPg9/pLV5k6/rwNBGq52k3lj8P4K7JiDdv1OfP3lf1bfqSWWoW\nCafyviAMft0GihyZfyrOZzSDnLjAYg/eVndtDcjb/hbIIGOLd7r0WN09nxhvUYp9\nr5rcjMGEpUNKnZxXQqGpcM+5TN2lUkihg7ECSx7QZ+sJ4OtHUXJMIjw884wswHoN\nrxFBIXn5iUxz2olVSvTidf2o34bzzvR5QLMJr6dYiR9ZR3UMM5JSQdarJFKsIwbc\nCq7jPbxjIPvphdk+fVwBg3HJupnBdZyKzgOWG4V5/soS80Ng/127cCYHFHYX90EF\ny+ZLSNyIYUF1UzKiYGWH35lTILXbRT0q1UF9NpZvVD7uo77aKtd1Dyqi6oLvYH25\nSXOgMmoaefalyAEGqNsITBY9CsuUrwLd/NGIEmT5Dts3uBXRBYVhxPswCI8j4Nlh\nLi1G1uOCM3Ht4Z+GAxKsaxnvEVyZIj+RmYfBnlWpkdq6nmhKvzWXWOchj7rysfqg\nJ19W8Sb1mgx2uBkAgxS8dYOqQEl0dIvPdGJlPijRzwFu/hA+ZUXwDrAYDnplXO+2\ncQaYwNwHrXlTsmOz\n=H3Gs\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b23abfca68f7b349e6d2f9e04369f0fdc82d2a98",
          "sha": "b23abfca68f7b349e6d2f9e04369f0fdc82d2a98",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b23abfca68f7b349e6d2f9e04369f0fdc82d2a98"
        }
      ],
      "message": "test: Test for dumptxoutset at specific height",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-08-14T15:21:37Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-02T17:26:27Z"
      },
      "sha": "a0bc39f97e337de46947b3b2b81cdde8fa1e39a8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEwMmRiMmY4ZDExOTA4NGU3YjY3Y2E0ZmE5NzE4NTUyNzhiYTQzMjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a02db2f8d119084e7b67ca4fa971855278ba4329",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a02db2f8d119084e7b67ca4fa971855278ba4329",
      "tree": {
        "sha": "0672fe6b0c553e6a16e831e7fa45988dad2b0d81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0672fe6b0c553e6a16e831e7fa45988dad2b0d81"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0672fe6b0c553e6a16e831e7fa45988dad2b0d81\nparent a0bc39f97e337de46947b3b2b81cdde8fa1e39a8\nauthor Fabian Jahr <fjahr@protonmail.com> 1709400487 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1723648901 +0200\n\ncontrib: Remove test_utxo_snapshots.sh\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAma8y4UVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNC40P/j+jdkDsF4+wY9ap1GQNL5bWg+pr\nsHrtX8yBvQmvFY42qSZuDx0I+8aBKW5ZajGIIK8vkGCnlOiePOiTW8SmoGkUn9xv\nnlDC5N8wOjIlqHeQ5FZGFFeSfM69eu3rR/JtGFhmvelCLuoL4WcTYXJO5zm89fQx\nmGBgJI22Kyuv510+NrjFQsqvlTiwRS3Vaptoa/oi643Hyduxr6hkMc09Bpj6FcZD\n21IvWJCaZKzzMa3qyhG3rz9iOOf1+he+Ju6JE2XnaGr9ZdEkUPCzCoYpphYpDt3b\neKCj4lbxF3+i9ZpgGW0Xv8ECGtkQcJro0yXQOh4giTka8QDuZfe+TV+vY+cwsvXn\nRiB71p4MLv9YyDKMA6n9qJbkt1IMANzKzrGdN+6Pk6SpHilGrNgY0HsW54yEKri8\nlP66rcpRSVzLFDTK7gc85q6o1AnFitc1onFSR9jYllQMFkMWHGbpkL+q0MhJ9DtQ\n/0eNKmfDIVF8ivKY/vurOMRMIAHS8Cq4VOhJIu4ZVsD3t+rchB1M5GKwKX3vhRdL\n1arWSkNwvgK0r6F5LV1j+JVN8Chy4y3rN4qKKUZEPjosxdI4JiS901nVPexIyBsL\nDv8ayIMIeLFjsZutZouDb2Xo7icKGF4qx9Dmg2ZfDmVXdjF89iE9oALbFOMUC2Q8\nieTUTATn1tHCbuH5\n=rdxu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0bc39f97e337de46947b3b2b81cdde8fa1e39a8",
          "sha": "a0bc39f97e337de46947b3b2b81cdde8fa1e39a8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a0bc39f97e337de46947b3b2b81cdde8fa1e39a8"
        }
      ],
      "message": "contrib: Remove test_utxo_snapshots.sh",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-08-14T15:21:41Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-02T17:28:07Z"
      },
      "sha": "a02db2f8d119084e7b67ca4fa971855278ba4329"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlkMjA5YzY5YWMxZTVlMGZhNGFjYzUzYzI4NDA3OWQyZWZlOGNiZTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d209c69ac1e5e0fa4acc53c284079d2efe8cbe9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9d209c69ac1e5e0fa4acc53c284079d2efe8cbe9",
      "tree": {
        "sha": "ec4db8e24ca94606a50911180eab5ece578795a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec4db8e24ca94606a50911180eab5ece578795a8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ec4db8e24ca94606a50911180eab5ece578795a8\nparent a02db2f8d119084e7b67ca4fa971855278ba4329\nauthor Fabian Jahr <fjahr@protonmail.com> 1709565269 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1723648901 +0200\n\nassumeutxo: Remove devtools/utxo_snapshot.sh\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAma8y4UVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNemkQAIEen0t0J2rgjFbBOHaz+4KJj98n\n+Sb9snvQA0y3uO9MNNvMelX0RQ5AbDEQzwn8YFQ1CJ0IX3eWamIblo7QmiOmV64r\nRUjKLBHAgLNYVcWmiU5q+XH2mMmpKHWgvvOFh7AcnUa9rQvEIq4L6VBuvqdPzYBg\nRrroX3ScdzgV0LNXoBcq5z/5scfWpV4A8feELwn4ODZMTMa+w7cBrf76x3einnA4\nC/T1btiyuz6vd8PZe7X2ZNKft5kSRnp5sBkdzWmf6UkUjgOIBJhCi8zz48J0lziM\njaEtRy1kPAtqUvugq+bPV/83ioPmCpUX0qjiRGRpCXIDhWuKT4j1ciNUTVaCUtJn\nt8Zz/7lO6dfMlg7e3DXRDJCAcpU5Nli+fqKYeI/CsvOloFD6u9sJ9OAUPNDiN/qQ\nUKvqNFvfsgMF0KmvsK29a2/mGAkGHO4IO/GwRQsCM19lMz3F1PX28umws1o5FmeC\n/lS8UQZeGxk6Jr4kjgtnJncHg28DU5qSm+vIhos6kNyvItQwLfwigVh8mmMVHXzH\nG3lqgXwB9wVOufPLGK8q4aq6KQq2+334IQaEz5+EvRlhP65C+dTQxcz80ZYOptuo\nZsNJ8m29yamYIYidzASadbw3wvfQbm2Ya3c0xMimVBY0HGO01vh6LDnLMKc1nPRS\nU4WvgBdlXhpYUodP\n=fkCX\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a02db2f8d119084e7b67ca4fa971855278ba4329",
          "sha": "a02db2f8d119084e7b67ca4fa971855278ba4329",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a02db2f8d119084e7b67ca4fa971855278ba4329"
        }
      ],
      "message": "assumeutxo: Remove devtools/utxo_snapshot.sh",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-08-14T15:21:41Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-04T15:14:29Z"
      },
      "sha": "9d209c69ac1e5e0fa4acc53c284079d2efe8cbe9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13902362814,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAAM8pTi-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13902362814",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T20:51:06Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJiMzk4MWMwMTk4NTk4OWI0MmRhMGEyNGMwMjdiZTc1N2FiNTQ2MTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb3981c01985989b42da0a24c027be757ab54612",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bb3981c01985989b42da0a24c027be757ab54612",
      "tree": {
        "sha": "1a3fdf271dd232086324c9231e4287919736ee68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a3fdf271dd232086324c9231e4287919736ee68"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1a3fdf271dd232086324c9231e4287919736ee68\nparent 9d209c69ac1e5e0fa4acc53c284079d2efe8cbe9\nauthor Fabian Jahr <fjahr@protonmail.com> 1710621388 +0100\ncommitter Fabian Jahr <fjahr@protonmail.com> 1723758465 +0200\n\ndoc: Improve assumeutxo guide and add more docs/comments\n\nAlso fixes some outdated information in the remaining design doc.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAma+d4IVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNEtEP/A2gEOyZBqLvjPO/F1oH4rLgHUMW\nnw+0B2DjVlMW//PXrT3vdcjmCbQy8nhpb4h+uXUxd6kJBNpMERSTCHATYhWI11TE\nX2lu4IK517HbBfYemZO1/Cqv/Ro+ZRnLQUfy0/1Ck/f36QtVd69EsgHzKFyxLksj\nXAbSc2UzHRoNpBuDmcXd9MPiYf45Q1IjgM/0k8bJlwSZ9/qhBMxBDHtSKDSEDakI\nt8WFD4m2DKjf4uQRg00fvECLzOflyDchCYaBueYzcV2SE2HhBDqWavHFQZQbO4td\nhiKoGi4aFTDrWYlnEaUfq8ncpvss34RXhmOIGGQmClnR/XwPtWYf0EhKHBuGS+nY\nKYqe2SUkdPnZyi4hZU6QhgJStgC6Y//6KhJPAL47O+0zk2dHbhGNCRziVv2ZTA5f\nXejT/jDbq48fZTgYpgjtz8AkS654R/tBVjy0R74V3fJ1muJCYWlBDu55vA1BksAo\nOjQQ8nBysV4GMZOBz6POeQX0m8YGbgPcgdYTLfmADJK/XmsiwRELu1OH1aawai4e\np065cm/D9f9XBlZHAdZ91hdpk1S9sjSFp7LXlirVxaTuIeFj8k9Bv1q+OAi7h9JH\n1M1KnImKhnm4qQymLRTtmGdxdoy1H2OWhx+BxQrCGQU8yYyeqVE9PAPgDpRA+mMq\n8mfCXFUYLv2I7rMc\n=LRvL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d209c69ac1e5e0fa4acc53c284079d2efe8cbe9",
          "sha": "9d209c69ac1e5e0fa4acc53c284079d2efe8cbe9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9d209c69ac1e5e0fa4acc53c284079d2efe8cbe9"
        }
      ],
      "message": "doc: Improve assumeutxo guide and add more docs/comments\n\nAlso fixes some outdated information in the remaining design doc.",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-08-15T21:47:45Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-03-16T20:36:28Z"
      },
      "sha": "bb3981c01985989b42da0a24c027be757ab54612"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13903217640,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAAM8skPo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13903217640",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T21:47:54Z"
    },
    {
      "event": "commented",
      "id": 2292338592,
      "node_id": "IC_kwDOABII586Iok-g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2292338592",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T21:50:27Z",
      "updated_at": "2024-08-15T21:50:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Addressed feedback and rebased.\r\n\r\nThere is a bit of a hack in the tests now that is made necessary by an unrelated bug: #26245 I marked this with an TODO accordingly.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-2292338592",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "unlabeled",
      "id": 13903612627,
      "node_id": "UNLE_lADOABII586BLJvCzwAAAAM8uErT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13903612627",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T22:23:10Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2241421928,
      "node_id": "PRR_kwDOABII586FmWJo",
      "url": null,
      "actor": null,
      "commit_id": "0c1238917a5edf6bdcae15aab5f91b1bdd2540b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 0c1238917a5edf6bdcae15aab5f91b1bdd2540b9. Main change since last review is that dumptxoutset will no longer dump a snapshot that can't be loaded by default or roll back the chain by default. Instead you need to specify \"latest\" or \"rollback\" to choose the behavior you want, or specify the height or hash of a specific block.\r\n\r\nIt is now possible to specify a snapshot block hash instead of a just height, and there are test and documentation improvements, and a new commit that locks cs_main between rolling back the chainstate and getting the UTXO database cursor to guarantee the right snapshot block is always used.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2241421928",
      "submitted_at": "2024-08-15T22:27:22Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "review_requested",
      "id": 13903692992,
      "node_id": "RRE_lADOABII586BLJvCzwAAAAM8uYTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13903692992",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-15T22:27:26Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 2251181767,
      "node_id": "PRR_kwDOABII586GLk7H",
      "url": null,
      "actor": null,
      "commit_id": "0c1238917a5edf6bdcae15aab5f91b1bdd2540b9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nI agree with the reasoning behind removing the scripts, specially after founding this [bug](https://github.com/bitcoin/bitcoin/pull/28553#pullrequestreview-2251032570) during testing. I'll also test this PR soon.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2251181767",
      "submitted_at": "2024-08-21T15:22:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI1MjkyMzM0ZTVlODc5MjY0NDEyM2I2Mjc4OTYzNTllYjFkYThkMjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5292334e5e8792644123b627896359eb1da8d25",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b5292334e5e8792644123b627896359eb1da8d25",
      "tree": {
        "sha": "bb5ec87573d99df781746165f44776da20c786bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb5ec87573d99df781746165f44776da20c786bc"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree bb5ec87573d99df781746165f44776da20c786bc\nparent bb3981c01985989b42da0a24c027be757ab54612\nauthor Fabian Jahr <fjahr@protonmail.com> 1723755009 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1724278962 +0200\n\nrpc, refactor: Prevent potential race conditions in dumptxoutset\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmbGaLIVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNqQkP/jXSvDNKQA+ZgtR3xdlYE/H1pnjr\ny+gXO9T9Cje0ubwfA8uVY09LZJyYN1Ls/xeXPr/fkYSGJA6q8g4SLGHRbi2EAQGy\ngyQrfwGO6WhTvdErUjUmf0b9pudC8IdfLDVU1AN6TMkL6742GQBc640LokgQpV/0\nPw8KSJ52DnHJBuzcp8UZOwarWWlFyqWUr62WJYGj57aMjCUMsZadz10P4n0LLvlz\nVVEvkteXNQ+S9xiCsj/GP+3CPibyJK3J6AuI/I+W4cpOdA+wBMjhvmjuMWVzLQ5J\n6qcFKvMz/FWlH2SoMzyMxKvq/uevHZPk59+IWW7gCTpYA42SuYiNZj0oL+2TZ5xv\ny7FtRZgEa2lblVQoHIV1sfTeBw8X1w2oEue9em4l7zjT1JNsRk2lNgirO1C/qvXs\n5eMffYetYFnstW+uJGGAxY65rlpeX89sNvIWS/zwnVucsULhkYJLz/S9IeLiz1n2\n6XvaDC1+aZsmp+otnp/ydzrnGxdgxpnX3dgfpcEOsmid+Y1GzQdwxA/stLCaGcPT\nbLU3RO1son960Aeq2DsmBVy3IwaxkzZjKpP9qPRGA65HDphl7CEsfZgJX/7NzRa/\nfbTW6BkJ3x4GWpJ7H5I+uwfHNx7T3TNyjzEkGnZ5ZqtgreUCZuG3wfAfTQSlZZ12\nKHUT+RTQcMDfQwUg\n=Nf2Y\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb3981c01985989b42da0a24c027be757ab54612",
          "sha": "bb3981c01985989b42da0a24c027be757ab54612",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bb3981c01985989b42da0a24c027be757ab54612"
        }
      ],
      "message": "rpc, refactor: Prevent potential race conditions in dumptxoutset\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-08-21T22:22:42Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2024-08-15T20:50:09Z"
      },
      "sha": "b5292334e5e8792644123b627896359eb1da8d25"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13967354356,
      "node_id": "HRFPE_lADOABII586BLJvCzwAAAANAhOn0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13967354356",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-21T22:22:51Z"
    },
    {
      "event": "commented",
      "id": 2303159630,
      "node_id": "IC_kwDOABII586JR21O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2303159630",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-21T22:29:12Z",
      "updated_at": "2024-08-21T22:29:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "Improved comments based on suggestions by @ryanofsky , thanks a lot!",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-2303159630",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29553"
    },
    {
      "event": "mentioned",
      "id": 13967526538,
      "node_id": "MEE_lADOABII586BLJvCzwAAAANAh4qK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13967526538",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-21T22:29:13Z"
    },
    {
      "event": "subscribed",
      "id": 13967526585,
      "node_id": "SE_lADOABII586BLJvCzwAAAANAh4q5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13967526585",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-21T22:29:13Z"
    },
    {
      "event": "reviewed",
      "id": 2253922313,
      "node_id": "PRR_kwDOABII586GWCAJ",
      "url": null,
      "actor": null,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK b5292334e5e8792644123b627896359eb1da8d25\r\n\r\nI was initially confused because I got this:\r\n\r\n```\r\n$ src/bitcoin-cli dumptxoutset $HOME/dev/utxo-snapshots/utxo-840000-pr29553.dat rollback\r\nerror code: -1\r\nerror message:\r\nInternal bug detected: snapshot_heights.size() > 0\r\nrpc/blockchain.cpp:2738 (operator())\r\nBitcoin Core v27.99.0-b5292334e5e8\r\nPlease report this issue here: https://github.com/bitcoin/bitcoin/issues\r\n````\r\n\r\nBut that's because this PR wasn't rebased after #28553 got merged.\r\n\r\nAfter rebasing it myself, I was able to reproduce the snapshot at height 840,000.\r\n\r\nThis can wait for a followup, but can you add `-rpcclienttimeout=0` to all the examples? And to the help text:\r\n\r\n```\r\n\"This call may take several minutes. Make sure to use no RPC timeout (bitcoin-cli -rpcclienttimeout=0)\",\r\n```\r\n\r\nThe one thing I like about the original script, which the RPC can't give us, is a progress report.\r\n\r\nThis is a general problem with long running RPC calls.\r\n\r\nI'm a bit confused about the last commit, especially @ryanofsky's comment:\r\n\r\n```cpp\r\n// The cursor will remain valid and be used by\r\n// WriteUTXOSnapshot to write a consistent snapshot even if the\r\n// chainstate changes.\r\n```\r\n\r\nDoes `CCoinsViewCursor` (and LevelDB) somehow guarantee that if coins are deleted from the chainstate database, as new blocks are processed, we can still access them? (and that we won't see newly added coins).\r\n\r\nOr merely that the cursor becomes invalid so we can detect that things changed from under us? If so, where is that handled?\r\n\r\nFor the (main) use case of rolling back to a specific height it doesn't matter, because we first create and save the snapshot and only then call ReconsiderBlock. But for the case of making a snapshot at the tip, it's not clear to me what would happen.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#pullrequestreview-2253922313",
      "submitted_at": "2024-08-22T10:56:44Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
    },
    {
      "event": "review_requested",
      "id": 13975302162,
      "node_id": "RRE_lADOABII586BLJvCzwAAAANA_jAS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13975302162",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T10:56:49Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 13975302416,
      "node_id": "RRE_lADOABII586BLJvCzwAAAANA_jEQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13975302416",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-22T10:56:50Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511457747",
      "pull_request_review_id": 1914795143,
      "id": 1511457747,
      "node_id": "PRRC_kwDOABII585aFwPT",
      "diff_hunk": "@@ -2621,10 +2624,30 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+        // In case there is any issue with a block being read from disc due to\n+        // pruning for example, we need to stop here, otherwise the dump would\n+        // still be greated for the wrong height.",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "c2f62ebc44767bbc6795cb3036d4d28b5f21ffe8",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n        // still be created for the wrong height.\r\n```",
      "created_at": "2024-03-04T16:40:35Z",
      "updated_at": "2024-03-04T18:21:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1511457747",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511457747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511469672",
      "pull_request_review_id": 1914795143,
      "id": 1511469672,
      "node_id": "PRRC_kwDOABII585aFzJo",
      "diff_hunk": "@@ -210,6 +213,13 @@ def run_test(self):\n \n         assert_equal(n0.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n \n+        self.log.info(f\"Check that dumptxoutsetinfo works for past block heights\")\n+        dump_output2 = n0.dumptxoutset('utxos2.dat', SNAPSHOT_BASE_HEIGHT)\n+        check_dump_output(dump_output2)",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 25,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "a480d9748b29c5467c038b3f73c0845f7ee27f70",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: could additionally check that the two dump file contents are equal, e.g.\r\n```diff\r\ndiff --git a/test/functional/feature_assumeutxo.py b/test/functional/feature_assumeutxo.py\r\nindex 71c3c2c096..a9ba96ae25 100755\r\n--- a/test/functional/feature_assumeutxo.py\r\n+++ b/test/functional/feature_assumeutxo.py\r\n@@ -39,6 +39,7 @@ from test_framework.test_framework import BitcoinTestFramework\r\n from test_framework.util import (\r\n     assert_equal,\r\n     assert_raises_rpc_error,\r\n+    sha256sum_file,\r\n )\r\n from test_framework.wallet import (\r\n     getnewdestination,\r\n@@ -216,6 +217,7 @@ class AssumeutxoTest(BitcoinTestFramework):\r\n         self.log.info(f\"Check that dumptxoutsetinfo works for past block heights\")\r\n         dump_output2 = n0.dumptxoutset('utxos2.dat', SNAPSHOT_BASE_HEIGHT)\r\n         check_dump_output(dump_output2)\r\n+        assert_equal(sha256sum_file(dump_output['path']), sha256sum_file(dump_output2['path']))\r\n \r\n         # Ensure n0 is back at the tip\r\n         assert_equal(n0.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\r\n``` ",
      "created_at": "2024-03-04T16:49:23Z",
      "updated_at": "2024-03-04T18:21:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1511469672",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1511469672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": 216,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527253589",
      "pull_request_review_id": 1941317857,
      "id": 1527253589,
      "node_id": "PRRC_kwDOABII585bCApV",
      "diff_hunk": "@@ -2621,10 +2624,30 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+        // In case there is any issue with a block being read from disc due to\n+        // pruning for example, we need to stop here, otherwise the dump would\n+        // still be greated for the wrong height.",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "c2f62ebc44767bbc6795cb3036d4d28b5f21ffe8",
      "in_reply_to_id": 1511457747,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2024-03-16T20:37:56Z",
      "updated_at": "2024-03-16T20:37:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1527253589",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527253589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527253605",
      "pull_request_review_id": 1941317864,
      "id": 1527253605,
      "node_id": "PRRC_kwDOABII585bCApl",
      "diff_hunk": "@@ -210,6 +213,13 @@ def run_test(self):\n \n         assert_equal(n0.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n \n+        self.log.info(f\"Check that dumptxoutsetinfo works for past block heights\")\n+        dump_output2 = n0.dumptxoutset('utxos2.dat', SNAPSHOT_BASE_HEIGHT)\n+        check_dump_output(dump_output2)",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 25,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "a480d9748b29c5467c038b3f73c0845f7ee27f70",
      "in_reply_to_id": 1511469672,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "added",
      "created_at": "2024-03-16T20:38:01Z",
      "updated_at": "2024-03-16T20:38:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1527253605",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527253605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": 216,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527560566",
      "pull_request_review_id": 1941530208,
      "id": 1527560566,
      "node_id": "PRRC_kwDOABII585bDLl2",
      "diff_hunk": "@@ -2646,10 +2649,53 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(::cs_main);\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "5da057c5330a49122873b9d5f5a44aea9bff1a8d",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This actually isn't a fully sufficient check because we could be missing the undo data. I am addressing this here: #29668",
      "created_at": "2024-03-17T16:46:30Z",
      "updated_at": "2024-03-17T18:59:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1527560566",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527560566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2671,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629099295",
      "pull_request_review_id": 2101363203,
      "id": 1629099295,
      "node_id": "PRRC_kwDOABII585hGhUf",
      "diff_hunk": "@@ -2646,10 +2657,53 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(::cs_main);\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);\n+        if (connman.GetNetworkActive()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Network activity could not be suspended.\");\n+        }\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+\n+        // In case there is any issue with a block being read from disc we need",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 140,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "71b9fa96bfe1c936ecb10d3e5d1b95b7d24f9ea8",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Another issue could be that a sister block of `invalidate_index` was activated instead, if one exists? If so, could make sense to mention that as well.",
      "created_at": "2024-06-06T09:13:55Z",
      "updated_at": "2024-06-06T09:15:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1629099295",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629099295"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629101713",
      "pull_request_review_id": 2101363203,
      "id": 1629101713,
      "node_id": "PRRC_kwDOABII585hGh6R",
      "diff_hunk": "@@ -2646,10 +2657,53 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(::cs_main);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "71b9fa96bfe1c936ecb10d3e5d1b95b7d24f9ea8",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style nit for new code, here and elsewhere: Could make sense to use the chainman.GetMutex() alias for chainman locking, instead of the global cs_main?",
      "created_at": "2024-06-06T09:15:29Z",
      "updated_at": "2024-06-06T09:15:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1629101713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629101713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2669,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629758949",
      "pull_request_review_id": 2102318274,
      "id": 1629758949,
      "node_id": "PRRC_kwDOABII585hJCXl",
      "diff_hunk": "@@ -2646,10 +2657,53 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(::cs_main);\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);\n+        if (connman.GetNetworkActive()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Network activity could not be suspended.\");\n+        }\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+\n+        // In case there is any issue with a block being read from disc we need",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 140,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "71b9fa96bfe1c936ecb10d3e5d1b95b7d24f9ea8",
      "in_reply_to_id": 1629099295,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, interesting edge case! I extended the comment.",
      "created_at": "2024-06-06T15:30:34Z",
      "updated_at": "2024-06-06T15:30:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1629758949",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629758949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629759103",
      "pull_request_review_id": 2102318499,
      "id": 1629759103,
      "node_id": "PRRC_kwDOABII585hJCZ_",
      "diff_hunk": "@@ -2646,10 +2657,53 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(::cs_main);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 121,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "71b9fa96bfe1c936ecb10d3e5d1b95b7d24f9ea8",
      "in_reply_to_id": 1629101713,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-06-06T15:30:40Z",
      "updated_at": "2024-06-06T15:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1629759103",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1629759103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2669,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648974658",
      "pull_request_review_id": 2132676568,
      "id": 1648974658,
      "node_id": "PRRC_kwDOABII585iSVtC",
      "diff_hunk": "@@ -2654,10 +2657,56 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"RPC: Add height parameter to dumptxoutset\" (2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364)\r\n\r\nI don't think it's sufficient to call `connman.SetNetworkActive()` manually in this function, because the InvalidateBlock and ReconsiderBlock functions called here can both throw exceptions and leave the network disabled after this RPC call if there is an error. Would suggest making a NetworkDisable disable_network{connman}; RAII class that disables the network in its constructor and enables it in its destructor to improve the error handling.\r\n\r\nAlso, can there be a comment to say why this is suspending network activity? I'm not actually sure why that is needed, since presumably networking code should not download invalid blocks, so it's not clear what effect this has.",
      "created_at": "2024-06-21T13:34:20Z",
      "updated_at": "2024-06-21T20:03:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1648974658",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648974658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2679,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648975246",
      "pull_request_review_id": 2132676568,
      "id": 1648975246,
      "node_id": "PRRC_kwDOABII585iSV2O",
      "diff_hunk": "@@ -2654,10 +2657,56 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);\n+        if (connman.GetNetworkActive()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Network activity could not be suspended.\");\n+        }\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+\n+        // In case there is any issue with a block being read from disc we need",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"RPC: Add height parameter to dumptxoutset\" (2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364)\r\n\r\ns/disc/disk/",
      "created_at": "2024-06-21T13:34:51Z",
      "updated_at": "2024-06-21T20:03:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1648975246",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648975246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648979413",
      "pull_request_review_id": 2132676568,
      "id": 1648979413,
      "node_id": "PRRC_kwDOABII585iSW3V",
      "diff_hunk": "@@ -2646,10 +2649,53 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(::cs_main);\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "5da057c5330a49122873b9d5f5a44aea9bff1a8d",
      "in_reply_to_id": 1527560566,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"RPC: Add height parameter to dumptxoutset\" (2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364)\r\n\r\n> This actually isn't a fully sufficient check because we could be missing the undo data. I am addressing this here: #29668\r\n\r\nCan you say what the problem is in a code comment so it is clear what current behavior is? Comment can removed when the problem is fixed later.",
      "created_at": "2024-06-21T13:38:22Z",
      "updated_at": "2024-06-21T20:03:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1648979413",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1648979413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2671,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649320665",
      "pull_request_review_id": 2132676568,
      "id": 1649320665,
      "node_id": "PRRC_kwDOABII585iTqLZ",
      "diff_hunk": "@@ -0,0 +1,65 @@\n+# Assumeutxo Usage\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance.\n+\n+For notes on the design of Assumeutxo, please refer to [the design doc](/doc/assumeutxo.md).\n+\n+## Loading a snapshot\n+\n+There is currently no canonical source for snapshots, but any downloaded snapshot\n+will be checked against a hash that's been hardcoded in source code. If there is\n+no source for the snapshot you need, you can generate it yourself using",
      "path": "doc/assumeutxo.md",
      "position": 12,
      "original_position": 12,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "6a5408dd7da4c31283cb4f632b3a7aa692a53ca3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"doc: Improve guide for usage of assumeutxo\" (6a5408dd7da4c31283cb4f632b3a7aa692a53ca3)\r\n\r\nMaybe say \"generate it yourself from another node\" to be clear you need a different node to generate it.",
      "created_at": "2024-06-21T18:47:03Z",
      "updated_at": "2024-06-21T20:03:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1649320665",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649320665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649328350",
      "pull_request_review_id": 2132676568,
      "id": 1649328350,
      "node_id": "PRRC_kwDOABII585iTsDe",
      "diff_hunk": "@@ -0,0 +1,65 @@\n+# Assumeutxo Usage\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance.\n+\n+For notes on the design of Assumeutxo, please refer to [the design doc](/doc/assumeutxo.md).\n+\n+## Loading a snapshot\n+\n+There is currently no canonical source for snapshots, but any downloaded snapshot\n+will be checked against a hash that's been hardcoded in source code. If there is\n+no source for the snapshot you need, you can generate it yourself using\n+`dumptxoutset` (see [Generating a snapshot](#generating-a-snapshot)).\n+\n+Once you've obtained the snapshot, you can use the RPC command `loadtxoutset` to\n+load it.\n+\n+```\n+$ bitcoin-cli loadtxoutset /path/to/input\n+```\n+\n+After the snapshot has loaded, the syncing process of both the snapshot chain\n+and the background IBD chain can be monitored with the `getchainstates` RPC.\n+\n+### Pruning\n+\n+A pruned node can load a snapshot. To save space, it's possible to delete the\n+snapshot file as soon as `loadtxoutset` finishes.\n+\n+The minimum `-prune` setting is 550 MiB, but this functionality ignores that\n+minimum and uses at least 1100 MiB.\n+\n+As the background sync continues there will be temporarily two chainstate\n+directories, each multiple gigabytes in size (likely growing larger than the\n+downloaded snapshot).\n+\n+### Indexes\n+\n+Indexes work but don't take advantage of this feature. They always start building\n+from the genesis block. Once the background validation reaches the snapshot block,\n+indexes will continue to build all the way to the tip.\n+\n+For indexes that support pruning, note that no pruning will take place between\n+the snapshot and the tip, until the background sync has completed - after which",
      "path": "doc/assumeutxo.md",
      "position": null,
      "original_position": 44,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "6a5408dd7da4c31283cb4f632b3a7aa692a53ca3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"doc: Improve guide for usage of assumeutxo\" (6a5408dd7da4c31283cb4f632b3a7aa692a53ca3)\r\n\r\nIs it true that no pruning will take place between the snapshot and the tip? I haven't experimented but it looks like GetPruneRange will only return a minimum prune height for the snapshot chainstate, not the background chainstate.",
      "created_at": "2024-06-21T18:56:27Z",
      "updated_at": "2024-06-21T20:03:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1649328350",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649328350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": 43,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649333656",
      "pull_request_review_id": 2132676568,
      "id": 1649333656,
      "node_id": "PRRC_kwDOABII585iTtWY",
      "diff_hunk": "@@ -2615,6 +2615,9 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to a file.\",\n         {\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\n+            {\"height\", RPCArg::Type::NUM, RPCArg::DefaultHint{\"the current tip\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"RPC: Add height parameter to dumptxoutset\" (2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364)\r\n\r\nFor a followup, it might be convenient if height value defaulted to the last height value which could actually be loaded as a snapshot. It could also accept a \"latest\" string value in case the user does want to generate the latest snapshot.",
      "created_at": "2024-06-21T19:02:48Z",
      "updated_at": "2024-06-21T20:03:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1649333656",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649333656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2618,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649335464",
      "pull_request_review_id": 2132676568,
      "id": 1649335464,
      "node_id": "PRRC_kwDOABII585iTtyo",
      "diff_hunk": "@@ -2654,10 +2657,56 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);\n+        if (connman.GetNetworkActive()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Network activity could not be suspended.\");\n+        }\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"RPC: Add height parameter to dumptxoutset\" (2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364)\r\n\r\nIt seems racy to unlock cs_main before calling CreateUTXOSnapshot. Not sure if there is a way to implement this in a race-free way without looping though. Could be something to follow up on later.",
      "created_at": "2024-06-21T19:05:07Z",
      "updated_at": "2024-06-21T20:03:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1649335464",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649335464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649378681",
      "pull_request_review_id": 2132676568,
      "id": 1649378681,
      "node_id": "PRRC_kwDOABII585iT4V5",
      "diff_hunk": "@@ -2615,6 +2615,9 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to a file.\",",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"RPC: Add height parameter to dumptxoutset\" (https://github.com/bitcoin/bitcoin/commit/2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364)\r\n\r\nDocumentation here is really terse. For a folluwup , I think it would be nice to add some of the documentation from the usage guide to the RPC documentation so it is more accessible. ",
      "created_at": "2024-06-21T20:00:10Z",
      "updated_at": "2024-06-21T20:03:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1649378681",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1649378681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2615,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674351835",
      "pull_request_review_id": 2172478988,
      "id": 1674351835,
      "node_id": "PRRC_kwDOABII585jzJTb",
      "diff_hunk": "@@ -2615,6 +2615,9 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to a file.\",",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 1,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": 1649378681,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a bit more detail in the docs improvement commit.",
      "created_at": "2024-07-11T16:50:41Z",
      "updated_at": "2024-07-11T16:50:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1674351835",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674351835"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2615,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674351982",
      "pull_request_review_id": 2172479172,
      "id": 1674351982,
      "node_id": "PRRC_kwDOABII585jzJVu",
      "diff_hunk": "@@ -2654,10 +2657,56 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);\n+        if (connman.GetNetworkActive()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Network activity could not be suspended.\");\n+        }\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": 1649335464,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Leaving this for a follow-up for now.",
      "created_at": "2024-07-11T16:50:46Z",
      "updated_at": "2024-07-11T16:50:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1674351982",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674351982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674352105",
      "pull_request_review_id": 2172479324,
      "id": 1674352105,
      "node_id": "PRRC_kwDOABII585jzJXp",
      "diff_hunk": "@@ -2615,6 +2615,9 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to a file.\",\n         {\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\n+            {\"height\", RPCArg::Type::NUM, RPCArg::DefaultHint{\"the current tip\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": 1649333656,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Right, I think that makes sense and this will be called mostly with this argument than anything else. That hadn't occurred to me so far honestly because I mostly wanted this for us to create snapshots that will potentially be added to the code in the future.\r\n\r\nI have changed this to default to the latest valid snapshot height. That makes getting the tip more cumbersome for the users but I think that's ok since this should not be what most of the want, I think.",
      "created_at": "2024-07-11T16:50:52Z",
      "updated_at": "2024-07-11T16:50:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1674352105",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674352105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2618,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674353019",
      "pull_request_review_id": 2172480528,
      "id": 1674353019,
      "node_id": "PRRC_kwDOABII585jzJl7",
      "diff_hunk": "@@ -0,0 +1,65 @@\n+# Assumeutxo Usage\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance.\n+\n+For notes on the design of Assumeutxo, please refer to [the design doc](/doc/assumeutxo.md).\n+\n+## Loading a snapshot\n+\n+There is currently no canonical source for snapshots, but any downloaded snapshot\n+will be checked against a hash that's been hardcoded in source code. If there is\n+no source for the snapshot you need, you can generate it yourself using\n+`dumptxoutset` (see [Generating a snapshot](#generating-a-snapshot)).\n+\n+Once you've obtained the snapshot, you can use the RPC command `loadtxoutset` to\n+load it.\n+\n+```\n+$ bitcoin-cli loadtxoutset /path/to/input\n+```\n+\n+After the snapshot has loaded, the syncing process of both the snapshot chain\n+and the background IBD chain can be monitored with the `getchainstates` RPC.\n+\n+### Pruning\n+\n+A pruned node can load a snapshot. To save space, it's possible to delete the\n+snapshot file as soon as `loadtxoutset` finishes.\n+\n+The minimum `-prune` setting is 550 MiB, but this functionality ignores that\n+minimum and uses at least 1100 MiB.\n+\n+As the background sync continues there will be temporarily two chainstate\n+directories, each multiple gigabytes in size (likely growing larger than the\n+downloaded snapshot).\n+\n+### Indexes\n+\n+Indexes work but don't take advantage of this feature. They always start building\n+from the genesis block. Once the background validation reaches the snapshot block,\n+indexes will continue to build all the way to the tip.\n+\n+For indexes that support pruning, note that no pruning will take place between\n+the snapshot and the tip, until the background sync has completed - after which",
      "path": "doc/assumeutxo.md",
      "position": null,
      "original_position": 44,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "6a5408dd7da4c31283cb4f632b3a7aa692a53ca3",
      "in_reply_to_id": 1649328350,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I need to spend some more time with this and test if this actually changed but this was added in #28618 which goes back to the conversation in the last assumeutxo PR: https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1545856135. I think nothing has changed in that regard though. I think the prune locks prevent the blocks of the snapshot from being pruned.",
      "created_at": "2024-07-11T16:51:25Z",
      "updated_at": "2024-07-11T16:51:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1674353019",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674353019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": 43,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674353201",
      "pull_request_review_id": 2172480730,
      "id": 1674353201,
      "node_id": "PRRC_kwDOABII585jzJox",
      "diff_hunk": "@@ -0,0 +1,65 @@\n+# Assumeutxo Usage\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance.\n+\n+For notes on the design of Assumeutxo, please refer to [the design doc](/doc/assumeutxo.md).\n+\n+## Loading a snapshot\n+\n+There is currently no canonical source for snapshots, but any downloaded snapshot\n+will be checked against a hash that's been hardcoded in source code. If there is\n+no source for the snapshot you need, you can generate it yourself using",
      "path": "doc/assumeutxo.md",
      "position": 12,
      "original_position": 12,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "6a5408dd7da4c31283cb4f632b3a7aa692a53ca3",
      "in_reply_to_id": 1649320665,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "added and mentioned also that this node needs to be synced already",
      "created_at": "2024-07-11T16:51:32Z",
      "updated_at": "2024-07-11T16:51:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1674353201",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674353201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674353313",
      "pull_request_review_id": 2172480865,
      "id": 1674353313,
      "node_id": "PRRC_kwDOABII585jzJqh",
      "diff_hunk": "@@ -2654,10 +2657,56 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);\n+        if (connman.GetNetworkActive()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Network activity could not be suspended.\");\n+        }\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+\n+        // In case there is any issue with a block being read from disc we need",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": 1648975246,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2024-07-11T16:51:37Z",
      "updated_at": "2024-07-11T16:51:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1674353313",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674353313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2688,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674353598",
      "pull_request_review_id": 2172481167,
      "id": 1674353598,
      "node_id": "PRRC_kwDOABII585jzJu-",
      "diff_hunk": "@@ -2654,10 +2657,56 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": 1648974658,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have implemented the RAII class and expanded the comment. If my understanding is correct I think we would punish a peer as misbehaving if they send us a block that is connecting to an invalid block (https://github.com/bitcoin/bitcoin/blob/master/src/net_processing.cpp#L1927) so we would punish any peer sending us a normal new block. We also wouldn't accept transactions that have a locktime above the snapshot height though I am not sure if switching off network activity is getting us a better result in that case.",
      "created_at": "2024-07-11T16:51:47Z",
      "updated_at": "2024-07-11T16:51:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1674353598",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674353598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2679,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674354358",
      "pull_request_review_id": 2172482065,
      "id": 1674354358,
      "node_id": "PRRC_kwDOABII585jzJ62",
      "diff_hunk": "@@ -2646,10 +2649,53 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(::cs_main);\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "5da057c5330a49122873b9d5f5a44aea9bff1a8d",
      "in_reply_to_id": 1527560566,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is fixed now since #29668 got merged and I am using this here now.",
      "created_at": "2024-07-11T16:52:19Z",
      "updated_at": "2024-07-11T16:52:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1674354358",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1674354358"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2671,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675479974",
      "pull_request_review_id": 2174132182,
      "id": 1675479974,
      "node_id": "PRRC_kwDOABII585j3cum",
      "diff_hunk": "@@ -2654,10 +2657,56 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);\n+        if (connman.GetNetworkActive()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Network activity could not be suspended.\");\n+        }\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": 1649335464,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess it would still be good to leave a comment about the race in the source code (or in the docs on how to avoid the race). I guess the user would simply have to avoid calling other `*block` RPCs for the duration of `dumptxoutset`? (The p2p is already stopped, so shouldn't be the cause of a race)",
      "created_at": "2024-07-12T08:07:24Z",
      "updated_at": "2024-07-12T08:07:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1675479974",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675479974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675572668",
      "pull_request_review_id": 2174277001,
      "id": 1675572668,
      "node_id": "PRRC_kwDOABII585j3zW8",
      "diff_hunk": "@@ -2654,10 +2657,56 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);\n+        if (connman.GetNetworkActive()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Network activity could not be suspended.\");\n+        }\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": 1649335464,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I added a small comment in the code and also mention it now in the usage guide as well as the rpc help text.",
      "created_at": "2024-07-12T09:20:36Z",
      "updated_at": "2024-07-12T09:20:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1675572668",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1675572668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689636259",
      "pull_request_review_id": 2196517706,
      "id": 1689636259,
      "node_id": "PRRC_kwDOABII585ktc2j",
      "diff_hunk": "@@ -0,0 +1,65 @@\n+# Assumeutxo Usage\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance.\n+\n+For notes on the design of Assumeutxo, please refer to [the design doc](/doc/assumeutxo.md).\n+\n+## Loading a snapshot\n+\n+There is currently no canonical source for snapshots, but any downloaded snapshot\n+will be checked against a hash that's been hardcoded in source code. If there is\n+no source for the snapshot you need, you can generate it yourself using\n+`dumptxoutset` (see [Generating a snapshot](#generating-a-snapshot)).\n+\n+Once you've obtained the snapshot, you can use the RPC command `loadtxoutset` to\n+load it.\n+\n+```\n+$ bitcoin-cli loadtxoutset /path/to/input\n+```\n+\n+After the snapshot has loaded, the syncing process of both the snapshot chain\n+and the background IBD chain can be monitored with the `getchainstates` RPC.\n+\n+### Pruning\n+\n+A pruned node can load a snapshot. To save space, it's possible to delete the\n+snapshot file as soon as `loadtxoutset` finishes.\n+\n+The minimum `-prune` setting is 550 MiB, but this functionality ignores that\n+minimum and uses at least 1100 MiB.\n+\n+As the background sync continues there will be temporarily two chainstate\n+directories, each multiple gigabytes in size (likely growing larger than the\n+downloaded snapshot).\n+\n+### Indexes\n+\n+Indexes work but don't take advantage of this feature. They always start building\n+from the genesis block. Once the background validation reaches the snapshot block,\n+indexes will continue to build all the way to the tip.\n+\n+For indexes that support pruning, note that no pruning will take place between\n+the snapshot and the tip, until the background sync has completed - after which",
      "path": "doc/assumeutxo.md",
      "position": null,
      "original_position": 44,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "6a5408dd7da4c31283cb4f632b3a7aa692a53ca3",
      "in_reply_to_id": 1649328350,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1674353019\r\n\r\nOh, I think I just forgot about prune locks added by indexes when I wrote this comment. If indexes are disabled, then the normal `GetPruneRange` function that controls pruning will allow pruning blocks between the snapshot and the tip.\r\n\r\nBut if indexes are enabled, because indexes prevent any blocks that haven't been indexed yet from being pruned, and because indexes currently just ignore the snapshot and don't take advantage of it, indexes only allow pruning between the genesis block and the last block indexed, and don't allow anything after that to be pruned, including blocks between the snapshot and the tip.\r\n\r\nI think this section could probably be made clearer by spelling everything out explicitly:\r\n\r\n- Indexes don't currently take advantage of the snapshot at all. Right now they can only index blocks in order, starting from genesis.\r\n- Indexes only allow blocks that were indexed to be pruned, and don't allow any block that hasn't been indexed yet to be pruned.\r\n- If the snapshot is old, then a lot of blocks after the snapshot block will need to be downloaded, and these blocks can't be pruned until they are indexed, so they could consume a lot of disk space until indexing catches up to the snapshot block.",
      "created_at": "2024-07-24T11:52:26Z",
      "updated_at": "2024-07-24T14:03:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1689636259",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689636259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": 43,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689671443",
      "pull_request_review_id": 2196517706,
      "id": 1689671443,
      "node_id": "PRRC_kwDOABII585ktlcT",
      "diff_hunk": "@@ -2656,6 +2675,9 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to a file.\",\n         {\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\n+            {\"height\", RPCArg::Type::NUM, RPCArg::DefaultHint{\"the latest valid snapshot height\"},\n+                \"Height of the UTXO set file. Note: The further this number is from the tip, the longer this process will take. Consider setting a higher -rpcclienttimeout value in this case.\"\n+            },",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "5df60fb49cfae1e3a56b68e2f43ff0722f39abb7",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"RPC: Add height parameter to dumptxoutset\" (5df60fb49cfae1e3a56b68e2f43ff0722f39abb7)\r\n\r\nSeems like this accepts a height or a hash, so could mention this accepts block hashes and maybe call this  height_or_hash or whatever the convention is",
      "created_at": "2024-07-24T12:14:10Z",
      "updated_at": "2024-07-24T14:03:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1689671443",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689671443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": 2678,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2706,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689840218",
      "pull_request_review_id": 2196517706,
      "id": 1689840218,
      "node_id": "PRRC_kwDOABII585kuOpa",
      "diff_hunk": "@@ -2654,10 +2657,56 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);\n+        if (connman.GetNetworkActive()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Network activity could not be suspended.\");\n+        }\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": 1649335464,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1649335464\r\n\r\nI don't think this is critical to fix but if you wanted to remove the race condition, the following change should work:\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -74,6 +74,22 @@ static GlobalMutex cs_blockchange;\r\n static std::condition_variable cond_blockchange;\r\n static CUpdatedBlock latestblock GUARDED_BY(cs_blockchange);\r\n \r\n+std::tuple<std::unique_ptr<CCoinsViewCursor>, CCoinsStats, const CBlockIndex*>\r\n+PrepareUTXOSnapshot(\r\n+    Chainstate& chainstate,\r\n+    const std::function<void()>& interruption_point = {})\r\n+    EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\r\n+\r\n+UniValue WriteUTXOSnapshot(\r\n+    Chainstate& chainstate,\r\n+    CCoinsViewCursor* pcursor,\r\n+    CCoinsStats* maybe_stats,\r\n+    const CBlockIndex* tip,\r\n+    AutoFile& afile,\r\n+    const fs::path& path,\r\n+    const fs::path& temppath,\r\n+    const std::function<void()>& interruption_point = {});\r\n+\r\n /* Calculate the difficulty for a given block index.\r\n  */\r\n double GetDifficulty(const CBlockIndex& blockindex)\r\n@@ -2730,7 +2746,7 @@ static RPCHelpMan dumptxoutset()\r\n         target_index = ParseHashOrHeight(request.params[1], *node.chainman);\r\n     }\r\n \r\n-    const auto tip{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\r\n+    const CBlockIndex* tip{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\r\n     const CBlockIndex* invalidate_index{nullptr};\r\n     std::unique_ptr<NetworkDisable> disable_network;\r\n \r\n@@ -2754,32 +2770,41 @@ static RPCHelpMan dumptxoutset()\r\n         // seems wrong in this temporary state. For example a normal new block\r\n         // would be classified as a block connecting an invalid block.\r\n         disable_network = std::make_unique<NetworkDisable>(connman);\r\n-\r\n-        // Note: Unlocking cs_main before CreateUTXOSnapshot might be racy\r\n-        // if the user interacts with any other *block RPCs.\r\n         invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\r\n         InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\r\n-        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\r\n+    }\r\n \r\n+    Chainstate* chainstate;\r\n+    std::unique_ptr<CCoinsViewCursor> cursor;\r\n+    CCoinsStats stats;\r\n+    UniValue result;\r\n+    UniValue error;\r\n+    {\r\n+        LOCK(node.chainman->GetMutex());\r\n+        chainstate = &node.chainman->ActiveChainstate();\r\n         // In case there is any issue with a block being read from disk we need\r\n         // to stop here, otherwise the dump could still be created for the wrong\r\n         // height.\r\n         // The new tip could also not be the target block if we have a stale\r\n         // sister block of invalidate_index. This block (or a descendant) would\r\n         // be activated as the new tip and we would not get to new_tip_index.\r\n-        if (new_tip_index != target_index) {\r\n-            ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());\r\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\r\n+        if (target_index != chainstate->m_chain.Tip()) {\r\n+            error = JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\r\n+        } else {\r\n+            std::tie(cursor, stats, tip) = PrepareUTXOSnapshot(*chainstate, node.rpc_interruption_point);\r\n         }\r\n     }\r\n \r\n-    UniValue result = CreateUTXOSnapshot(\r\n-        node, node.chainman->ActiveChainstate(), afile, path, temppath);\r\n-    fs::rename(temppath, path);\r\n-\r\n+    if (error.isNull()) {\r\n+        result = WriteUTXOSnapshot(*chainstate, cursor.get(), &stats, tip, afile, path, temppath, node.rpc_interruption_point);\r\n+        fs::rename(temppath, path);\r\n+    }\r\n     if (invalidate_index) {\r\n         ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());\r\n     }\r\n+    if (!error.isNull()) {\r\n+        throw error;\r\n+    }\r\n \r\n     result.pushKV(\"path\", path.utf8string());\r\n     return result;\r\n@@ -2787,12 +2812,10 @@ static RPCHelpMan dumptxoutset()\r\n     };\r\n }\r\n \r\n-UniValue CreateUTXOSnapshot(\r\n-    NodeContext& node,\r\n+std::tuple<std::unique_ptr<CCoinsViewCursor>, CCoinsStats, const CBlockIndex*>\r\n+PrepareUTXOSnapshot(\r\n     Chainstate& chainstate,\r\n-    AutoFile& afile,\r\n-    const fs::path& path,\r\n-    const fs::path& temppath)\r\n+    const std::function<void()>& interruption_point)\r\n {\r\n     std::unique_ptr<CCoinsViewCursor> pcursor;\r\n     std::optional<CCoinsStats> maybe_stats;\r\n@@ -2811,11 +2834,11 @@ UniValue CreateUTXOSnapshot(\r\n         // See discussion here:\r\n         //   https://github.com/bitcoin/bitcoin/pull/15606#discussion_r274479369\r\n         //\r\n-        LOCK(::cs_main);\r\n+        AssertLockHeld(::cs_main);\r\n \r\n         chainstate.ForceFlushStateToDisk();\r\n \r\n-        maybe_stats = GetUTXOStats(&chainstate.CoinsDB(), chainstate.m_blockman, CoinStatsHashType::HASH_SERIALIZED, node.rpc_interruption_point);\r\n+        maybe_stats = GetUTXOStats(&chainstate.CoinsDB(), chainstate.m_blockman, CoinStatsHashType::HASH_SERIALIZED, interruption_point);\r\n         if (!maybe_stats) {\r\n             throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to read UTXO set\");\r\n         }\r\n@@ -2823,7 +2846,19 @@ UniValue CreateUTXOSnapshot(\r\n         pcursor = chainstate.CoinsDB().Cursor();\r\n         tip = CHECK_NONFATAL(chainstate.m_blockman.LookupBlockIndex(maybe_stats->hashBlock));\r\n     }\r\n+    return {std::move(pcursor), *CHECK_NONFATAL(maybe_stats), tip};\r\n+}\r\n \r\n+UniValue WriteUTXOSnapshot(\r\n+    Chainstate& chainstate,\r\n+    CCoinsViewCursor* pcursor,\r\n+    CCoinsStats* maybe_stats,\r\n+    const CBlockIndex* tip,\r\n+    AutoFile& afile,\r\n+    const fs::path& path,\r\n+    const fs::path& temppath,\r\n+    const std::function<void()>& interruption_point)\r\n+{\r\n     LOG_TIME_SECONDS(strprintf(\"writing UTXO snapshot at height %s (%s) to file %s (via %s)\",\r\n         tip->nHeight, tip->GetBlockHash().ToString(),\r\n         fs::PathToString(path), fs::PathToString(temppath)));\r\n@@ -2859,7 +2894,7 @@ UniValue CreateUTXOSnapshot(\r\n     pcursor->GetKey(key);\r\n     last_hash = key.hash;\r\n     while (pcursor->Valid()) {\r\n-        if (iter % 5000 == 0) node.rpc_interruption_point();\r\n+        if (iter % 5000 == 0) interruption_point();\r\n         ++iter;\r\n         if (pcursor->GetKey(key) && pcursor->GetValue(coin)) {\r\n             if (key.hash != last_hash) {\r\n@@ -2890,6 +2925,17 @@ UniValue CreateUTXOSnapshot(\r\n     return result;\r\n }\r\n \r\n+UniValue CreateUTXOSnapshot(\r\n+    node::NodeContext& node,\r\n+    Chainstate& chainstate,\r\n+    AutoFile& afile,\r\n+    const fs::path& path,\r\n+    const fs::path& tmppath)\r\n+{\r\n+    auto [cursor, stats, tip]{WITH_LOCK(::cs_main, return PrepareUTXOSnapshot(chainstate, node.rpc_interruption_point))};\r\n+    return WriteUTXOSnapshot(chainstate, cursor.get(), &stats, tip, afile, path, tmppath, node.rpc_interruption_point);\r\n+}\r\n+\r\n static RPCHelpMan loadtxoutset()\r\n {\r\n     return RPCHelpMan{\r\n```\r\n\r\n</p>\r\n</details>\r\n",
      "created_at": "2024-07-24T13:43:40Z",
      "updated_at": "2024-07-24T14:03:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1689840218",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689840218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689871705",
      "pull_request_review_id": 2196517706,
      "id": 1689871705,
      "node_id": "PRRC_kwDOABII585kuWVZ",
      "diff_hunk": "@@ -2687,10 +2719,68 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* target_index{};\n+    if (request.params[1].isNull()) {\n+        auto snapshot_heights = node.chainman->GetParams().GetAvailableSnapshotHeights();\n+        auto max_height = std::max_element(snapshot_heights.begin(), snapshot_heights.end());\n+        target_index = ParseHashOrHeight(*max_height, *node.chainman);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 151,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "27767184aaa7fa94600c70334cc4122e25872ff6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"RPC: Add height parameter to dumptxoutset\" (5df60fb49cfae1e3a56b68e2f43ff0722f39abb7)\r\n\r\nIt's not safe to dereference `max_height` if snapshot_heights is empty. Would be good to either assert snapshot_heights is nonempty, or just leave target_index null in this case and not roll back if it is null.",
      "created_at": "2024-07-24T13:58:51Z",
      "updated_at": "2024-07-24T14:03:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1689871705",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1689871705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691981055",
      "pull_request_review_id": 2200131865,
      "id": 1691981055,
      "node_id": "PRRC_kwDOABII585k2ZT_",
      "diff_hunk": "@@ -2672,7 +2672,9 @@ static RPCHelpMan dumptxoutset()\n {\n     return RPCHelpMan{\n         \"dumptxoutset\",\n-        \"Write the serialized UTXO set to a file.\",\n+        \"Write the serialized UTXO set to a file. This can be used in loadtxoutset afterwards if this snapshot height is supported in the chainparams as well.\\n\\n\"\n+        \"Unless the requested height is the current tip, the node will roll back to the requested height and network activity will be suspended during this process.\"",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "27767184aaa7fa94600c70334cc4122e25872ff6",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: needs a space after \"process\".",
      "created_at": "2024-07-25T18:51:11Z",
      "updated_at": "2024-07-25T20:02:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1691981055",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1691981055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2676,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1692015394",
      "pull_request_review_id": 2200131865,
      "id": 1692015394,
      "node_id": "PRRC_kwDOABII585k2hsi",
      "diff_hunk": "@@ -2695,10 +2717,66 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* target_index{};\n+    if (request.params[1].isNull()) {",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "5df60fb49cfae1e3a56b68e2f43ff0722f39abb7",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I don't like this default. This RPC is already kind of dangerous, it could roll back and forth the chain for hundred thousands of blocks (if executed a few years after it's released), which could take days, and could lead to inconsistencies that would need manual effort to fix (if the process was interrupted by user, power failure etc.).\r\n\r\nI think that  we should make it harder to accidentally misuse it and require users to explicitly state the height/ block beofre attempting huge rollbacks. So I'd prefer to either dump the tip by default, or make the height param mandatory.\r\n\r\nAlso, I'm not sure the use case is strong enough to warrant this default. It can be used both to create new snapshots (not registered before) and to \"recreate\" a snapshot, maybe in order to distribute it to others. I don't really see why the second use case is so much more important that it should be the default.",
      "created_at": "2024-07-25T19:25:54Z",
      "updated_at": "2024-07-25T20:02:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1692015394",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1692015394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2723,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1692241617",
      "pull_request_review_id": 2200584665,
      "id": 1692241617,
      "node_id": "PRRC_kwDOABII585k3Y7R",
      "diff_hunk": "@@ -2695,10 +2717,66 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* target_index{};\n+    if (request.params[1].isNull()) {",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "5df60fb49cfae1e3a56b68e2f43ff0722f39abb7",
      "in_reply_to_id": 1692015394,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I don't like this default. This RPC is already kind of dangerous, it could roll back and forth the chain for hundred thousands of blocks (if executed a few years after it's released), which could take days\r\n\r\nThat's a good point. Given a choice of whether the default behavior might create a useless snapshot that can't be loaded or take the node offline trying to produce a really old snapshot, that makes me think there should probably not be a default value at all and the user should have to explicitly specify the behavior they want.\r\n\r\nWould suggest adding a `type` parameter for the user to specify whether they want the latest snapshot or to roll back to a historic snapshot, and a `rollback` option to optionally specify the height or hash of a historic snapshot. Usage would look like:\r\n\r\n```bash\r\n# create the a snapshot of the latest utxo set\r\nbitcoin-cli dumptxoutset utxo.dat latest\r\n# roll back and create a snapshot of the latest utxo set that can be loaded\r\nbitcoin-cli dumptxoutset utxo.dat rollback\r\n# roll back to the specified height and create snapshot of that utxo set\r\nbitcoin-cli -named dumptxoutset utxo.dat rollback=853456\r\n```\r\n\r\nAnd a possible implementation would be:\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -2673,12 +2673,17 @@ static RPCHelpMan dumptxoutset()\r\n     return RPCHelpMan{\r\n         \"dumptxoutset\",\r\n         \"Write the serialized UTXO set to a file. This can be used in loadtxoutset afterwards if this snapshot height is supported in the chainparams as well.\\n\\n\"\r\n-        \"Unless the requested height is the current tip, the node will roll back to the requested height and network activity will be suspended during this process.\"\r\n+        \"Unless the requested height is the current tip, the node will roll back to the requested height and network activity will be suspended during this process. \"\r\n         \"Because of this it is discouraged to interact with the node in any other way during the execution of this call to avoid inconsistent results and race conditions, particularly RPCs that interact with blockstorage.\",\r\n         {\r\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\r\n-            {\"height\", RPCArg::Type::NUM, RPCArg::DefaultHint{\"the latest valid snapshot height\"},\r\n-                \"Height of the UTXO set file. Note: The further this number is from the tip, the longer this process will take. Consider setting a higher -rpcclienttimeout value in this case.\"\r\n+            {\"type\", RPCArg::Type::STR, RPCArg::Default(\"\"), \"The type of snapshot to create. Can be \\\"latest\\\" to create a snapshot of the current UTXO set or \\\"rollback\\\" to temporarily roll back the state of the node to a historical block before creating the snapshot of a historical UTXO set. This parameter can be omitted if a separate \\\"rollback\\\" named parameter is specified indicating the height or hash of a specific historical block. If \\\"rollback\\\" is specified and separate \\\"rollback\\\" named parameter is not specified, this will roll back to the latest valid snapshot block that currently be loaded with loadtxoutset.\"},\r\n+            {\"options\", RPCArg::Type::OBJ_NAMED_PARAMS, RPCArg::Optional::OMITTED, \"\",\r\n+                {\r\n+                    {\"rollback\", RPCArg::Type::NUM, RPCArg::Optional::OMITTED,\r\n+                        \"Height or hash of the block to roll back to before creating the snapshot. Note: The further this number is from the tip, the longer this process will take. Consider setting a higher -rpcclienttimeout value in this case.\",\r\n+                    RPCArgOptions{.skip_type_check = true, .type_str = {\"\", \"string or numeric\"}}},\r\n+                },\r\n             },\r\n         },\r\n         RPCResult{\r\n@@ -2693,10 +2698,33 @@ static RPCHelpMan dumptxoutset()\r\n                 }\r\n         },\r\n         RPCExamples{\r\n-            HelpExampleCli(\"dumptxoutset\", \"utxo.dat\")\r\n+            HelpExampleCli(\"dumptxoutset\", \"utxo.dat latest\") +\r\n+            HelpExampleCli(\"dumptxoutset\", \"utxo.dat rollback\") +\r\n+            HelpExampleCli(\"-named dumptxoutset\", R\"(utxo.dat rollback=853456)\")\r\n         },\r\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\r\n {\r\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\r\n+    const CBlockIndex* tip{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\r\n+    const CBlockIndex* target_index{nullptr};\r\n+    const std::string snapshot_type{self.Arg<std::string>(\"type\")};\r\n+    const UniValue options{request.params[2].isNull() ? UniValue::VOBJ : request.params[2]};\r\n+    if (options.exists(\"rollback\")) {\r\n+        if (!snapshot_type.empty() && snapshot_type != \"rollback\") {\r\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid snapshot type \\\"%s\\\" specified with rollback option\", snapshot_type));\r\n+        }\r\n+        target_index = ParseHashOrHeight(options[\"rollback\"], *node.chainman);\r\n+    } else if (snapshot_type == \"rollback\") {\r\n+        auto snapshot_heights = node.chainman->GetParams().GetAvailableSnapshotHeights();\r\n+        CHECK_NONFATAL(snapshot_heights.size() > 0);\r\n+        auto max_height = std::max_element(snapshot_heights.begin(), snapshot_heights.end());\r\n+        target_index = ParseHashOrHeight(*max_height, *node.chainman);\r\n+    } else if (snapshot_type == \"latest\") {\r\n+        target_index = tip;\r\n+    } else {\r\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, strprintf(\"Invalid snapshot type \\\"%s\\\" specified. Please specify \\\"rollback\\\" or \\\"latest\\\"\", snapshot_type));\r\n+    }\r\n+  \r\n     const ArgsManager& args{EnsureAnyArgsman(request.context)};\r\n     const fs::path path = fsbridge::AbsPathJoin(args.GetDataDirNet(), fs::u8path(request.params[0].get_str()));\r\n     // Write to a temporary path and then move into `path` on completion\r\n@@ -2718,19 +2746,7 @@ static RPCHelpMan dumptxoutset()\r\n             \"Couldn't open file \" + temppath.utf8string() + \" for writing.\");\r\n     }\r\n \r\n-    NodeContext& node = EnsureAnyNodeContext(request.context);\r\n     CConnman& connman = EnsureConnman(node);\r\n-\r\n-    const CBlockIndex* target_index{};\r\n-    if (request.params[1].isNull()) {\r\n-        auto snapshot_heights = node.chainman->GetParams().GetAvailableSnapshotHeights();\r\n-        auto max_height = std::max_element(snapshot_heights.begin(), snapshot_heights.end());\r\n-        target_index = ParseHashOrHeight(*max_height, *node.chainman);\r\n-    } else {\r\n-        target_index = ParseHashOrHeight(request.params[1], *node.chainman);\r\n-    }\r\n-\r\n-    const auto tip{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\r\n     const CBlockIndex* invalidate_index{nullptr};\r\n     std::unique_ptr<NetworkDisable> disable_network;\r\n \r\n--- a/src/rpc/client.cpp\r\n+++ b/src/rpc/client.cpp\r\n@@ -185,7 +185,8 @@ static const CRPCConvertParam vRPCConvertParams[] =\r\n     { \"gettxoutproof\", 0, \"txids\" },\r\n     { \"gettxoutsetinfo\", 1, \"hash_or_height\" },\r\n     { \"gettxoutsetinfo\", 2, \"use_index\"},\r\n-    { \"dumptxoutset\", 1, \"height\"},\r\n+    { \"dumptxoutset\", 2, \"options\" },\r\n+    { \"dumptxoutset\", 2, \"rollback\" },\r\n     { \"lockunspent\", 0, \"unlock\" },\r\n     { \"lockunspent\", 1, \"transactions\" },\r\n     { \"lockunspent\", 2, \"persistent\" },\r\n```\r\n\r\n</p>\r\n</details>\r\n",
      "created_at": "2024-07-25T22:53:55Z",
      "updated_at": "2024-07-25T22:56:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1692241617",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1692241617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2723,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1718993291",
      "pull_request_review_id": 2241331226,
      "id": 1718993291,
      "node_id": "PRRC_kwDOABII585mdcGL",
      "diff_hunk": "@@ -2672,7 +2672,9 @@ static RPCHelpMan dumptxoutset()\n {\n     return RPCHelpMan{\n         \"dumptxoutset\",\n-        \"Write the serialized UTXO set to a file.\",\n+        \"Write the serialized UTXO set to a file. This can be used in loadtxoutset afterwards if this snapshot height is supported in the chainparams as well.\\n\\n\"\n+        \"Unless the requested height is the current tip, the node will roll back to the requested height and network activity will be suspended during this process.\"",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "27767184aaa7fa94600c70334cc4122e25872ff6",
      "in_reply_to_id": 1691981055,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed",
      "created_at": "2024-08-15T21:05:01Z",
      "updated_at": "2024-08-15T21:05:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1718993291",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1718993291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2676,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1718993817",
      "pull_request_review_id": 2241332055,
      "id": 1718993817,
      "node_id": "PRRC_kwDOABII585mdcOZ",
      "diff_hunk": "@@ -2687,10 +2719,68 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* target_index{};\n+    if (request.params[1].isNull()) {\n+        auto snapshot_heights = node.chainman->GetParams().GetAvailableSnapshotHeights();\n+        auto max_height = std::max_element(snapshot_heights.begin(), snapshot_heights.end());\n+        target_index = ParseHashOrHeight(*max_height, *node.chainman);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 151,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "27767184aaa7fa94600c70334cc4122e25872ff6",
      "in_reply_to_id": 1689871705,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fixed (as part of one of the larger changes)",
      "created_at": "2024-08-15T21:05:28Z",
      "updated_at": "2024-08-15T21:05:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1718993817",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1718993817"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2728,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1718995086",
      "pull_request_review_id": 2241333997,
      "id": 1718995086,
      "node_id": "PRRC_kwDOABII585mdciO",
      "diff_hunk": "@@ -2656,6 +2675,9 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to a file.\",\n         {\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\n+            {\"height\", RPCArg::Type::NUM, RPCArg::DefaultHint{\"the latest valid snapshot height\"},\n+                \"Height of the UTXO set file. Note: The further this number is from the tip, the longer this process will take. Consider setting a higher -rpcclienttimeout value in this case.\"\n+            },",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "5df60fb49cfae1e3a56b68e2f43ff0722f39abb7",
      "in_reply_to_id": 1689671443,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Adopted the type approach you suggested so this is resolved as well with that.",
      "created_at": "2024-08-15T21:06:35Z",
      "updated_at": "2024-08-15T21:06:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1718995086",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1718995086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": 2678,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2706,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1718998488",
      "pull_request_review_id": 2241339464,
      "id": 1718998488,
      "node_id": "PRRC_kwDOABII585mddXY",
      "diff_hunk": "@@ -2695,10 +2717,66 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* target_index{};\n+    if (request.params[1].isNull()) {",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "5df60fb49cfae1e3a56b68e2f43ff0722f39abb7",
      "in_reply_to_id": 1692015394,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, I agree that the default wasn't very sensitive when looking at it this way. I have adopted the type approach that @ryanofsky suggested. I think it may be a bit more complicated to understand initially for users but it's also easier to hand because you don't have to deal with a hash or height in the most common use cases.",
      "created_at": "2024-08-15T21:09:31Z",
      "updated_at": "2024-08-15T21:09:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1718998488",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1718998488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2723,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1719001528",
      "pull_request_review_id": 2241344277,
      "id": 1719001528,
      "node_id": "PRRC_kwDOABII585mdeG4",
      "diff_hunk": "@@ -2654,10 +2657,56 @@ static RPCHelpMan dumptxoutset()\n     }\n \n     NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+\n+    const CBlockIndex* invalidate_index{nullptr};\n+    if (!request.params[1].isNull()) {\n+        const CBlockIndex* target_index = ParseHashOrHeight(request.params[1], *node.chainman);\n+\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstStoredBlock(*current_tip)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height.\n+        connman.SetNetworkActive(false);\n+        if (connman.GetNetworkActive()) {\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Network activity could not be suspended.\");\n+        }\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "2cdce8fd9c93099db7e86ff33a1da8fbf0aaf364",
      "in_reply_to_id": 1649335464,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I have introduced your suggested fix as a separate commit because the main commit is already quite big and I think it's easier to review this way. I added some minor documentation changes since `CreateUTXOSnaphot()` is now only used in tests.",
      "created_at": "2024-08-15T21:11:55Z",
      "updated_at": "2024-08-15T21:11:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1719001528",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1719001528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1719045686",
      "pull_request_review_id": 2241411409,
      "id": 1719045686,
      "node_id": "PRRC_kwDOABII585mdo42",
      "diff_hunk": "@@ -0,0 +1,65 @@\n+# Assumeutxo Usage\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance.\n+\n+For notes on the design of Assumeutxo, please refer to [the design doc](/doc/assumeutxo.md).\n+\n+## Loading a snapshot\n+\n+There is currently no canonical source for snapshots, but any downloaded snapshot\n+will be checked against a hash that's been hardcoded in source code. If there is\n+no source for the snapshot you need, you can generate it yourself using\n+`dumptxoutset` (see [Generating a snapshot](#generating-a-snapshot)).\n+\n+Once you've obtained the snapshot, you can use the RPC command `loadtxoutset` to\n+load it.\n+\n+```\n+$ bitcoin-cli loadtxoutset /path/to/input\n+```\n+\n+After the snapshot has loaded, the syncing process of both the snapshot chain\n+and the background IBD chain can be monitored with the `getchainstates` RPC.\n+\n+### Pruning\n+\n+A pruned node can load a snapshot. To save space, it's possible to delete the\n+snapshot file as soon as `loadtxoutset` finishes.\n+\n+The minimum `-prune` setting is 550 MiB, but this functionality ignores that\n+minimum and uses at least 1100 MiB.\n+\n+As the background sync continues there will be temporarily two chainstate\n+directories, each multiple gigabytes in size (likely growing larger than the\n+downloaded snapshot).\n+\n+### Indexes\n+\n+Indexes work but don't take advantage of this feature. They always start building\n+from the genesis block. Once the background validation reaches the snapshot block,\n+indexes will continue to build all the way to the tip.\n+\n+For indexes that support pruning, note that no pruning will take place between\n+the snapshot and the tip, until the background sync has completed - after which",
      "path": "doc/assumeutxo.md",
      "position": null,
      "original_position": 44,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "6a5408dd7da4c31283cb4f632b3a7aa692a53ca3",
      "in_reply_to_id": 1649328350,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I made some edits here, making sure to clearly spell out what you suggested to include.",
      "created_at": "2024-08-15T21:48:55Z",
      "updated_at": "2024-08-15T21:48:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1719045686",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1719045686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": 43,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1719053204",
      "pull_request_review_id": 2241421928,
      "id": 1719053204,
      "node_id": "PRRC_kwDOABII585mdquU",
      "diff_hunk": "@@ -2774,44 +2790,52 @@ static RPCHelpMan dumptxoutset()\n         // would be classified as a block connecting an invalid block.\n         disable_network = std::make_unique<NetworkDisable>(connman);\n \n-        // Note: Unlocking cs_main before CreateUTXOSnapshot might be racy\n-        // if the user interacts with any other *block RPCs.\n         invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n         InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n-        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+    }\n \n+    Chainstate* chainstate;\n+    std::unique_ptr<CCoinsViewCursor> cursor;\n+    CCoinsStats stats;\n+    UniValue result;\n+    UniValue error;\n+    {\n+        LOCK(node.chainman->GetMutex());",
      "path": "src/rpc/blockchain.cpp",
      "position": 253,
      "original_position": 40,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "0c1238917a5edf6bdcae15aab5f91b1bdd2540b9",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"rpc, refactor: Prevent potential race conditions in dumptxoutset\" (0c1238917a5edf6bdcae15aab5f91b1bdd2540b9)\r\n\r\nWould be nice to add a comment explaining locking here. Maybe \"// Lock the chainstate before calling PrepareUtxoSnapshot, to be able to get a UTXO database cursor while the chain is pointing at the target block. After that, release the lock while calling WriteUTXOSnapshot. The cursor will remain valid and be used by WriteUTXOSnapshot to write a consistent snapshot even if the chainstate changes.\"\r\n",
      "created_at": "2024-08-15T21:58:49Z",
      "updated_at": "2024-08-15T22:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1719053204",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1719053204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2809,
      "original_line": 2809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1719054774",
      "pull_request_review_id": 2241421928,
      "id": 1719054774,
      "node_id": "PRRC_kwDOABII585mdrG2",
      "diff_hunk": "@@ -2774,44 +2790,52 @@ static RPCHelpMan dumptxoutset()\n         // would be classified as a block connecting an invalid block.\n         disable_network = std::make_unique<NetworkDisable>(connman);\n \n-        // Note: Unlocking cs_main before CreateUTXOSnapshot might be racy\n-        // if the user interacts with any other *block RPCs.\n         invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n         InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n-        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+    }\n \n+    Chainstate* chainstate;\n+    std::unique_ptr<CCoinsViewCursor> cursor;\n+    CCoinsStats stats;\n+    UniValue result;\n+    UniValue error;\n+    {\n+        LOCK(node.chainman->GetMutex());\n+        chainstate = &node.chainman->ActiveChainstate();\n         // In case there is any issue with a block being read from disk we need\n         // to stop here, otherwise the dump could still be created for the wrong\n         // height.\n         // The new tip could also not be the target block if we have a stale\n         // sister block of invalidate_index. This block (or a descendant) would\n         // be activated as the new tip and we would not get to new_tip_index.\n-        if (new_tip_index != target_index) {\n-            ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        if (target_index != chainstate->m_chain.Tip()) {\n+            error = JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        } else {\n+            std::tie(cursor, stats, tip) = PrepareUTXOSnapshot(*chainstate, node.rpc_interruption_point);\n         }\n     }\n \n-    UniValue result = CreateUTXOSnapshot(\n-        node, node.chainman->ActiveChainstate(), afile, path, temppath);\n-    fs::rename(temppath, path);\n-\n+    if (error.isNull()) {\n+        result = WriteUTXOSnapshot(*chainstate, cursor.get(), &stats, tip, afile, path, temppath, node.rpc_interruption_point);\n+        fs::rename(temppath, path);\n+    }\n     if (invalidate_index) {\n         ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());\n     }\n+    if (!error.isNull()) {\n+        throw error;\n+    }\n \n     result.pushKV(\"path\", path.utf8string());\n     return result;\n },\n     };\n }\n \n-UniValue CreateUTXOSnapshot(\n-    NodeContext& node,\n+std::tuple<std::unique_ptr<CCoinsViewCursor>, CCoinsStats, const CBlockIndex*>\n+PrepareUTXOSnapshot(",
      "path": "src/rpc/blockchain.cpp",
      "position": 288,
      "original_position": 82,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "0c1238917a5edf6bdcae15aab5f91b1bdd2540b9",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"rpc, refactor: Prevent potential race conditions in dumptxoutset\" (0c1238917a5edf6bdcae15aab5f91b1bdd2540b9)\r\n\r\nWould be good to update comment on line 2852. Could replace \"use below this block\" with \"use in WriteUTXOSnapshot\"",
      "created_at": "2024-08-15T22:01:14Z",
      "updated_at": "2024-08-15T22:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1719054774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1719054774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2842,
      "original_line": 2842,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1719061724",
      "pull_request_review_id": 2241421928,
      "id": 1719061724,
      "node_id": "PRRC_kwDOABII585mdszc",
      "diff_hunk": "@@ -2774,44 +2790,52 @@ static RPCHelpMan dumptxoutset()\n         // would be classified as a block connecting an invalid block.\n         disable_network = std::make_unique<NetworkDisable>(connman);\n \n-        // Note: Unlocking cs_main before CreateUTXOSnapshot might be racy\n-        // if the user interacts with any other *block RPCs.\n         invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n         InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n-        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+    }\n \n+    Chainstate* chainstate;\n+    std::unique_ptr<CCoinsViewCursor> cursor;\n+    CCoinsStats stats;\n+    UniValue result;\n+    UniValue error;\n+    {\n+        LOCK(node.chainman->GetMutex());\n+        chainstate = &node.chainman->ActiveChainstate();\n         // In case there is any issue with a block being read from disk we need\n         // to stop here, otherwise the dump could still be created for the wrong\n         // height.\n         // The new tip could also not be the target block if we have a stale\n         // sister block of invalidate_index. This block (or a descendant) would\n         // be activated as the new tip and we would not get to new_tip_index.\n-        if (new_tip_index != target_index) {\n-            ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        if (target_index != chainstate->m_chain.Tip()) {\n+            error = JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        } else {\n+            std::tie(cursor, stats, tip) = PrepareUTXOSnapshot(*chainstate, node.rpc_interruption_point);\n         }\n     }\n \n-    UniValue result = CreateUTXOSnapshot(\n-        node, node.chainman->ActiveChainstate(), afile, path, temppath);\n-    fs::rename(temppath, path);\n-\n+    if (error.isNull()) {\n+        result = WriteUTXOSnapshot(*chainstate, cursor.get(), &stats, tip, afile, path, temppath, node.rpc_interruption_point);\n+        fs::rename(temppath, path);\n+    }\n     if (invalidate_index) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 272,
      "original_position": 66,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "0c1238917a5edf6bdcae15aab5f91b1bdd2540b9",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"rpc, refactor: Prevent potential race conditions in dumptxoutset\" (0c1238917a5edf6bdcae15aab5f91b1bdd2540b9)\r\n\r\nWould it make any sense to call `ReconsiderBlock()` and `disable_network.reset()` before calling `WriteUTXOSnapshot` instead of after?\r\n\r\nNot sure if that might make the node more usable while the snapshot is being created, or just slow down writing the snapshot and increase resource usage.\r\n\r\nChange wouldn't be appropriate in this commit anyway, but could be a possible followup or possible future `dumptxoutset` RPC option if it makes sense.",
      "created_at": "2024-08-15T22:10:52Z",
      "updated_at": "2024-08-15T22:27:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1719061724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1719061724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2828,
      "original_line": 2828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725864956",
      "pull_request_review_id": 2252096210,
      "id": 1725864956,
      "node_id": "PRRC_kwDOABII585m3pv8",
      "diff_hunk": "@@ -2774,44 +2790,52 @@ static RPCHelpMan dumptxoutset()\n         // would be classified as a block connecting an invalid block.\n         disable_network = std::make_unique<NetworkDisable>(connman);\n \n-        // Note: Unlocking cs_main before CreateUTXOSnapshot might be racy\n-        // if the user interacts with any other *block RPCs.\n         invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n         InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n-        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+    }\n \n+    Chainstate* chainstate;\n+    std::unique_ptr<CCoinsViewCursor> cursor;\n+    CCoinsStats stats;\n+    UniValue result;\n+    UniValue error;\n+    {\n+        LOCK(node.chainman->GetMutex());",
      "path": "src/rpc/blockchain.cpp",
      "position": 253,
      "original_position": 40,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "0c1238917a5edf6bdcae15aab5f91b1bdd2540b9",
      "in_reply_to_id": 1719053204,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Taken, thanks!",
      "created_at": "2024-08-21T22:22:55Z",
      "updated_at": "2024-08-21T22:22:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1725864956",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725864956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2809,
      "original_line": 2809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725865325",
      "pull_request_review_id": 2252096688,
      "id": 1725865325,
      "node_id": "PRRC_kwDOABII585m3p1t",
      "diff_hunk": "@@ -2774,44 +2790,52 @@ static RPCHelpMan dumptxoutset()\n         // would be classified as a block connecting an invalid block.\n         disable_network = std::make_unique<NetworkDisable>(connman);\n \n-        // Note: Unlocking cs_main before CreateUTXOSnapshot might be racy\n-        // if the user interacts with any other *block RPCs.\n         invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n         InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n-        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+    }\n \n+    Chainstate* chainstate;\n+    std::unique_ptr<CCoinsViewCursor> cursor;\n+    CCoinsStats stats;\n+    UniValue result;\n+    UniValue error;\n+    {\n+        LOCK(node.chainman->GetMutex());\n+        chainstate = &node.chainman->ActiveChainstate();\n         // In case there is any issue with a block being read from disk we need\n         // to stop here, otherwise the dump could still be created for the wrong\n         // height.\n         // The new tip could also not be the target block if we have a stale\n         // sister block of invalidate_index. This block (or a descendant) would\n         // be activated as the new tip and we would not get to new_tip_index.\n-        if (new_tip_index != target_index) {\n-            ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        if (target_index != chainstate->m_chain.Tip()) {\n+            error = JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        } else {\n+            std::tie(cursor, stats, tip) = PrepareUTXOSnapshot(*chainstate, node.rpc_interruption_point);\n         }\n     }\n \n-    UniValue result = CreateUTXOSnapshot(\n-        node, node.chainman->ActiveChainstate(), afile, path, temppath);\n-    fs::rename(temppath, path);\n-\n+    if (error.isNull()) {\n+        result = WriteUTXOSnapshot(*chainstate, cursor.get(), &stats, tip, afile, path, temppath, node.rpc_interruption_point);\n+        fs::rename(temppath, path);\n+    }\n     if (invalidate_index) {\n         ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());\n     }\n+    if (!error.isNull()) {\n+        throw error;\n+    }\n \n     result.pushKV(\"path\", path.utf8string());\n     return result;\n },\n     };\n }\n \n-UniValue CreateUTXOSnapshot(\n-    NodeContext& node,\n+std::tuple<std::unique_ptr<CCoinsViewCursor>, CCoinsStats, const CBlockIndex*>\n+PrepareUTXOSnapshot(",
      "path": "src/rpc/blockchain.cpp",
      "position": 288,
      "original_position": 82,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "0c1238917a5edf6bdcae15aab5f91b1bdd2540b9",
      "in_reply_to_id": 1719054774,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-08-21T22:22:59Z",
      "updated_at": "2024-08-21T22:22:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1725865325",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725865325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2842,
      "original_line": 2842,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725892812",
      "pull_request_review_id": 2252134714,
      "id": 1725892812,
      "node_id": "PRRC_kwDOABII585m3wjM",
      "diff_hunk": "@@ -2774,44 +2790,52 @@ static RPCHelpMan dumptxoutset()\n         // would be classified as a block connecting an invalid block.\n         disable_network = std::make_unique<NetworkDisable>(connman);\n \n-        // Note: Unlocking cs_main before CreateUTXOSnapshot might be racy\n-        // if the user interacts with any other *block RPCs.\n         invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n         InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n-        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+    }\n \n+    Chainstate* chainstate;\n+    std::unique_ptr<CCoinsViewCursor> cursor;\n+    CCoinsStats stats;\n+    UniValue result;\n+    UniValue error;\n+    {\n+        LOCK(node.chainman->GetMutex());\n+        chainstate = &node.chainman->ActiveChainstate();\n         // In case there is any issue with a block being read from disk we need\n         // to stop here, otherwise the dump could still be created for the wrong\n         // height.\n         // The new tip could also not be the target block if we have a stale\n         // sister block of invalidate_index. This block (or a descendant) would\n         // be activated as the new tip and we would not get to new_tip_index.\n-        if (new_tip_index != target_index) {\n-            ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        if (target_index != chainstate->m_chain.Tip()) {\n+            error = JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        } else {\n+            std::tie(cursor, stats, tip) = PrepareUTXOSnapshot(*chainstate, node.rpc_interruption_point);\n         }\n     }\n \n-    UniValue result = CreateUTXOSnapshot(\n-        node, node.chainman->ActiveChainstate(), afile, path, temppath);\n-    fs::rename(temppath, path);\n-\n+    if (error.isNull()) {\n+        result = WriteUTXOSnapshot(*chainstate, cursor.get(), &stats, tip, afile, path, temppath, node.rpc_interruption_point);\n+        fs::rename(temppath, path);\n+    }\n     if (invalidate_index) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 272,
      "original_position": 66,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "0c1238917a5edf6bdcae15aab5f91b1bdd2540b9",
      "in_reply_to_id": 1719061724,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I did some light testing of this and didn't see a negative performance impact. Actually the three times I ran with this change were slightly faster on average than with the current code here. But there was also quite a bit of volatility so that might have been pure luck. It doesn't look like it slows things down though, at least not on my machine.\r\n\r\nI have left it out for now but can add it. I am curious what you mean by having it as an RPC option. This seems like something that we should just do if it's safe and we think it's beneficial for users and if not we just leave it out. I'm not sure which users would care enough about such a setting. This is also not a RPC that a lot of people will use when they do it's rather infrequently I assume.",
      "created_at": "2024-08-21T22:28:49Z",
      "updated_at": "2024-08-21T22:30:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1725892812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1725892812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2828,
      "original_line": 2828,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726654514",
      "pull_request_review_id": 2253922313,
      "id": 1726654514,
      "node_id": "PRRC_kwDOABII585m6qgy",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+# Assumeutxo Usage\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance.\n+\n+For notes on the design of Assumeutxo, please refer to [the design doc](/doc/assumeutxo.md).\n+\n+## Loading a snapshot\n+\n+There is currently no canonical source for snapshots, but any downloaded snapshot\n+will be checked against a hash that's been hardcoded in source code. If there is\n+no source for the snapshot you need, you can generate it yourself using\n+`dumptxoutset` on another node that is already synced (see\n+[Generating a snapshot](#generating-a-snapshot)).\n+\n+Once you've obtained the snapshot, you can use the RPC command `loadtxoutset` to\n+load it.\n+\n+```\n+$ bitcoin-cli loadtxoutset /path/to/input\n+```\n+\n+After the snapshot has loaded, the syncing process of both the snapshot chain\n+and the background IBD chain can be monitored with the `getchainstates` RPC.\n+\n+### Pruning\n+\n+A pruned node can load a snapshot. To save space, it's possible to delete the\n+snapshot file as soon as `loadtxoutset` finishes.\n+\n+The minimum `-prune` setting is 550 MiB, but this functionality ignores that\n+minimum and uses at least 1100 MiB.\n+\n+As the background sync continues there will be temporarily two chainstate\n+directories, each multiple gigabytes in size (likely growing larger than the\n+downloaded snapshot).\n+\n+### Indexes\n+\n+Indexes work but don't take advantage of this feature. They always start building\n+from the genesis block and can only apply blocks in order. Once the background\n+validation reaches the snapshot block, indexes will continue to build all the\n+way to the tip.\n+\n+\n+For indexes that support pruning, note that these indexes only allow blocks that\n+were already indexed to be pruned. Blocks that are not indexed yet will also\n+not be pruned.\n+\n+This means that, if the snapshot is old, then a lot of blocks after the snapshot\n+block will need to be downloaded, and these blocks can't be pruned until they\n+are indexed, so they could consume a lot of disk space until indexing catches up\n+to the snapshot block.\n+\n+## Generating a snapshot\n+\n+The RPC command `dumptxoutset` can be used to generate a snapshot for the current\n+tip (using type \"latest\") or a recent height (using type \"rollback\"). A generated\n+snapshot from one node can then be loaded\n+on any other node. However, keep in mind that the snapshot hash needs to be\n+listed in the chainparams to make it usable. If there is no snapshot hash for\n+the height you have chosen already, you will need to change the code there and\n+re-compile.\n+\n+Using the type parameter \"rollback\", `dumptxoutset` can also be used to verify the\n+hardcoded snapshot hash in the source code by regenerating the snapshot and\n+comparing the hash.\n+\n+Example usage:\n+\n+```\n+$ bitcoin-cli dumptxoutset /path/to/output rollback\n+```\n+\n+For most of the duration of `dumptxoutset` running the node is in a temporary\n+state that does not actually reflect reality, i.e. blocks are marked valid",
      "path": "doc/assumeutxo.md",
      "position": 76,
      "original_position": 76,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "bb3981c01985989b42da0a24c027be757ab54612",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bb3981c01985989b42da0a24c027be757ab54612: -> \"are marked invalid\"",
      "created_at": "2024-08-22T09:03:08Z",
      "updated_at": "2024-08-22T10:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1726654514",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726654514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726658380",
      "pull_request_review_id": 2253922313,
      "id": 1726658380,
      "node_id": "PRRC_kwDOABII585m6rdM",
      "diff_hunk": "@@ -0,0 +1,79 @@\n+# Assumeutxo Usage\n+\n+Assumeutxo is a feature that allows fast bootstrapping of a validating bitcoind\n+instance.\n+\n+For notes on the design of Assumeutxo, please refer to [the design doc](/doc/assumeutxo.md).\n+\n+## Loading a snapshot\n+\n+There is currently no canonical source for snapshots, but any downloaded snapshot\n+will be checked against a hash that's been hardcoded in source code. If there is\n+no source for the snapshot you need, you can generate it yourself using\n+`dumptxoutset` on another node that is already synced (see\n+[Generating a snapshot](#generating-a-snapshot)).\n+\n+Once you've obtained the snapshot, you can use the RPC command `loadtxoutset` to\n+load it.\n+\n+```\n+$ bitcoin-cli loadtxoutset /path/to/input\n+```\n+\n+After the snapshot has loaded, the syncing process of both the snapshot chain\n+and the background IBD chain can be monitored with the `getchainstates` RPC.\n+\n+### Pruning\n+\n+A pruned node can load a snapshot. To save space, it's possible to delete the\n+snapshot file as soon as `loadtxoutset` finishes.\n+\n+The minimum `-prune` setting is 550 MiB, but this functionality ignores that\n+minimum and uses at least 1100 MiB.\n+\n+As the background sync continues there will be temporarily two chainstate\n+directories, each multiple gigabytes in size (likely growing larger than the\n+downloaded snapshot).\n+\n+### Indexes\n+\n+Indexes work but don't take advantage of this feature. They always start building\n+from the genesis block and can only apply blocks in order. Once the background\n+validation reaches the snapshot block, indexes will continue to build all the\n+way to the tip.\n+\n+\n+For indexes that support pruning, note that these indexes only allow blocks that\n+were already indexed to be pruned. Blocks that are not indexed yet will also\n+not be pruned.\n+\n+This means that, if the snapshot is old, then a lot of blocks after the snapshot\n+block will need to be downloaded, and these blocks can't be pruned until they\n+are indexed, so they could consume a lot of disk space until indexing catches up\n+to the snapshot block.\n+\n+## Generating a snapshot\n+\n+The RPC command `dumptxoutset` can be used to generate a snapshot for the current\n+tip (using type \"latest\") or a recent height (using type \"rollback\"). A generated\n+snapshot from one node can then be loaded\n+on any other node. However, keep in mind that the snapshot hash needs to be\n+listed in the chainparams to make it usable. If there is no snapshot hash for\n+the height you have chosen already, you will need to change the code there and\n+re-compile.\n+\n+Using the type parameter \"rollback\", `dumptxoutset` can also be used to verify the\n+hardcoded snapshot hash in the source code by regenerating the snapshot and\n+comparing the hash.\n+\n+Example usage:\n+\n+```\n+$ bitcoin-cli dumptxoutset /path/to/output rollback\n+```\n+\n+For most of the duration of `dumptxoutset` running the node is in a temporary\n+state that does not actually reflect reality, i.e. blocks are marked valid\n+although we know they are not invalid. Because of this it is discouraged to\n+interact with the node in any other way during this time to avoid inconsistent\n+results and race conditions, particularly RPCs that interact with blockstorage.",
      "path": "doc/assumeutxo.md",
      "position": 79,
      "original_position": 79,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "bb3981c01985989b42da0a24c027be757ab54612",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bb3981c01985989b42da0a24c027be757ab54612: may be add: \"This inconsistent state is also why network activity is temporarily disabled, causing us to disconnect from all peers.\"",
      "created_at": "2024-08-22T09:05:35Z",
      "updated_at": "2024-08-22T10:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1726658380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726658380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 79,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726662966",
      "pull_request_review_id": 2253922313,
      "id": 1726662966,
      "node_id": "PRRC_kwDOABII585m6sk2",
      "diff_hunk": "@@ -2675,7 +2675,9 @@ static RPCHelpMan dumptxoutset()\n {\n     return RPCHelpMan{\n         \"dumptxoutset\",\n-        \"Write the serialized UTXO set to a file.\",\n+        \"Write the serialized UTXO set to a file. This can be used in loadtxoutset afterwards if this snapshot height is supported in the chainparams as well.\\n\\n\"\n+        \"Unless the the latest type is requested, the node will roll back to the requested height and network activity will be suspended during this process. \"",
      "path": "src/rpc/blockchain.cpp",
      "position": 154,
      "original_position": 6,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "bb3981c01985989b42da0a24c027be757ab54612",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "bb3981c01985989b42da0a24c027be757ab54612 `\\\"latest\\\"`?\r\n\r\nThe first time I read \"latest type\" as meaning a new type.",
      "created_at": "2024-08-22T09:08:28Z",
      "updated_at": "2024-08-22T10:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1726662966",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726662966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2695,
      "original_line": 2679,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726741569",
      "pull_request_review_id": 2253922313,
      "id": 1726741569,
      "node_id": "PRRC_kwDOABII585m6_xB",
      "diff_hunk": "@@ -2659,6 +2678,14 @@ static RPCHelpMan dumptxoutset()\n         \"Write the serialized UTXO set to a file.\",\n         {\n             {\"path\", RPCArg::Type::STR, RPCArg::Optional::NO, \"Path to the output file. If relative, will be prefixed by datadir.\"},\n+            {\"type\", RPCArg::Type::STR, RPCArg::Default(\"\"), \"The type of snapshot to create. Can be \\\"latest\\\" to create a snapshot of the current UTXO set or \\\"rollback\\\" to temporarily roll back the state of the node to a historical block before creating the snapshot of a historical UTXO set. This parameter can be omitted if a separate \\\"rollback\\\" named parameter is specified indicating the height or hash of a specific historical block. If \\\"rollback\\\" is specified and separate \\\"rollback\\\" named parameter is not specified, this will roll back to the latest valid snapshot block that currently be loaded with loadtxoutset.\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": 158,
      "original_position": 30,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "b23abfca68f7b349e6d2f9e04369f0fdc82d2a98",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b23abfca68f7b349e6d2f9e04369f0fdc82d2a98: I had to read this description several times to get it, but the examples make it clear.\r\n\r\nHaving a third positional optional argument `height` would have seemed easier to me, but it's fine like this.  ",
      "created_at": "2024-08-22T09:54:30Z",
      "updated_at": "2024-08-22T10:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1726741569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726741569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2699,
      "original_line": 2681,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726770642",
      "pull_request_review_id": 2253922313,
      "id": 1726770642,
      "node_id": "PRRC_kwDOABII585m7G3S",
      "diff_hunk": "@@ -2697,11 +2747,55 @@ static RPCHelpMan dumptxoutset()\n             \"Couldn't open file \" + temppath.utf8string() + \" for writing.\");\n     }\n \n-    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+    const CBlockIndex* invalidate_index{nullptr};\n+    std::unique_ptr<NetworkDisable> disable_network;\n+\n+    // If the user wants to dump the txoutset of the current tip, we don't have\n+    // to roll back at all\n+    if (target_index != tip) {\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstBlock(*current_tip, /*status_mask=*/BLOCK_HAVE_MASK)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height. We do\n+        // this so we don't punish peers that send us that send us data that\n+        // seems wrong in this temporary state. For example a normal new block\n+        // would be classified as a block connecting an invalid block.\n+        disable_network = std::make_unique<NetworkDisable>(connman);\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+\n+        // In case there is any issue with a block being read from disk we need\n+        // to stop here, otherwise the dump could still be created for the wrong\n+        // height.\n+        // The new tip could also not be the target block if we have a stale\n+        // sister block of invalidate_index. This block (or a descendant) would",
      "path": "src/rpc/blockchain.cpp",
      "position": 259,
      "original_position": 114,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "b23abfca68f7b349e6d2f9e04369f0fdc82d2a98",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b23abfca68f7b349e6d2f9e04369f0fdc82d2a98: a followup could handle multiple blocks at the same height by running a loop that invalidates all (new) tips at the target height that are not the block hash we expected.\r\n\r\nThose could be tracked in `invalidate_indexes` and be reconsidered in reverse order (and with the network still off) after the snapshot is made.",
      "created_at": "2024-08-22T10:12:52Z",
      "updated_at": "2024-08-22T10:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1726770642",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726770642"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2815,
      "original_line": 2783,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726781190",
      "pull_request_review_id": 2253922313,
      "id": 1726781190,
      "node_id": "PRRC_kwDOABII585m7JcG",
      "diff_hunk": "@@ -2697,11 +2747,55 @@ static RPCHelpMan dumptxoutset()\n             \"Couldn't open file \" + temppath.utf8string() + \" for writing.\");\n     }\n \n-    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+    const CBlockIndex* invalidate_index{nullptr};\n+    std::unique_ptr<NetworkDisable> disable_network;\n+\n+    // If the user wants to dump the txoutset of the current tip, we don't have\n+    // to roll back at all\n+    if (target_index != tip) {\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstBlock(*current_tip, /*status_mask=*/BLOCK_HAVE_MASK)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height. We do\n+        // this so we don't punish peers that send us that send us data that\n+        // seems wrong in this temporary state. For example a normal new block\n+        // would be classified as a block connecting an invalid block.\n+        disable_network = std::make_unique<NetworkDisable>(connman);\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+\n+        // In case there is any issue with a block being read from disk we need\n+        // to stop here, otherwise the dump could still be created for the wrong\n+        // height.\n+        // The new tip could also not be the target block if we have a stale\n+        // sister block of invalidate_index. This block (or a descendant) would\n+        // be activated as the new tip and we would not get to new_tip_index.\n+        if (new_tip_index != target_index) {\n+            ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 117,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "b23abfca68f7b349e6d2f9e04369f0fdc82d2a98",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b23abfca68f7b349e6d2f9e04369f0fdc82d2a98: assuming this is blocking and it could take hours before the throw below, it would be good to emit a log message in the mean time.",
      "created_at": "2024-08-22T10:18:36Z",
      "updated_at": "2024-08-22T10:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1726781190",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726781190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2786,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726784278",
      "pull_request_review_id": 2253922313,
      "id": 1726784278,
      "node_id": "PRRC_kwDOABII585m7KMW",
      "diff_hunk": "@@ -2697,11 +2747,55 @@ static RPCHelpMan dumptxoutset()\n             \"Couldn't open file \" + temppath.utf8string() + \" for writing.\");\n     }\n \n-    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    CConnman& connman = EnsureConnman(node);\n+    const CBlockIndex* invalidate_index{nullptr};\n+    std::unique_ptr<NetworkDisable> disable_network;\n+\n+    // If the user wants to dump the txoutset of the current tip, we don't have\n+    // to roll back at all\n+    if (target_index != tip) {\n+        // If the node is running in pruned mode we ensure all necessary block\n+        // data is available before starting to roll back.\n+        if (node.chainman->m_blockman.IsPruneMode()) {\n+            LOCK(node.chainman->GetMutex());\n+            const CBlockIndex* current_tip{node.chainman->ActiveChain().Tip()};\n+            const CBlockIndex* first_block{node.chainman->m_blockman.GetFirstBlock(*current_tip, /*status_mask=*/BLOCK_HAVE_MASK)};\n+            if (first_block->nHeight > target_index->nHeight) {\n+                throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height since necessary block data is already pruned.\");\n+            }\n+        }\n+\n+        // Suspend network activity for the duration of the process when we are\n+        // rolling back the chain to get a utxo set from a past height. We do\n+        // this so we don't punish peers that send us that send us data that\n+        // seems wrong in this temporary state. For example a normal new block\n+        // would be classified as a block connecting an invalid block.\n+        disable_network = std::make_unique<NetworkDisable>(connman);\n+\n+        invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n+        InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n+        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+\n+        // In case there is any issue with a block being read from disk we need\n+        // to stop here, otherwise the dump could still be created for the wrong\n+        // height.\n+        // The new tip could also not be the target block if we have a stale\n+        // sister block of invalidate_index. This block (or a descendant) would\n+        // be activated as the new tip and we would not get to new_tip_index.\n+        if (new_tip_index != target_index) {\n+            ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        }\n+    }\n+\n     UniValue result = CreateUTXOSnapshot(\n         node, node.chainman->ActiveChainstate(), afile, path, temppath);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 123,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "b23abfca68f7b349e6d2f9e04369f0fdc82d2a98",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "b23abfca68f7b349e6d2f9e04369f0fdc82d2a98: for a followup, please check if this path is writable early in the RPC function. I once wasted a few hours because I used `~/someplace` which it didn't understand.",
      "created_at": "2024-08-22T10:20:16Z",
      "updated_at": "2024-08-22T10:56:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1726784278",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726784278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2792,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726791942",
      "pull_request_review_id": 2253922313,
      "id": 1726791942,
      "node_id": "PRRC_kwDOABII585m7MEG",
      "diff_hunk": "@@ -2774,44 +2790,52 @@ static RPCHelpMan dumptxoutset()\n         // would be classified as a block connecting an invalid block.\n         disable_network = std::make_unique<NetworkDisable>(connman);\n \n-        // Note: Unlocking cs_main before CreateUTXOSnapshot might be racy\n-        // if the user interacts with any other *block RPCs.\n         invalidate_index = WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Next(target_index));\n         InvalidateBlock(*node.chainman, invalidate_index->GetBlockHash());\n-        const CBlockIndex* new_tip_index{WITH_LOCK(::cs_main, return node.chainman->ActiveChain().Tip())};\n+    }\n \n+    Chainstate* chainstate;\n+    std::unique_ptr<CCoinsViewCursor> cursor;\n+    CCoinsStats stats;\n+    UniValue result;\n+    UniValue error;\n+    {\n+        LOCK(node.chainman->GetMutex());\n+        chainstate = &node.chainman->ActiveChainstate();\n         // In case there is any issue with a block being read from disk we need\n         // to stop here, otherwise the dump could still be created for the wrong\n         // height.\n         // The new tip could also not be the target block if we have a stale\n         // sister block of invalidate_index. This block (or a descendant) would\n         // be activated as the new tip and we would not get to new_tip_index.\n-        if (new_tip_index != target_index) {\n-            ReconsiderBlock(*node.chainman, invalidate_index->GetBlockHash());\n-            throw JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        if (target_index != chainstate->m_chain.Tip()) {\n+            error = JSONRPCError(RPC_MISC_ERROR, \"Could not roll back to requested height, reverting to tip.\");\n+        } else {\n+            std::tie(cursor, stats, tip) = PrepareUTXOSnapshot(*chainstate, node.rpc_interruption_point);\n         }\n     }\n \n-    UniValue result = CreateUTXOSnapshot(\n-        node, node.chainman->ActiveChainstate(), afile, path, temppath);\n-    fs::rename(temppath, path);\n-\n+    if (error.isNull()) {\n+        result = WriteUTXOSnapshot(*chainstate, cursor.get(), &stats, tip, afile, path, temppath, node.rpc_interruption_point);\n+        fs::rename(temppath, path);\n+    }\n     if (invalidate_index) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 272,
      "original_position": 66,
      "commit_id": "b5292334e5e8792644123b627896359eb1da8d25",
      "original_commit_id": "0c1238917a5edf6bdcae15aab5f91b1bdd2540b9",
      "in_reply_to_id": 1719061724,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It seems conceptually simpler to first write the snapshot, reconsider all blocks that were marked invalid and only then restore network activity.\r\n\r\n>  make the node more usable while the snapshot is being created\r\n\r\nLower usability is probably a feature. The user should not be doing anything important until the chain is back at the original tip, e.g. loading a wallet could still cause confusion.",
      "created_at": "2024-08-22T10:25:23Z",
      "updated_at": "2024-08-22T10:59:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29553#discussion_r1726791942",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1726791942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29553"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2828,
      "original_line": 2828,
      "side": "RIGHT"
    }
  ]
}