{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060",
    "id": 1427256167,
    "node_id": "PR_kwDOABII585VEjNn",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28060",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28060.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28060.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
    "number": 28060,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "util: Teach AutoFile how to XOR",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This allows `AutoFile` to roll an XOR pattern while reading or writing to the underlying file.\r\n\r\nThis is needed for https://github.com/bitcoin/bitcoin/pull/28052, but can also be used in any other place.\r\n\r\nAlso, there are tests, so I've split this up from the larger pull to make review easier, hopefully.",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2023-07-10T10:39:12Z",
    "updated_at": "2023-08-01T05:40:06Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "ae8169bf3d3f471f897ab2ba5f09825405ca1848",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "MarcoFalke:2307-xor-file-",
      "ref": "2307-xor-file-",
      "sha": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "b-c",
        "full_name": "MarcoFalke/b-c",
        "owner": {
          "login": "MarcoFalke",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MarcoFalke",
          "html_url": "https://github.com/MarcoFalke",
          "followers_url": "https://api.github.com/users/MarcoFalke/followers",
          "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
          "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
          "repos_url": "https://api.github.com/users/MarcoFalke/repos",
          "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/MarcoFalke/b-c",
        "fork": true,
        "url": "https://api.github.com/repos/MarcoFalke/b-c",
        "archive_url": "https://api.github.com/repos/MarcoFalke/b-c/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/MarcoFalke/b-c/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/MarcoFalke/b-c/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/MarcoFalke/b-c/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/MarcoFalke/b-c/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/MarcoFalke/b-c/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/MarcoFalke/b-c/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/MarcoFalke/b-c/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/MarcoFalke/b-c/contributors",
        "deployments_url": "https://api.github.com/repos/MarcoFalke/b-c/deployments",
        "downloads_url": "https://api.github.com/repos/MarcoFalke/b-c/downloads",
        "events_url": "https://api.github.com/repos/MarcoFalke/b-c/events",
        "forks_url": "https://api.github.com/repos/MarcoFalke/b-c/forks",
        "git_commits_url": "https://api.github.com/repos/MarcoFalke/b-c/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/MarcoFalke/b-c/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/MarcoFalke/b-c/git/tags%7B/sha%7D",
        "git_url": "git://github.com/MarcoFalke/b-c.git",
        "issue_comment_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/MarcoFalke/b-c/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/MarcoFalke/b-c/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/MarcoFalke/b-c/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/MarcoFalke/b-c/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/MarcoFalke/b-c/languages",
        "merges_url": "https://api.github.com/repos/MarcoFalke/b-c/merges",
        "milestones_url": "https://api.github.com/repos/MarcoFalke/b-c/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/MarcoFalke/b-c/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/MarcoFalke/b-c/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/MarcoFalke/b-c/releases%7B/id%7D",
        "ssh_url": "git@github.com:MarcoFalke/b-c.git",
        "stargazers_url": "https://api.github.com/repos/MarcoFalke/b-c/stargazers",
        "statuses_url": "https://api.github.com/repos/MarcoFalke/b-c/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/MarcoFalke/b-c/subscribers",
        "subscription_url": "https://api.github.com/repos/MarcoFalke/b-c/subscription",
        "tags_url": "https://api.github.com/repos/MarcoFalke/b-c/tags",
        "teams_url": "https://api.github.com/repos/MarcoFalke/b-c/teams",
        "trees_url": "https://api.github.com/repos/MarcoFalke/b-c/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/MarcoFalke/b-c.git",
        "hooks_url": "https://api.github.com/repos/MarcoFalke/b-c/hooks",
        "svn_url": "https://github.com/MarcoFalke/b-c",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 207662,
        "default_branch": "master",
        "open_issues_count": 25,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-31T15:24:28Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2023-05-28T20:12:34Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "78a983f597af224e017f522443112cec81422fe6",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35471,
        "stargazers_count": 70594,
        "watchers_count": 70594,
        "size": 236161,
        "default_branch": "master",
        "open_issues_count": 676,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-07-31T22:28:50Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-01T03:23:20Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 191,
    "deletions": 77,
    "changed_files": 8,
    "commits": 6,
    "review_comments": 26,
    "comments": 10
  },
  "events": [
    {
      "event": "commented",
      "id": 1628685701,
      "node_id": "IC_kwDOABII585hE8WF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1628685701",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T10:39:16Z",
      "updated_at": "2023-08-01T05:40:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [Crypt-iQ](https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1644517170) |\n| Concept ACK | [sipa](https://github.com/bitcoin/bitcoin/pull/28060#pullrequestreview-1526966730) |\n| Stale ACK | [jamesob](https://github.com/bitcoin/bitcoin/pull/28060#pullrequestreview-1528767782) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#26606](https://github.com/bitcoin/bitcoin/pull/26606) (wallet: Implement independent BDB parser by achow101)\n* [#26596](https://github.com/bitcoin/bitcoin/pull/26596) (wallet: Migrate legacy wallets to descriptor wallets without requiring BDB by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1628685701",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060"
    },
    {
      "event": "renamed",
      "id": 9773088391,
      "node_id": "RTE_lADOABII585rFBNRzwAAAAJGhX6H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9773088391",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T10:39:18Z",
      "rename": {
        "from": " streams: Add XorFile ",
        "to": "streams: Add XorFile"
      }
    },
    {
      "event": "renamed",
      "id": 9773092286,
      "node_id": "RTE_lADOABII585rFBNRzwAAAAJGhY2-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9773092286",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T10:39:39Z",
      "rename": {
        "from": "streams: Add XorFile",
        "to": "util: Add XorFile "
      }
    },
    {
      "event": "renamed",
      "id": 9773092749,
      "node_id": "RTE_lADOABII585rFBNRzwAAAAJGhY-N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9773092749",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T10:39:41Z",
      "rename": {
        "from": "util: Add XorFile ",
        "to": "util: Add XorFile"
      }
    },
    {
      "event": "labeled",
      "id": 9773092949,
      "node_id": "LE_lADOABII585rFBNRzwAAAAJGhZBV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9773092949",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T10:39:42Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "reviewed",
      "id": 1523600963,
      "node_id": "PRR_kwDOABII585a0E5D",
      "url": null,
      "actor": null,
      "commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "bitcoinfinancier",
        "id": 134175231,
        "node_id": "U_kgDOB_9Z_w",
        "avatar_url": "https://avatars.githubusercontent.com/u/134175231?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoinfinancier",
        "html_url": "https://github.com/bitcoinfinancier",
        "followers_url": "https://api.github.com/users/bitcoinfinancier/followers",
        "following_url": "https://api.github.com/users/bitcoinfinancier/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoinfinancier/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoinfinancier/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoinfinancier/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoinfinancier/orgs",
        "repos_url": "https://api.github.com/users/bitcoinfinancier/repos",
        "events_url": "https://api.github.com/users/bitcoinfinancier/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoinfinancier/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#pullrequestreview-1523600963",
      "submitted_at": "2023-07-11T07:27:05Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
    },
    {
      "event": "reviewed",
      "id": 1525080853,
      "node_id": "PRR_kwDOABII585a5uMV",
      "url": null,
      "actor": null,
      "commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nIn general looks good, but I think you could really cut down on the amount of code here if you just made `XorFile` a subclass of `CAutoFile`, and made whatever small adjustments and modernizations necessary to `CAutoFile` to get that to work.\r\n\r\nE.g. `XorFile::ignore()` seems like essentially the same code as `CAutoFile::ignore()`, just with some `std::` prefixes. Seems like code we don't want to maintain two copies of.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#pullrequestreview-1525080853",
      "submitted_at": "2023-07-11T20:50:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
    },
    {
      "event": "renamed",
      "id": 9795727367,
      "node_id": "RTE_lADOABII585rFBNRzwAAAAJH3vAH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9795727367",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T07:50:17Z",
      "rename": {
        "from": "util: Add XorFile",
        "to": "util: Teach AutoFile how to XOR"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9795816546,
      "node_id": "HRFPE_lADOABII585rFBNRzwAAAAJH4Exi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9795816546",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T07:59:10Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk5OTlhNDliMzI5OWJkMjVkZGU0ODA1ZjVjNjhhZGVmMzg3NjA1N2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9999a49b3299bd25dde4805f5c68adef3876057f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9999a49b3299bd25dde4805f5c68adef3876057f",
      "tree": {
        "sha": "b7f0e705f75df0f054944d0371999a3f90c5927b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b7f0e705f75df0f054944d0371999a3f90c5927b"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree b7f0e705f75df0f054944d0371999a3f90c5927b\nparent 99b3af78bd5209b3ed0b192d0b18ee2c49079d1d\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1686562139 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689148795 +0200\n\nExtract util::Xor, Add key_offset option, Add bench\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQI9YsSjDzCrF1voEuKFa++TCwlkjSdX3ypaOY2TGKAJoLV9vpEkTGP6blsZ0bHuyTm\nDYp/Bz6ffhaFyohKeGrgY=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99b3af78bd5209b3ed0b192d0b18ee2c49079d1d",
          "sha": "99b3af78bd5209b3ed0b192d0b18ee2c49079d1d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/99b3af78bd5209b3ed0b192d0b18ee2c49079d1d"
        }
      ],
      "message": "Extract util::Xor, Add key_offset option, Add bench",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-12T07:59:55Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-06-12T09:28:59Z"
      },
      "sha": "9999a49b3299bd25dde4805f5c68adef3876057f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZmUyY2EwY2U4NDJjZDhmMGQ4MTM1ZmE4YzhiYWM5YjJjNzJkYTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafe2ca0ce842cd8f0d8135fa8c8bac9b2c72da6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fafe2ca0ce842cd8f0d8135fa8c8bac9b2c72da6",
      "tree": {
        "sha": "480df67ed152d5d50055f9c33c09dc3943eef283",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/480df67ed152d5d50055f9c33c09dc3943eef283"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 480df67ed152d5d50055f9c33c09dc3943eef283\nparent 9999a49b3299bd25dde4805f5c68adef3876057f\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689144840 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689148856 +0200\n\nrefactor: Remove redundant file check from AutoFile shift operators\n\nThe shift operators will call the write or read member function, which\nalready does the check. Also, call sites are free to directly call\n::(Un)Serialize(s, obj) to skip this check, so removing it increases\nconsistency.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQHAUJdcliF6UJiyxXvLFjsEf/udPms0iYXyS3pg36+EXuHvxUeZB8toYkIt29m5FRs\nw2lGcR/Oh7e/VXja8oPQY=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9999a49b3299bd25dde4805f5c68adef3876057f",
          "sha": "9999a49b3299bd25dde4805f5c68adef3876057f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9999a49b3299bd25dde4805f5c68adef3876057f"
        }
      ],
      "message": "refactor: Remove redundant file check from AutoFile shift operators\n\nThe shift operators will call the write or read member function, which\nalready does the check. Also, call sites are free to directly call\n::(Un)Serialize(s, obj) to skip this check, so removing it increases\nconsistency.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-12T08:00:56Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-12T06:54:00Z"
      },
      "sha": "fafe2ca0ce842cd8f0d8135fa8c8bac9b2c72da6"
    },
    {
      "event": "commented",
      "id": 1632034090,
      "node_id": "IC_kwDOABII585hRt0q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632034090",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T08:00:59Z",
      "updated_at": "2023-07-12T08:00:59Z",
      "author_association": "MEMBER",
      "body": "> I think you could really cut down on the amount of code here\r\n\r\nThanks, rewritten from scratch to reduce the lines of code.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632034090",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhOGQyMjdkNThmN2JhYTVhOWJlMWI4ODkzMGY0ODEzYmY2ZWVkYjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8d227d58f7baa5a9be1b88930f4813bf6eedb1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8d227d58f7baa5a9be1b88930f4813bf6eedb1",
      "tree": {
        "sha": "d1eb1bd2492ef545098b717b52911d3722567cfc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1eb1bd2492ef545098b717b52911d3722567cfc"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree d1eb1bd2492ef545098b717b52911d3722567cfc\nparent fafe2ca0ce842cd8f0d8135fa8c8bac9b2c72da6\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689144756 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689148911 +0200\n\ndoc: Remove comments that just repeat what the code does\n\nNo need to artificially bloat the code and waste space.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQHC+wEbP8f2KhmFODNaTudQV6hrGxgSTfQJsJRkdiMyRanK3tucoKDsqxZO26XFGV8\nTj7kvZiib+Y10Bv9Nufw8=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafe2ca0ce842cd8f0d8135fa8c8bac9b2c72da6",
          "sha": "fafe2ca0ce842cd8f0d8135fa8c8bac9b2c72da6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fafe2ca0ce842cd8f0d8135fa8c8bac9b2c72da6"
        }
      ],
      "message": "doc: Remove comments that just repeat what the code does\n\nNo need to artificially bloat the code and waste space.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-12T08:01:51Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-12T06:52:36Z"
      },
      "sha": "fa8d227d58f7baa5a9be1b88930f4813bf6eedb1"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9795872903,
      "node_id": "HRFPE_lADOABII585rFBNRzwAAAAJH4SiH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9795872903",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T08:04:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9799597533,
      "node_id": "HRFPE_lADOABII585rFBNRzwAAAAJIGf3d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9799597533",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T13:34:38Z"
    },
    {
      "event": "reviewed",
      "id": 1526786597,
      "node_id": "PRR_kwDOABII585bAOol",
      "url": null,
      "actor": null,
      "commit_id": "fadb32556f64a72377c82be71a207195e6fcf68b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK fadb32556f64a72377c82be71a207195e6fcf68b ([`jamesob/ackr/28060.2.MarcoFalke.util_add_xorfile`](https://github.com/jamesob/bitcoin/tree/ackr/28060.2.MarcoFalke.util_add_xorfile))\r\n\r\nLooks good! More concise change now that we're just adding XOR capability to existing classes.\r\n\r\n<details><summary>Show signature data</summary>\r\n<p>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK fadb32556f64a72377c82be71a207195e6fcf68b ([`jamesob/ackr/28060.2.MarcoFalke.util_add_xorfile`](https://github.com/jamesob/bitcoin/tree/ackr/28060.2.MarcoFalke.util_add_xorfile))\r\n\r\nLooks good! More concise change now that we're just adding XOR capability to existing classes.\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmSu17QACgkQepNdrbLE\r\nTwWM2Q/5AQGR5Uv5aFQSPvjtd9ZbcPyYvDzwSjkFImCnCrVGeTlHux6rsS9SzL8y\r\ngybawiRHUTHjLCO8j5ItvM7/stmyq4UiTk8QCOQL39dGJgBVjV+/pQnCqPlMSU1d\r\nKtObCvXlVc5jWgr7OdHRDtDb5oZi1jc+bcr5ReVCggTdpcvjHxkxLSjRXEFQoeQi\r\nkY/wa5yvids1kyCotiScB+zvc3FwVKj3/lWpPWYkpXdTxmqAjpmgweQlBqq90a2a\r\nI5D0oI1fyerVzJrYLi5EQfY8PQZBhUDjJSzyMTpxr0EqXSRGWCDl5Zm4m0Mxo+8Q\r\nB+Wymo/Dvf196ugDBbUWnQM/dG4tqQRZAB3U1VHwBUemb+fZgDRBeeyAs6/aIHik\r\nYwUR8amJM08ClAJUfSaNXL/OouMqOoMds5tXwMM+Z/2msAgpdXx7c6ifGFaMQm5S\r\nvoElavRD55OLFn9UYKZHusF3EmeTN094pWkwMCeuFnnW9+Rpar5m0nvNuH7T/viI\r\nxdFM2V/ypzkDtyDg21ZrR+OcqlGIsj0x8BB7rzs1JaxeoyO6Zshj7RW1JCPTJtBq\r\nP2KnEiD8DoFL9gTuL3TtnT/5oIJ3Quqb8A8GnU4amzjOcUyg9mg3CwMuWuh17odO\r\nLIckwWfQZlo7wzzOUXwE4i/Xj0ClbyNPgzroOzcXz12WdSsAQWw=\r\n=SQKV\r\n-----END PGP SIGNATURE-----\r\n\r\n```\r\n\r\n</p></details>\r\n\r\n<details><summary>Show platform data</summary>\r\n<p>\r\n\r\n```\r\nTested on Linux-6.2.10-arch1-1-x86_64-with-glibc2.37\r\n\r\nConfigured with ./configure 'BDB_LIBS=-L/home/james/src/bitcoin/db4/lib -ldb_cxx-4.8' BDB_CFLAGS=-I/home/james/src/bitcoin/db4/include 'CXXFLAGS=-fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare ' --disable-gui-tests --disable-fuzz-binary --enable-wallet --enable-debug --with-daemon --enable-natpmp-default CXX=/usr/bin/clang++ CC=/usr/bin/clang --disable-shared --with-pic --enable-benchmark=no --enable-module-recovery --enable-module-schnorrsig PYTHONPATH= --disable-shared --with-pic --enable-benchmark=no --enable-module-recovery --disable-module-ecdh --no-create --no-recursion\r\n\r\nCompiled with /usr/bin/ccache /usr/bin/clang++ -std=c++17 -mavx -mavx2 -mpclmul -fPIE -pipe -O2 -g -Wthread-safety-analysis -Wall -Werror=sign-compare  -O0 -g3 -ftrapv -fdebug-prefix-map=$(abs_top_srcdir)=.  -Wstack-protector -fstack-protector-all -fcf-protection=full -fstack-clash-protection -msse4.1 -msse4.2 -msse4 -msha  i\r\n\r\nCompiler version: clang version 15.0.7\r\n```\r\n\r\n</p></details>\r\n\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#pullrequestreview-1526786597",
      "submitted_at": "2023-07-12T16:40:51Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
    },
    {
      "event": "commented",
      "id": 1632907785,
      "node_id": "IC_kwDOABII585hVDIJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632907785",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T17:10:13Z",
      "updated_at": "2023-07-12T17:34:25Z",
      "author_association": "MEMBER",
      "body": "(Slight tangent, not necessarily for this PR)\r\n\r\nI was wondering if it wouldn't be better to XOR with a proper (but non-cryptographic) RNG output instead of a fixed byte pattern, as it'd avoid repetitive patterns remaining in the file, or weak keys that could accidentally be selected.\r\n\r\nE.g. Xoshiro256++ is extremely fast (multiple GiB per second), see https://prng.di.unimi.it/. However, it's nontrivial to seek in, which would be needed here. I got a bit carried away and [wrote code](https://gist.github.com/sipa/52d4dced79abdddfa83beb559531fbc0) to do that, but it's a bit slower and more complex than what I'd like (~9 microseconds for seeking anywhere within the first 128 MiB of output, ~14 microseconds for the first 4 GiB).\r\n\r\nAn alternative is concatenating multiple Xoshiro256++ outputs together, e.g. 4 KiB from Xoshiro256++(key=SipHash(key || 0)), 4 KiB from Xoshiro++(key=SipHash(key || 1)), ... etc; that'd offer faster, simpler seeking.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632907785",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060"
    },
    {
      "event": "commented",
      "id": 1632931622,
      "node_id": "IC_kwDOABII585hVI8m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632931622",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T17:28:43Z",
      "updated_at": "2023-07-12T17:28:43Z",
      "author_association": "MEMBER",
      "body": "Interesting. Right now, it is trivial to undo the XOR in python with something like:\r\n\r\n```py\r\n        def util_xor(data):\r\n            with open(\"xor.key\", \"rb\") as xor_f:\r\n                key = deser_string(xor_f)\r\n            for i in range(len(data)):\r\n                data[i] ^= key[i % len(key)]\r\n            return bytes(data)\r\n```\r\n\r\nIf it requires users to instead implement a PRNG in python, they (who want to read the dat files for whatever reason) would most likely disable the XOR feature. (Probably an edge-case, so not sure if it matters, but I wanted to mention it)",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632931622",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060"
    },
    {
      "event": "commented",
      "id": 1632935482,
      "node_id": "IC_kwDOABII585hVJ46",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632935482",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T17:31:40Z",
      "updated_at": "2023-07-12T17:31:40Z",
      "author_association": "MEMBER",
      "body": "If the motivating reason for this feature is to prevent systematized, spurious detection of things in blocks (whether via antivirus software or human), isn't it sufficient to keep the XOR key very simple? Especially, as Marco says, anything more sophisticated would complicate consuming blockfiles from external software.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632935482",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060"
    },
    {
      "event": "commented",
      "id": 1632959304,
      "node_id": "IC_kwDOABII585hVPtI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632959304",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T17:48:47Z",
      "updated_at": "2023-07-12T17:50:23Z",
      "author_association": "MEMBER",
      "body": "It's fair that this is perhaps not a real concern right now; I don't know. I find it slightly unsatisfying that we can't break any 8-byte repetitive pattern (see e.g. the picture [here](https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Electronic_codebook_(ECB)) for a visual illustration), while computationally speaking doing so should not be any concern. I bring it up here and now, because trying to support both RNG and constant XORing later would be more code than just RNG.\r\n\r\nRegarding external software... I'm not sure. It wouldn't surprise me that literally everyone who is interested in reading these files will stick to supporting only non-XOR regardless of whether it's with a constant or an RNG. If not, can easily have Python code at least to read through the XORing (which we may want for functional tests anyway), but for other languages things would involve more complexity.\r\n\r\n",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632959304",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060"
    },
    {
      "event": "commented",
      "id": 1632985858,
      "node_id": "IC_kwDOABII585hVWMC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632985858",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T18:05:36Z",
      "updated_at": "2023-07-12T18:05:36Z",
      "author_association": "MEMBER",
      "body": "I could write the 128MiB XOR data to the key file in full. Complexity would be 2x, because each `std::fread` will be done twice (once to read the XOR key section, and once to read the XOR'd data section)?",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1632985858",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060"
    },
    {
      "event": "reviewed",
      "id": 1526966730,
      "node_id": "PRR_kwDOABII585bA6nK",
      "url": null,
      "actor": null,
      "commit_id": "fadb32556f64a72377c82be71a207195e6fcf68b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#pullrequestreview-1526966730",
      "submitted_at": "2023-07-12T18:17:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNzcyNGJjOWQ5NGMwOGQ4ZmFjY2NkMGEwNjdkNmEzYjI3ZmJiYzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7724bc9d94c08d8facccd0a067d6a3b27fbbc6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7724bc9d94c08d8facccd0a067d6a3b27fbbc6",
      "tree": {
        "sha": "c0b16f9136cfb779aa2338a31a43f61aa118df31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0b16f9136cfb779aa2338a31a43f61aa118df31"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree c0b16f9136cfb779aa2338a31a43f61aa118df31\nparent fa8d227d58f7baa5a9be1b88930f4813bf6eedb1\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689147624 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689241855 +0200\n\nrefactor: Modernize AutoFile\n\n* Add m_ prefix to the std::FILE member variable\n* Add std namespace where possible, to avoid confusion with member\n  functions of the same name.\n* Add AutoFile::feof() member function, to be used in place of\n  std::feof(AutoFile::Get())\n* Simplify fclose() in terms of release()\n* Fix typo in the error message in the ignore member function.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQK03CptT2euULh8kZ5VP/FTynuJwPgpAXBp74a31ohl5T2wt7DLfhXBdGYflaVSE27\nL79mkY3Ah4tpcHY792EQg=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8d227d58f7baa5a9be1b88930f4813bf6eedb1",
          "sha": "fa8d227d58f7baa5a9be1b88930f4813bf6eedb1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8d227d58f7baa5a9be1b88930f4813bf6eedb1"
        }
      ],
      "message": "refactor: Modernize AutoFile\n\n* Add m_ prefix to the std::FILE member variable\n* Add std namespace where possible, to avoid confusion with member\n  functions of the same name.\n* Add AutoFile::feof() member function, to be used in place of\n  std::feof(AutoFile::Get())\n* Simplify fclose() in terms of release()\n* Fix typo in the error message in the ignore member function.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-13T09:50:55Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-12T07:40:24Z"
      },
      "sha": "fa7724bc9d94c08d8facccd0a067d6a3b27fbbc6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAwMDAxOWUxNThlZjAxZjJiZWRjM2ZjMTU4OWY5NWUxMDZlODE3ZWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/000019e158ef01f2bedc3fc1589f95e106e817ea",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/000019e158ef01f2bedc3fc1589f95e106e817ea",
      "tree": {
        "sha": "073bdd3a2cb43bc6f628d632282b7e6e15fc9d5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/073bdd3a2cb43bc6f628d632282b7e6e15fc9d5d"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 073bdd3a2cb43bc6f628d632282b7e6e15fc9d5d\nparent fa7724bc9d94c08d8facccd0a067d6a3b27fbbc6\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1688553852 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689241867 +0200\n\nAdd AutoFile::detail_fread member function\n\nNew code can call the method without having first to retrieve the raw\nFILE* pointer via Get().\n\nAlso, move implementation to the cpp file. Can be reviewed with:\n--color-moved=dimmed-zebra  --color-moved-ws=ignore-all-space\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQF6ZL6uc20Xw/d23o8Or4pzGpTnkQKXKnVvFZR12uI8B7zHopYJItD+Rpcpq0st8I9\nwd3dYGXQGk1e1CDTSmCwQ=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7724bc9d94c08d8facccd0a067d6a3b27fbbc6",
          "sha": "fa7724bc9d94c08d8facccd0a067d6a3b27fbbc6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7724bc9d94c08d8facccd0a067d6a3b27fbbc6"
        }
      ],
      "message": "Add AutoFile::detail_fread member function\n\nNew code can call the method without having first to retrieve the raw\nFILE* pointer via Get().\n\nAlso, move implementation to the cpp file. Can be reviewed with:\n--color-moved=dimmed-zebra  --color-moved-ws=ignore-all-space",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-13T09:51:07Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-05T10:44:12Z"
      },
      "sha": "000019e158ef01f2bedc3fc1589f95e106e817ea"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9809179914,
      "node_id": "HRFPE_lADOABII585rFBNRzwAAAAJIrDUK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9809179914",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-13T10:09:54Z"
    },
    {
      "event": "commented",
      "id": 1634208153,
      "node_id": "IC_kwDOABII585haAmZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1634208153",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-13T13:03:37Z",
      "updated_at": "2023-07-13T14:17:25Z",
      "author_association": "MEMBER",
      "body": "> I find it slightly unsatisfying that we can't break any 8-byte repetitive pattern.\r\n\r\nI just find it difficult to think about without a use-case. The only thing it may affect is that it makes transparent on-disk compression harder, but 8-byte XOR already makes that hard, so I don't think this is an argument (for or against) either? ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1634208153",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060"
    },
    {
      "event": "reviewed",
      "id": 1528767782,
      "node_id": "PRR_kwDOABII585bHyUm",
      "url": null,
      "actor": null,
      "commit_id": "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "reACK faebf00\r\n\r\nTrivial rephrasing to avoid `FILE` release looking like a multiplication:\r\n\r\n```diff\r\n diff --git a/src/streams.h b/src/streams.h\r\n-index 03df20b5db..fc2fe4d9f8 100644\r\n+index 03df20b5db..5ff952be76 100644\r\n --- a/src/streams.h\r\n +++ b/src/streams.h\r\n @@ -13,6 +13,7 @@\r\n@@ -315,7 +315,7 @@\r\n -            file = nullptr;\r\n -        }\r\n -        return retval;\r\n-+        if (std::FILE * rel{release()}) return std::fclose(rel);\r\n++        if (auto rel{release()}) return std::fclose(rel);\r\n +        return 0;\r\n      }\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#pullrequestreview-1528767782",
      "submitted_at": "2023-07-13T15:54:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
    },
    {
      "event": "reviewed",
      "id": 1535902756,
      "node_id": "PRR_kwDOABII585bjAQk",
      "url": null,
      "actor": null,
      "commit_id": "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#pullrequestreview-1535902756",
      "submitted_at": "2023-07-18T21:03:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNjMzYWE2OTA2ZjNiMTMwYjY5MTU2OGJjZDIwYjJiNzZiYjFjYmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "tree": {
        "sha": "486de5e5419dbc4bf87986cf12382fd97c7c4460",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/486de5e5419dbc4bf87986cf12382fd97c7c4460"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 486de5e5419dbc4bf87986cf12382fd97c7c4460\nparent 000019e158ef01f2bedc3fc1589f95e106e817ea\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1686587423 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1689783162 +0200\n\nstreams: Teach AutoFile how to XOR\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQJuvjd7+Z1jzHNK4yeNgaX9Pfl74Yw3EI2YCteSQC3ebRUv4bWmQUfVQA5TkV65nb2\n19G6TXK8Dohd8v/en1Ow8=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/000019e158ef01f2bedc3fc1589f95e106e817ea",
          "sha": "000019e158ef01f2bedc3fc1589f95e106e817ea",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/000019e158ef01f2bedc3fc1589f95e106e817ea"
        }
      ],
      "message": "streams: Teach AutoFile how to XOR",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-07-19T16:12:42Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2023-06-12T16:30:23Z"
      },
      "sha": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9864555085,
      "node_id": "HRFPE_lADOABII585rFBNRzwAAAAJL-SpN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9864555085",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-19T16:13:18Z"
    },
    {
      "event": "commented",
      "id": 1642398008,
      "node_id": "IC_kwDOABII585h5QE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1642398008",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-19T16:27:21Z",
      "updated_at": "2023-07-19T16:27:21Z",
      "author_association": "MEMBER",
      "body": "Pushed a small change to call `std::ftell` less often if a large data span is written. In a follow-up, changes can be made to call it less often when small data spans are written. ",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1642398008",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060"
    },
    {
      "event": "commented",
      "id": 1644517170,
      "node_id": "IC_kwDOABII585iBVcy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644517170",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T19:56:45Z",
      "updated_at": "2023-07-20T19:56:45Z",
      "author_association": "CONTRIBUTOR",
      "body": "crACK fa633aa",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#issuecomment-1644517170",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28060"
    },
    {
      "event": "review_requested",
      "id": 9878567392,
      "node_id": "RRE_lADOABII585rFBNRzwAAAAJMzvng",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9878567392",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-20T19:56:48Z",
      "requested_reviewer": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 9881948580,
      "node_id": "RRE_lADOABII585rFBNRzwAAAAJNApGk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9881948580",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-21T06:43:39Z",
      "requested_reviewer": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260227191",
      "pull_request_review_id": 1525080853,
      "id": 1260227191,
      "node_id": "PRRC_kwDOABII585LHYp3",
      "diff_hunk": "@@ -526,14 +528,16 @@ class AutoFile\n      */\n     bool IsNull() const         { return (file == nullptr); }\n \n+    /** Implementation detail, only used internally. */\n+    std::size_t detail_fread(Span<std::byte> dst);",
      "path": "src/streams.h",
      "position": 175,
      "original_position": 14,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa2276355889ff7bcad95aa978863107c36a89f7",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fa2276355889ff7bcad95aa978863107c36a89f7\r\n\r\nMinor: new function is called `detail_fread` but commit and commit message mention `detail_read`.",
      "created_at": "2023-07-11T20:08:59Z",
      "updated_at": "2023-07-11T20:50:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260227191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260227191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 526,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260249626",
      "pull_request_review_id": 1525080853,
      "id": 1260249626,
      "node_id": "PRRC_kwDOABII585LHeIa",
      "diff_hunk": "@@ -477,6 +477,66 @@ class BitStreamWriter\n     }\n };\n \n+/**\n+ * Like an AutoFile whose data is XOR'd.\n+ */\n+class XorFile\n+{\n+private:\n+    std::FILE* m_file;\n+    const int m_version;\n+    const std::vector<std::byte> m_xor;\n+\n+public:\n+    //\n+    // AutoFile subset\n+    //\n+    explicit XorFile(std::FILE* file, int ver, std::vector<std::byte> data_xor)\n+        : m_file{file},\n+          m_version{ver},\n+          m_xor{std::move(data_xor)} {}\n+    ~XorFile() { fclose(); }\n+    XorFile(const XorFile&) = delete;\n+    XorFile& operator=(const XorFile&) = delete;\n+    int GetVersion() const { return m_version; }\n+    bool feof() const { return std::feof(m_file); }\n+    int fclose()\n+    {\n+        if (std::FILE * file{release()}) return std::fclose(file);\n+        return 0;\n+    }\n+    std::FILE* release()\n+    {\n+        std::FILE* ret = m_file;\n+        m_file = nullptr;\n+        return ret;\n+    }\n+    std::FILE* Get() const { return m_file; }\n+    bool IsNull() const { return m_file == nullptr; }\n+    std::size_t detail_fread(Span<std::byte> dst);\n+\n+    //\n+    // Stream subset\n+    //\n+    void read(Span<std::byte> dst);\n+    void ignore(size_t num_bytes);\n+    void write(Span<const std::byte> src);\n+\n+    template <typename T>\n+    XorFile& operator<<(const T& obj)\n+    {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 68,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d\r\n\r\nShould these serialization methods have similar `if (!m_file)` guards as `AutoFile` does?",
      "created_at": "2023-07-11T20:31:35Z",
      "updated_at": "2023-07-11T20:50:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260249626",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260249626"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260252291",
      "pull_request_review_id": 1525080853,
      "id": 1260252291,
      "node_id": "PRRC_kwDOABII585LHeyD",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d\r\n\r\nWhy not throw a `std::ios_base::failure()` here? From what I can tell, we'd never expect to get back a negative error value.",
      "created_at": "2023-07-11T20:34:34Z",
      "updated_at": "2023-07-11T20:50:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260252291",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260252291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260260590",
      "pull_request_review_id": 1525080853,
      "id": 1260260590,
      "node_id": "PRRC_kwDOABII585LHgzu",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": null,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d\r\n\r\nMight be interesting to see how statically allocating a buffer (say, as a member of `XorFile`) and reusing it might affect performance; may avoid some reallocations. Not sure how frequently this is actually called though. I expect this probably won't make a difference though, because I guess `XorFile::write()` will be called on the order of once per block.",
      "created_at": "2023-07-11T20:43:54Z",
      "updated_at": "2023-07-11T20:50:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260260590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260260590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260766631",
      "pull_request_review_id": 1525751236,
      "id": 1260766631,
      "node_id": "PRRC_kwDOABII585LJcWn",
      "diff_hunk": "@@ -526,14 +528,16 @@ class AutoFile\n      */\n     bool IsNull() const         { return (file == nullptr); }\n \n+    /** Implementation detail, only used internally. */\n+    std::size_t detail_fread(Span<std::byte> dst);",
      "path": "src/streams.h",
      "position": 175,
      "original_position": 14,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa2276355889ff7bcad95aa978863107c36a89f7",
      "in_reply_to_id": 1260227191,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks, fixed commit message",
      "created_at": "2023-07-12T08:01:30Z",
      "updated_at": "2023-07-12T08:01:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260766631",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260766631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 526,
      "original_line": 526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260767429",
      "pull_request_review_id": 1525752349,
      "id": 1260767429,
      "node_id": "PRRC_kwDOABII585LJcjF",
      "diff_hunk": "@@ -477,6 +477,66 @@ class BitStreamWriter\n     }\n };\n \n+/**\n+ * Like an AutoFile whose data is XOR'd.\n+ */\n+class XorFile\n+{\n+private:\n+    std::FILE* m_file;\n+    const int m_version;\n+    const std::vector<std::byte> m_xor;\n+\n+public:\n+    //\n+    // AutoFile subset\n+    //\n+    explicit XorFile(std::FILE* file, int ver, std::vector<std::byte> data_xor)\n+        : m_file{file},\n+          m_version{ver},\n+          m_xor{std::move(data_xor)} {}\n+    ~XorFile() { fclose(); }\n+    XorFile(const XorFile&) = delete;\n+    XorFile& operator=(const XorFile&) = delete;\n+    int GetVersion() const { return m_version; }\n+    bool feof() const { return std::feof(m_file); }\n+    int fclose()\n+    {\n+        if (std::FILE * file{release()}) return std::fclose(file);\n+        return 0;\n+    }\n+    std::FILE* release()\n+    {\n+        std::FILE* ret = m_file;\n+        m_file = nullptr;\n+        return ret;\n+    }\n+    std::FILE* Get() const { return m_file; }\n+    bool IsNull() const { return m_file == nullptr; }\n+    std::size_t detail_fread(Span<std::byte> dst);\n+\n+    //\n+    // Stream subset\n+    //\n+    void read(Span<std::byte> dst);\n+    void ignore(size_t num_bytes);\n+    void write(Span<const std::byte> src);\n+\n+    template <typename T>\n+    XorFile& operator<<(const T& obj)\n+    {",
      "path": "src/streams.h",
      "position": null,
      "original_position": 68,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": 1260249626,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd say no, so I went ahead and removed them everywhere. Refer to the commit message for rationale.",
      "created_at": "2023-07-12T08:02:08Z",
      "updated_at": "2023-07-12T08:02:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260767429",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260767429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 527,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260770110",
      "pull_request_review_id": 1525756169,
      "id": 1260770110,
      "node_id": "PRRC_kwDOABII585LJdM-",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": 1260260590,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No idea, but my blind guess would be that calling `std::fwrite` takes longer than anything else in this function. :thinking: ",
      "created_at": "2023-07-12T08:04:22Z",
      "updated_at": "2023-07-12T08:04:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1260770110",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260770110"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261190985",
      "pull_request_review_id": 1526380289,
      "id": 1261190985,
      "node_id": "PRRC_kwDOABII585LLD9J",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": 1260252291,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, looks like you are right. Thanks, done.",
      "created_at": "2023-07-12T13:35:06Z",
      "updated_at": "2023-07-12T13:35:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1261190985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261190985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261559740",
      "pull_request_review_id": 1526966730,
      "id": 1261559740,
      "node_id": "PRRC_kwDOABII585LMd-8",
      "diff_hunk": "@@ -480,73 +480,74 @@ class BitStreamWriter\n class AutoFile\n {\n protected:\n-    FILE* file;\n+    std::FILE* m_file;\n \n public:\n-    explicit AutoFile(FILE* filenew) : file{filenew} {}\n+    explicit AutoFile(std::FILE* file) : m_file{file} {}\n \n-    ~AutoFile()\n-    {\n-        fclose();\n-    }\n+    ~AutoFile() { fclose(); }\n \n     // Disallow copies\n     AutoFile(const AutoFile&) = delete;\n     AutoFile& operator=(const AutoFile&) = delete;\n \n+    bool feof() const { return std::feof(m_file); }\n+\n     int fclose()\n     {\n-        int retval{0};\n-        if (file) {\n-            retval = ::fclose(file);\n-            file = nullptr;\n-        }\n-        return retval;\n+        if (std::FILE * rel{release()}) return std::fclose(rel);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 31,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faa0ab757de28411a0ccf480b78f29a7639ef37c",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This reads to me like a multiplication between `std::FILE` and `rel`.\r\n\r\nHow about `if (auto rel{release()}) return std::fclose(rel);` ?",
      "created_at": "2023-07-12T18:14:06Z",
      "updated_at": "2023-07-12T18:17:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1261559740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261559740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 498,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261583878",
      "pull_request_review_id": 1527017124,
      "id": 1261583878,
      "node_id": "PRRC_kwDOABII585LMj4G",
      "diff_hunk": "@@ -480,73 +480,74 @@ class BitStreamWriter\n class AutoFile\n {\n protected:\n-    FILE* file;\n+    std::FILE* m_file;\n \n public:\n-    explicit AutoFile(FILE* filenew) : file{filenew} {}\n+    explicit AutoFile(std::FILE* file) : m_file{file} {}\n \n-    ~AutoFile()\n-    {\n-        fclose();\n-    }\n+    ~AutoFile() { fclose(); }\n \n     // Disallow copies\n     AutoFile(const AutoFile&) = delete;\n     AutoFile& operator=(const AutoFile&) = delete;\n \n+    bool feof() const { return std::feof(m_file); }\n+\n     int fclose()\n     {\n-        int retval{0};\n-        if (file) {\n-            retval = ::fclose(file);\n-            file = nullptr;\n-        }\n-        return retval;\n+        if (std::FILE * rel{release()}) return std::fclose(rel);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 31,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faa0ab757de28411a0ccf480b78f29a7639ef37c",
      "in_reply_to_id": 1261559740,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it is a clang-format-16 bug. Someone should try to fix or report it.",
      "created_at": "2023-07-12T18:32:41Z",
      "updated_at": "2023-07-12T18:32:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1261583878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261583878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 498,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262340617",
      "pull_request_review_id": 1528094689,
      "id": 1262340617,
      "node_id": "PRRC_kwDOABII585LPcoJ",
      "diff_hunk": "@@ -480,73 +480,74 @@ class BitStreamWriter\n class AutoFile\n {\n protected:\n-    FILE* file;\n+    std::FILE* m_file;\n \n public:\n-    explicit AutoFile(FILE* filenew) : file{filenew} {}\n+    explicit AutoFile(std::FILE* file) : m_file{file} {}\n \n-    ~AutoFile()\n-    {\n-        fclose();\n-    }\n+    ~AutoFile() { fclose(); }\n \n     // Disallow copies\n     AutoFile(const AutoFile&) = delete;\n     AutoFile& operator=(const AutoFile&) = delete;\n \n+    bool feof() const { return std::feof(m_file); }\n+\n     int fclose()\n     {\n-        int retval{0};\n-        if (file) {\n-            retval = ::fclose(file);\n-            file = nullptr;\n-        }\n-        return retval;\n+        if (std::FILE * rel{release()}) return std::fclose(rel);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 31,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faa0ab757de28411a0ccf480b78f29a7639ef37c",
      "in_reply_to_id": 1261559740,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(See https://github.com/llvm/llvm-project/commit/104cd749f5cca609a79303c0dad22bc041b5448a )\r\n\r\nSwitched to `auto` in any case.",
      "created_at": "2023-07-13T10:10:49Z",
      "updated_at": "2023-07-13T10:10:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1262340617",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262340617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 498,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267299659",
      "pull_request_review_id": 1535895567,
      "id": 1267299659,
      "node_id": "PRRC_kwDOABII585LiXVL",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": 1260260590,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I haven't run benchmarks against statically allocating a buffer, but it may be useful since `AutoFile::write` is called many times per block. Basically every time the pattern `CAutoFile << x` is used which happens for every element of the block header, each transaction input, output, etc. I also ran a small unit test through `perf` where there were many writes and found that `std::ftell` dominated with `std::fwrite` close behind.",
      "created_at": "2023-07-18T20:57:59Z",
      "updated_at": "2023-07-18T20:57:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1267299659",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267299659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267302191",
      "pull_request_review_id": 1535899632,
      "id": 1267302191,
      "node_id": "PRRC_kwDOABII585LiX8v",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": 1260260590,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It may be good to have a heat-map  (Percent of time spent in each line) for this function for IBD, or a unit test that writes a block. ",
      "created_at": "2023-07-18T21:01:18Z",
      "updated_at": "2023-07-18T21:01:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1267302191",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267302191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267304093",
      "pull_request_review_id": 1535902756,
      "id": 1267304093,
      "node_id": "PRRC_kwDOABII585LiYad",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "in_reply_to_id": null,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I _think_ you can move this `std::ftell` to right before the loop and then use the result from `std::fwrite` to increment `current_pos` each loop iteration since from https://en.cppreference.com/w/cpp/io/c/fwrite: \"The file position indicator for the stream is advanced by the number of characters written.\".  I ran some tests and it gives a performance improvement if `src.size()` is ever > 4096 bytes (though I'm not sure that is ever the case currently with block serialization hitting this function incrementally?)",
      "created_at": "2023-07-18T21:03:45Z",
      "updated_at": "2023-07-18T21:03:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1267304093",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1267304093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268194341",
      "pull_request_review_id": 1537290723,
      "id": 1268194341,
      "node_id": "PRRC_kwDOABII585Llxwl",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": 1260260590,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> I also ran a small unit test through perf where there were many writes and found that std::ftell dominated with std::fwrite close behind\r\n\r\nFor me fwrite dominated over ftell, but the most time was spent on XOR:\r\n\r\n\r\n```\r\nROUTINE ====================== AutoFile::write in src/streams.cpp\r\n    49    100 Total samples (flat / cumulative)\r\n     .      .   40:         nSize -= nNow;\r\n     .      .   41:     }\r\n     .      .   42: }\r\n     .      .   43: \r\n     .      .   44: void AutoFile::write(Span<const std::byte> src)\r\n---\r\n     .      .   45: {\r\n     .      .   46:     if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\r\n     .      .   47:     if (m_xor.empty()) {\r\n     .      .   48:         if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\r\n     .      .   49:             throw std::ios_base::failure(\"AutoFile::write: write failed\");\r\n     .      .   50:         }\r\n     .      .   51:     } else {\r\n     .      .   52:         std::array<std::byte, 4096> buf;\r\n     .      .   53:         while (src.size() > 0) {\r\n     .      .   54:             auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\r\n     .      2   55:             std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\r\n     .     16   56:             const auto current_pos{std::ftell(m_file)};\r\n    49     49   57:             util::Xor(buf_now, m_xor, current_pos);\r\n     .     33   58:             if (current_pos < 0 || std::fwrite(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\r\n     .      .   59:                 throw std::ios_base::failure{\"XorFile::write: failed\"};\r\n     .      .   60:             }\r\n     .      .   61:             src = src.subspan(buf_now.size());\r\n     .      .   62:         }\r\n     .      .   63:     }\r\n     .      .   64: }\r\n---\r\n",
      "created_at": "2023-07-19T14:51:32Z",
      "updated_at": "2023-07-19T14:51:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268194341",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268194341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268195960",
      "pull_request_review_id": 1537293197,
      "id": 1268195960,
      "node_id": "PRRC_kwDOABII585LlyJ4",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "in_reply_to_id": 1267304093,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I am hoping to nuke `ftell` completely, but that would require removing the `Get` member function",
      "created_at": "2023-07-19T14:52:37Z",
      "updated_at": "2023-07-19T14:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268195960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268195960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268239265",
      "pull_request_review_id": 1537362183,
      "id": 1268239265,
      "node_id": "PRRC_kwDOABII585Ll8uh",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": 1260260590,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it must have been a fluke because when I synced up to a little past block ~200K, `fwrite` was in the lead and `ftell` and xor were about tied at ~3% each of the total time spent. I wrote a test here https://github.com/Crypt-iQ/bitcoin/commit/bf924d6d2d4020e799796c0751ac64c892ae8e6b that requires the benchmarks to be compiled but is not a benchmark.  I made a patch in the following commit (https://github.com/Crypt-iQ/bitcoin/commit/be07dbc6f26638f7ec187e42144ccc5dab90c0a7) that reduced the number of `ftell` calls to 1 for `AutoFile` and it gave a noticeable performance improvement.  I think it's ok to track the file position this way, but I might be wrong",
      "created_at": "2023-07-19T15:24:14Z",
      "updated_at": "2023-07-19T15:24:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268239265",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268239265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268245361",
      "pull_request_review_id": 1537371729,
      "id": 1268245361,
      "node_id": "PRRC_kwDOABII585Ll-Nx",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "in_reply_to_id": 1267304093,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the calls to `ftell` in `WriteBlockToDisk` and `UndoWriteToDisk` can be removed since the file position is known before the call and the number of bytes written is also known in the success case (in the failure case the writes will throw), so it should just be possible to increment the initial file position used in `OpenBlockFile` / `OpenUndoFile` ?",
      "created_at": "2023-07-19T15:28:52Z",
      "updated_at": "2023-07-19T15:28:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268245361",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268245361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268252629",
      "pull_request_review_id": 1537383422,
      "id": 1268252629,
      "node_id": "PRRC_kwDOABII585Ll__V",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": 1260260590,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I guess it depends on the data written. My benchmark was for 1MB written. With 33 bytes written, `ftell` is the dominant:\r\n\r\n\r\n```\r\nROUTINE ====================== AutoFile::write in src/streams.cpp\r\n     2     28 Total samples (flat / cumulative)\r\n     .      .   40:         nSize -= nNow;\r\n     .      .   41:     }\r\n     .      .   42: }\r\n     .      .   43: \r\n     .      .   44: void AutoFile::write(Span<const std::byte> src)\r\n---\r\n     .      .   45: {\r\n     .      .   46:     if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\r\n     .      .   47:     if (m_xor.empty()) {\r\n     .      .   48:         if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\r\n     .      .   49:             throw std::ios_base::failure(\"AutoFile::write: write failed\");\r\n     .      .   50:         }\r\n     .      .   51:     } else {\r\n     .      .   52:         std::array<std::byte, 4096> buf;\r\n     .      .   53:         while (src.size() > 0) {\r\n     .      .   54:             auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\r\n     .      .   55:             std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\r\n     .     23   56:             const auto current_pos{std::ftell(m_file)};\r\n     1      1   57:             util::Xor(buf_now, m_xor, current_pos);\r\n     1      4   58:             if (current_pos < 0 || std::fwrite(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\r\n     .      .   59:                 throw std::ios_base::failure{\"XorFile::write: failed\"};\r\n     .      .   60:             }\r\n     .      .   61:             src = src.subspan(buf_now.size());\r\n     .      .   62:         }\r\n     .      .   63:     }\r\n     .      .   64: }\r\n---\r\n",
      "created_at": "2023-07-19T15:34:33Z",
      "updated_at": "2023-07-19T15:34:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268252629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268252629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268255975",
      "pull_request_review_id": 1537388450,
      "id": 1268255975,
      "node_id": "PRRC_kwDOABII585LmAzn",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "in_reply_to_id": 1267304093,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I mean I am happy to make the change, but it seems brittle if someone calls `std::fseek` after the constructor?",
      "created_at": "2023-07-19T15:37:12Z",
      "updated_at": "2023-07-19T15:37:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268255975",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268255975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268272983",
      "pull_request_review_id": 1537413860,
      "id": 1268272983,
      "node_id": "PRRC_kwDOABII585LmE9X",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "in_reply_to_id": 1267304093,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Hm good point, I didn't think about that -- it does seem like those functions are pretty contained since they open the file at the start and then close it at exit, but it does seem brittle",
      "created_at": "2023-07-19T15:45:27Z",
      "updated_at": "2023-07-19T15:45:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268272983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268272983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268286275",
      "pull_request_review_id": 1537434011,
      "id": 1268286275,
      "node_id": "PRRC_kwDOABII585LmIND",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": 1260260590,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In any case the bottleneck doesn't seem to be `std::array<std::byte, 4096> buf;`, so I think this thread can be closed?",
      "created_at": "2023-07-19T15:56:31Z",
      "updated_at": "2023-07-19T15:56:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268286275",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268286275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268291011",
      "pull_request_review_id": 1537441276,
      "id": 1268291011,
      "node_id": "PRRC_kwDOABII585LmJXD",
      "diff_hunk": "@@ -5,6 +5,54 @@\n #include <span.h>\n #include <streams.h>\n \n+#include <array>\n+\n+std::size_t XorFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::read: file handle is nullptr\");\n+    const auto init_pos{std::ftell(m_file)};\n+    if (init_pos < 0) return 0;\n+    std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+    util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+    return ret;\n+}\n+\n+void XorFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure{feof() ? \"XorFile::read: end of file\" : \"XorFile::read: failed\"};\n+    }\n+}\n+\n+void XorFile::ignore(size_t num_bytes)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::ignore: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;\n+    while (num_bytes > 0) {\n+        auto buf_now{Span{buf}.first(std::min<size_t>(num_bytes, buf.size()))};\n+        if (std::fread(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n+            throw std::ios_base::failure{feof() ? \"XorFile::ignore: end of file\" : \"XorFile::ignore: failed\"};\n+        }\n+        num_bytes -= buf_now.size();\n+    }\n+}\n+\n+void XorFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"XorFile::write: file handle is nullptr\");\n+    std::array<std::byte, 4096> buf;",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "fa9325a14584be1c5aa6b4cdefbdaa69b27e402d",
      "in_reply_to_id": 1260260590,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah I didn't see allocations come up at all in perf",
      "created_at": "2023-07-19T16:00:23Z",
      "updated_at": "2023-07-19T16:00:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268291011",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268291011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268305587",
      "pull_request_review_id": 1537464093,
      "id": 1268305587,
      "node_id": "PRRC_kwDOABII585LmM6z",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "in_reply_to_id": 1267304093,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe I'll pick up https://github.com/bitcoin/bitcoin/pull/28006 again and remove `Get`?",
      "created_at": "2023-07-19T16:12:55Z",
      "updated_at": "2023-07-19T16:12:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268305587",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268305587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268324286",
      "pull_request_review_id": 1537495615,
      "id": 1268324286,
      "node_id": "PRRC_kwDOABII585LmRe-",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "in_reply_to_id": 1267304093,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "happy to review if you do",
      "created_at": "2023-07-19T16:30:24Z",
      "updated_at": "2023-07-19T16:30:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1268324286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1268324286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270283029",
      "pull_request_review_id": 1540545337,
      "id": 1270283029,
      "node_id": "PRRC_kwDOABII585LtvsV",
      "diff_hunk": "@@ -0,0 +1,64 @@\n+// Copyright (c) 2009-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <span.h>\n+#include <streams.h>\n+\n+#include <array>\n+\n+std::size_t AutoFile::detail_fread(Span<std::byte> dst)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::read: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        return std::fread(dst.data(), 1, dst.size(), m_file);\n+    } else {\n+        const auto init_pos{std::ftell(m_file)};\n+        if (init_pos < 0) throw std::ios_base::failure(\"AutoFile::read: ftell failed\");\n+        std::size_t ret{std::fread(dst.data(), 1, dst.size(), m_file)};\n+        util::Xor(dst.subspan(0, ret), m_xor, init_pos);\n+        return ret;\n+    }\n+}\n+\n+void AutoFile::read(Span<std::byte> dst)\n+{\n+    if (detail_fread(dst) != dst.size()) {\n+        throw std::ios_base::failure(feof() ? \"AutoFile::read: end of file\" : \"AutoFile::read: fread failed\");\n+    }\n+}\n+\n+void AutoFile::ignore(size_t nSize)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\n+    unsigned char data[4096];\n+    while (nSize > 0) {\n+        size_t nNow = std::min<size_t>(nSize, sizeof(data));\n+        if (std::fread(data, 1, nNow, m_file) != nNow) {\n+            throw std::ios_base::failure(feof() ? \"AutoFile::ignore: end of file\" : \"AutoFile::ignore: fread failed\");\n+        }\n+        nSize -= nNow;\n+    }\n+}\n+\n+void AutoFile::write(Span<const std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write: file handle is nullptr\");\n+    if (m_xor.empty()) {\n+        if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\n+            throw std::ios_base::failure(\"AutoFile::write: write failed\");\n+        }\n+    } else {\n+        std::array<std::byte, 4096> buf;\n+        while (src.size() > 0) {\n+            auto buf_now{Span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n+            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n+            const auto current_pos{std::ftell(m_file)};",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "fa633aa6906f3b130b691568bcd20b2b76bb1cbb",
      "original_commit_id": "faebf00dbfaa5f0660527b67463320ab625c3d41",
      "in_reply_to_id": 1267304093,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "(Just for context for the follow-up) I am not sure how \"clean\" the code in https://github.com/bitcoin/bitcoin/pull/28006 is. Maybe an easier alternative might be to remove all calls to `Get` and instead wrap the calls that acted on `FILE*` into a lambda (which acts on `FILE*`) and pass the lambda to an `Exec()` member function. The `Exec()` function would then also reset the cached `ftell` state and force a call to `ftell` the next time it is needed. On top of requiring that the constructor takes a `FILE*&&` (taking ownership), this should be a relatively easy to review complete fix. ",
      "created_at": "2023-07-21T06:42:57Z",
      "updated_at": "2023-07-21T06:42:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28060#discussion_r1270283029",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270283029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28060"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 56,
      "side": "RIGHT"
    }
  ]
}