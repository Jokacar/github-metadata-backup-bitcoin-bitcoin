{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
    "id": 1335148565,
    "node_id": "PR_kwDOABII585PlMAV",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27552",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27552.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27552.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
    "number": 27552,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "Add support for \"partial\" fuzzers that indicate usefulness",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This adds supports for fuzz targets that return a boolean: `true` is the normal case, while `false` indicates the input was uninteresting and should not under any circumstances be added to the corpus. This is intended for fuzz targets that have some early bail-out criteria, so that the fuzzer doesn't continue to iterate on them.\r\n\r\n",
    "labels": [
      {
        "id": 749416508,
        "node_id": "MDU6TGFiZWw3NDk0MTY1MDg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Up%20for%20grabs",
        "name": "Up for grabs",
        "color": "99a810",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-05-02T12:13:48Z",
    "updated_at": "2023-09-20T17:03:44Z",
    "closed_at": "2023-09-20T16:22:59Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "f13805882e09744ba4070f745b89501da0a9314e",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "sipa:202305_partial_fuzzers",
      "ref": "202305_partial_fuzzers",
      "sha": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 22,
        "stargazers_count": 85,
        "watchers_count": 85,
        "size": 222753,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-09-20T16:49:37Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2023-09-15T21:50:59Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "bc4f6b13feb29146b7e10e86f93dc7f6fb6937f2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35714,
        "stargazers_count": 71424,
        "watchers_count": 71424,
        "size": 240044,
        "default_branch": "master",
        "open_issues_count": 667,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-09-20T17:50:54Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-09-20T17:33:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 71,
    "deletions": 31,
    "changed_files": 5,
    "commits": 5,
    "review_comments": 16,
    "comments": 14
  },
  "events": [
    {
      "event": "commented",
      "id": 1531365179,
      "node_id": "IC_kwDOABII585bRsc7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531365179",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T12:13:51Z",
      "updated_at": "2023-07-18T08:59:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1409007192), [brunoerg](https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1629071257), [darosior](https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1534556964) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28065](https://github.com/bitcoin/bitcoin/pull/28065) (fuzz: Flatten all FUZZ_TARGET macros into one by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531365179",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "review_requested",
      "id": 9145060875,
      "node_id": "RRE_lADOABII585k3qcpzwAAAAIhFo4L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9145060875",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T12:17:41Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "commented",
      "id": 1531391032,
      "node_id": "IC_kwDOABII585bRyw4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531391032",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T12:26:32Z",
      "updated_at": "2023-05-02T12:26:32Z",
      "author_association": "MEMBER",
      "body": "Can you add some context to explain how this interacts with fuzzing engines? Will this make it harder for engines to start from an empty input set? Often, to find a sufficiently long input to pass basic deserialization, fuzz engines will have to be guided, for example `-use_value_profile=1` for libfuzzer, and discarding the inputs on the way would mean they will never succeed passing basic deserialization?\r\n\r\n\r\nMoreover, it could help to state a goal. Is it to keep the qa-assets repo small?\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531391032",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "reviewed",
      "id": 1409007192,
      "node_id": "PRR_kwDOABII585T-75Y",
      "url": null,
      "actor": null,
      "commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1409007192",
      "submitted_at": "2023-05-02T12:38:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
    },
    {
      "event": "commented",
      "id": 1531411293,
      "node_id": "IC_kwDOABII585bR3td",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531411293",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T12:43:04Z",
      "updated_at": "2023-05-02T12:43:04Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke Fair question. I think the primary advantage is that it should help with the speed of fuzzing, by avoiding spending time on less interesting things. It is however somewhat delicate as you point out - if you mark too many things as \"uninteresting\", I can imagine it actually becomes harder to find a mutation path from one interesting test case to another. ",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531411293",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "mentioned",
      "id": 9145284604,
      "node_id": "MEE_lADOABII585k3qcpzwAAAAIhGff8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9145284604",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T12:43:04Z"
    },
    {
      "event": "subscribed",
      "id": 9145284617,
      "node_id": "SE_lADOABII585k3qcpzwAAAAIhGfgJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9145284617",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T12:43:04Z"
    },
    {
      "event": "commented",
      "id": 1531421409,
      "node_id": "IC_kwDOABII585bR6Lh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531421409",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T12:49:47Z",
      "updated_at": "2023-05-02T12:49:47Z",
      "author_association": "MEMBER",
      "body": "Yeah, it may help or hurt, depending on your goal and the fuzz target. My recommendation would be to make this off by default, and add an option to enable it at run time. This certainly can't hurt and may help for the use cases that want to enable it.",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531421409",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "reviewed",
      "id": 1409042713,
      "node_id": "PRR_kwDOABII585T_EkZ",
      "url": null,
      "actor": null,
      "commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1409042713",
      "submitted_at": "2023-05-02T12:55:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
    },
    {
      "event": "commented",
      "id": 1531436567,
      "node_id": "IC_kwDOABII585bR94X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531436567",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T13:01:13Z",
      "updated_at": "2023-05-02T13:01:13Z",
      "author_association": "MEMBER",
      "body": "@MarcoFalke Perhaps, but I don't worry too much if it's used conservatively. The \"having to go through uninteresting cases to get to interesting ones\" is a concern with or without this functionality, because after all, the uninteresting cases are already unlikely to trigger much (useful) coverage, and the coverage that they do trigger is likely unrelated to what is interesting. The actual solution libfuzzer has for this concern is attempting multiple (up to 5, IIRC) mutations in one step.\r\n\r\nOf course, (over)use of this feature may make things worse, but that's up to the individual tests.\r\n\r\nMaybe it's worth experimenting a bit with to so how much impact it has; e.g. introduce old/known bugs into the code, start from an empty corpus, and measure on average how long in time it takes to find the bug, with and without this. The miniscript fuzzers (where I've added `return false;`s relatively liberally in this PR) could be a good guinea pig.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531436567",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "mentioned",
      "id": 9145459159,
      "node_id": "MEE_lADOABII585k3qcpzwAAAAIhHKHX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9145459159",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T13:01:13Z"
    },
    {
      "event": "subscribed",
      "id": 9145459177,
      "node_id": "SE_lADOABII585k3qcpzwAAAAIhHKHp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9145459177",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-02T13:01:13Z"
    },
    {
      "event": "reviewed",
      "id": 1409209797,
      "node_id": "PRR_kwDOABII585T_tXF",
      "url": null,
      "actor": null,
      "commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "> Maybe it's worth experimenting a bit with to so how much impact it has;\r\n\r\nYes, I'm planning to play with that, I'd be really interested in whether there is a significant speedup.\r\n\r\nI feel like ideally, this would be something a good fuzzing engine should be able to handle to some extent without user guidance - uninteresting cases should create fewer additional seeds added to the corpus, which should result in them being picked by the engine for mutation less (and there might be more sophisticated algorithms that would further reduce the time spent on seeds that have failed to create interesting mutations before). That wouldn't drive the time spent on these uninteresting inputs down to zero like the approach here though.\r\n\r\n",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1409209797",
      "submitted_at": "2023-05-02T14:19:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
    },
    {
      "event": "reviewed",
      "id": 1409778437,
      "node_id": "PRR_kwDOABII585UB4MF",
      "url": null,
      "actor": null,
      "commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1409778437",
      "submitted_at": "2023-05-02T19:44:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T04:56:43Z",
      "updated_at": "2023-05-17T04:56:43Z",
      "source": {
        "issue": {
          "id": 1623374902,
          "node_id": "PR_kwDOABII585L_jQs",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27255/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27255",
          "number": 27255,
          "state": "open",
          "state_reason": null,
          "title": "MiniTapscript: port Miniscript to Tapscript",
          "body": "Miniscript was targeting P2WSH, and as such can currently only be used in `wsh()` descriptors. This pull request introduces support for Tapscript in Miniscript and makes Miniscript available inside `tr()` descriptors. It adds support for both watching *and* signing TapMiniscript descriptors.\r\n\r\nThe main changes to Miniscript for Tapscript are the following:\r\n- A new `multi_a` fragment is introduced with the same semantics as `multi`. Like in other descriptors `multi` and `multi_a` can exclusively be used in respectively P2WSH and Tapscript.\r\n- The `d:` fragment has the `u` property under Tapscript, since the `MINIMALIF` rule is now consensus. See also https://github.com/bitcoin/bitcoin/pull/24906.\r\n- Keys are now serialized as 32 bytes. (Note this affects the key hashes.)\r\n- The resource consumption checks and calculation changed. Some limits were lifted in Tapscript, and signatures are now 64 bytes long.\r\n\r\nThe largest amount of complexity probably lies in the last item. Scripts under Taproot can now run into the maximum stack size while executing a fragment. For instance if you've got a stack size of `999` due to the initial witness plus some execution that happened before and try to execute a `hash256` it would `DUP` (increasing the stack size `1000`), `HASH160` and then push the hash on the stack making the script fail.\r\nTo make sure this does not happen on any of the spending paths of a sane Miniscript, we introduce a tracking of the maximum stack size during execution of a fragment. See the commits messages for details. Those commits were separated from the resource consumption change, and the fuzz target was tweaked to sometimes pad the witness so the script runs on the brink of the stack size limit to make sure the stack size was not underestimated.\r\n\r\nExisting Miniscript unit, functional and fuzz tests are extended with Tapscript logic and test cases. Care was taken for seed stability in the fuzz targets where we cared more about them.\r\n\r\nThe design of Miniscript for Tapscript is the result of discussions between various people over the past year(s). To the extent of my knowledge at least Pieter Wuille, Sanket Kanjalkar, Andrew Poelstra and Andrew Chow contributed thoughts and ideas.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27255",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27255",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27255.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27255.patch"
          },
          "created_at": "2023-03-14T12:24:34Z",
          "updated_at": "2023-09-20T14:40:21Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T12:31:29Z",
      "updated_at": "2023-06-20T12:31:29Z",
      "source": {
        "issue": {
          "id": 1765267594,
          "node_id": "PR_kwDOABII585Tbnrb",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27918",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27918/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27918/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27918/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27918",
          "number": 27918,
          "state": "closed",
          "state_reason": null,
          "title": "fuzz: addrman, avoid `ConsumeDeserializable` when possible",
          "body": "Using specific functions like `ConsumeService`, `ConsumeAddress` and `ConsumeNetAddr` may be more effective than using `ConsumeDeserializable`. They always return some value while `ConsumeDeserializable` may return `std::nullopt`.\r\n\r\nE.g.: In this part of the code, if `op_net_addr` is `std::nullopt`,  we basically generated the addresses (if so) unnecessarily, because we won't be able to use them:\r\n```cpp\r\nstd::vector<CAddress> addresses;\r\nLIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 10000) {\r\n    const std::optional<CAddress> opt_address = ConsumeDeserializable<CAddress>(fuzzed_data_provider);\r\n    if (!opt_address) {\r\n        break;\r\n    }\r\n    addresses.push_back(*opt_address);\r\n}\r\nconst std::optional<CNetAddr> opt_net_addr = ConsumeDeserializable<CNetAddr>(fuzzed_data_provider);\r\nif (opt_net_addr) {\r\n    addr_man.Add(addresses, *opt_net_addr, std::chrono::seconds{ConsumeTime(fuzzed_data_provider, 0, 100000000)});\r\n}\r\n```\r\n\r\nAlso, if we are not calling `Add` effectively, it would also be affect other functions that may \"depend\" on it.\r\n\r\n",
          "user": {
            "login": "brunoerg",
            "id": 19480819,
            "node_id": "MDQ6VXNlcjE5NDgwODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunoerg",
            "html_url": "https://github.com/brunoerg",
            "followers_url": "https://api.github.com/users/brunoerg/followers",
            "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
            "organizations_url": "https://api.github.com/users/brunoerg/orgs",
            "repos_url": "https://api.github.com/users/brunoerg/repos",
            "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/brunoerg/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27918",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27918",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27918.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27918.patch"
          },
          "closed_at": "2023-08-03T16:32:59Z",
          "created_at": "2023-06-20T12:07:32Z",
          "updated_at": "2023-08-03T16:32:59Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYwNDhjN2M0YTAyMDlkOWY2M2NmYjYyYmQ3ODYyYTA5N2E2ODU4NTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f048c7c4a0209d9f63cfb62bd7862a097a685850",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f048c7c4a0209d9f63cfb62bd7862a097a685850",
      "tree": {
        "sha": "324aba653484e170e259719ab7fcd6eb31630a42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/324aba653484e170e259719ab7fcd6eb31630a42"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc4f6b13feb29146b7e10e86f93dc7f6fb6937f2",
          "sha": "bc4f6b13feb29146b7e10e86f93dc7f6fb6937f2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bc4f6b13feb29146b7e10e86f93dc7f6fb6937f2"
        }
      ],
      "message": "Make TypeTestOneInput return FuzzResult enum",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-05T14:51:25Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-05-02T11:50:41Z"
      },
      "sha": "f048c7c4a0209d9f63cfb62bd7862a097a685850"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRiODliYTY4ZGMyYjc2YmUwMTg2ZWNlMzNjN2Q3YmRlY2RkYzYzMzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4b89ba68dc2b76be0186ece33c7d7bdecddc6330",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4b89ba68dc2b76be0186ece33c7d7bdecddc6330",
      "tree": {
        "sha": "76b942b167abaa9e8b835893131fb1ac7f67a1e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76b942b167abaa9e8b835893131fb1ac7f67a1e1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f048c7c4a0209d9f63cfb62bd7862a097a685850",
          "sha": "f048c7c4a0209d9f63cfb62bd7862a097a685850",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f048c7c4a0209d9f63cfb62bd7862a097a685850"
        }
      ],
      "message": "Add macros for fuzz targets that return FuzzResult",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-05T14:54:58Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-05-02T11:58:17Z"
      },
      "sha": "4b89ba68dc2b76be0186ece33c7d7bdecddc6330"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjNWJhM2U4MGI3ZjMwYTIxZTZjZWUxMDJiNWI3NTdmMTUwNzZkMDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c5ba3e80b7f30a21e6cee102b5b757f15076d05",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4c5ba3e80b7f30a21e6cee102b5b757f15076d05",
      "tree": {
        "sha": "54faf15a97c68f981ab368eb2d998b1ca0199aeb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/54faf15a97c68f981ab368eb2d998b1ca0199aeb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4b89ba68dc2b76be0186ece33c7d7bdecddc6330",
          "sha": "4b89ba68dc2b76be0186ece33c7d7bdecddc6330",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4b89ba68dc2b76be0186ece33c7d7bdecddc6330"
        }
      ],
      "message": "Convert miniscript fuzz tests to return FuzzResult",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-05T14:58:45Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-05-02T12:01:53Z"
      },
      "sha": "4c5ba3e80b7f30a21e6cee102b5b757f15076d05"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY4NTE0ZWEwZWFjYWZlYmMzMmU2ZjBmNmI1ZTU3YjlmMTM3MDdjNzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8514ea0eacafebc32e6f0f6b5e57b9f13707c70",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f8514ea0eacafebc32e6f0f6b5e57b9f13707c70",
      "tree": {
        "sha": "89357c40b1710ec412075e55320203b4cece477b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89357c40b1710ec412075e55320203b4cece477b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c5ba3e80b7f30a21e6cee102b5b757f15076d05",
          "sha": "4c5ba3e80b7f30a21e6cee102b5b757f15076d05",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c5ba3e80b7f30a21e6cee102b5b757f15076d05"
        }
      ],
      "message": "Convert asmap fuzz test to return FuzzResult",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-05T15:00:19Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-05-02T12:05:30Z"
      },
      "sha": "f8514ea0eacafebc32e6f0f6b5e57b9f13707c70"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg3ZTBjYzIwYWZhYjFmMzhiMDllMGNiNTQ0Yzk1ZjdhNTRmYjQxMmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "tree": {
        "sha": "6404cb0919e38af94839ef63305cbd9a266f1b51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6404cb0919e38af94839ef63305cbd9a266f1b51"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f8514ea0eacafebc32e6f0f6b5e57b9f13707c70",
          "sha": "f8514ea0eacafebc32e6f0f6b5e57b9f13707c70",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f8514ea0eacafebc32e6f0f6b5e57b9f13707c70"
        }
      ],
      "message": "Convert asmap_direct to return FuzzResult",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-07-05T15:02:35Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2023-05-02T12:06:25Z"
      },
      "sha": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9732980217,
      "node_id": "HRFPE_lADOABII585k3qcpzwAAAAJEIX35",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9732980217",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-05T15:03:03Z"
    },
    {
      "event": "commented",
      "id": 1621949444,
      "node_id": "IC_kwDOABII585grPwE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1621949444",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-05T15:04:24Z",
      "updated_at": "2023-07-05T15:04:24Z",
      "author_association": "MEMBER",
      "body": "Rebased and switched from `bool` to an `enum class FuzzResult` which has values `MAYBE_INTERESTING` and `UNINTERESTING`, making it hopefully clearer what the return values correspond to.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1621949444",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "commented",
      "id": 1629071257,
      "node_id": "IC_kwDOABII585hGaeZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1629071257",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T14:17:52Z",
      "updated_at": "2023-07-10T14:17:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1629071257",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "reviewed",
      "id": 1522952352,
      "node_id": "PRR_kwDOABII585axmig",
      "url": null,
      "actor": null,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1522952352",
      "submitted_at": "2023-07-10T20:08:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
    },
    {
      "event": "commented",
      "id": 1629809606,
      "node_id": "IC_kwDOABII585hJOvG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1629809606",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T22:21:41Z",
      "updated_at": "2023-07-11T00:59:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "I did a quick test. I suppose that with this new approach, `miniscript_script` corpus will contain only valid miniscripts, this sounds good. So, I first ran: `FUZZ=miniscript_script src/test/fuzz/fuzz new_corpus -runs=1000000`. And then I \"fuzzed\" `decodescript` RPC using the following script I created:\r\n```py\r\n#!/usr/bin/env python3\r\n\r\nimport sys\r\nsys.path.insert(0, \"/path/to/test/functional\")\r\nfrom test_framework.test_shell import TestShell\r\n\r\nimport binascii\r\nimport os\r\n\r\ndef miniscript():\r\n    dirc = '/path/to/corpus/'\r\n    test = TestShell().setup(num_nodes=1, setup_clean_chain=True)\r\n    node = test.nodes[0]\r\n    for file in os.listdir(dirc):\r\n        with open(os.path.join(dirc, file), 'rb') as f:\r\n            byte_data = f.read()\r\n            hex_string = binascii.hexlify(byte_data).decode('utf-8')\r\n            res = node.decodescript(hex_string)\r\n            print(res)\r\n\r\n    test.shutdown()\r\n\r\nif __name__ == '__main__':\r\n    miniscript()\r\n```\r\n\r\nIt worked as expected.\r\n\r\n-----------\r\n\r\nFor specific cases I think this approach (indicating usefulness) may be useful, for other ones it may be \"dangerous\". We can do a simple mutation in an interesting result and it may become an uninteresting one, then we can do another mutation and it becomes an interesting one - different from the first case.\r\n\r\n-----------\r\nI did other test to evaluate this approach in other scenario.\r\n\r\nIn `addrman` harness, we have:\r\n```cpp\r\nconst AddrMan& const_addr_man{addr_man};\r\n(void)const_addr_man.GetAddr(\r\n    /*max_addresses=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*max_pct=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*network=*/std::nullopt);\r\n(void)const_addr_man.Select(fuzzed_data_provider.ConsumeBool());\r\n(void)const_addr_man.Size();\r\n```\r\n\r\nI believe that calling `GetAddr`, `Select` and other functions may not be so useful if the addrman is empty. So, using \"partial\" fuzzers, we could do:\r\n```cpp\r\nif (addr_man.Size() == 0) return FuzzResult::UNINTERESTING;\r\nconst AddrMan& const_addr_man{addr_man};\r\n(void)const_addr_man.GetAddr(\r\n    /*max_addresses=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*max_pct=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*network=*/std::nullopt);\r\n(void)const_addr_man.Select(fuzzed_data_provider.ConsumeBool());\r\n(void)const_addr_man.Size();\r\nCDataStream data_stream(SER_NETWORK, PROTOCOL_VERSION);\r\ndata_stream << const_addr_man;\r\nif (addr_man.Size() == 0) return FuzzResult::MAYBE_INTERESTING;\r\n```\r\nI ran it and the result was:\r\n```sh\r\n-➜  bitcoin-core-dev git:(27552-sipa) ✗ FUZZ=addrman src/test/fuzz/fuzz -runs=100000 -print_final_stats=1\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 3233727686\r\nINFO: Loaded 1 modules   (1141182 inline 8-bit counters): 1141182 [0x107f53780, 0x10806a13e), \r\nINFO: Loaded 1 PC tables (1141182 PCs): 1141182 [0x10806a140,0x1091d3d20), \r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: A corpus is not provided, starting from an empty corpus\r\n#2      INITED exec/s: 0 rss: 105Mb\r\nWARNING: no interesting inputs were found so far. Is the code instrumented for coverage?\r\nThis may also happen if the target rejected all inputs we tried so far\r\n#100000 DONE   corp: 1/1b lim: 994 exec/s: 3225 rss: 422Mb\r\nDone 100000 runs in 31 second(s)\r\nstat::number_of_executed_units: 100000\r\nstat::average_exec_per_sec:     3225\r\nstat::new_units_added:          0\r\nstat::slowest_unit_time_sec:    0\r\nstat::peak_rss_mb:              422\r\n```\r\n\r\nHowever, if instead of doing that, we just do a \"return\" if addrman is empty, would it be more effective? E.g.\r\n```cpp\r\nif (addr_man.Size() == 0) return;\r\nelse assert(false);\r\nconst AddrMan& const_addr_man{addr_man};\r\n(void)const_addr_man.GetAddr(\r\n    /*max_addresses=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*max_pct=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*network=*/std::nullopt);\r\n(void)const_addr_man.Select(fuzzed_data_provider.ConsumeBool());\r\n(void)const_addr_man.Size();\r\nCDataStream data_stream(SER_NETWORK, PROTOCOL_VERSION);\r\ndata_stream << const_addr_man;\r\n```\r\n\r\nnote: I added an assert to crash as soon as `addrman` is not empty anymore.\r\n\r\nI ran same command that I did previously and the result was:\r\n```sh\r\nSUMMARY: libFuzzer: deadly signal\r\nMS: 5 ChangeBit-ChangeBinInt-ChangeASCIIInt-CrossOver-CopyPart-; base unit: 7cf855d3c582971ea888061d02610fe375f68776\r\n0x5c,0xff,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x26,0xff,0x52,0x44,0x36,0xff,0xff,0x0,0x0,0x0,0x49,0x5c,0xff,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f,0x41,0x3f,0x54,0x7e,0x54,0x8f,0x41,\r\n\\\\\\377zzzzzzzzz\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000&\\377RD6\\377\\377\\000\\000\\000I\\\\\\377zzzzzzzzz\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000?A?T~T\\217A\r\nartifact_prefix='./'; Test unit written to ./crash-cf486b4859d3e46c3591f9a71e2f83dc384d3987\r\nBase64: XP96enp6enp6enoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJv9SRDb//wAAAElc/3p6enp6enp6egAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP0E/VH5Uj0E=\r\nstat::number_of_executed_units: 38666\r\nstat::average_exec_per_sec:     1933\r\nstat::new_units_added:          261\r\nstat::slowest_unit_time_sec:    0\r\nstat::peak_rss_mb:              351\r\n```\r\n\r\nIt executed 38666 units and crashed because addrman is not empty anymore. It seemed to be more effective.\r\n\r\n",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1629809606",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "reviewed",
      "id": 1524148089,
      "node_id": "PRR_kwDOABII585a2Kd5",
      "url": null,
      "actor": null,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1524148089",
      "submitted_at": "2023-07-11T12:25:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
    },
    {
      "event": "reviewed",
      "id": 1524835460,
      "node_id": "PRR_kwDOABII585a4ySE",
      "url": null,
      "actor": null,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "lgtm, but would be good to test this before merge",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1524835460",
      "submitted_at": "2023-07-11T18:00:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-11T19:59:31Z",
      "updated_at": "2023-07-11T19:59:31Z",
      "source": {
        "issue": {
          "id": 1798821162,
          "node_id": "PR_kwDOABII585VMkd2",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28065",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28065/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28065/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28065/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28065",
          "number": 28065,
          "state": "closed",
          "state_reason": null,
          "title": "fuzz: Flatten all FUZZ_TARGET macros into one",
          "body": "The `FUZZ_TARGET` macros have many issues:\r\n* The developer will have to pick the right macro to pass the wanted option.\r\n* Adding a new option requires doubling the number of existing macros in the worst case.\r\n\r\nFix all issues by using only a single macro.\r\n\r\nThis refactor does not change behavior.",
          "user": {
            "login": "MarcoFalke",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarcoFalke",
            "html_url": "https://github.com/MarcoFalke",
            "followers_url": "https://api.github.com/users/MarcoFalke/followers",
            "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
            "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
            "repos_url": "https://api.github.com/users/MarcoFalke/repos",
            "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 3,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28065",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28065",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28065.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28065.patch"
          },
          "closed_at": "2023-07-17T12:37:10Z",
          "created_at": "2023-07-11T12:23:33Z",
          "updated_at": "2023-07-17T12:48:51Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "labeled",
      "id": 9837464860,
      "node_id": "LE_lADOABII585k3qcpzwAAAAJKW80c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9837464860",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T13:03:56Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1638101780,
      "node_id": "IC_kwDOABII585ho3MU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638101780",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T13:03:58Z",
      "updated_at": "2023-07-17T13:03:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1638101780",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "reviewed",
      "id": 1534556964,
      "node_id": "PRR_kwDOABII585bd3sk",
      "url": null,
      "actor": null,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1534556964",
      "submitted_at": "2023-07-18T08:58:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
    },
    {
      "event": "commented",
      "id": 1691672171,
      "node_id": "IC_kwDOABII585k1N5r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1691672171",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T13:25:03Z",
      "updated_at": "2023-08-24T13:25:03Z",
      "author_association": "MEMBER",
      "body": "Rebased this past #28065 here: https://github.com/dergoegge/bitcoin/tree/202305_partial_fuzzers",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1691672171",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "commented",
      "id": 1728065602,
      "node_id": "IC_kwDOABII585nADBC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728065602",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T16:22:59Z",
      "updated_at": "2023-09-20T16:22:59Z",
      "author_association": "MEMBER",
      "body": "Closing as up for grabs due to lack of activity.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1728065602",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "closed",
      "id": 10425403599,
      "node_id": "CE_lADOABII585k3qcpzwAAAAJtZwjP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10425403599",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T16:22:59Z"
    },
    {
      "event": "labeled",
      "id": 10425405452,
      "node_id": "LE_lADOABII585k3qcpzwAAAAJtZxAM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10425405452",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T16:23:11Z",
      "label": {
        "name": "Up for grabs",
        "color": "99a810"
      }
    },
    {
      "event": "commented",
      "id": 1728068396,
      "node_id": "IC_kwDOABII585nADss",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728068396",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T16:24:35Z",
      "updated_at": "2023-09-20T16:24:35Z",
      "author_association": "MEMBER",
      "body": "I believe this is interesting, but to move forward it needs benchmarks (in terms of seeing how practical use of this increases/decreases figuring out bugs, perhaps intentionally added one), which I don't have the intent to work on in the short term currently.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1728068396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "commented",
      "id": 1728091664,
      "node_id": "IC_kwDOABII585nAJYQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728091664",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T16:39:27Z",
      "updated_at": "2023-09-20T16:39:27Z",
      "author_association": "MEMBER",
      "body": "I'm happy to review if someone picks this up.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1728091664",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    },
    {
      "event": "commented",
      "id": 1728123772,
      "node_id": "IC_kwDOABII585nARN8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728123772",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:03:43Z",
      "updated_at": "2023-09-20T17:03:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm interesting on it. I can pick this up.",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1728123772",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27552"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182486207",
      "pull_request_review_id": 1409007192,
      "id": 1182486207,
      "node_id": "PRRC_kwDOABII585Ge06_",
      "diff_hunk": "@@ -20,28 +20,49 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+using TypeTestOneInput = std::function<bool(FuzzBufferType)>; /* returns true for useful test */\n using TypeInitialize = std::function<void()>;\n using TypeHidden = bool;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init, TypeHidden hidden);\n \n inline void FuzzFrameworkEmptyInitFun() {}\n \n+/** Fuzz target without initialization function that always succeeds. */\n #define FUZZ_TARGET(name) \\\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyInitFun)\n \n+/** Fuzz target without initialization function that returns bool (false = uninteresting test). */\n+#define FUZZ_PARTIAL_TARGET(name) \\",
      "path": "src/test/fuzz/fuzz.h",
      "position": null,
      "original_position": 18,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe worth noting that this will only work for libFuzzer? (or i guess any engine that uses the libFuzzer harness and respects the -1 return value)",
      "created_at": "2023-05-02T12:33:53Z",
      "updated_at": "2023-05-02T12:38:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182486207",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182486207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": 35,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182489285",
      "pull_request_review_id": 1409007192,
      "id": 1182489285,
      "node_id": "PRRC_kwDOABII585Ge1rF",
      "diff_hunk": "@@ -151,8 +151,8 @@ void signal_handler(int signal)\n extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n {\n     static const auto& test_one_input = *Assert(g_test_one_input);\n-    test_one_input({data, size});\n-    return 0;\n+    /* Returning -1 means the input was not useful. */\n+    return int{test_one_input({data, size})} - 1;",
      "path": "src/test/fuzz/fuzz.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Just noting that this was only recently added to libFuzzer: https://reviews.llvm.org/D128749?id=441094\r\n\r\nI think that is fine, running with older versions of libFuzzer makes little sense anyway.",
      "created_at": "2023-05-02T12:36:52Z",
      "updated_at": "2023-05-02T12:38:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182489285",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182489285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182499692",
      "pull_request_review_id": 1409027736,
      "id": 1182499692,
      "node_id": "PRRC_kwDOABII585Ge4Ns",
      "diff_hunk": "@@ -20,28 +20,49 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+using TypeTestOneInput = std::function<bool(FuzzBufferType)>; /* returns true for useful test */\n using TypeInitialize = std::function<void()>;\n using TypeHidden = bool;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init, TypeHidden hidden);\n \n inline void FuzzFrameworkEmptyInitFun() {}\n \n+/** Fuzz target without initialization function that always succeeds. */\n #define FUZZ_TARGET(name) \\\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyInitFun)\n \n+/** Fuzz target without initialization function that returns bool (false = uninteresting test). */\n+#define FUZZ_PARTIAL_TARGET(name) \\",
      "path": "src/test/fuzz/fuzz.h",
      "position": null,
      "original_position": 18,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "in_reply_to_id": 1182486207,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I see it a bit more abstract: the macro is for *writing* a test that has such a return value. Whether the fuzz infrastructure uses it in an independent question (and if there are ones using `LLVMFuzzerTestOneInput` that don't support the return value -1 at all, we should make sure it also isn't returned, even if `FUZZ_PARTIAL_TARGET` is used).",
      "created_at": "2023-05-02T12:46:46Z",
      "updated_at": "2023-05-02T12:46:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182499692",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182499692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": 35,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182509668",
      "pull_request_review_id": 1409042713,
      "id": 1182509668,
      "node_id": "PRRC_kwDOABII585Ge6pk",
      "diff_hunk": "@@ -151,8 +151,8 @@ void signal_handler(int signal)\n extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n {\n     static const auto& test_one_input = *Assert(g_test_one_input);\n-    test_one_input({data, size});\n-    return 0;\n+    /* Returning -1 means the input was not useful. */\n+    return int{test_one_input({data, size})} - 1;",
      "path": "src/test/fuzz/fuzz.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Suggestion, if you want to go down the route to make this a runtime option:\r\n\r\n```cpp\r\nstatic const reject_unwated_inputs{std::getenv(\"REJECT_UNWANTED_FUZZ_INPUTS\")};\r\n```\r\n\r\n(or similar)",
      "created_at": "2023-05-02T12:55:43Z",
      "updated_at": "2023-05-02T12:55:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182509668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182509668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182981008",
      "pull_request_review_id": 1409778437,
      "id": 1182981008,
      "node_id": "PRRC_kwDOABII585GgtuQ",
      "diff_hunk": "@@ -29,22 +29,22 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-FUZZ_TARGET(asmap)\n+FUZZ_PARTIAL_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n-    if (buffer.size() < 1 + 3 + 4) return;\n+    if (buffer.size() < 1 + 3 + 4) return false;",
      "path": "src/test/fuzz/asmap.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Also, might be good to make the return type type-safe with a C++ `enum class` to avoid confusion due to under-documentation and accidental typo bugs?",
      "created_at": "2023-05-02T19:44:20Z",
      "updated_at": "2023-05-02T19:44:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182981008",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182981008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1252954065",
      "pull_request_review_id": 1514276070,
      "id": 1252954065,
      "node_id": "PRRC_kwDOABII585Kro_R",
      "diff_hunk": "@@ -29,22 +29,22 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-FUZZ_TARGET(asmap)\n+FUZZ_PARTIAL_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n-    if (buffer.size() < 1 + 3 + 4) return;\n+    if (buffer.size() < 1 + 3 + 4) return false;",
      "path": "src/test/fuzz/asmap.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "in_reply_to_id": 1182981008,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are you still working on this, or would you prefer someone to take this over? Or would you prefer to not make it type-safe?",
      "created_at": "2023-07-05T11:14:51Z",
      "updated_at": "2023-07-05T11:31:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1252954065",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1252954065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253248607",
      "pull_request_review_id": 1514747074,
      "id": 1253248607,
      "node_id": "PRRC_kwDOABII585Ksw5f",
      "diff_hunk": "@@ -20,28 +20,49 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+using TypeTestOneInput = std::function<bool(FuzzBufferType)>; /* returns true for useful test */\n using TypeInitialize = std::function<void()>;\n using TypeHidden = bool;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init, TypeHidden hidden);\n \n inline void FuzzFrameworkEmptyInitFun() {}\n \n+/** Fuzz target without initialization function that always succeeds. */\n #define FUZZ_TARGET(name) \\\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyInitFun)\n \n+/** Fuzz target without initialization function that returns bool (false = uninteresting test). */\n+#define FUZZ_PARTIAL_TARGET(name) \\",
      "path": "src/test/fuzz/fuzz.h",
      "position": null,
      "original_position": 18,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "in_reply_to_id": 1182486207,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've added a FuzzResult enum as suggested by @MarcoFalke, and added some explanation there.",
      "created_at": "2023-07-05T15:03:09Z",
      "updated_at": "2023-07-05T15:03:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1253248607",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253248607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": 35,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253249225",
      "pull_request_review_id": 1514747883,
      "id": 1253249225,
      "node_id": "PRRC_kwDOABII585KsxDJ",
      "diff_hunk": "@@ -29,22 +29,22 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-FUZZ_TARGET(asmap)\n+FUZZ_PARTIAL_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n-    if (buffer.size() < 1 + 3 + 4) return;\n+    if (buffer.size() < 1 + 3 + 4) return false;",
      "path": "src/test/fuzz/asmap.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "in_reply_to_id": 1182981008,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done!",
      "created_at": "2023-07-05T15:03:34Z",
      "updated_at": "2023-07-05T15:03:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1253249225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253249225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258853476",
      "pull_request_review_id": 1522952352,
      "id": 1258853476,
      "node_id": "PRRC_kwDOABII585LCJRk",
      "diff_hunk": "@@ -29,22 +29,22 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-FUZZ_TARGET(asmap)\n+FUZZ_PARTIAL_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n-    if (buffer.size() < 1 + 3 + 4) return;\n+    if (buffer.size() < 1 + 3 + 4) return FuzzResult::UNINTERESTING;\n     int asmap_size = 3 + (buffer[0] & 127);\n     bool ipv6 = buffer[0] & 128;\n     const size_t addr_size = ipv6 ? ADDR_IPV6_SIZE : ADDR_IPV4_SIZE;\n-    if (buffer.size() < size_t(1 + asmap_size + addr_size)) return;\n+    if (buffer.size() < size_t(1 + asmap_size + addr_size)) return FuzzResult::UNINTERESTING;\n     std::vector<bool> asmap = ipv6 ? IPV6_PREFIX_ASMAP : IPV4_PREFIX_ASMAP;\n     asmap.reserve(asmap.size() + 8 * asmap_size);\n     for (int i = 0; i < asmap_size; ++i) {\n         for (int j = 0; j < 8; ++j) {\n             asmap.push_back((buffer[1 + i] >> j) & 1);\n         }\n     }\n-    if (!SanityCheckASMap(asmap, 128)) return;\n+    if (!SanityCheckASMap(asmap, 128)) return FuzzResult::MAYBE_INTERESTING;",
      "path": "src/test/fuzz/asmap.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    if (!SanityCheckASMap(asmap, 128)) return FuzzResult::UNINTERESTING;\r\n```",
      "created_at": "2023-07-10T20:08:29Z",
      "updated_at": "2023-07-10T20:08:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1258853476",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258853476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259659543",
      "pull_request_review_id": 1524148089,
      "id": 1259659543,
      "node_id": "PRRC_kwDOABII585LFOEX",
      "diff_hunk": "@@ -20,28 +20,61 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+enum class FuzzResult\n+{\n+    /** Normal fuzzing result. */\n+    MAYBE_INTERESTING,\n+\n+    /** This value can be returned by fuzz tests to indicate the input was uninteresting.\n+     *\n+     * libfuzzer can make use of this and will not insert the input in its corpus, even when it\n+     * appears to increase coverage. */\n+    UNINTERESTING\n+};\n+\n+using TypeTestOneInput = std::function<FuzzResult(FuzzBufferType)>;\n using TypeInitialize = std::function<void()>;\n using TypeHidden = bool;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init, TypeHidden hidden);\n \n inline void FuzzFrameworkEmptyInitFun() {}\n \n+/** Fuzz target without initialization function that always succeeds. */\n #define FUZZ_TARGET(name) \\\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyInitFun)\n \n+/** Fuzz target without initialization function that returns FuzzResult. */\n+#define FUZZ_PARTIAL_TARGET(name) \\",
      "path": "src/test/fuzz/fuzz.h",
      "position": 30,
      "original_position": 30,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: (This is my fault)\r\n\r\nNot really a fan adding more macros, where each new option will cause doubling all existing macros. Currently there are 3, in this pull there are 6, and with the next option we'll have 12 to 16 macros?\r\n\r\nAt least for the existing options, which only need to be known at runtime, an options struct can be used.\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/28065  . Feel free to ignore/NACK.\r\n\r\nEdit: To clarify having `FUZZ_TARGET` and `FUZZ_PARTIAL_TARGET` is probably fine. My comment was about the other macros in other lines.",
      "created_at": "2023-07-11T12:25:42Z",
      "updated_at": "2023-07-11T12:47:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1259659543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259659543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260083660",
      "pull_request_review_id": 1524835460,
      "id": 1260083660,
      "node_id": "PRRC_kwDOABII585LG1nM",
      "diff_hunk": "@@ -1058,50 +1059,52 @@ void FuzzInitSmart()\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeStable. */\n-FUZZ_TARGET_INIT(miniscript_stable, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_stable, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeStable(provider, needed_type);\n     }, \"\"_mst), provider);\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeSmart. */\n-FUZZ_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n {\n     /** The set of types we aim to construct nodes for. Together they cover all. */\n     static constexpr std::array<Type, 4> BASE_TYPES{\"B\"_mst, \"V\"_mst, \"K\"_mst, \"W\"_mst};\n \n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeSmart(provider, needed_type);\n     }, PickValue(provider, BASE_TYPES), true), provider);\n }\n \n /* Fuzz tests that test parsing from a string, and roundtripping via string. */\n-FUZZ_TARGET_INIT(miniscript_string, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_string, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n     auto str = provider.ConsumeRemainingBytesAsString();\n     auto parsed = miniscript::FromString(str, PARSER_CTX);\n-    if (!parsed) return;\n+    if (!parsed) return FuzzResult::UNINTERESTING;\n \n     const auto str2 = parsed->ToString(PARSER_CTX);\n     assert(str2);\n     auto parsed2 = miniscript::FromString(*str2, PARSER_CTX);\n     assert(parsed2);\n     assert(*parsed == *parsed2);\n+    return FuzzResult::MAYBE_INTERESTING;\n }\n \n /* Fuzz tests that test parsing from a script, and roundtripping via script. */\n-FUZZ_TARGET(miniscript_script)\n+FUZZ_PARTIAL_TARGET(miniscript_script)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::optional<CScript> script = ConsumeDeserializable<CScript>(fuzzed_data_provider);\n-    if (!script) return;\n+    if (!script) return FuzzResult::UNINTERESTING;\n \n     const auto ms = miniscript::FromScript(*script, SCRIPT_PARSER_CONTEXT);\n-    if (!ms) return;\n+    if (!ms) return FuzzResult::UNINTERESTING;",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": 86,
      "original_position": 86,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This will discard all cases where `miniscript::FromScript` fails? This seems undesirable, because then someone can change the code to add undefined behavior or a crash in code paths that return an error.",
      "created_at": "2023-07-11T17:51:33Z",
      "updated_at": "2023-07-11T18:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260083660",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260083660"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1106,
      "original_line": 1106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260084752",
      "pull_request_review_id": 1524835460,
      "id": 1260084752,
      "node_id": "PRRC_kwDOABII585LG14Q",
      "diff_hunk": "@@ -1058,50 +1059,52 @@ void FuzzInitSmart()\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeStable. */\n-FUZZ_TARGET_INIT(miniscript_stable, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_stable, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeStable(provider, needed_type);\n     }, \"\"_mst), provider);\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeSmart. */\n-FUZZ_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n {\n     /** The set of types we aim to construct nodes for. Together they cover all. */\n     static constexpr std::array<Type, 4> BASE_TYPES{\"B\"_mst, \"V\"_mst, \"K\"_mst, \"W\"_mst};\n \n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeSmart(provider, needed_type);\n     }, PickValue(provider, BASE_TYPES), true), provider);\n }\n \n /* Fuzz tests that test parsing from a string, and roundtripping via string. */\n-FUZZ_TARGET_INIT(miniscript_string, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_string, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n     auto str = provider.ConsumeRemainingBytesAsString();\n     auto parsed = miniscript::FromString(str, PARSER_CTX);\n-    if (!parsed) return;\n+    if (!parsed) return FuzzResult::UNINTERESTING;",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": 65,
      "original_position": 65,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Same?",
      "created_at": "2023-07-11T17:52:38Z",
      "updated_at": "2023-07-11T18:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260084752",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260084752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1088,
      "original_line": 1088,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260087559",
      "pull_request_review_id": 1524835460,
      "id": 1260087559,
      "node_id": "PRRC_kwDOABII585LG2kH",
      "diff_hunk": "@@ -20,28 +20,61 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+enum class FuzzResult\n+{\n+    /** Normal fuzzing result. */\n+    MAYBE_INTERESTING,\n+\n+    /** This value can be returned by fuzz tests to indicate the input was uninteresting.\n+     *\n+     * libfuzzer can make use of this and will not insert the input in its corpus, even when it\n+     * appears to increase coverage. */\n+    UNINTERESTING",
      "path": "src/test/fuzz/fuzz.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    UNINTERESTING,\r\n```\r\n\r\nStyle nit: Missing comma to avoid having to touch this line again if a new value is added (unlikely).",
      "created_at": "2023-07-11T17:55:36Z",
      "updated_at": "2023-07-11T18:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260087559",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260087559"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260089383",
      "pull_request_review_id": 1524835460,
      "id": 1260089383,
      "node_id": "PRRC_kwDOABII585LG3An",
      "diff_hunk": "@@ -166,8 +166,9 @@ void signal_handler(int signal)\n extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n {\n     static const auto& test_one_input = *Assert(g_test_one_input);\n-    test_one_input({data, size});\n-    return 0;\n+    auto result = test_one_input({data, size});\n+    /* Returning -1 means the input was not useful. */\n+    return (result != FuzzResult::UNINTERESTING) - 1;",
      "path": "src/test/fuzz/fuzz.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "style nit: May be better to use a switch-case to avoid missing a case, when a new value is added (unlikely)?",
      "created_at": "2023-07-11T17:57:33Z",
      "updated_at": "2023-07-11T18:00:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260089383",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260089383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 171,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260091062",
      "pull_request_review_id": 1524835460,
      "id": 1260091062,
      "node_id": "PRRC_kwDOABII585LG3a2",
      "diff_hunk": "@@ -29,22 +29,22 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-FUZZ_TARGET(asmap)\n+FUZZ_PARTIAL_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n-    if (buffer.size() < 1 + 3 + 4) return;\n+    if (buffer.size() < 1 + 3 + 4) return FuzzResult::UNINTERESTING;\n     int asmap_size = 3 + (buffer[0] & 127);\n     bool ipv6 = buffer[0] & 128;\n     const size_t addr_size = ipv6 ? ADDR_IPV6_SIZE : ADDR_IPV4_SIZE;\n-    if (buffer.size() < size_t(1 + asmap_size + addr_size)) return;\n+    if (buffer.size() < size_t(1 + asmap_size + addr_size)) return FuzzResult::UNINTERESTING;\n     std::vector<bool> asmap = ipv6 ? IPV6_PREFIX_ASMAP : IPV4_PREFIX_ASMAP;\n     asmap.reserve(asmap.size() + 8 * asmap_size);\n     for (int i = 0; i < asmap_size; ++i) {\n         for (int j = 0; j < 8; ++j) {\n             asmap.push_back((buffer[1 + i] >> j) & 1);\n         }\n     }\n-    if (!SanityCheckASMap(asmap, 128)) return;\n+    if (!SanityCheckASMap(asmap, 128)) return FuzzResult::MAYBE_INTERESTING;",
      "path": "src/test/fuzz/asmap.cpp",
      "position": 23,
      "original_position": 23,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "in_reply_to_id": 1258853476,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is intentional to collect fuzz inputs that fail `SanityCheckASMap` into the qa-assets directory.",
      "created_at": "2023-07-11T17:59:23Z",
      "updated_at": "2023-07-11T18:00:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260091062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260091062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266463081",
      "pull_request_review_id": 1534553233,
      "id": 1266463081,
      "node_id": "PRRC_kwDOABII585LfLFp",
      "diff_hunk": "@@ -1058,50 +1059,52 @@ void FuzzInitSmart()\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeStable. */\n-FUZZ_TARGET_INIT(miniscript_stable, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_stable, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeStable(provider, needed_type);\n     }, \"\"_mst), provider);\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeSmart. */\n-FUZZ_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n {\n     /** The set of types we aim to construct nodes for. Together they cover all. */\n     static constexpr std::array<Type, 4> BASE_TYPES{\"B\"_mst, \"V\"_mst, \"K\"_mst, \"W\"_mst};\n \n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeSmart(provider, needed_type);\n     }, PickValue(provider, BASE_TYPES), true), provider);\n }\n \n /* Fuzz tests that test parsing from a string, and roundtripping via string. */\n-FUZZ_TARGET_INIT(miniscript_string, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_string, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n     auto str = provider.ConsumeRemainingBytesAsString();\n     auto parsed = miniscript::FromString(str, PARSER_CTX);\n-    if (!parsed) return;\n+    if (!parsed) return FuzzResult::UNINTERESTING;\n \n     const auto str2 = parsed->ToString(PARSER_CTX);\n     assert(str2);\n     auto parsed2 = miniscript::FromString(*str2, PARSER_CTX);\n     assert(parsed2);\n     assert(*parsed == *parsed2);\n+    return FuzzResult::MAYBE_INTERESTING;\n }\n \n /* Fuzz tests that test parsing from a script, and roundtripping via script. */\n-FUZZ_TARGET(miniscript_script)\n+FUZZ_PARTIAL_TARGET(miniscript_script)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::optional<CScript> script = ConsumeDeserializable<CScript>(fuzzed_data_provider);\n-    if (!script) return;\n+    if (!script) return FuzzResult::UNINTERESTING;\n \n     const auto ms = miniscript::FromScript(*script, SCRIPT_PARSER_CONTEXT);\n-    if (!ms) return;\n+    if (!ms) return FuzzResult::UNINTERESTING;",
      "path": "src/test/fuzz/miniscript.cpp",
      "position": 86,
      "original_position": 86,
      "commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_commit_id": "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "in_reply_to_id": 1260083660,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I agree with Marco. My first reaction was hey we can't have our cake and eat it too, but in the case of the Miniscript targets we can: `miniscript_script` and `miniscript_string` could be left more generic by not discarding any coverage while `miniscript_smart` and `miniscript_stable` would.",
      "created_at": "2023-07-18T08:57:09Z",
      "updated_at": "2023-07-18T08:57:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1266463081",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266463081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1106,
      "original_line": 1106,
      "side": "RIGHT"
    }
  ]
}