{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17376",
    "id": 336598420,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzM2NTk4NDIw",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/17376",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/17376.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/17376.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17376",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17376/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17376/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17376/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/4f4cab3e4cdcf0bc614e035257a7d347d340fe29",
    "number": 17376,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "Add Parallel P2P Client in Rust",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This was actually the original goal of the Rust work, but we had to start somewhere a bit simpler. This adds a full parallel P2P client, written in Rust, which can download and serve both headers and blocks, listening on a separate port. It is designed to be simple and robust, letting the C++ net_processing handle being optimized. It avoids wasting bandwidth needlessly by not (like all Rust modules so far) starting up until either IBD completes or it seems stuck and by waiting 30 seconds any time it hears about a new block that it decides to fetch before *actually* fetching it.\r\n\r\nBased on (but could probably go in independently of) #16834, #16762, and #16974.\r\n\r\nSome tasks that need to happen to clean this up a bit:\r\n\r\n- [ ] Build out the Rust addrman a bit - it currently always queries DNS seeds until its built out a database of 500 addresses and then never changes it. I don't think this is a particularly terrible design at a high level for something with a goal of simply having a different failure model from the C++ addrman, but the over-reliance on the DNS seeds needs to go, at least (plus we dont want to ever query them after we've built up an addrman that works, eg upon upgrade).\r\n- [x] Build out connection logic a bit - we currently just open connections willy nilly very aggressively if our best header falls behind our best tip. This is great, but we should probably, like, disconnect peers that don't manage to help us along our journey (especially since the Rust code is hard-limited to 128MB of memory allocations, though this may want to change to 256MB, we have very little room for peers given our socket buffers are like 8-16MB just to receive a block and send one).\r\n- [ ] Support Windows. Currently uses poll() for socket handling and a pipe() to wake up the poll() thread. Needs a Windows version of that module, though that shouldn't be too hard...right?\r\n- [ ] A XXX or two, at least one of them probably requires @elichai explain Rust to me.\r\n- [ ] Subtree the libsecp bump, and the addition of rust-bitcoin crates (all managed in the rust-bitcoin org on GH by the Usual Folks) and libc crates (which just exposes libc functions and little more, though in theory we could probably drop this if we wanted to expose them ourselves, but it should be pretty simple). Subtrees are a PITA to handle, so this will just happen right before merge.\r\n",
    "labels": [
      {
        "id": 61889416,
        "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
        "name": "Build system",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      },
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2019-11-05T05:11:10Z",
    "updated_at": "2022-02-15T10:41:44Z",
    "closed_at": "2020-03-05T19:48:18Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "2d85b7eea30af32f6c2e9d9fd5abcae79e553ef1",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "TheBlueMatt:2019-10-rusty-p2p",
      "ref": "2019-10-rusty-p2p",
      "sha": "4f4cab3e4cdcf0bc614e035257a7d347d340fe29",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 1443291,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDQzMjkx",
        "name": "bitcoin",
        "full_name": "TheBlueMatt/bitcoin",
        "owner": {
          "login": "TheBlueMatt",
          "id": 649246,
          "node_id": "MDQ6VXNlcjY0OTI0Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheBlueMatt",
          "html_url": "https://github.com/TheBlueMatt",
          "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
          "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
          "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
          "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
          "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/TheBlueMatt/bitcoin",
        "description": "Bitcoin (dont fork from here, fork from bitcoin/bitcoin)",
        "fork": true,
        "url": "https://api.github.com/repos/TheBlueMatt/bitcoin",
        "archive_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/events",
        "forks_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/TheBlueMatt/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:TheBlueMatt/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/TheBlueMatt/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/TheBlueMatt/bitcoin/hooks",
        "svn_url": "https://github.com/TheBlueMatt/bitcoin",
        "homepage": "http://www.bitcoin.org/",
        "language": "C++",
        "forks_count": 6,
        "stargazers_count": 19,
        "watchers_count": 19,
        "size": 171686,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T11:57:49Z",
        "created_at": "2011-03-05T14:14:49Z",
        "updated_at": "2022-12-15T18:21:13Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35475,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T19:06:37Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17376"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 129974,
    "deletions": 577,
    "changed_files": 1233,
    "commits": 22,
    "review_comments": 5,
    "comments": 8
  },
  "events": [
    {
      "event": "mentioned",
      "id": 2770100048,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc3MDEwMDA0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770100048",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T05:11:10Z"
    },
    {
      "event": "subscribed",
      "id": 2770100050,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NzAxMDAwNTA=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770100050",
      "actor": {
        "login": "elichai",
        "id": 2167860,
        "node_id": "MDQ6VXNlcjIxNjc4NjA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/elichai",
        "html_url": "https://github.com/elichai",
        "followers_url": "https://api.github.com/users/elichai/followers",
        "following_url": "https://api.github.com/users/elichai/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/elichai/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/elichai/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
        "organizations_url": "https://api.github.com/users/elichai/orgs",
        "repos_url": "https://api.github.com/users/elichai/repos",
        "events_url": "https://api.github.com/users/elichai/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/elichai/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T05:11:11Z"
    },
    {
      "event": "labeled",
      "id": 2770229116,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3NzAyMjkxMTY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770229116",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T06:36:15Z",
      "label": {
        "name": "Build system",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 2770229118,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3NzAyMjkxMTg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770229118",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T06:36:15Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "labeled",
      "id": 2770229119,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3NzAyMjkxMTk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770229119",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T06:36:15Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "labeled",
      "id": 2770229122,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3NzAyMjkxMjI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770229122",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T06:36:15Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 2770229124,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDI3NzAyMjkxMjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2770229124",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T06:36:15Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "commented",
      "id": 549687895,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTY4Nzg5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549687895",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T06:53:31Z",
      "updated_at": "2019-11-25T00:33:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17581](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17581.html) (refactor: Remove settings merge reverse precedence code by ryanofsky)\n* [#17580](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17580.html) (refactor: Add ALLOW_LIST flags and enforce usage in CheckArgFlags by ryanofsky)\n* [#17493](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17493.html) (util: Forbid ambiguous multiple assignments in config file by ryanofsky)\n* [#17452](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17452.html) (lib: update fuzz directory in .gitignore by jonatack)\n* [#17398](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17398.html) (build: Update leveldb to 1.22+ by laanwj)\n* [#17383](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17383.html) (Refactor: Move consts to their correct translation units by jnewbery)\n* [#17227](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17227.html) (Qt: Add Android packaging support by icota)\n* [#16722](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16722.html) (build: Disable warnings for leveldb subtree by default by hebasto)\n* [#16688](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16688.html) (log: Add validation interface logging by jkczyz)\n* [#16365](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16365.html) (Log RPC parameters (arguments) if -debug=rpcparams by LarryRuane)\n* [#15606](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15606.html) ([experimental] UTXO snapshots by jamesob)\n* [#15367](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15367.html) (feature: Added ability for users to add a startup command by benthecarman)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#issuecomment-549687895",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17376"
    },
    {
      "event": "unlabeled",
      "id": 2771026660,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjc3MTAyNjY2MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2771026660",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T11:19:17Z",
      "label": {
        "name": "Docs",
        "color": "02d7e1"
      }
    },
    {
      "event": "unlabeled",
      "id": 2771026661,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mjc3MTAyNjY2MQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2771026661",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T11:19:17Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 549941416,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk0MTQxNg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549941416",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T17:59:39Z",
      "updated_at": "2019-11-05T17:59:50Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.\r\n\r\nMy personal interest here is to easier deploy alternative protocols. For example, new block relay strategy or new address relay.\r\n\r\nReplacing those existing protocols in Bitcoin core doesn't seem feasible (unless we come up with something really brilliant), because those are critical for security and have been proving robustness for years.\r\nAt the same time, building something in an additive manner seems possible.\r\n\r\nThese protocols also might be more flexible. I don't want to have overwhelming configurations in Bitcoin Core, but if someone wants to enable, let's say, a more anonymous but less fast block propagation locally — it's good to enable that with a module in rust.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#issuecomment-549941416",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17376"
    },
    {
      "event": "commented",
      "id": 549981980,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk4MTk4MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549981980",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T19:29:44Z",
      "updated_at": "2019-11-05T19:29:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "> My personal interest here is to easier deploy alternative protocols. For example, new block relay strategy or new address relay.\r\n\r\nWhile new address relay in-scope for \"reliability\" reasons, I'm not sure that new block relay protocols would be - I don't know that this code wants to grow much beyond what it is already...less code, less bugs :) (nor do I see any coming down the pipe on the horizon?).",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#issuecomment-549981980",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17376"
    },
    {
      "event": "commented",
      "id": 549987988,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk4Nzk4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549987988",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T19:44:33Z",
      "updated_at": "2019-11-05T19:44:33Z",
      "author_association": "MEMBER",
      "body": ">I'm not sure that new block relay protocols would be\r\n\r\nWe're doing great right now, but I think there's a non-zero probability of us wanting something different in future :)\r\nAnyway, don't want to flood this PR with this particular discussion.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#issuecomment-549987988",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17376"
    },
    {
      "event": "commented",
      "id": 549991530,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTk5MTUzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/549991530",
      "actor": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T19:53:15Z",
      "updated_at": "2019-11-05T19:53:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "In the \"nice to have\" list, I would add \"fork(2)\" to the OP checklist.\r\n\r\nforking does a far better job creating a security barrier between network and the rest of the code.\r\n\r\nIt was always a long term goal to create a process boundary separation between wallet and network, for example.  One way to accomplish that is removing the wallet from the core validation engine.  Another way to accomplish that is forking.   in re Windows, the cygwin method should work here.\r\n\r\nA kernel guarantee is stronger than a programming language guarantee, by far.\r\n\r\n(to be crystal clear, this is not objecting to this PR, nor proposing an alternative, just recalling relevant historical material)",
      "user": {
        "login": "jgarzik",
        "id": 494411,
        "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/494411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jgarzik",
        "html_url": "https://github.com/jgarzik",
        "followers_url": "https://api.github.com/users/jgarzik/followers",
        "following_url": "https://api.github.com/users/jgarzik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jgarzik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jgarzik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
        "organizations_url": "https://api.github.com/users/jgarzik/orgs",
        "repos_url": "https://api.github.com/users/jgarzik/repos",
        "events_url": "https://api.github.com/users/jgarzik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jgarzik/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#issuecomment-549991530",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17376"
    },
    {
      "event": "commented",
      "id": 550031195,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDAzMTE5NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550031195",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T21:34:20Z",
      "updated_at": "2019-11-05T21:34:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Very interesting work @TheBlueMatt!\r\n\r\nI really appreciate that proper fuzz testing is integrated from the very start. Very nice!\r\n\r\nIs the inclusion of the fuzzing corpus intentional (`src/rusty/rust-bitcoin/fuzz/hfuzz_input/deserialize_udecimal/input/id:000121,src:000007,op:havoc,rep:2`, etc.)?\r\n\r\nI suggest removing the corpus files in order to not clutter the PR \"Files changed\" view (currently listing 1233 files as changed! :)).",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#issuecomment-550031195",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17376"
    },
    {
      "event": "mentioned",
      "id": 2773070408,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc3MzA3MDQwOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2773070408",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T21:34:20Z"
    },
    {
      "event": "subscribed",
      "id": 2773070409,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NzMwNzA0MDk=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2773070409",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-05T21:34:20Z"
    },
    {
      "event": "commented",
      "id": 550083187,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDA4MzE4Nw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/550083187",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T00:17:28Z",
      "updated_at": "2019-11-06T00:17:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "@practicalswift the parts you're referring to here are just dependencies from the rust-bitcoin github org pulled in here (which are included as-is so that we can subtree them in the future, though they may need to go in via depends/ I'm just not sure how that process works), not fresh code. Indeed, most of the rust-bitcoin libraries are well-tested and have a bunch of fuzz testing built in, the inclusion of the corpus is largely because we run a few rounds of fuzz on travis and we want a good starting point for it.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#issuecomment-550083187",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17376"
    },
    {
      "event": "mentioned",
      "id": 2773486034,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50Mjc3MzQ4NjAzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2773486034",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T00:17:29Z"
    },
    {
      "event": "subscribed",
      "id": 2773486037,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDI3NzM0ODYwMzc=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2773486037",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-06T00:17:29Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-07T20:07:12Z",
      "updated_at": "2019-11-07T20:07:12Z",
      "source": {
        "issue": {
          "id": 504893181,
          "node_id": "MDU6SXNzdWU1MDQ4OTMxODE=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17090",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17090/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17090/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17090/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/17090",
          "number": 17090,
          "state": "closed",
          "state_reason": "completed",
          "title": "RFC: Rust code integration",
          "body": "Moving the discussion from #15798 here, as it makes more sense to have it in an issue instead of a PR. #15798 no longer reflects the current proposed Rust changes, and Rust related work is now happening across multiple others.\r\n\r\n[Corys](https://github.com/theuni/) thoughts / introduction from #15798:\r\n\r\n> This is not intended to be merged as-is, but instead to serve as a reference for anyone who might be interested in trying out some rust code inside of Bitcoin Core. I have no idea what works. I have lots of questions about debugging, threading, etc. But instead of trying to hack and document how things work, we thought it'd be fun for everyone to be able to poke at it and scratch our heads together :). If something interesting comes out of it, a discussion about merging can happen then.\r\n\r\n> It is surprisingly functional. The rust tools are impeccable. I would've thought this would be a project that would take months/years, but the rust devs have done such a good job that mostly everything already just works. The gitian descriptors have been modified to actually incorporate working rust code. All of our currently supported platforms seem to already work (even macOS cross!) with the exception of 32bit windows and ancient linux distros. The specific issues are documented in the gitian descriptors. For now, Gitian needs net access and a larger disk volume, but those are both very temporary issues\r\n\r\n> Why rust? I don't know. Maybe not. But I think it's a fair assumption to say that Rust code will eventually end up in Bitcoin Core as the result of adding a new dependency. Adoption is happing quickly. So, I think it prudent to look ahead and not only be prepared, but actively help usher it in. Already I have a few things that I would like to work on and upstream to rust-lang to make our integration nicer, and I assume that more will be uncovered as it actually gets used.\r\n\r\n> Anybody have any fun ideas?\r\n\r\nThere's still discussion to be had / documentation to be added around various Rust related decisions, such as:\r\n* Whether to use/require the `2015` or `2018` Editions.\r\n* A minimum required version of the language.\r\n* How failures in the Rust code are (expected to be) handled by the c++ code.\r\n\r\nAs well as higher level discussions around how far we might take the Rust integration/re-writing of certain parts of the code, and the complexities that could introduce in regards which contributors can/can't write/review Rust, or have more/less experience with the language compared to `C++` etc.\r\n\r\nPersonally, I'd like to think that we'll have some off-by-default Rust as part of the Bitcoin Core 0.20.0 release; and I think something like #16834 might be a good first approach. Regardless of approach, the idea of using Rust inside Bitcoin Core seems to resonate with some of the (still limited set) of other contributors I've discussed it with.\r\n\r\n#### Using `rustc` directly instead of Cargo\r\nThe initial Rust [integration PR](https://github.com/bitcoin/bitcoin/pull/15798) used [Cargo](https://doc.rust-lang.org/cargo) for managing compiling, dependencies etc. Since then, the Rust changes have been refactored to remove the `cbindgen` dependency and drop any usage of Cargo altogether, in favour of using [`rustc` directly](https://github.com/bitcoin/bitcoin/pull/16834/files#diff-480477e89f9b6ddafb30c4383dcdd705R371).\r\n\r\nSee also the recent [Security advisory for Cargo](https://blog.rust-lang.org/2019/09/30/Security-advisory-for-cargo.html).\r\n\r\n#### Related PRs\r\n[Fetch Headers over DNS](https://github.com/bitcoin/bitcoin/pull/16834)\r\n[Rust-based Backup over-REST block downloader](https://github.com/bitcoin/bitcoin/pull/16762)\r\n[Add Parallel P2P Client in Rust](https://github.com/bitcoin/bitcoin/pull/17376)\r\n\r\n\r\n#### Related Reading\r\n[Bootstrapping Rust using Guix](https://guix.gnu.org/blog/2018/bootstrapping-rust/)",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 1392286103,
              "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
              "name": "Needs Conceptual Review",
              "description": "",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 38,
          "closed_at": "2022-08-15T13:13:54Z",
          "created_at": "2019-10-09T21:01:30Z",
          "updated_at": "2022-08-15T13:13:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 317949982,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzE3OTQ5OTgy",
      "url": null,
      "actor": null,
      "commit_id": "33287e2a3f516e38d70537436c680c4b43be3587",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "icota",
        "id": 762502,
        "node_id": "MDQ6VXNlcjc2MjUwMg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/762502?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/icota",
        "html_url": "https://github.com/icota",
        "followers_url": "https://api.github.com/users/icota/followers",
        "following_url": "https://api.github.com/users/icota/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/icota/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/icota/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/icota/subscriptions",
        "organizations_url": "https://api.github.com/users/icota/orgs",
        "repos_url": "https://api.github.com/users/icota/repos",
        "events_url": "https://api.github.com/users/icota/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/icota/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#pullrequestreview-317949982",
      "submitted_at": "2019-11-16T03:22:48Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17376"
    },
    {
      "event": "comment_deleted",
      "id": 2805840861,
      "node_id": "MDE5OkNvbW1lbnREZWxldGVkRXZlbnQyODA1ODQwODYx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2805840861",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-18T00:58:43Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzQ5NWU0MTQ3NGNmYzFkYWU0MmZhYWY1N2M0MmRmODk2ZTkyYTA0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33495e41474cfc1dae42faaf57c42df896e92a04",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/33495e41474cfc1dae42faaf57c42df896e92a04",
      "tree": {
        "sha": "d2d82cfc22e6cbaca09a2348baf32c08fbc0302c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d2d82cfc22e6cbaca09a2348baf32c08fbc0302c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
          "sha": "69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b"
        }
      ],
      "message": "Adds a rust library to bitcoin to demonstrate linking and building rust code.\n\nThe demonstration library compiles a rust hello world example and auto-generates\na header which can be included in C++ code.\n\nCo-Authored-By: Jeremy Rubin <j@rubin.io>\nCo-Authored-By: Cory Fields <cory-nospam-@coryfields.com>\nVarious changes by: Matt Corallo <git@bluematt.me>",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "Jeremy Rubin",
        "email": "j@rubin.io",
        "date": "2019-03-29T21:48:20Z"
      },
      "sha": "33495e41474cfc1dae42faaf57c42df896e92a04"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZmY4ZjU5NjA3NTJkMzU3MzJiZGRiMzBkNDMxNDQyOWRkMWIyZTRm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ff8f5960752d35732bddb30d4314429dd1b2e4f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4ff8f5960752d35732bddb30d4314429dd1b2e4f",
      "tree": {
        "sha": "fb9d675cef879b3f0a9323d6626dc804199967b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb9d675cef879b3f0a9323d6626dc804199967b6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33495e41474cfc1dae42faaf57c42df896e92a04",
          "sha": "33495e41474cfc1dae42faaf57c42df896e92a04",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/33495e41474cfc1dae42faaf57c42df896e92a04"
        }
      ],
      "message": "build: show rust enabled in configure output",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-06-15T10:44:20Z"
      },
      "sha": "4ff8f5960752d35732bddb30d4314429dd1b2e4f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDI5NTMzMmZjYTM2OWE5YmE2MjM2MjFlMDk5NDQ3YWM0MTczMDUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c0295332fca369a9ba623621e099447ac4173050",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c0295332fca369a9ba623621e099447ac4173050",
      "tree": {
        "sha": "f9a495a6c2ea6c3aa6b78e171bafede3490b49b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f9a495a6c2ea6c3aa6b78e171bafede3490b49b9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ff8f5960752d35732bddb30d4314429dd1b2e4f",
          "sha": "4ff8f5960752d35732bddb30d4314429dd1b2e4f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4ff8f5960752d35732bddb30d4314429dd1b2e4f"
        }
      ],
      "message": "build: gitignore src/rusty_test",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-06-15T10:44:58Z"
      },
      "sha": "c0295332fca369a9ba623621e099447ac4173050"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMGQ5ZDAxODIwOTg3ZjgxYzhkMDljMzczNWY0MGMxMGFlZjYyZGMy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20d9d01820987f81c8d09c3735f40c10aef62dc2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/20d9d01820987f81c8d09c3735f40c10aef62dc2",
      "tree": {
        "sha": "c2535093ac785554c1078784d0b51ea2870b3aa4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c2535093ac785554c1078784d0b51ea2870b3aa4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c0295332fca369a9ba623621e099447ac4173050",
          "sha": "c0295332fca369a9ba623621e099447ac4173050",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c0295332fca369a9ba623621e099447ac4173050"
        }
      ],
      "message": "Add basic ffi bindings for Rust header download\n\nAlso, break circular dependency with a new helper lib courtesy of\nCory Fields <cory-nospam-@coryfields.com>.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2019-09-30T20:31:47Z"
      },
      "sha": "20d9d01820987f81c8d09c3735f40c10aef62dc2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MWJlZWYzYjQ1OWY1NDlmOGE2NWFhZmM4Mzk5NjlkMmJlMjVhMTA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81beef3b459f549f8a65aafc839969d2be25a107",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/81beef3b459f549f8a65aafc839969d2be25a107",
      "tree": {
        "sha": "4272326868df855f64dca4404fb6455e83a1a306",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4272326868df855f64dca4404fb6455e83a1a306"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/20d9d01820987f81c8d09c3735f40c10aef62dc2",
          "sha": "20d9d01820987f81c8d09c3735f40c10aef62dc2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/20d9d01820987f81c8d09c3735f40c10aef62dc2"
        }
      ],
      "message": "Add headers-over-DNS fetcher in Rust",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-10-10T21:58:42Z"
      },
      "sha": "81beef3b459f549f8a65aafc839969d2be25a107"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NmY4YjMxYmQ2MjQzOTA3ODU0MGUyYjM0YTY4MzA2ZmZmM2RiMWYw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76f8b31bd62439078540e2b34a68306fff3db1f0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/76f8b31bd62439078540e2b34a68306fff3db1f0",
      "tree": {
        "sha": "758e1690ffa28fc6e46a4070727316e741e7a0ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/758e1690ffa28fc6e46a4070727316e741e7a0ff"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81beef3b459f549f8a65aafc839969d2be25a107",
          "sha": "81beef3b459f549f8a65aafc839969d2be25a107",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/81beef3b459f549f8a65aafc839969d2be25a107"
        }
      ],
      "message": "Limit total memory allocated by all Rust code to 128MB",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-10-06T16:16:14Z"
      },
      "sha": "76f8b31bd62439078540e2b34a68306fff3db1f0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTEwMjMxZTQ1Yjc1M2EyMzk3M2VmOTIxYjE0MmE5ZjIyMmYwZGRk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c510231e45b753a23973ef921b142a9f222f0ddd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c510231e45b753a23973ef921b142a9f222f0ddd",
      "tree": {
        "sha": "9eee242438c79c405449e7d91544c84116c22833",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9eee242438c79c405449e7d91544c84116c22833"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76f8b31bd62439078540e2b34a68306fff3db1f0",
          "sha": "76f8b31bd62439078540e2b34a68306fff3db1f0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/76f8b31bd62439078540e2b34a68306fff3db1f0"
        }
      ],
      "message": "Enable rustc building + testing on xenial Tsan Travis job",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-10-10T22:28:27Z"
      },
      "sha": "c510231e45b753a23973ef921b142a9f222f0ddd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MzUzN2NhNGIwNGViZDA4YWFlMGYxZDc5MzUwNmUxOWY4MDIwODAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43537ca4b04ebd08aae0f1d793506e19f8020801",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/43537ca4b04ebd08aae0f1d793506e19f8020801",
      "tree": {
        "sha": "7e27984d72130b0eae1499232ea940709d77eacf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e27984d72130b0eae1499232ea940709d77eacf"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c510231e45b753a23973ef921b142a9f222f0ddd",
          "sha": "c510231e45b753a23973ef921b142a9f222f0ddd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c510231e45b753a23973ef921b142a9f222f0ddd"
        }
      ],
      "message": "Move CNode's FindNextBlocksToDownload state into its own strut\n\nThis starts the process of moving the last bits of\nvalidation-critical logic out of net_processing - the fallback\nlogic of which blocks to download is incredibly critical to\nvalidation and would likely also be used for any parallel block\nsync systems. Further, assumeutxo will require additional ability\nto select blocks for download, which is a validation-specific\nconcept and shouldn't really live in net_processing.\n\nThis moves a few responsibilities to the FindNextBlocksToDownload\ncallsite instead of passing in a CNodeId, but otherwise has no\nfunctional changes.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-08-21T20:25:04Z"
      },
      "sha": "43537ca4b04ebd08aae0f1d793506e19f8020801"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjBiYWFhMzdiZmRmNGFjZWQ3MTFiOTY2MjdkOGE4ZjIwZTFlNzRi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/720baaa37bfdf4aced711b96627d8a8f20e1e74b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/720baaa37bfdf4aced711b96627d8a8f20e1e74b",
      "tree": {
        "sha": "7bde610dc8c4d4496499180d8ddbe5f1272ae6ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bde610dc8c4d4496499180d8ddbe5f1272ae6ac"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43537ca4b04ebd08aae0f1d793506e19f8020801",
          "sha": "43537ca4b04ebd08aae0f1d793506e19f8020801",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/43537ca4b04ebd08aae0f1d793506e19f8020801"
        }
      ],
      "message": "Make FindNextBlocksToDownload a member func on BlockProviderState",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-08-23T21:28:57Z"
      },
      "sha": "720baaa37bfdf4aced711b96627d8a8f20e1e74b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNmZjZDA2OWZiM2QzYmM5YTk0NGFiZGY0NTRhZmE4ZmEyMzU4MjU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26fcd069fb3d3bc9a944abdf454afa8fa2358254",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/26fcd069fb3d3bc9a944abdf454afa8fa2358254",
      "tree": {
        "sha": "4f319677e2a9f5e95ea77957e187da105ec2a1df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f319677e2a9f5e95ea77957e187da105ec2a1df"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/720baaa37bfdf4aced711b96627d8a8f20e1e74b",
          "sha": "720baaa37bfdf4aced711b96627d8a8f20e1e74b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/720baaa37bfdf4aced711b96627d8a8f20e1e74b"
        }
      ],
      "message": "Make FindNextBlocksToDownload not use mapBlockIndex for in-progress\n\nThis makes it more general than just net_processing",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-08-23T22:00:36Z"
      },
      "sha": "26fcd069fb3d3bc9a944abdf454afa8fa2358254"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjBmZmY5MDlmNGRhZWQ1ODRhZDA1ZTMwYmUxZGYwZTJjNTMxODNj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f0fff909f4daed584ad05e30be1df0e2c53183c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0f0fff909f4daed584ad05e30be1df0e2c53183c",
      "tree": {
        "sha": "fd86ef34d91fabee58c92bf0aab6aa0684c7b82e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd86ef34d91fabee58c92bf0aab6aa0684c7b82e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26fcd069fb3d3bc9a944abdf454afa8fa2358254",
          "sha": "26fcd069fb3d3bc9a944abdf454afa8fa2358254",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/26fcd069fb3d3bc9a944abdf454afa8fa2358254"
        }
      ],
      "message": "Move BlockProvider to validation.{h,cpp} from net_processing",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-08-23T22:07:19Z"
      },
      "sha": "0f0fff909f4daed584ad05e30be1df0e2c53183c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDc4YTU3MTAxNGFhZDcxMmRjNTJmNzg2YTBlZDY0NGVjMGFjYTkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1478a571014aad712dc52f786a0ed644ec0aca93",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1478a571014aad712dc52f786a0ed644ec0aca93",
      "tree": {
        "sha": "fe1b42894b49e83dfe4f250e37ae448d3f917fe9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe1b42894b49e83dfe4f250e37ae448d3f917fe9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f0fff909f4daed584ad05e30be1df0e2c53183c",
          "sha": "0f0fff909f4daed584ad05e30be1df0e2c53183c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0f0fff909f4daed584ad05e30be1df0e2c53183c"
        }
      ],
      "message": "Add ffis to access BlockProviderState and hand blocks to C++",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:07Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-10-12T04:53:41Z"
      },
      "sha": "1478a571014aad712dc52f786a0ed644ec0aca93"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDA5MWU1MGI5ZDFmZmZmZjg2NWMyZjhlMWRkMmQ2NmRmZjkzMGY1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30091e50b9d1fffff865c2f8e1dd2d66dff930f5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/30091e50b9d1fffff865c2f8e1dd2d66dff930f5",
      "tree": {
        "sha": "a961700e17512c754ce499e72b4a1c6981fdbafb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a961700e17512c754ce499e72b4a1c6981fdbafb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1478a571014aad712dc52f786a0ed644ec0aca93",
          "sha": "1478a571014aad712dc52f786a0ed644ec0aca93",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1478a571014aad712dc52f786a0ed644ec0aca93"
        }
      ],
      "message": "Add a rust-based backup over-REST block downloader",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:08Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-10-18T19:30:52Z"
      },
      "sha": "30091e50b9d1fffff865c2f8e1dd2d66dff930f5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NjE0YjA5YzBhN2JiNWEwMTFhOTc3ZjYyYTYyMDUzMjI4NzU5MjRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8614b09c0a7bb5a011a977f62a6205322875924c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8614b09c0a7bb5a011a977f62a6205322875924c",
      "tree": {
        "sha": "5372551b3266801ba81526dc7e87f54f4b267ad9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5372551b3266801ba81526dc7e87f54f4b267ad9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30091e50b9d1fffff865c2f8e1dd2d66dff930f5",
          "sha": "30091e50b9d1fffff865c2f8e1dd2d66dff930f5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/30091e50b9d1fffff865c2f8e1dd2d66dff930f5"
        }
      ],
      "message": "Walk pindexBestHeader back to ChainActive().Tip() if it is invalid\n\nInstead of keeping pindexBestHeader set to the best header we've\never seen, reset it back to our validated tip if we find an ancestor\nof it turns out to be invalid. While the name is now a bit confusing,\nthis matches much better with how it is used in practice, see below.\nFurther, this opens up more use-cases for it in the future, namely\naggressively searching for new peers in case we have discovered\n(possibly via some covert channel) headers which we do not know to be\ninvalid, but which we cannot find block data for.\n\nPlaces pindexBestHeader is used:\n\n * Various GUI displays of the best header and getblockchaininfo[\"headers\"],\n   I don't think changing this is bad, and if anything this is less confusing\n   in the presence of an invalid block.\n * IsCurrentForFeeEstimation(): If anything I think ensuring pindexBestHeader\n   isn't some crazy invalid chain is better than the alternative, even in the\n   case where you are rejecting the current chain due to hardware error (since\n   hopefully in that case you won't get any new blocks anyway).\n * ConnectBlock assumevalid checks: We use pindexBestHeader to check that the\n   block we're connecting leads to something with nMinimumChainWork (preventing\n   a user-set assumevalid from having bogus work) and that the block we're\n   connecting leads to pindexBestHeader (I'm not too worried about this one -\n   it's nice to \"disable\" assumevalid if we have a long invalid headers chain,\n   but I don't see it as a critical protection).\n * BlockRequestAllowed() uses pindexBestHeader as its target to ensure the\n   requested block is within a month of the \"current chain\". I don't think this\n   is a meaningful difference, if we're rejecting the current tip we're\n   trivially fingerprintable anyway, and if the chain really does have a bunch\n   of invalid crap near the tip, using the best not-invalid header is likely a\n   better criteria.\n * ProcessGetBlockData uses pindexBestHeader as the \"current chain\" definition\n   of whether a block request is \"historical\" for the purpose of bandwidth\n   limiting. Similarly, I don't see why this is a meaningful change.\n * We use pindexBestHeader for requesting missing headers on receipt of a\n   headers/compact block message or block inv as well as for initial getheaders.\n   I think this is definitely wrong, using the best not-invalid header for such\n   requests is much better.\n * We use pindexBestHeader to define the \"current chain\" for deciding when\n   we're close to done with initial headers sync. I don't think this is a\n   meaningful change.\n * We use pindexBestHeader to decide if initial headers sync has timed out. If\n   we're rejecting the chain due to hardware error this may result in\n   additional cases where we ban a peer, but this is already true, so I think\n   its fine.",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:08Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-09-26T22:02:31Z"
      },
      "sha": "8614b09c0a7bb5a011a977f62a6205322875924c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzE4YzIxNjY0N2NkODU0NjVlNDRlYzE4MGZiMjg2MWJlMjAwOWEz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1718c216647cd85465e44ec180fb2861be2009a3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1718c216647cd85465e44ec180fb2861be2009a3",
      "tree": {
        "sha": "eaa4558479a504b309cc77a3920bf1844305477d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eaa4558479a504b309cc77a3920bf1844305477d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8614b09c0a7bb5a011a977f62a6205322875924c",
          "sha": "8614b09c0a7bb5a011a977f62a6205322875924c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8614b09c0a7bb5a011a977f62a6205322875924c"
        }
      ],
      "message": "(XXX: Use subtree merge instead): bump to latest upstream libsecp",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:08Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-01T20:10:33Z"
      },
      "sha": "1718c216647cd85465e44ec180fb2861be2009a3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmNlZDFjNGRkY2M4ZGY2NzEwYWQyNTI4MzI0ZTc4MGFhMDg3Nzdm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fced1c4ddcc8df6710ad2528324e780aa08777f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9fced1c4ddcc8df6710ad2528324e780aa08777f",
      "tree": {
        "sha": "9d268c932edb8ff4411013409088043cceb609fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d268c932edb8ff4411013409088043cceb609fc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1718c216647cd85465e44ec180fb2861be2009a3",
          "sha": "1718c216647cd85465e44ec180fb2861be2009a3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1718c216647cd85465e44ec180fb2861be2009a3"
        }
      ],
      "message": "(XXX: subtree me) add libc as a dep",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:08Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-10-07T19:12:45Z"
      },
      "sha": "9fced1c4ddcc8df6710ad2528324e780aa08777f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ODFmY2NjMzM4NTNhNWQ0ZmJmN2ZiMGRkNmUwYjg0NmExZGVjMDU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/681fccc33853a5d4fbf7fb0dd6e0b846a1dec054",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/681fccc33853a5d4fbf7fb0dd6e0b846a1dec054",
      "tree": {
        "sha": "99f2fbef83957a90207dce5d67068ba771adf51b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99f2fbef83957a90207dce5d67068ba771adf51b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fced1c4ddcc8df6710ad2528324e780aa08777f",
          "sha": "9fced1c4ddcc8df6710ad2528324e780aa08777f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9fced1c4ddcc8df6710ad2528324e780aa08777f"
        }
      ],
      "message": "(XXX: subtree me) Add rust-bitcoin and deps",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:08Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-10-17T21:55:28Z"
      },
      "sha": "681fccc33853a5d4fbf7fb0dd6e0b846a1dec054"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjgxZjY0ZWE0YzUyMDUyNGQ5M2I4N2FhYTFkMmMyMzlmNjUyNzlj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b81f64ea4c520524d93b87aaa1d2c239f65279c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8b81f64ea4c520524d93b87aaa1d2c239f65279c",
      "tree": {
        "sha": "4465ab1f8ea424fe4613df7a6f680e6ed7dde155",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4465ab1f8ea424fe4613df7a6f680e6ed7dde155"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/681fccc33853a5d4fbf7fb0dd6e0b846a1dec054",
          "sha": "681fccc33853a5d4fbf7fb0dd6e0b846a1dec054",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/681fccc33853a5d4fbf7fb0dd6e0b846a1dec054"
        }
      ],
      "message": "Build the new rusty deps into the rusty lib\n\nNote that we have to use LTO to work around the missing der_lax\nsymbol in rust-secp256k1.\nSee https://github.com/rust-bitcoin/rust-secp256k1/issues/168",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:08Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-10-18T19:33:05Z"
      },
      "sha": "8b81f64ea4c520524d93b87aaa1d2c239f65279c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODMyNTIzMjUzODk1OTNlNGZiN2I4NjQ5NTI2ZGI3M2FkMzk4YmFi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/983252325389593e4fb7b8649526db73ad398bab",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/983252325389593e4fb7b8649526db73ad398bab",
      "tree": {
        "sha": "bb49e53f49a857acc1e9635a1d2c16e6ddaa9a83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb49e53f49a857acc1e9635a1d2c16e6ddaa9a83"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b81f64ea4c520524d93b87aaa1d2c239f65279c",
          "sha": "8b81f64ea4c520524d93b87aaa1d2c239f65279c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8b81f64ea4c520524d93b87aaa1d2c239f65279c"
        }
      ],
      "message": "Add additional FFIs from rust to support a full-fledged P2P client",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:08Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-09-24T06:34:48Z"
      },
      "sha": "983252325389593e4fb7b8649526db73ad398bab"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODUwZmZiYTg4MDhmMjA4OGNjMmI4ZTY1YTk4ZDE3MzVmMzk0ZjJi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e850ffba8808f2088cc2b8e65a98d1735f394f2b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e850ffba8808f2088cc2b8e65a98d1735f394f2b",
      "tree": {
        "sha": "955fabed0342760149a161814f74ff1d05d883e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/955fabed0342760149a161814f74ff1d05d883e2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/983252325389593e4fb7b8649526db73ad398bab",
          "sha": "983252325389593e4fb7b8649526db73ad398bab",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/983252325389593e4fb7b8649526db73ad398bab"
        }
      ],
      "message": "Add a FastRandomContext wrapper in the Rust FFI bridge",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:08Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-10-28T21:32:32Z"
      },
      "sha": "e850ffba8808f2088cc2b8e65a98d1735f394f2b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkM2NhMDlhZmJjMzhkN2Y3Mzg2NmRhMzM5NDg2NTFhYzJjNDBmZDU4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3ca09afbc38d7f73866da33948651ac2c40fd58",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d3ca09afbc38d7f73866da33948651ac2c40fd58",
      "tree": {
        "sha": "bd9670314072b3caa63dec64e83625c94abfc7d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd9670314072b3caa63dec64e83625c94abfc7d1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e850ffba8808f2088cc2b8e65a98d1735f394f2b",
          "sha": "e850ffba8808f2088cc2b8e65a98d1735f394f2b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e850ffba8808f2088cc2b8e65a98d1735f394f2b"
        }
      ],
      "message": "Add FFIs to Rust Bridge to check outbound connection nonces",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:08Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-10-28T21:09:11Z"
      },
      "sha": "d3ca09afbc38d7f73866da33948651ac2c40fd58"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZjRjYWIzZTRjZGNmMGJjNjE0ZTAzNTI1N2E3ZDM0N2QzNDBmZTI5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f4cab3e4cdcf0bc614e035257a7d347d340fe29",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4f4cab3e4cdcf0bc614e035257a7d347d340fe29",
      "tree": {
        "sha": "061aafe98564c8aa61746aebc848fa807c546096",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/061aafe98564c8aa61746aebc848fa807c546096"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d3ca09afbc38d7f73866da33948651ac2c40fd58",
          "sha": "d3ca09afbc38d7f73866da33948651ac2c40fd58",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d3ca09afbc38d7f73866da33948651ac2c40fd58"
        }
      ],
      "message": "Add P2P Client",
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-21T22:24:08Z"
      },
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-09-30T21:07:33Z"
      },
      "sha": "4f4cab3e4cdcf0bc614e035257a7d347d340fe29"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 2821384229,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50MjgyMTM4NDIyOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/2821384229",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2019-11-21T22:25:09Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "icota",
        "id": 762502,
        "node_id": "MDQ6VXNlcjc2MjUwMg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/762502?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/icota",
        "html_url": "https://github.com/icota",
        "followers_url": "https://api.github.com/users/icota/followers",
        "following_url": "https://api.github.com/users/icota/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/icota/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/icota/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/icota/subscriptions",
        "organizations_url": "https://api.github.com/users/icota/orgs",
        "repos_url": "https://api.github.com/users/icota/repos",
        "events_url": "https://api.github.com/users/icota/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/icota/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-02-19T15:51:15Z",
      "updated_at": "2020-02-19T15:51:15Z",
      "source": {
        "issue": {
          "id": 567647462,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc3MjMzOTQ4",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18179",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18179/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18179/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18179/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18179",
          "number": 18179,
          "state": "closed",
          "state_reason": null,
          "title": "Add Lightning Network support",
          "body": "Configure with `--enable-rust`. Here's how to use:\r\n```\r\n$ ./bitcoin-cli help\r\n...\r\n == Lightning ==\r\nlnclosechannel \"channel_id\"\r\nlnconnect \"node\"\r\nlncreateinvoice \"description\" amount\r\nlnfundchannel \"node_id\" amount\r\nlngetchannels\r\nlngetpeers\r\nlnpayinvoice \"invoice\"\r\n...\r\n```\r\nConnect to ACINQ [testnet node](https://1ml.com/testnet/node/03933884aaf1d6b108397e5efe5c86bcf2d8ca8d2f700eda99db9214fc2712b134):\r\n```\r\n$ ./bitcoin-cli  lnconnect 03933884aaf1d6b108397e5efe5c86bcf2d8ca8d2f700eda99db9214fc2712b134@34.250.234.192:9735\r\n```\r\n\r\nSee that we are connected:\r\n```\r\n$ ./bitcoin-cli lngetpeers \r\n[ \r\n  { \r\n    \"id\": \"03933884aaf1d6b108397e5efe5c86bcf2d8ca8d2f700eda99db9214fc2712b134\"\r\n  } \r\n]\r\n```\r\n\r\nCheck if we have enough in our wallet:\r\n```\r\n$ ./bitcoin-cli getbalances \r\n{ \r\n  \"mine\": { \r\n    \"trusted\": 0.01000000, \r\n    \"untrusted_pending\": 0.00000000, \r\n    \"immature\": 0.00000000 \r\n  } \r\n}\r\n```\r\n\r\nFund a 0.001 tBTC channel with our peer:\r\n```\r\n$ ./bitcoin-cli lnfundchannel 03933884aaf1d6b108397e5efe5c86bcf2d8ca8d2f700eda99db9214fc2712b134 0.001\r\n\r\n$ ./bitcoin-cli lngetchannels \r\n[ \r\n  { \r\n    \"id\": \"09e43999ea4fc33c0c8aa134727ea17ac1e2ac7e9356b1434fed9bfc8f091e1f\", \r\n    \"shortid\": 0, \r\n    \"capacity\": 100000, \r\n    \"status\": \"unconfirmed\" \r\n  } \r\n]\r\n```\r\nWait a couple of blocks and try again:\r\n\r\n```\r\n$ ./bitcoin-cli lngetchannels \r\n[ \r\n  { \r\n    \"id\": \"09e43999ea4fc33c0c8aa134727ea17ac1e2ac7e9356b1434fed9bfc8f091e1f\", \r\n    \"shortid\": 1831367457947189249, \r\n    \"capacity\": 100000, \r\n    \"status\": \"confirmed\" \r\n  } \r\n]\r\n\r\n$ ./bitcoin-cli getbalances \r\n{ \r\n  \"mine\": { \r\n    \"trusted\": 0.00896940, \r\n    \"untrusted_pending\": 0.00000000, \r\n    \"immature\": 0.00000000 \r\n  } \r\n}\r\n```\r\n\r\nOur channel is operational! Immediately go and purchase some beers on [yalls.org](https://testnet.yalls.org/reactions/):\r\n\r\n```\r\n$ ./bitcoin-cli lnpayinvoice lntb1500n1p0yxfm6pp5098ss9punvma2xusvdez40dnrnrr7zlf2hpqm5kvnc4g9fjk7pjqdp6g9jxggrjv4skxarfdahzpuyl3kazqar0ypuk7atjyp3k7mrvv43hg6t0dccqzpgxqr23ssp5kjpejv09t6yweaf02x7ywzpdr3z8utpnyw67x9lcvfuf6f6kwdns9qy9qsqx323heyl6e54cmrxn9gnuqsef7juacsl7w7cngvrvg2vft6qtll5f7c07vx004n62uwklnhfwd62tnjzw30gt5ucsz32yz3j6uanvhqqqgpkru\r\n```\r\n\r\nClose the channel:\r\n```\r\n$ ./bitcoin-cli lnclosechannel 09e43999ea4fc33c0c8aa134727ea17ac1e2ac7e9356b1434fed9bfc8f091e1f\r\n```\r\nHot on the heels of [rust-lightning](https://github.com/rust-bitcoin/rust-lightning) 0.0.10 release and the [LDK](https://medium.com/@squarecrypto/what-were-building-lightning-development-kit-1ed58b0cab06) announcement I present you CoreLightning.\r\n\r\nThis PR is based on https://github.com/bitcoin/bitcoin/pull/17376 and it adds 4 more crates to the mix:\r\n`rust-lightning`, `rust-lightning-invoice`, `rust-bech32-bitcoin` and `num-traits`. Peers and channels data is in `lightning`. Code will be impossible to review on GitHub due to submodule mess but for now this is a one-commit PR anyway so take a look there.\r\n\r\nEven though this is nowhere near production ready I'm excited to see it work. Credit to @TheBlueMatt and the rust-bitcoin/lightning team. Truly awesome work.\r\n\r\nFor the sake of argument let's say everyone agrees that Lightning is a good thing and helpes Bitcoin scale. In that case I see built-in CoreLightning as useful in two ways:\r\n\r\n- Makes it easy for the Core install-base to adopt Lightning in one fell swoop. People will be more likely to use and build on top of Lightning if it's one upgrade away. You can use your existing wallet funds. No separate daemons or needless transactions. Institutional users such as exchanges would have no excuse not leverage Lightning.\r\n- I feel that Core could be more of a universal client in the future. It's somewhat industrial nowadays but I'd like 2021 to be the year of Core on the Phone :sunglasses:. I wrote about this a bit [here](https://icota.github.io/).\r\n\r\nCode is not very robust, it needs a lot of love in regards to making it more \"rusty\" and figuring how to better manage the C++/Rust FFI boundary. Before I invest any more time in this I'd like to get some guidance and concept (N)ACKs.",
          "user": {
            "login": "icota",
            "id": 762502,
            "node_id": "MDQ6VXNlcjc2MjUwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/762502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/icota",
            "html_url": "https://github.com/icota",
            "followers_url": "https://api.github.com/users/icota/followers",
            "following_url": "https://api.github.com/users/icota/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/icota/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/icota/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/icota/subscriptions",
            "organizations_url": "https://api.github.com/users/icota/orgs",
            "repos_url": "https://api.github.com/users/icota/repos",
            "events_url": "https://api.github.com/users/icota/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/icota/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18179",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18179",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18179.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18179.patch"
          },
          "closed_at": "2020-02-20T19:06:13Z",
          "created_at": "2020-02-19T15:51:15Z",
          "updated_at": "2022-02-15T10:41:30Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 595413976,
      "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTQxMzk3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/595413976",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T19:48:18Z",
      "updated_at": "2020-03-05T19:48:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "Closing due to lack of interest.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#issuecomment-595413976",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/17376"
    },
    {
      "event": "closed",
      "id": 3102657148,
      "node_id": "MDExOkNsb3NlZEV2ZW50MzEwMjY1NzE0OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3102657148",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-03-05T19:48:19Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T10:50:02Z",
      "updated_at": "2020-05-16T10:50:02Z",
      "source": {
        "issue": {
          "id": 619442451,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDE4OTUwNzA0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18988",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18988/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18988/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18988/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18988",
          "number": 18988,
          "state": "closed",
          "state_reason": null,
          "title": "RFC: Introducing AltNet, a pluggable framework for alternative transports",
          "body": "**As of 14/03/2022 (chain tip hash : 00000000000000000000628002621832be9281faf72c394e66a8bc8446f80c75), this project is under implementation in separate process relying on the multiprocess framework. See https://github.com/chaincodelabs/libmultiprocess/issues/56 for more information on current state.**\r\n\r\nThis PR proposes to introduce a new subsystem aiming towards providing a generic framework for integrating alternative transport communication channels inside Bitcoin Core. This PR is a functional proof-of-concept using LN transport protocol as a new link layer for header fetching. See https://github.com/bitcoin/bitcoin/issues/18989 for high-level discussion and proposal merits.\r\n\r\n## The Design \r\n\r\nPrevious [work](https://github.com/bitcoin/bitcoin/pull/17376) has been attempted to increase network security and robustness by increasing communication redundancy. While being optional and fault-tolerant, these attempt don't scale well to integrate a wide-range of alternatives such as [domain-fronting](https://www.bamsoftware.com/papers/fronting/), [orbital communications](https://github.com/Blockstream/satellite), [amateur radio](https://en.wikipedia.org/wiki/DASH7), [Tor pluggable transports](https://snowflake.torproject.org/), unlicensed UHF, Bluetooth, [I2P](https://geti2p.net/en/), Lightning[ Noise transport](http://noiseprotocol.org/), ... Each of these transports has its own availability, latency, don't bind to the Berkeley sockets model, are unidirectional, require custom peer discovery, are not suited for block traffic, ...\r\n\r\nThis proposal tries to overcome these issues by laying out a generic \"driver\" framework with its own new processing stack, thereby encapsulating per-transport oddities. It introduces:\r\n\r\n* Per-transport capabilities (`TransportCapabilities`). Originally declared by each driver, they abstract driver specifities to general flags, like directionality, protocol messages scope. They could be extended with further attributes, like max bandwidth for adjusted packing or \"privacy\"/\"trustness\" niceness of the link.\r\n* Abstract driver model (`CDriver`). Basically, it dissociate driver warmup, message preprocessing, sending and reception. Ideally you would want to load them dynamically.\r\n* \"Anycast\" header-fetching (`AltLogicValidation::BlockHeaderAnomalie`). After notification from the [watchdog module](https://github.com/bitcoin/bitcoin/pull/18987), it sends a `GETHEADERS` message to any peers supporting bidirectionality and headers processing.\r\n* Alternative processing stack (`AltLogicValidation`). Relying on its own threads, it manages drivers and may take action based on static logical capabilites instead of peer state, reducing likelihood of bugs. In the future, one could implement a more robust headers-syncing strategy like reverse-header or compressed headers. It may also leverage a [future asynchronous validation interface](https://github.com/bitcoin/bitcoin/pull/18963).\r\n\r\nThere are many advantages of this kind of design --, it is easy to integrate new drivers binding to an abstract class, it is easy to reason about due to logical capabilities and at the same time provides granular tuning due to the fine-integration with rpc. Peer discovery and policy or bandwidth/memory DoS-protection are all possible driver add-ons as well. One could envision an rpc like `sendemergencytx`, broadcasting a transaction on any transport protocol available, like a [LN's justice transaction](https://github.com/lightningnetwork/lightning-rfc/blob/master/05-onchain.md#revoked-transaction-close-handling) after detection of being eclipsed.\r\n\r\nThis module could be made entirely optional at compile-time with `--enable-altnet` even if such integration with the build system hasn't been made.\r\n\r\nObviously this is an exploratory PoC, I don't expect code here to be merged. Beyond worthiness of doing this in Rust there are a lot of open questions, including the threading/memory model, interface with existing codebase, build system, resources consumption and fault-tolerance. As next steps, I would favor building on the multiprocess work and hosting this new network stack in its own to avoid any bug contamination from introducing complex driver. I encourage those with opinions on the higher level motivation and design discussion to leave their ideas on the linked issue.\r\n\r\nHigh-level design:\r\n\r\n\r\n              ___________            ______________________\r\n             |           |          |                      |\r\n             | CWatchdog |----------|  AltLogicValidation  |\r\n             |___________|          |______________________|\r\n                                               |\r\n                                         ______|______\r\n                                        |             |\r\n                                        |  CAltstack  |                                                         \r\n                                        |_____________| \r\n                                               |\r\n                                           ____|____\r\n                                          |         |\r\n                                          | CDriver |\r\n                                          |_________|\r\n                                               |\r\n                                       ________|__________\r\n                                      |                  |\r\n                                      | ClightningDriver |\r\n                                      |__________________|\r\n                                      \r\n                                                   \r\n\r\n## The Demo\r\n\r\nThis PoC features a header-fetching round-trip, leveraging LN connection protocol. Each LN node connects to its peers through an encrypted and authenticated channel. Since your LN peer must have chain access, you could leverage this privileged link to create a redundant chain access.\r\n\r\nUsing C-lightning [custom LN message support](https://github.com/ElementsProject/lightning/pull/3315) and [plugin API](https://github.com/ElementsProject/lightning/blob/master/doc/PLUGINS.md), we could embed directly inside `HEADERS`/`GETHEADERS` and realize a round-trip between 2 disconnected bitcoin nodes through their respective C-lightning nodes.\r\n\r\nFor this to work, you need to compile and run 2 C-lightning nodes,  each with its own data directory and launched with this [custom bridge plugin](https://github.com/ariard/bridge-layer). Once those LN nodes are running, activate bridges by `lightning-cli alice_on` and `lightning-cli bob_on`. The plugin doesn't seem to accept CLI argument so I had to hardcode some node addresses.\r\n\r\nThen compile 2 bitcoin nodes with this patchset. For one of them you must change the hardcoded port in C-lightning driver and deactivate the watchdog logic. Also, it would be best if you changed `SCAN_INTERVAL` to something reasonable, for instance 1 min.\r\n\r\nHigh-level setup:\r\n\r\n\r\n                                                 -->\r\n\r\n                    __________          LN_msg(`GETHEADERS`)                   ________\r\n                   |          |                                               |        |\r\n                   | CL-Alice |-----------------------------------------------| CL-Bob |\r\n                   |__________|                                               |________|           \r\n                        |               LN_msg(`HEADERS`)                         |\r\n                    ____|_____                                                 ___|_____\r\n                   |          |                 <--                           |         |\r\n                   |  bridge  |                                               | bridge  |\r\n                   |__________|                                               |_________|\r\n                        |                                                         |\r\n                    ____|_____                                                 ___|____\r\n                   |          |                                               |        |\r\n                   | BC-Alice |                                               | BC-Bob |\r\n                   |__________|                                               |________|\r\n\r\n                      HEIGHT                                                   HEIGH + 1\r\n\r\n\r\n\r\nRunning both nodes, they should automatically connect to the bridge, and after anomaly detection realize a header exchange, if one of them is at least one block forward (run `generatetoaddress 1 $ADDR`).\r\n\r\nOtherwise you may observe past logs:\r\n\r\nAlice:\r\n```\r\nÊ0-05-16T00:55:11Z Boostrapping Altstack\r\n2020-05-16T00:55:11Z init message: Done loading\r\n2020-05-16T00:55:11Z msghand thread start\r\n2020-05-16T00:55:11Z drivers-warmup thread start\r\n2020-05-16T00:55:11Z addcon thread start\r\n2020-05-16T00:55:11Z Registered driver with 0\r\n2020-05-16T00:55:11Z net thread start\r\n2020-05-16T00:55:11Z altstack-processing thread start\r\n2020-05-16T00:55:11Z Clightning - Warmup\r\n2020-05-16T00:55:11Z dnsseed thread start\r\n2020-05-16T00:55:11Z altstack-handle thread start\r\n2020-05-16T00:55:11Z 0 addresses found from DNS seeds\r\n2020-05-16T00:55:11Z dnsseed thread exit\r\n2020-05-16T00:55:11Z Clightning - Bridge connection\r\n2020-05-16T00:55:11Z Registering node_id 0 with driver_id 0\r\n2020-05-16T00:55:11Z drivers-warmup thread exit\r\n2020-05-16T00:55:16Z Block header anomalie detected - notifying subscribers\r\n2020-05-16T00:55:16Z Block header anomalie detected - Anycasting header fetching from 0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\r\n2020-05-16T00:55:16Z Clightning - Preprocessing getheader\r\n2020-05-16T00:55:16Z Cligthning - Bridge send success 71\r\n2020-05-16T00:55:19Z Cligtning - Bridge receive success\r\n2020-05-16T00:55:19Z Receive HEADERS from 0\r\n2020-05-16T00:55:19Z Receiver header 65084efeaffe9929de0a0bb747cf48ac7f9b4edb214b2d1ad2ea468977be8e1e vs tip 0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\r\n```\r\n\r\nBob:\r\n``` \r\n2020-05-16T00:55:09Z Boostrapping Altstack\r\n2020-05-16T00:55:09Z addcon thread start\r\n2020-05-16T00:55:09Z opencon thread start\r\n2020-05-16T00:55:09Z msghand thread start\r\n2020-05-16T00:55:09Z drivers-warmup thread start\r\n2020-05-16T00:55:09Z Registered driver with 0\r\n2020-05-16T00:55:09Z Clightning - Warmup\r\n2020-05-16T00:55:09Z init message: Done loading\r\n2020-05-16T00:55:09Z dnsseed thread exit\r\n2020-05-16T00:55:09Z altstack-processing thread start\r\n2020-05-16T00:55:09Z altstack-handle thread start\r\n2020-05-16T00:55:09Z Clightning - Bridge connection\r\n2020-05-16T00:55:09Z Registering node_id 0 with driver_id 0\r\n2020-05-16T00:55:09Z drivers-warmup thread exit\r\n2020-05-16T00:55:10Z Leaving InitialBlockDownload (latching to false)\r\n2020-05-16T00:55:17Z Cligtning - Bridge receive success\r\n2020-05-16T00:55:17Z Receive GETHEADERS from 0\r\n2020-05-16T00:55:17Z Fetch header starting from 0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206, tip 65084efeaffe9929de0a0bb747cf48ac7f9b4edb214b2d1ad2ea468977be8e1e\r\n2020-05-16T00:55:17Z Sending back 1 headers\r\n2020-05-16T00:55:17Z Clightning - Preprocessing header\r\n2020-05-16T00:55:17Z Cligthning - Bridge send success 84\r\n2020-05-16T00:56:10Z Adding fixed seed nodes as DNS doesn't seem to be available.\r\n```",
          "user": {
            "login": "ariard",
            "id": 23310655,
            "node_id": "MDQ6VXNlcjIzMzEwNjU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ariard",
            "html_url": "https://github.com/ariard",
            "followers_url": "https://api.github.com/users/ariard/followers",
            "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
            "organizations_url": "https://api.github.com/users/ariard/orgs",
            "repos_url": "https://api.github.com/users/ariard/repos",
            "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ariard/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "comments": 31,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18988",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18988",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18988.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18988.patch"
          },
          "closed_at": "2022-05-12T13:30:04Z",
          "created_at": "2020-05-16T10:50:02Z",
          "updated_at": "2023-05-12T10:01:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-05-16T10:50:09Z",
      "updated_at": "2020-05-16T10:50:09Z",
      "source": {
        "issue": {
          "id": 619442481,
          "node_id": "MDU6SXNzdWU2MTk0NDI0ODE=",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18989",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18989/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18989/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18989/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/18989",
          "number": 18989,
          "state": "closed",
          "state_reason": "completed",
          "title": "Towards alternative transports first-class support",
          "body": "**See first #18987 and #18988 for code PoCs**\r\n\r\nThe current networking approach suffers from a wide range of issues with regards to [transaction origin inference](https://github.com/bitcoin/bips/blob/master/bip-0156.mediawiki), counter-measures against [key infrastructure attackers](https://www.comp.nus.edu.sg/~kangms/papers/erebus-attack.pdf), and [harder security assumptions](https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002369.html) of higher-level protocols. Being heavily optimized and at same time trying to solve diverse goals like reasonable network security , tx-relay privacy, hindering block-topology, peer diversity, ... a functional networking stack is likely unable to address aforementioned issues without [compromising](https://github.com/bitcoin/bitcoin/pull/17332) its [robustness](https://bitcoin.stackexchange.com/questions/81503/what-is-the-tradeoff-between-privacy-and-implementation-complexity-of-dandelion/81504#81504).\r\n\r\nIdeally you want to address scenarios with higher security requirements like an exchange receiving headers-over-DNS to detect tip pinning. A conscientious user always relying on tx-over-radio for each of its coins sends. You can also think about a LN hub willingly to use a HTTPS connection to a block explorer for emergency tx broadcast or an SPV wallet receiving filters-headers-over-obfs4 to defeat local Internet censorship. Of course, you can still rely on external modules or project, but better integrating them with Core to ease deployment and combine them for increased benefits.\r\n\r\nCombining may make sense with regards to:\r\n* Solving _first-hop transaction relay_ by easing identityless broadcast as a best-practice through wireless communications or anonymous network without relying on any specific one.\r\n* Increasing _block mesh distribution_, if you have few power users receiving block from space or long-range radios and beaming them through any link to geographical-near other full-nodes may considerably increase network security by decreasing the chance of network infrastructure disruption.\r\n* Reactive behavior for LN node, you may detect an abnormal block delay by receiving headers-over-LN and use any link available to close your channels\r\n\r\nThere are more variables at play like _user capacities_, _disruption length_, _user block-time sensitiveness_, _disruption amplitude_, _information leakage_. Building a comprehensive model that cover everything is hard, even if there have been few [attempts](https://stanford2017.scalingbitcoin.org/files/Day2/Weak-Signal-Radio-Communications-for-Bitcoin-Network-Resilience.pdf). There are trade-offs, urgency filter-headers fetching from centralized service may prevent your node from being eclipsed at the cost of privacy.\r\n\r\nKeeping these in mind, introducing an alternative networking stack as PoC'ed in [AltNet](https://github.com/bitcoin/bitcoin/pull/18988) may be a long-term solution. While designing such stack, flexibility and modularity should be end-goals while minding per-user requirement, technical capabilities and unknown real-world topology. A generic \"drivers\" framework,  abstracting all of the link oddities seems like an interesting direction to explore. Use of these drivers should never be the default to avoid massive topology modification and be well-documented to let user pick up what suits his/her needs. If we have a robust, fail-safe higher half in the codebase, driver code may be in another repo within the bitcoin-core.org to avoid painful review process.\r\n\r\nSome may object that we can rely on Tor to further our goals with regards to anonymity and network censorship-resistant. However, a) Tor DoS is [an issue](https://giia.cs.georgetown.edu/~tavish/pointbreak-usenix-sec2019.pdf) b) bridge dissemination may not suit bitcoin security assumptions c) Tor doesn't seem to explore wireless communications d) we may still reuse pluggable transports like Snowflake or meek without being forced to pas through monitorable exit nodes.\r\n\r\nIf this proposal is evaluated as worthy for the project, there are a lot of design issues to address, like Rust vs CPP, architecture integration (new threads vs new process), the fanciness of new fetching logic, how to avoid a review iceberg like https://github.com/bitcoin/bitcoin/pull/17376 as a first step but instead privileging incremental steps, how driver devs may contribute to the project without understanding of other components allowing them to experiment with the protocol's unique flow semantic...\r\n\r\nSuch subject are hard to encompass so it's likely there are a lot of aspects not raised here. I'm eager to hear people feedback.",
          "user": {
            "login": "ariard",
            "id": 23310655,
            "node_id": "MDQ6VXNlcjIzMzEwNjU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ariard",
            "html_url": "https://github.com/ariard",
            "followers_url": "https://api.github.com/users/ariard/followers",
            "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
            "organizations_url": "https://api.github.com/users/ariard/orgs",
            "repos_url": "https://api.github.com/users/ariard/repos",
            "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ariard/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "closed_at": "2022-08-03T19:08:45Z",
          "created_at": "2020-05-16T10:50:09Z",
          "updated_at": "2022-08-03T19:08:46Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "locked",
      "id": 6073861904,
      "node_id": "LOE_lADOABII584e2TUAzwAAAAFqB8cQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073861904",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:41:44Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347073757",
      "pull_request_review_id": 317949982,
      "id": 347073757,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NzA3Mzc1Nw==",
      "diff_hunk": "@@ -359,6 +370,51 @@ libbitcoin_wallet_tool_a_SOURCES = \\\n   wallet/wallettool.cpp \\\n   $(BITCOIN_CORE_H)\n \n+# rustc only reqires the main .rs file as input, but rustc must also be invoked\n+# if any of the other files change. List the main file first, then targets can\n+# depend on $(LIBBITCOIN_RUSTY_SRCS), but only build the first source file ($<).\n+LIBBITCOIN_RUSTY_SRCS= \\\n+  rusty/src/lib.rs \\\n+  rusty/src/bridge.rs \\\n+  rusty/src/dns_headers.rs \\\n+  rusty/src/rest_downloader.rs \\\n+  rusty/src/p2p_addrs.rs rusty/src/p2p_client.rs \\\n+  rusty/src/p2p_socket_handler.rs\n+\n+LIBBITCOIN_RUSTY_TEST_SRCS= \\\n+  rusty/src/test_bridge.rs\n+\n+rusty/liblibc.rlib: rusty/libc/src/lib.rs $(wildcard rusty/libc/src/*.rs)\n+\t$(RUSTC) --crate-name libc $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbech32.rlib: rusty/rust-bech32/src/lib.rs $(wildcard rusty/rust-bech32/src/*.rs)\n+\t$(RUSTC) --crate-name bech32 $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbitcoin_hashes.rlib: rusty/bitcoin_hashes/src/lib.rs $(wildcard rusty/bitcoin_hashes/src/*.rs)\n+\t$(RUSTC) --crate-name bitcoin_hashes $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libsecp256k1.rlib: rusty/rust-secp256k1/src/lib.rs $(wildcard rusty/rust-secp256k1/src/*.rs) $(LIBSECP256K1)\n+\t$(RUSTC) --crate-name secp256k1 $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --cfg 'feature=\"std\"' --cfg 'feature=\"dont_replace_c_symbols\"' --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbitcoin.rlib: rusty/libbech32.rlib rusty/libbitcoin_hashes.rlib rusty/libsecp256k1.rlib\n+rusty/libbitcoin.rlib: rusty/rust-bitcoin/src/lib.rs $(wildcard rusty/rust-bitcoin/src/*.rs) $(wildcard rusty/rust-bitcoin/src/*/*.rs) $(wildcard rusty/rust-bitcoin/src/*/*/*.rs)\n+\t$(RUSTC) --crate-name bitcoin $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) --extern bech32=$(@D)/libbech32.rlib --extern bitcoin_hashes=$(@D)/libbitcoin_hashes.rlib --extern secp256k1=$(@D)/libsecp256k1.rlib && \\\n+\ttouch $@\n+\n+# We force overflow checks on so that any integer overflows result in a panic\n+# instead of, eg, attempting to alloc 4GB of memory (though we will catch such\n+# an alloc and refuse it, generating a panic instead).\n+# Also force panics to unwind (instead of calling abort()) as we want to catch\n+# panics in the Rust threads and simply close the thread, instead of bringing\n+# down the rest of Bitcoin Core.\n+$(LIBBITCOIN_RUSTY): $(LIBBITCOIN_RUSTY_SRCS) rusty/libbitcoin.rlib rusty/liblibc.rlib\n+\t$(RUSTC) --crate-name rusty $< --target=$(RUST_TARGET) --crate-type=staticlib --emit=link -g -O -C lto=on -C overflow-checks=on -C panic=unwind --out-dir $(@D) -L dependency=$(@D) --extern libc=$(@D)/liblibc.rlib --extern bitcoin_hashes=$(@D)/libbitcoin_hashes.rlib --extern bitcoin=$(@D)/libbitcoin.rlib",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 85,
      "commit_id": "4f4cab3e4cdcf0bc614e035257a7d347d340fe29",
      "original_commit_id": "33287e2a3f516e38d70537436c680c4b43be3587",
      "in_reply_to_id": null,
      "user": {
        "login": "icota",
        "id": 762502,
        "node_id": "MDQ6VXNlcjc2MjUwMg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/762502?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/icota",
        "html_url": "https://github.com/icota",
        "followers_url": "https://api.github.com/users/icota/followers",
        "following_url": "https://api.github.com/users/icota/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/icota/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/icota/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/icota/subscriptions",
        "organizations_url": "https://api.github.com/users/icota/orgs",
        "repos_url": "https://api.github.com/users/icota/repos",
        "events_url": "https://api.github.com/users/icota/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/icota/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`-L rusty` pointing to directory should resolve rlibs automatically instead of using all these explicit `--extern`s?",
      "created_at": "2019-11-16T03:22:28Z",
      "updated_at": "2019-11-21T22:25:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#discussion_r347073757",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347073757"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17376"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 415,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347158355",
      "pull_request_review_id": 318043022,
      "id": 347158355,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NzE1ODM1NQ==",
      "diff_hunk": "@@ -359,6 +370,51 @@ libbitcoin_wallet_tool_a_SOURCES = \\\n   wallet/wallettool.cpp \\\n   $(BITCOIN_CORE_H)\n \n+# rustc only reqires the main .rs file as input, but rustc must also be invoked\n+# if any of the other files change. List the main file first, then targets can\n+# depend on $(LIBBITCOIN_RUSTY_SRCS), but only build the first source file ($<).\n+LIBBITCOIN_RUSTY_SRCS= \\\n+  rusty/src/lib.rs \\\n+  rusty/src/bridge.rs \\\n+  rusty/src/dns_headers.rs \\\n+  rusty/src/rest_downloader.rs \\\n+  rusty/src/p2p_addrs.rs rusty/src/p2p_client.rs \\\n+  rusty/src/p2p_socket_handler.rs\n+\n+LIBBITCOIN_RUSTY_TEST_SRCS= \\\n+  rusty/src/test_bridge.rs\n+\n+rusty/liblibc.rlib: rusty/libc/src/lib.rs $(wildcard rusty/libc/src/*.rs)\n+\t$(RUSTC) --crate-name libc $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbech32.rlib: rusty/rust-bech32/src/lib.rs $(wildcard rusty/rust-bech32/src/*.rs)\n+\t$(RUSTC) --crate-name bech32 $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbitcoin_hashes.rlib: rusty/bitcoin_hashes/src/lib.rs $(wildcard rusty/bitcoin_hashes/src/*.rs)\n+\t$(RUSTC) --crate-name bitcoin_hashes $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libsecp256k1.rlib: rusty/rust-secp256k1/src/lib.rs $(wildcard rusty/rust-secp256k1/src/*.rs) $(LIBSECP256K1)\n+\t$(RUSTC) --crate-name secp256k1 $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --cfg 'feature=\"std\"' --cfg 'feature=\"dont_replace_c_symbols\"' --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbitcoin.rlib: rusty/libbech32.rlib rusty/libbitcoin_hashes.rlib rusty/libsecp256k1.rlib\n+rusty/libbitcoin.rlib: rusty/rust-bitcoin/src/lib.rs $(wildcard rusty/rust-bitcoin/src/*.rs) $(wildcard rusty/rust-bitcoin/src/*/*.rs) $(wildcard rusty/rust-bitcoin/src/*/*/*.rs)\n+\t$(RUSTC) --crate-name bitcoin $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) --extern bech32=$(@D)/libbech32.rlib --extern bitcoin_hashes=$(@D)/libbitcoin_hashes.rlib --extern secp256k1=$(@D)/libsecp256k1.rlib && \\\n+\ttouch $@\n+\n+# We force overflow checks on so that any integer overflows result in a panic\n+# instead of, eg, attempting to alloc 4GB of memory (though we will catch such\n+# an alloc and refuse it, generating a panic instead).\n+# Also force panics to unwind (instead of calling abort()) as we want to catch\n+# panics in the Rust threads and simply close the thread, instead of bringing\n+# down the rest of Bitcoin Core.\n+$(LIBBITCOIN_RUSTY): $(LIBBITCOIN_RUSTY_SRCS) rusty/libbitcoin.rlib rusty/liblibc.rlib\n+\t$(RUSTC) --crate-name rusty $< --target=$(RUST_TARGET) --crate-type=staticlib --emit=link -g -O -C lto=on -C overflow-checks=on -C panic=unwind --out-dir $(@D) -L dependency=$(@D) --extern libc=$(@D)/liblibc.rlib --extern bitcoin_hashes=$(@D)/libbitcoin_hashes.rlib --extern bitcoin=$(@D)/libbitcoin.rlib",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 85,
      "commit_id": "4f4cab3e4cdcf0bc614e035257a7d347d340fe29",
      "original_commit_id": "33287e2a3f516e38d70537436c680c4b43be3587",
      "in_reply_to_id": 347073757,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Doesn't seem to for me, no?",
      "created_at": "2019-11-17T20:47:03Z",
      "updated_at": "2019-11-21T22:25:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#discussion_r347158355",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347158355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17376"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 415,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347272353",
      "pull_request_review_id": 318192768,
      "id": 347272353,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NzI3MjM1Mw==",
      "diff_hunk": "@@ -359,6 +370,51 @@ libbitcoin_wallet_tool_a_SOURCES = \\\n   wallet/wallettool.cpp \\\n   $(BITCOIN_CORE_H)\n \n+# rustc only reqires the main .rs file as input, but rustc must also be invoked\n+# if any of the other files change. List the main file first, then targets can\n+# depend on $(LIBBITCOIN_RUSTY_SRCS), but only build the first source file ($<).\n+LIBBITCOIN_RUSTY_SRCS= \\\n+  rusty/src/lib.rs \\\n+  rusty/src/bridge.rs \\\n+  rusty/src/dns_headers.rs \\\n+  rusty/src/rest_downloader.rs \\\n+  rusty/src/p2p_addrs.rs rusty/src/p2p_client.rs \\\n+  rusty/src/p2p_socket_handler.rs\n+\n+LIBBITCOIN_RUSTY_TEST_SRCS= \\\n+  rusty/src/test_bridge.rs\n+\n+rusty/liblibc.rlib: rusty/libc/src/lib.rs $(wildcard rusty/libc/src/*.rs)\n+\t$(RUSTC) --crate-name libc $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbech32.rlib: rusty/rust-bech32/src/lib.rs $(wildcard rusty/rust-bech32/src/*.rs)\n+\t$(RUSTC) --crate-name bech32 $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbitcoin_hashes.rlib: rusty/bitcoin_hashes/src/lib.rs $(wildcard rusty/bitcoin_hashes/src/*.rs)\n+\t$(RUSTC) --crate-name bitcoin_hashes $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libsecp256k1.rlib: rusty/rust-secp256k1/src/lib.rs $(wildcard rusty/rust-secp256k1/src/*.rs) $(LIBSECP256K1)\n+\t$(RUSTC) --crate-name secp256k1 $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --cfg 'feature=\"std\"' --cfg 'feature=\"dont_replace_c_symbols\"' --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbitcoin.rlib: rusty/libbech32.rlib rusty/libbitcoin_hashes.rlib rusty/libsecp256k1.rlib\n+rusty/libbitcoin.rlib: rusty/rust-bitcoin/src/lib.rs $(wildcard rusty/rust-bitcoin/src/*.rs) $(wildcard rusty/rust-bitcoin/src/*/*.rs) $(wildcard rusty/rust-bitcoin/src/*/*/*.rs)\n+\t$(RUSTC) --crate-name bitcoin $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) --extern bech32=$(@D)/libbech32.rlib --extern bitcoin_hashes=$(@D)/libbitcoin_hashes.rlib --extern secp256k1=$(@D)/libsecp256k1.rlib && \\\n+\ttouch $@\n+\n+# We force overflow checks on so that any integer overflows result in a panic\n+# instead of, eg, attempting to alloc 4GB of memory (though we will catch such\n+# an alloc and refuse it, generating a panic instead).\n+# Also force panics to unwind (instead of calling abort()) as we want to catch\n+# panics in the Rust threads and simply close the thread, instead of bringing\n+# down the rest of Bitcoin Core.\n+$(LIBBITCOIN_RUSTY): $(LIBBITCOIN_RUSTY_SRCS) rusty/libbitcoin.rlib rusty/liblibc.rlib\n+\t$(RUSTC) --crate-name rusty $< --target=$(RUST_TARGET) --crate-type=staticlib --emit=link -g -O -C lto=on -C overflow-checks=on -C panic=unwind --out-dir $(@D) -L dependency=$(@D) --extern libc=$(@D)/liblibc.rlib --extern bitcoin_hashes=$(@D)/libbitcoin_hashes.rlib --extern bitcoin=$(@D)/libbitcoin.rlib",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 85,
      "commit_id": "4f4cab3e4cdcf0bc614e035257a7d347d340fe29",
      "original_commit_id": "33287e2a3f516e38d70537436c680c4b43be3587",
      "in_reply_to_id": 347073757,
      "user": {
        "login": "icota",
        "id": 762502,
        "node_id": "MDQ6VXNlcjc2MjUwMg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/762502?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/icota",
        "html_url": "https://github.com/icota",
        "followers_url": "https://api.github.com/users/icota/followers",
        "following_url": "https://api.github.com/users/icota/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/icota/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/icota/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/icota/subscriptions",
        "organizations_url": "https://api.github.com/users/icota/orgs",
        "repos_url": "https://api.github.com/users/icota/repos",
        "events_url": "https://api.github.com/users/icota/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/icota/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I tested and it seems like `--extern` is only necessary for `libc` (`rustc` hits [E0658](https://doc.rust-lang.org/error-index.html#E0658) otherwise). This works for me:\r\n`/home/igor/.cargo/bin/rustc --crate-name rusty rusty/src/lib.rs --target=x86_64-unknown-linux-gnu --crate-type=staticlib --emit=link -g -C lto=on -C overflow-checks=on -C panic=unwind --out-dir rusty -L rusty --extern libc=rusty/liblibc.rlib`",
      "created_at": "2019-11-18T09:28:57Z",
      "updated_at": "2019-11-21T22:25:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#discussion_r347272353",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347272353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17376"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 415,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347521655",
      "pull_request_review_id": 318516345,
      "id": 347521655,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0NzUyMTY1NQ==",
      "diff_hunk": "@@ -359,6 +370,51 @@ libbitcoin_wallet_tool_a_SOURCES = \\\n   wallet/wallettool.cpp \\\n   $(BITCOIN_CORE_H)\n \n+# rustc only reqires the main .rs file as input, but rustc must also be invoked\n+# if any of the other files change. List the main file first, then targets can\n+# depend on $(LIBBITCOIN_RUSTY_SRCS), but only build the first source file ($<).\n+LIBBITCOIN_RUSTY_SRCS= \\\n+  rusty/src/lib.rs \\\n+  rusty/src/bridge.rs \\\n+  rusty/src/dns_headers.rs \\\n+  rusty/src/rest_downloader.rs \\\n+  rusty/src/p2p_addrs.rs rusty/src/p2p_client.rs \\\n+  rusty/src/p2p_socket_handler.rs\n+\n+LIBBITCOIN_RUSTY_TEST_SRCS= \\\n+  rusty/src/test_bridge.rs\n+\n+rusty/liblibc.rlib: rusty/libc/src/lib.rs $(wildcard rusty/libc/src/*.rs)\n+\t$(RUSTC) --crate-name libc $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbech32.rlib: rusty/rust-bech32/src/lib.rs $(wildcard rusty/rust-bech32/src/*.rs)\n+\t$(RUSTC) --crate-name bech32 $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbitcoin_hashes.rlib: rusty/bitcoin_hashes/src/lib.rs $(wildcard rusty/bitcoin_hashes/src/*.rs)\n+\t$(RUSTC) --crate-name bitcoin_hashes $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libsecp256k1.rlib: rusty/rust-secp256k1/src/lib.rs $(wildcard rusty/rust-secp256k1/src/*.rs) $(LIBSECP256K1)\n+\t$(RUSTC) --crate-name secp256k1 $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --cfg 'feature=\"std\"' --cfg 'feature=\"dont_replace_c_symbols\"' --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbitcoin.rlib: rusty/libbech32.rlib rusty/libbitcoin_hashes.rlib rusty/libsecp256k1.rlib\n+rusty/libbitcoin.rlib: rusty/rust-bitcoin/src/lib.rs $(wildcard rusty/rust-bitcoin/src/*.rs) $(wildcard rusty/rust-bitcoin/src/*/*.rs) $(wildcard rusty/rust-bitcoin/src/*/*/*.rs)\n+\t$(RUSTC) --crate-name bitcoin $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) --extern bech32=$(@D)/libbech32.rlib --extern bitcoin_hashes=$(@D)/libbitcoin_hashes.rlib --extern secp256k1=$(@D)/libsecp256k1.rlib && \\\n+\ttouch $@\n+\n+# We force overflow checks on so that any integer overflows result in a panic\n+# instead of, eg, attempting to alloc 4GB of memory (though we will catch such\n+# an alloc and refuse it, generating a panic instead).\n+# Also force panics to unwind (instead of calling abort()) as we want to catch\n+# panics in the Rust threads and simply close the thread, instead of bringing\n+# down the rest of Bitcoin Core.\n+$(LIBBITCOIN_RUSTY): $(LIBBITCOIN_RUSTY_SRCS) rusty/libbitcoin.rlib rusty/liblibc.rlib\n+\t$(RUSTC) --crate-name rusty $< --target=$(RUST_TARGET) --crate-type=staticlib --emit=link -g -O -C lto=on -C overflow-checks=on -C panic=unwind --out-dir $(@D) -L dependency=$(@D) --extern libc=$(@D)/liblibc.rlib --extern bitcoin_hashes=$(@D)/libbitcoin_hashes.rlib --extern bitcoin=$(@D)/libbitcoin.rlib",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 85,
      "commit_id": "4f4cab3e4cdcf0bc614e035257a7d347d340fe29",
      "original_commit_id": "33287e2a3f516e38d70537436c680c4b43be3587",
      "in_reply_to_id": 347073757,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ehh, might as well just leave it, then.",
      "created_at": "2019-11-18T17:51:02Z",
      "updated_at": "2019-11-21T22:25:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#discussion_r347521655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347521655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17376"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 415,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347787973",
      "pull_request_review_id": 318856763,
      "id": 347787973,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM0Nzc4Nzk3Mw==",
      "diff_hunk": "@@ -359,6 +370,51 @@ libbitcoin_wallet_tool_a_SOURCES = \\\n   wallet/wallettool.cpp \\\n   $(BITCOIN_CORE_H)\n \n+# rustc only reqires the main .rs file as input, but rustc must also be invoked\n+# if any of the other files change. List the main file first, then targets can\n+# depend on $(LIBBITCOIN_RUSTY_SRCS), but only build the first source file ($<).\n+LIBBITCOIN_RUSTY_SRCS= \\\n+  rusty/src/lib.rs \\\n+  rusty/src/bridge.rs \\\n+  rusty/src/dns_headers.rs \\\n+  rusty/src/rest_downloader.rs \\\n+  rusty/src/p2p_addrs.rs rusty/src/p2p_client.rs \\\n+  rusty/src/p2p_socket_handler.rs\n+\n+LIBBITCOIN_RUSTY_TEST_SRCS= \\\n+  rusty/src/test_bridge.rs\n+\n+rusty/liblibc.rlib: rusty/libc/src/lib.rs $(wildcard rusty/libc/src/*.rs)\n+\t$(RUSTC) --crate-name libc $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbech32.rlib: rusty/rust-bech32/src/lib.rs $(wildcard rusty/rust-bech32/src/*.rs)\n+\t$(RUSTC) --crate-name bech32 $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbitcoin_hashes.rlib: rusty/bitcoin_hashes/src/lib.rs $(wildcard rusty/bitcoin_hashes/src/*.rs)\n+\t$(RUSTC) --crate-name bitcoin_hashes $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libsecp256k1.rlib: rusty/rust-secp256k1/src/lib.rs $(wildcard rusty/rust-secp256k1/src/*.rs) $(LIBSECP256K1)\n+\t$(RUSTC) --crate-name secp256k1 $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --cfg 'feature=\"std\"' --cfg 'feature=\"dont_replace_c_symbols\"' --out-dir $(@D) && \\\n+\ttouch $@\n+\n+rusty/libbitcoin.rlib: rusty/libbech32.rlib rusty/libbitcoin_hashes.rlib rusty/libsecp256k1.rlib\n+rusty/libbitcoin.rlib: rusty/rust-bitcoin/src/lib.rs $(wildcard rusty/rust-bitcoin/src/*.rs) $(wildcard rusty/rust-bitcoin/src/*/*.rs) $(wildcard rusty/rust-bitcoin/src/*/*/*.rs)\n+\t$(RUSTC) --crate-name bitcoin $< --crate-type=rlib -g -O -C overflow-checks=on -C panic=unwind --out-dir $(@D) --extern bech32=$(@D)/libbech32.rlib --extern bitcoin_hashes=$(@D)/libbitcoin_hashes.rlib --extern secp256k1=$(@D)/libsecp256k1.rlib && \\\n+\ttouch $@\n+\n+# We force overflow checks on so that any integer overflows result in a panic\n+# instead of, eg, attempting to alloc 4GB of memory (though we will catch such\n+# an alloc and refuse it, generating a panic instead).\n+# Also force panics to unwind (instead of calling abort()) as we want to catch\n+# panics in the Rust threads and simply close the thread, instead of bringing\n+# down the rest of Bitcoin Core.\n+$(LIBBITCOIN_RUSTY): $(LIBBITCOIN_RUSTY_SRCS) rusty/libbitcoin.rlib rusty/liblibc.rlib\n+\t$(RUSTC) --crate-name rusty $< --target=$(RUST_TARGET) --crate-type=staticlib --emit=link -g -O -C lto=on -C overflow-checks=on -C panic=unwind --out-dir $(@D) -L dependency=$(@D) --extern libc=$(@D)/liblibc.rlib --extern bitcoin_hashes=$(@D)/libbitcoin_hashes.rlib --extern bitcoin=$(@D)/libbitcoin.rlib",
      "path": "src/Makefile.am",
      "position": null,
      "original_position": 85,
      "commit_id": "4f4cab3e4cdcf0bc614e035257a7d347d340fe29",
      "original_commit_id": "33287e2a3f516e38d70537436c680c4b43be3587",
      "in_reply_to_id": 347073757,
      "user": {
        "login": "icota",
        "id": 762502,
        "node_id": "MDQ6VXNlcjc2MjUwMg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/762502?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/icota",
        "html_url": "https://github.com/icota",
        "followers_url": "https://api.github.com/users/icota/followers",
        "following_url": "https://api.github.com/users/icota/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/icota/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/icota/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/icota/subscriptions",
        "organizations_url": "https://api.github.com/users/icota/orgs",
        "repos_url": "https://api.github.com/users/icota/repos",
        "events_url": "https://api.github.com/users/icota/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/icota/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah, it's not a big deal",
      "created_at": "2019-11-19T08:34:38Z",
      "updated_at": "2019-11-21T22:25:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/17376#discussion_r347787973",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/347787973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/17376"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 415,
      "side": "RIGHT"
    }
  ]
}