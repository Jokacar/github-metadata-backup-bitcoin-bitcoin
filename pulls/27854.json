{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
    "id": 1387452695,
    "node_id": "PR_kwDOABII585SstkX",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27854",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27854.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27854.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/21bb3946c40ca115778efc04ca8e5084b460e26b",
    "number": 27854,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "[WIP] add a stratum v2 template provider",
    "user": {
      "login": "ccdle12",
      "id": 18324680,
      "node_id": "MDQ6VXNlcjE4MzI0Njgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccdle12",
      "html_url": "https://github.com/ccdle12",
      "followers_url": "https://api.github.com/users/ccdle12/followers",
      "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccdle12/orgs",
      "repos_url": "https://api.github.com/users/ccdle12/repos",
      "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ccdle12/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "## Description\r\n                                                                                                                                                                                                                                               \r\nThis is a WIP/draft pull request seeking concept/approach ACK. The goal is to initiate discussion and gather feedback on the proposed changes to see if there is sufficient support for an ACK before finalizing an implementation.\r\n\r\nThis PR initially proposes the addition of a new thread and server to enable Bitcoin Core to run as a Sv2 TP (Stratum V2 Template Provider). This approach is the most direct and naive approach in regards to integrating into the Bitcoin architecture. It builds on https://github.com/bitcoin/bitcoin/pull/23049 but no longer uses the Rust library and implements the server and message de/serialization in C++.\r\n\r\nThis PR branch has been used for testing with the [SRI (Stratum V2 Reference Implementation)](https://github.com/stratum-mining/stratum), but it has been limited to regtest and some tests on testnet. This branch is considered far from complete.\r\n\r\n## Context\r\n\r\nStratum V2 is a proposed evolution of the stratum mining protocol, it has several benefits over its predecessor:\r\n\r\n- By default, it uses secure communication, which can protect against man-in-the-middle-attacks, e.g. [hashrate hijacking](https://braiins.com/blog/hashrate-robbery-stratum-v2-fixes-this-and-more)                                                           \r\n\r\n- It uses a binary protocol instead of JSON, optimizing data transfer between all parties\r\n\r\n- It allows miners/downstream connections to propose their own transaction sets to mining pools                                                                                                                                    \r\n\r\n- It can reduce occurrence of empty mined blocks\r\n\r\nLinks below for further reference:\r\n\r\n- Stratum V2 specification: https://github.com/stratum-mining/sv2-spec\r\n- SRI (Stratum V2 Reference Implementation): https://github.com/stratum-mining/stratum\r\n- Stratum V2 overview: https://stratumprotocol.org/\r\n\r\n## Motivation\r\n                                                                                                                                                                                                                  \r\nThe motivation for this PR and potential future work is to allow Bitcoin Core to run as a Sv2 TP. This will enable downstream Sv2 connections to be able to connect and receive/submit valid work over the Sv2 protocol.\r\n\r\nBelow is an outline of a few pros/cons regarding the Sv2 TP  in Bitcoin Core.\r\n\r\nPros:\r\n\r\n- Running Bitcoin Core with a config flag to enable the Sv2 TP could be arguably easier for adoption. A user would only need to be able to compile and run Bitcoin Core and its dependencies to be able to extract valid work and broadcast legitimate work over the Sv2 protocol\r\n\r\n- The Sv2 TP being as close as possible to the mempool and p2p network benefits downstream connections so that they can start new work quickly. The time between a node learning of a  new best block and then sending new work downstream should be as minimal as possible\r\n\r\n- Implementing the Sv2 TP in C++ means it should be (hopefully) easier for a wider range of contributors/reviewers to be able to maintain and build. The Sv2 TP only uses a small subset of messages from the entire Sv2 Rust library. Therefore, we realized that re-implementing a subset of the messages in C++ and implementing a server carries less external dependency risk and less architectural complexity\r\n\r\n- No additional external dependencies are required\r\n\r\nCons:\r\n\r\n- The Sv2 TP in core will need to be kept up to date with changes in the SRI, coordination would be required to prevent any potential versioning issues\r\n\r\n- Adds  another thread/sub-module that will need to access the mempool to build candidate blocks, so there would be another area of the code attempting to acquire `cs_main` via `BlockAssembler`\r\n\r\n- Another architectural approach other than a new thread and server for the Sv2 TP might be preferred such as the current work in the [multiprocess project](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Process-Separation)\r\n\r\n\r\n## Build\r\n\r\nTo run the Sv2 TP on this branch, Bitcoin needs to be configured with `./configure --enable-template-provider`.\r\n\r\n## Future work\r\n\r\nIf there is sufficient approach/concept ACK or support in general. Then the below points are outstanding future work and existing nits.\r\n\r\nFuture work:\r\n\r\n- A noise implementation from the noise protocol framework needs to be introduced for secure communication between the Sv2 TP and downstream connections. The [noise spec for Sv2 has been reworked](https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md#43-choice-of-cryptographic-primitives) to accommodate resources currently available in core e.g. `secp256k1` and `BIP 340 schnorrsig`\r\n\r\n- There are current working changes proposed to the Sv2 TP spec, to allow downstream connections to send shorttxid  sets, allowing miners/downstream connections to present their own tx sets \r\n\r\n- Perhaps the Sv2 TP should be adapted to current work in the Bitcoin Core architecture. The new thread has been helpful for testing against the current SRI stack, it seems like the server implementation can adapt easily to different architectural needs\r\n\r\nExisting/known nits:\r\n\r\n- The server implementation has no limit on the number of downstream connections, it needs to be added\r\n\r\n- There could be potential conflict with functional tests. The Sv2 TP responds to the best new block change by reaching into the mempool and building a new block for downstream. My guess is that it would be acceptable to disable the Sv2 TP when running functional tests that asserts mempool state and then enable the Sv2 TP when it needs to specifically run its functional tests\r\n\r\n- Getting the full merkle path is required in the [NewTemplate](https://github.com/stratum-mining/sv2-spec/blob/main/07-Template-Distribution-Protocol.md#72-newtemplate-server---client) message. I noticed that this was previously possible with the old implementation that was moved to [merkle_test.cpp](https://github.com/bitcoin/bitcoin/blob/2026301405f83c925ca68db6a3cd5134ed619ca7/src/test/merkle_tests.cpp#L114) , the current implementation does an in-place calculation to just return the root.  I was wondering if anyone has any suggestions or insight to a preferred solution? e.g. Move back  the old functions from merkle_tests or write a new implementation?\r\n \r\nThank you to all who helped contribute to the process of building this branch including working on the SRI, using this branch for testing and refining the Sv2 specs.\r\n\r\nAny feedback or reviews from nits to overall approach would be very much appreciated.\r\n",
    "labels": [
      {
        "id": 118378960,
        "node_id": "MDU6TGFiZWwxMTgzNzg5NjA=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining",
        "name": "Mining",
        "color": "c7def8",
        "default": false
      },
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-06-11T08:54:19Z",
    "updated_at": "2023-08-17T22:23:35Z",
    "mergeable": false,
    "mergeable_state": "dirty",
    "merge_commit_sha": "83de36d6bd0dce67a0567c6eff16133edca3685b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "ccdle12:2023.05.29-sv2-template-provider",
      "ref": "2023.05.29-sv2-template-provider",
      "sha": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "user": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 124371245,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjQzNzEyNDU=",
        "name": "bitcoin",
        "full_name": "ccdle12/bitcoin",
        "owner": {
          "login": "ccdle12",
          "id": 18324680,
          "node_id": "MDQ6VXNlcjE4MzI0Njgw",
          "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ccdle12",
          "html_url": "https://github.com/ccdle12",
          "followers_url": "https://api.github.com/users/ccdle12/followers",
          "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
          "organizations_url": "https://api.github.com/users/ccdle12/orgs",
          "repos_url": "https://api.github.com/users/ccdle12/repos",
          "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ccdle12/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/ccdle12/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ccdle12/bitcoin",
        "archive_url": "https://api.github.com/repos/ccdle12/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ccdle12/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ccdle12/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ccdle12/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ccdle12/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ccdle12/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ccdle12/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ccdle12/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ccdle12/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ccdle12/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ccdle12/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ccdle12/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ccdle12/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ccdle12/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ccdle12/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ccdle12/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ccdle12/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ccdle12/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ccdle12/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ccdle12/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ccdle12/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ccdle12/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ccdle12/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ccdle12/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ccdle12/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ccdle12/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ccdle12/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ccdle12/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ccdle12/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ccdle12/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ccdle12/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ccdle12/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ccdle12/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ccdle12/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ccdle12/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ccdle12/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ccdle12/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ccdle12/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ccdle12/bitcoin/hooks",
        "svn_url": "https://github.com/ccdle12/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 272821,
        "default_branch": "master",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-14T16:12:51Z",
        "created_at": "2018-03-08T09:50:02Z",
        "updated_at": "2022-03-25T11:54:17Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "153a6882f42fff3fdc63bf770d4c86a62c46c448",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35551,
        "stargazers_count": 70967,
        "watchers_count": 70967,
        "size": 236798,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-17T22:31:31Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-17T22:16:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 1752,
    "deletions": 0,
    "changed_files": 15,
    "commits": 11,
    "review_comments": 14,
    "comments": 20
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVjMjY1Nzk0MzdjMGE3ZTk1MDA3MzM0ODIyZGEzNTc1YjA5NmI1YTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec26579437c0a7e95007334822da3575b096b5a1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ec26579437c0a7e95007334822da3575b096b5a1",
      "tree": {
        "sha": "fb2798d185d42f2a1fdbbb2a0ba6229c70322071",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb2798d185d42f2a1fdbbb2a0ba6229c70322071"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/153a6882f42fff3fdc63bf770d4c86a62c46c448",
          "sha": "153a6882f42fff3fdc63bf770d4c86a62c46c448",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/153a6882f42fff3fdc63bf770d4c86a62c46c448"
        }
      ],
      "message": "sv2_messages: introduce sv2 messages used by a sv2 template provider\n\nThese messages are used in the Template Distribution subprotocol in\nStratum V2 and will be used by a template provider server.",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-05-08T09:30:58Z"
      },
      "sha": "ec26579437c0a7e95007334822da3575b096b5a1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYyZGRkYWRmN2NmMWUwMjk3ODdhNTg4ODMzNzUyMDgxYTg0ZTIxOTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2dddadf7cf1e029787a588833752081a84e2195",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f2dddadf7cf1e029787a588833752081a84e2195",
      "tree": {
        "sha": "1576301ebec3edecf3d5c713f21266519f6289dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1576301ebec3edecf3d5c713f21266519f6289dc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec26579437c0a7e95007334822da3575b096b5a1",
          "sha": "ec26579437c0a7e95007334822da3575b096b5a1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ec26579437c0a7e95007334822da3575b096b5a1"
        }
      ],
      "message": "test+fuzz: add sv2_messages unit tests and fuzz tests",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-05-08T09:38:36Z"
      },
      "sha": "f2dddadf7cf1e029787a588833752081a84e2195"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFiNzliMzZlZDY4ODUxYzE3NjVkYzEwYmJjZTExYTg2NTk4MzlkYzE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab79b36ed68851c1765dc10bbce11a8659839dc1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ab79b36ed68851c1765dc10bbce11a8659839dc1",
      "tree": {
        "sha": "ca73af1fb582c286ea2f1a4e361a606d4ac2bbaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca73af1fb582c286ea2f1a4e361a606d4ac2bbaa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2dddadf7cf1e029787a588833752081a84e2195",
          "sha": "f2dddadf7cf1e029787a588833752081a84e2195",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f2dddadf7cf1e029787a588833752081a84e2195"
        }
      ],
      "message": "configre+init: add sv2 template provider enable args and configuration",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-05-08T10:06:54Z"
      },
      "sha": "ab79b36ed68851c1765dc10bbce11a8659839dc1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYxN2Q5MmU4ZDY3MGJkYmEyMTMyYjEyMWNmNmJmNzBiOTJlYjViMmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f17d92e8d670bdba2132b121cf6bf70b92eb5b2b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f17d92e8d670bdba2132b121cf6bf70b92eb5b2b",
      "tree": {
        "sha": "a4456ef7cf2f4e5be3dbb728855783541d2cf653",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4456ef7cf2f4e5be3dbb728855783541d2cf653"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab79b36ed68851c1765dc10bbce11a8659839dc1",
          "sha": "ab79b36ed68851c1765dc10bbce11a8659839dc1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ab79b36ed68851c1765dc10bbce11a8659839dc1"
        }
      ],
      "message": "sv2_template: introduce sv2 template provider server\n\nThe Sv2TemplateProvider class will act as a Template Distribution server\nfor any stratum v2 connections.",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-05-08T10:19:58Z"
      },
      "sha": "f17d92e8d670bdba2132b121cf6bf70b92eb5b2b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUyMTE0MGI0Mjk1ODdhMGEwM2E5OGQxYTY5NmUxMmQ5Nzk0MjljNWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e21140b429587a0a03a98d1a696e12d979429c5e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e21140b429587a0a03a98d1a696e12d979429c5e",
      "tree": {
        "sha": "2bfe01056758ac220b54ff2fe1c659aab1dbfddc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2bfe01056758ac220b54ff2fe1c659aab1dbfddc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f17d92e8d670bdba2132b121cf6bf70b92eb5b2b",
          "sha": "f17d92e8d670bdba2132b121cf6bf70b92eb5b2b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f17d92e8d670bdba2132b121cf6bf70b92eb5b2b"
        }
      ],
      "message": "test+fuzz: add sv2_template_provider unit tests and fuzz tests",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-05-08T10:26:20Z"
      },
      "sha": "e21140b429587a0a03a98d1a696e12d979429c5e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZjYzgxNWE0NzQ0YTgyN2U4ZDA2YjZiOTE0NDUxZGM2MTVmY2I2MDU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cc815a4744a827e8d06b6b914451dc615fcb605",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6cc815a4744a827e8d06b6b914451dc615fcb605",
      "tree": {
        "sha": "f0d245e804f9a90213038fad86820f01cf21fa80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f0d245e804f9a90213038fad86820f01cf21fa80"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e21140b429587a0a03a98d1a696e12d979429c5e",
          "sha": "e21140b429587a0a03a98d1a696e12d979429c5e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e21140b429587a0a03a98d1a696e12d979429c5e"
        }
      ],
      "message": "context+init: add sv2_template_provider to node context and on init\n\nEnables the sv2_template_provider if the --enable-template-proviver\nconfig is provided on compliation config and start the template provider\non a dedicated thread.",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-05-08T10:58:10Z"
      },
      "sha": "6cc815a4744a827e8d06b6b914451dc615fcb605"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI2ZDg1NGFlNzk3YjExMzU3NzM4ZmZhNmQ2YjNkOWZkYzBjZmI3OWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26d854ae797b11357738ffa6d6b3d9fdc0cfb79d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/26d854ae797b11357738ffa6d6b3d9fdc0cfb79d",
      "tree": {
        "sha": "e4b9963c06b668d78d4045c209081e78e40e03e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4b9963c06b668d78d4045c209081e78e40e03e7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cc815a4744a827e8d06b6b914451dc615fcb605",
          "sha": "6cc815a4744a827e8d06b6b914451dc615fcb605",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6cc815a4744a827e8d06b6b914451dc615fcb605"
        }
      ],
      "message": "functional: add sv2_port to functional test config",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-05-08T13:25:32Z"
      },
      "sha": "26d854ae797b11357738ffa6d6b3d9fdc0cfb79d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEyNWYwMjMzYjczMzRkOWI1ZTU0YTBhZjQ5Mjc1OGUyZDViZjYyMzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a25f0233b7334d9b5e54a0af492758e2d5bf6234",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a25f0233b7334d9b5e54a0af492758e2d5bf6234",
      "tree": {
        "sha": "01221afd9004ee3dc04527a430d795cc16faca55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01221afd9004ee3dc04527a430d795cc16faca55"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26d854ae797b11357738ffa6d6b3d9fdc0cfb79d",
          "sha": "26d854ae797b11357738ffa6d6b3d9fdc0cfb79d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/26d854ae797b11357738ffa6d6b3d9fdc0cfb79d"
        }
      ],
      "message": "sv2_messages: styling nits",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-05-29T16:52:12Z"
      },
      "sha": "a25f0233b7334d9b5e54a0af492758e2d5bf6234"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJjMzNhY2MyNjk4ZGVhNTJjOTFlNDcwOTQ0NjE2ODBjYjBhNDM5NTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c33acc2698dea52c91e47094461680cb0a43956",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2c33acc2698dea52c91e47094461680cb0a43956",
      "tree": {
        "sha": "6a5ad23554061e14d799589e67da62478372aced",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a5ad23554061e14d799589e67da62478372aced"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a25f0233b7334d9b5e54a0af492758e2d5bf6234",
          "sha": "a25f0233b7334d9b5e54a0af492758e2d5bf6234",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a25f0233b7334d9b5e54a0af492758e2d5bf6234"
        }
      ],
      "message": "init: add graceful shutdown if sv2 start fails",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-02T19:56:42Z"
      },
      "sha": "2c33acc2698dea52c91e47094461680cb0a43956"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmMDJmNTg4MTY1NTUxZTIyMzk0NzA2NmIxZGUzYTgyMGFiN2I2YTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff02f588165551e223947066b1de3a820ab7b6a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ff02f588165551e223947066b1de3a820ab7b6a7",
      "tree": {
        "sha": "6ddf5f5b55dba974a64171fbaa098a855e112e88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ddf5f5b55dba974a64171fbaa098a855e112e88"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c33acc2698dea52c91e47094461680cb0a43956",
          "sha": "2c33acc2698dea52c91e47094461680cb0a43956",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2c33acc2698dea52c91e47094461680cb0a43956"
        }
      ],
      "message": "sv2_template: refactor to only bind listening port after exiting IBD",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-02T20:04:37Z"
      },
      "sha": "ff02f588165551e223947066b1de3a820ab7b6a7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxYmIzOTQ2YzQwY2ExMTU3NzhlZmMwNGNhOGU1MDg0YjQ2MGUyNmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21bb3946c40ca115778efc04ca8e5084b460e26b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/21bb3946c40ca115778efc04ca8e5084b460e26b",
      "tree": {
        "sha": "3f88cc9840fd00b8922866dc7926516b4fce1b86",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f88cc9840fd00b8922866dc7926516b4fce1b86"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff02f588165551e223947066b1de3a820ab7b6a7",
          "sha": "ff02f588165551e223947066b1de3a820ab7b6a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ff02f588165551e223947066b1de3a820ab7b6a7"
        }
      ],
      "message": "sv2_template: refactor and reduce lock contention on wait for best block change",
      "committer": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-10T21:58:30Z"
      },
      "author": {
        "name": "ccdle12",
        "email": "chris.coverdale24@gmail.com",
        "date": "2023-06-02T20:36:25Z"
      },
      "sha": "21bb3946c40ca115778efc04ca8e5084b460e26b"
    },
    {
      "event": "commented",
      "id": 1586080747,
      "node_id": "IC_kwDOABII585eiavr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1586080747",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-11T08:54:22Z",
      "updated_at": "2023-06-24T02:23:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [Fi3](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587152706), [sipa](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587485219), [ariard](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1590322328), [dunxen](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1591759027), [kristapsk](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1598574675), [luke-jr](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1605237375) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27896](https://github.com/bitcoin/bitcoin/pull/27896) (Remove the syscall sandbox by fanquake)\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: blockfilter initial sync speedup, parallelize process by furszy)\n* [#24539](https://github.com/bitcoin/bitcoin/pull/24539) (Add a \"tx output spender\" index by sstone)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1586080747",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-11T17:40:26Z",
      "updated_at": "2023-06-11T17:40:26Z",
      "source": {
        "issue": {
          "id": 1556671710,
          "node_id": "PR_kwDOABII585Ig7Js",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/26966/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/26966",
          "number": 26966,
          "state": "open",
          "state_reason": null,
          "title": "index: blockfilter initial sync speedup, parallelize process",
          "body": "The current procedure for building the block filter index involves processing filters one at a time;\r\nReading blocks, undo data, and previous headers from disk sequentially.\r\n\r\nThis PR introduces a new mechanism that employs concurrent processing. Dividing the\r\nfilters generation workload among a pool of workers that can be configured by the user,\r\nsignificantly increasing the speed of the index construction process.\r\n\r\nThe same concurrent processing model has been applied to the transactions index as well.\r\n\r\nThe newly introduced init flag `-indexworkers=<n>` enables the concurrent sync\r\nbehavior.\r\nWhere \"n\" is the number of worker threads that will be spawned at startup to create ranges\r\nof block filters during the initial sync process. Destroying the workers pool once the\r\ninitial sync completes.\r\nNote: by default, the parallelized sync process is not enabled.\r\n\r\nNow the juicy part:\r\nIn my computer, with the node in debug mode and on IBD, with `-indexworkers=4`, the\r\nblock filter index generation took less than an hour. While, in master, the sync took more than 7 hours.\r\n\r\nImportant Note:\r\nAs the access to the block data on disk is protected by `cs_main`, this new feature runs substantially\r\nfaster when the node is not in IBD.\r\n\r\nFootnote:\r\nThis is part of a larger project :).",
          "user": {
            "login": "furszy",
            "id": 5377650,
            "node_id": "MDQ6VXNlcjUzNzc2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/furszy",
            "html_url": "https://github.com/furszy",
            "followers_url": "https://api.github.com/users/furszy/followers",
            "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
            "organizations_url": "https://api.github.com/users/furszy/orgs",
            "repos_url": "https://api.github.com/users/furszy/repos",
            "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/furszy/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/26966",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/26966",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/26966.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/26966.patch"
          },
          "created_at": "2023-01-25T13:36:23Z",
          "updated_at": "2023-08-15T10:37:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-11T20:01:10Z",
      "updated_at": "2023-06-11T20:01:10Z",
      "source": {
        "issue": {
          "id": 1166781352,
          "node_id": "PR_kwDOABII5840UWxr",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/24539/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/24539",
          "number": 24539,
          "state": "open",
          "state_reason": null,
          "title": "Add a \"tx output spender\" index",
          "body": "This PR adds a new \"tx output spender\" index, which allows users to query which tx spent a given outpoint with the `gettxspendingprevout` RPC call that was added by https://github.com/bitcoin/bitcoin/pull/24408.\r\n\r\nSuch an index would be extremely useful for Lightning, and probably for most layer-2 protocols that rely on chains of unpublished transactions.\r\n\r\nCode may need additional tests, but I wanted to collect ACKs/NACKs first (I'm aware that new indexes are not necessarily welcome additions)\r\n\r\nI chose to store an outpoint (32 + 4 bytes) -> txid (32 bytes) index (so -txospenderindex requires -txindex) rather than a outpoint -> disk pos index.",
          "user": {
            "login": "sstone",
            "id": 1573866,
            "node_id": "MDQ6VXNlcjE1NzM4NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1573866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sstone",
            "html_url": "https://github.com/sstone",
            "followers_url": "https://api.github.com/users/sstone/followers",
            "following_url": "https://api.github.com/users/sstone/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sstone/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sstone/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sstone/subscriptions",
            "organizations_url": "https://api.github.com/users/sstone/orgs",
            "repos_url": "https://api.github.com/users/sstone/repos",
            "events_url": "https://api.github.com/users/sstone/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sstone/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/24539",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/24539",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/24539.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/24539.patch"
          },
          "created_at": "2022-03-11T19:32:41Z",
          "updated_at": "2023-08-10T03:44:52Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1586988190,
      "node_id": "IC_kwDOABII585el4Se",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1586988190",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T09:53:14Z",
      "updated_at": "2023-06-12T09:53:14Z",
      "author_association": "MEMBER",
      "body": "What are the reasons for not having this as a separate piece of software that calls the Bitcoin Core RPCs? From glancing at the code here it seems like `getblocktemplate` and `submitblock` would be the only needed RPCs. I've seen the discussion about separation (multi-process) in https://github.com/bitcoin/bitcoin/pull/23049 but wasn't convinced by the arguments there (e.g. https://github.com/bitcoin/bitcoin/pull/23049#issuecomment-926009122). I am worried about the maintenance burden of this and would prefer it being a separate thing.\r\n\r\nIf stratumv3 or \"some other cool new mining protocol\" comes out tomorrow, are we gonna add support for that too? In my opinion, Bitcoin Core's interfaces should accommodate projects like this but direct integration should be reserved for strictly necessary things.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1586988190",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1587095727,
      "node_id": "IC_kwDOABII585emSiv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587095727",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T11:01:20Z",
      "updated_at": "2023-06-12T11:01:20Z",
      "author_association": "NONE",
      "body": "One reason is that `getblocktemplate` require polling bitcoind where `NewTemplate` will be pushed by bitcoind. What you call stratumV3 would likely be an extension of Sv2 and will likley use the same binary data format and framing of Sv2.\r\n\r\n",
      "user": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587095727",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1587116056,
      "node_id": "IC_kwDOABII585emXgY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587116056",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T11:12:22Z",
      "updated_at": "2023-06-12T11:12:22Z",
      "author_association": "MEMBER",
      "body": "> One reason is that getblocktemplate require polling bitcoind where NewTemplate will be pushed by bitcoind.\r\n\r\nI'm imagining a separate process `stratumv2d` that implements the server from this PR but polls the block template through `getblocktemplate` instead of using the BlockAssembler directly (which is equivalent to a poll, minus the rpc roundtrip). stratumv2d could then still push template updates after polling from bitcoind.\r\n\r\n> What you call stratumV3 would likely be an extension of Sv2 and will likley use the same binary data format and framing of Sv2.\r\n\r\nI was just trying to make a point about Bitcoin Core probably not wanting to support every mining protocol that will ever exist.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587116056",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1587152706,
      "node_id": "IC_kwDOABII585emgdC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587152706",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T11:35:08Z",
      "updated_at": "2023-06-12T12:32:51Z",
      "author_association": "NONE",
      "body": "> I'm imagining a separate process stratumv2d that implements the server from this PR but polls the block template through getblocktemplate instead of using the BlockAssembler directly (which is equivalent to a poll, minus the rpc roundtrip). stratumv2d could then still push template updates after polling from bitcoind.\r\n\r\nhaving it implemented into bitcoind is not a big change and will allow more flexibility  when templates are pushed respect to just poll  `getblocktemplate`\r\n\r\n> I was just trying to make a point about Bitcoin Core probably not wanting to support every mining protocol that will ever exist.\r\n\r\nSure, and I agree. What I want to say is that in the case of an improvement of Sv2 that needs new/different messages to be supported by bitcoind these messages will use the same data format and framing' proposed here. So there wont be the need to support a completely new protocol.  \r\n\r\n' please note that the framing implemented if this PR is not the one on the spec so when I say the one proposed here I mean the one that is specified in the Sv2 spec.  The framing will be updated if there will be sufficient support for an concept ACK\r\n\r\n",
      "user": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587152706",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1587311912,
      "node_id": "IC_kwDOABII585enHUo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587311912",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T13:08:15Z",
      "updated_at": "2023-06-12T13:08:15Z",
      "author_association": "MEMBER",
      "body": "> having it implemented into bitcoind is not a big change and will allow more flexibility in when templates are pushed respect to just poll getblocktemplate\r\n\r\nWhat are you thinking of in terms of flexibility that the current interfaces do not offer? I can't think of anything that would not work by using the current interfaces or exposing extra functionality through them. For example, looking at Matt's comment https://github.com/bitcoin/bitcoin/pull/23049#issuecomment-926009122:\r\n\r\n> do things like pre-construct next-next-block templates in advance and push them out quicker\r\n\r\nThis is not something we currently support and would (afaik) require significant changes to our mining/mempool logic (entirely separate of any stratum v2 changes). Once we have that functionality we should expose it through our interfaces (e.g. zmq, rpc, rest) such that applications like stratum v2 can make use of it.\r\n\r\n> the inefficiencies of getblocktemplate have been a real source of pain for pool operators for some time, I'm excited its going away.\r\n\r\nCorrect me if I'm wrong but the inefficiencies of `getblocktemplate` (for the most part) stem from the underlying mining algorithm's runtime complexity. This is not something that stratum v2 magically solves.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587311912",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1587347653,
      "node_id": "IC_kwDOABII585enQDF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587347653",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T13:28:47Z",
      "updated_at": "2023-06-12T13:28:47Z",
      "author_association": "NONE",
      "body": "Can not answer about Matt comment. (@TheBlueMatt maybe can clarify?)\r\n\r\nWhat I intended is  for example create a new template as soon as txs in mempool allow creations of new template with a fee amount that is bigger than x than the one of last created template. Or create a future template based on the one that miner is mining (next-next-block). \r\n\r\n> This is not something we currently support and would (afaik) require significant changes to our mining/mempool logic (entirely separate of any stratum v2 changes). Once we have that functionality we should expose it through our interfaces (e.g. zmq, rpc, rest) such that applications like stratum v2 can make use of it.\r\n\r\nIt make sense to me. But I would like to know also Matt opinion on that. ",
      "user": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587347653",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "mentioned",
      "id": 9502757353,
      "node_id": "MEE_lADOABII585oYyolzwAAAAI2aJHp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9502757353",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T13:28:48Z"
    },
    {
      "event": "subscribed",
      "id": 9502757377,
      "node_id": "SE_lADOABII585oYyolzwAAAAI2aJIB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9502757377",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T13:28:48Z"
    },
    {
      "event": "commented",
      "id": 1587485219,
      "node_id": "IC_kwDOABII585enxoj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587485219",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T14:40:01Z",
      "updated_at": "2023-06-12T15:11:20Z",
      "author_association": "MEMBER",
      "body": "I'm Concept ACK on eventually replacing the current `getblocktemplate` with another interface, for the following reasons:\r\n* The poll-based nature introduces unnecessary latency over a hypothetical push-based one.\r\n* Being RPC based, `getblocktemplate` is bandwidth and CPU inefficient due to JSON and hex encoding (for large amounts of data being transferred on every call).\r\n* `getblocktemplate` provides too much information for clients that do not care about performing their own transaction selection (full transaction hex and dependency information), with no way to opt out.\r\n\r\nNone of these deficiencies require the full StratumV2 approach to address; e.g. longpolling RPC could partially address the polling concern, a binary REST or ZMQ interface instead of RPC could address encoding issues, and additional RPC options to reduce verbosity could address that concern. Still, I don't think there was much impetus to improve upon these in an ecosystem that is `getblocktemplate`-based.\r\n\r\nIf (and that is an if) it is clear that the ecosystem is likely to adopt StratumV2, then I believe it makes sense to consider it as an interface too now. An alternative could still be a more \"neutral\" interface that is also push-based, binary, and efficient, and keep the StratumV2 logic as a separate daemon. That has advantages and disadvantages:\r\n\r\n* Advantages:\r\n  * Less complexity in Bitcoin Core to review and maintain.\r\n  * Less tied to the specific protocol, so wouldn't need Bitcoin Core changes when further protocol changes occur (as long as those don't introduce additional data requirements not exposed by the interface), perhaps making it easier to evolve StratumV2 (and/or successors).\r\n* Disadvantages:\r\n  * Slight efficiency/latency loss due to needing an additional process/layer to do the translation.\r\n  * Additional deployment friction (I do think it's important in general to make sure mining is as easy and efficient as possible, and having easily usable interfaces helps with that).\r\n  * In case a feature like outsourcing transaction selection is considered, I can imagine having one party performing the coinbase construction (the pool), and another performing transaction selection (the bitcoind talked to). In case this involves communicating e.g. the size/sigops of that coinbase to bitcoind for block construction, that may be harder to incorporate in a \"neutral\" protocol (it'd necessarily be bidirectional, while REST/ZMQ are inherently uni-directional I believe).\r\n\r\nI haven't reviewed StratumV2 itself, so I'm curious how people see these. Perhaps one can also consider different trade-offs in between \"`bitcoind` speaks the mining protocol directly\" and \"`bitcoind` only speaks a neutral interface\":\r\n* I assume what is considered in this PR is already only a subset of StratumV2 (as I remember there are multiple subprotocols, and I imagine not all of them are relevant to Bitcoin Core). But seeing things like Noise being part of the protocol, I do wonder if it's a possibility to just consider an unencrypted/unauthenticated subset, requiring a (perhaps much thinner) separate daemon to add that. Doing so may perhaps reduce the complexity to maintain in Bitcoin Core significantly.\r\n* Perhaps we see what is considered here as StratumV2 not so much as \"the\" mining protocol we expect everything to use, but just as the de facto binary interface protocol chosen because we need one anyway, and StratumV2 is already designed to cover the needs of such a protocol. If StratumV2 expansions/evolutions come along, or whatever other protocol, it may not be unreasonable to expect that to need a separate daemon that speaks StratumV2 with Bitcoin Core still.\r\n\r\n> This is not something we currently support and would (afaik) require significant changes to our mining/mempool logic (entirely separate of any stratum v2 changes). Once we have that functionality we should expose it through our interfaces (e.g. zmq, rpc, rest) such that applications like stratum v2 can make use of it.\r\n\r\nIt's true that we don't current support this, and that Stratum V2 does not magically solve this, but I do believe that part of the reason we don't is exactly because it's not that trivial in an RPC-based setting, and hard to move away from that in an ecosystem that's reliant on `getblocktemplate`. And in the long term, I do believe it's reasonable to consider at least the possibility of doing block template construction asynchronously in Bitcoin Core, because it is the one piece of infrastructure that has all the information to do so, and moving to such an approach enables for more computationally heavy block building without burdening the critical path.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587485219",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1587553321,
      "node_id": "IC_kwDOABII585eoCQp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587553321",
      "actor": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T15:17:53Z",
      "updated_at": "2023-06-12T15:17:53Z",
      "author_association": "NONE",
      "body": "> An alternative could still be a more \"neutral\" interface that is also push-based, binary, and efficient, and keep the StratumV2 logic as a separate daemon. \r\n\r\nGiven that Sv2 logic for TP is already minimal. The option of not using an already existent interface (zmq,rpc) neiter using the already specified Sv2 interface but redesign from scratch a new one, do not make much sense to me. \r\n\r\n> \r\n    Advantages:\r\n        Less complexity in Bitcoin Core to review and maintain.\r\n        Less tied to the specific protocol, so wouldn't need Bitcoin Core changes when further protocol changes occur (as long as those don't introduce additional data requirements not exposed by the interface), perhaps making it easier to evolve StratumV2 (and/or successors).\r\n    Disadvantages:\r\n        Slight efficiency/latency loss due to needing an additional process/layer to do the translation.\r\n        Additional deployment friction (I do think it's important in general to make sure mining is as easy and efficient as possible, and having easily usable interfaces helps with that).\r\n        In case a feature like outsourcing transaction selection is considered, I can imagine having one party performing the coinbase construction (the pool), and another performing transaction selection (the bitcoind talked to). In case this involves communicating e.g. the size/sigops of that coinbase to bitcoind for block construction, that may be harder to incorporate in a \"neutral\" protocol.\r\n\r\n* Less complexity on Bitcoin Core: not sure how less complex we can be, maybe a little bit, but this with the need to introduce a new interface with his own spec.\r\n* Slight efficiency/latency loss: I don't think that this could ever be a real world issue but the point is right. \r\n* Additional deployment friction: this is one of the main reason for why we want to include noise in the TP and not doing it as a separate layer.\r\n* About the last point the pool/miner communicate how much space at maximum he need for the coinbase outputs and the TP create a template considering it.\r\n\r\n> I assume what is considered in this PR is already only a subset of StratumV2 (as I remember there are multiple subprotocols, and I imagine not all of them are relevant to Bitcoin Core). But seeing things like Noise being part of the protocol, I do wonder if it's a possibility to just consider an unencrypted/unauthenticated subset, requiring a (perhaps much thinner) separate daemon to add that. Doing so may perhaps reduce the complexity to maintain in Bitcoin Core significantly.\r\n\r\nAlso this make sense to me but I still would like to hear the opinion from someone else that have insight into Sv2.\r\n\r\n> Perhaps we see what is considered here as StratumV2 not so much as \"the\" mining protocol we expect everything to use, but just as the de facto binary interface protocol chosen because we need one anyway, and StratumV2 is already designed to cover the needs of such a protocol. If StratumV2 expansions/evolutions come along, or whatever other protocol, it may not be unreasonable to expect that to need a separate daemon that speaks StratumV2 with Bitcoin Core still.\r\n\r\nyep\r\n",
      "user": {
        "login": "Fi3",
        "id": 6207037,
        "node_id": "MDQ6VXNlcjYyMDcwMzc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6207037?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fi3",
        "html_url": "https://github.com/Fi3",
        "followers_url": "https://api.github.com/users/Fi3/followers",
        "following_url": "https://api.github.com/users/Fi3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fi3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fi3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fi3/subscriptions",
        "organizations_url": "https://api.github.com/users/Fi3/orgs",
        "repos_url": "https://api.github.com/users/Fi3/repos",
        "events_url": "https://api.github.com/users/Fi3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fi3/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587553321",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1587650914,
      "node_id": "IC_kwDOABII585eoaFi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587650914",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T16:15:10Z",
      "updated_at": "2023-06-12T16:18:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "> None of these deficiencies require the full StratumV2 approach to address;\n\nThis protocol basically is a protocol designed exactly for this use-case. The fact that it comes under a \"StratumV2\" banner is somewhat unrelated, there's only some common framing. It's also not a substantial protocol, arguably simpler than getblocktemplate in full.\n\nThis protocol exists basically to create an alternative to getblocktemplate which solves key problems in it, and can be used with or without any other Stratumv2 content.\n\n* it is (much, much) lower bandwidth than getblocktemplate,\n* it explicitly moves decisions of when to switch to a new block to bitcoin core with a push model, rather than long polling which almost never gets used in practice. This allows for substantially better optimization of transaction selection and next-block switching across the ecosystem. This also implies we cannot build this das some kind of layer on the existing bitcoin core APIs, there needs to be something new.\n* it provides some cryptographic authentication, allowing the protocol to go over the open internet without fear - this allows the protocol to take the place of current systems like CK's \"solopool\", which allows miners to solo mine without the complexity of running a full node and pool stack, and can now be replicated by any full node. More generally, abstracting the block construction logic from a pool via a protocol which doesn't require tight integration could allow pools or miners with regulatory risk to use a third party template provider.\n\nThis protocol is certainly not set in stone, if someone has ideas for other goals that should be addressed or other protocol tweaks that can still happen at this phase, though ideally not a complete rewrite :).",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587650914",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "reviewed",
      "id": 1475323709,
      "node_id": "PRR_kwDOABII585X76c9",
      "url": null,
      "actor": null,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Just a few random notes, I'm not qualified to review modern C++ anymore :joy: ",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#pullrequestreview-1475323709",
      "submitted_at": "2023-06-12T16:35:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
    },
    {
      "event": "commented",
      "id": 1587728576,
      "node_id": "IC_kwDOABII585eotDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587728576",
      "actor": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T17:06:14Z",
      "updated_at": "2023-06-12T17:06:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "> What are the reasons for not having this as a separate piece of software that calls the Bitcoin Core RPCs? From glancing at the code here it seems like `getblocktemplate` and `submitblock` would be the only needed RPCs. I've seen the discussion about separation (multi-process) in #23049 but wasn't convinced by the arguments there (e.g. [#23049 (comment)](https://github.com/bitcoin/bitcoin/pull/23049#issuecomment-926009122)). I am worried about the maintenance burden of this and would prefer it being a separate thing.\r\n> \r\n> If stratumv3 or \"some other cool new mining protocol\" comes out tomorrow, are we gonna add support for that too? In my opinion, Bitcoin Core's interfaces should accommodate projects like this but direct integration should be reserved for strictly necessary things.\r\n\r\nThanks and appreciate the time for reviewing the PR. A lot of the points are valid especially concerns around maintenance burden and supporting numerous project integrations.\r\n\r\nIn terms of RPC calls, this is of course possible. With stratum v2 some of the goals are around improving performance and reducing latency. JSON RPC can fall short in speed and efficiency. If the sv2 TP were to be run as a separate   process that uses the existing RPC calls, then at a very high level we have the overhead:\r\n\r\n- Encoding Template fields to bytes\r\n- Encode bytes to HexStr\r\n- Build a JSON representation with HexStr fields\r\n- Serialize JSON representation to utf8 binary and send over the wire\r\n\r\nwhere as if sv2 provided templates:\r\n\r\n- Encode Template fields to bytes (sv2 encoding)\r\n- Send sv2 bytes over the wire\r\n\r\nThere are different approaches we could take, none of which I think has necessarily strong support for a particular direction but I guess the common goal would be, to be able to extract templates and submit work more efficiently with less overhead than the current RPCs available",
      "user": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587728576",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1587954425,
      "node_id": "IC_kwDOABII585epkL5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587954425",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T19:32:56Z",
      "updated_at": "2023-06-12T19:32:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> In terms of RPC calls, this is of course possible. With stratum v2 some of the goals are around improving performance and reducing latency. JSON RPC can fall short in speed and efficiency.\r\n\r\nIts not just latency and overhead, however - one of the important goals of replacing GBT in Bitcoin Core broadly is to move towards everything being push, rather than polling. In general, block templates should come out of Bitcoin Core very aggressively - when a new block comes in and has been validated, before the mempool gets updated, we should be able to get a new block template out based on some prediction and conflict-removal, from there, we can update the mempool and then do a full new block generation, updating the template again. During steady-state, we should make decisions about when to update the block template based on new transactions (ignore 30-second-old transactions unless they have lots of fees, do a block template update immediately if a huge-fee transaction comes in, etc). This is important for long-term sustainability of Bitcoin Core as a block template constructor, and while GBT technically supports polling, I don't think any major production pool servers actually use it - it being optional means you can't make decisions like most of the above without assuming everyone uses GBT long-polling, which just isn't true.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587954425",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "labeled",
      "id": 9512583371,
      "node_id": "LE_lADOABII585oYyolzwAAAAI2_oDL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9512583371",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-13T08:08:35Z",
      "label": {
        "name": "Mining",
        "color": "c7def8"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T01:38:28Z",
      "updated_at": "2023-06-14T01:38:28Z",
      "source": {
        "issue": {
          "id": 1712437859,
          "node_id": "I_kwDOABII585mEbpj",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27677/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27677",
          "number": 27677,
          "state": "open",
          "state_reason": null,
          "title": "Proposal for a new mempool design",
          "body": "@sipa and I gave a presentation to some other developers recently about some work we've been doing to redesign how the mempool works, and I wanted to share a writeup outlining our thoughts with a broader audience to further the discussion.  I've also attached a PDF of slides that go along with this: [Reinventing the Mempool.pdf](https://github.com/bitcoin/bitcoin/files/11490409/Reinventing.the.Mempool.pdf).\r\n\r\n--------\r\n\r\n# Summary\r\n\r\nThe current mempool is primarily designed around maintaining two different sort orders, where for each transaction we keep track of its position in an ancestor-feerate-sort and in a descendant-feerate-sort.  We then use those two cached sort orders in order to implement eviction and mining.\r\n\r\nThose algorithms are deficient in several ways. In particular, the eviction algorithm (which removes the transaction with lowest descendant feerate, along with its descendants) does not guarantee that the first transaction evicted would be the last transaction mined, and there exist situations where we could evict a transaction that would otherwise actually be mined in the next block.\r\n\r\nFurthermore, the mining algorithm is more complex than the ancestor feerate sort we maintain, and it is insufficient to merely do lookups into our ancestor feerate index to determine which of two transactions will be mined from the mempool first. This lack of a total ordering on mempool transactions makes RBF calculations difficult to align with miner incentives, and creates distortions where we sometimes can replace transactions via RBF that would actually be better for a miner than the replacement.\r\n\r\nTo solve all these problems, we propose maintaining a total ordering on mempool transactions, which we use to implement a mining and eviction algorithm that are symmetrically opposite and provide better RBF rules for determining when to allow a replacement to occur.\r\n\r\n# Background\r\n\r\n## Eviction and mining are not opposite\r\n\r\nSometimes our eviction criteria might remove something that would be mined in the next block from our mempool. Consider the following transaction graph _(with (ancestor, descendant) feerates in sat/byte in parentheses)_:\r\n\r\n```mermaid\r\ngraph TD;\r\n    A[\"Tx A: size 250, fee 250 (1, 2)\"]-->B;\r\n    A-->C;\r\n    A-->E[\"Tx E: size 250, fee 49750 (100, 199)\"];\r\n    B[\"Tx B: size 50000, fee 50000 (1, 2.02)\"]-->D[\"Tx D: size 500, fee 52000 (1.51, 104)\"];\r\n    C[\"Tx C: size 50000, fee 50000 (1, 2.02)\"]-->D;\r\n```\r\n\r\nNote that the ancestor feerate of E is 100 sat/byte, while the descendant feerate of A is 2 sat/byte.  In particular, the descendant feerate of A is lowest among all transactions in this diagram, so if it were also the lowest descendant feerate package in the mempool, then we might evict A, and therefore E, even though (A, E) might otherwise be selected for the next block.\r\n\r\n## RBF is not incentive compatible\r\n\r\nThere are many forms of incentive incompatibility baked into the BIP 125 replacement rules:\r\n * The \"no-new-parents\" rule doesn't consider the replacement transaction's desirability to a miner -- it might be better than all the to-be-replaced transactions, despite the new unconfirmed parent.\r\n * The rule requiring that a new transaction pays a higher feerate than its direct conflicts is insufficient to ensure that the new transaction is more desirable than what is being evicted. One of the direct conflicts could have a smaller set of unconfirmed parents than the new transaction, resulting in a higher ancestor feerate. Moreover, because we don't compare feerates of any indirect conflicts -- that is, descendants of direct conflicts -- with the feerate of the new transaction, it's possible that we're evicting a child transaction that would otherwise be mined in the next block with something that will not be mined for a long time.\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/26451 for more discussion of the second point.\r\n\r\n# Proposed solution\r\n\r\nIf we're able to maintain a total ordering on the mempool, then we can design efficient algorithms that will solve these problems.\r\n\r\n## How to maintain a total ordering\r\n\r\nWith the current algorithm and rules, it is infeasible to continuously maintain a fully-ordered mempool at all times. Ordering an $n$-transaction mempool from scratch scales with $O(d n \\log n)$, where $d$ is the descendant limit (default 25), which quickly becomes too much when the mempool grows beyond a trivial size. And unfortunately, doing this incrementally (just re-ordering affected transactions whenever updates happen) does not help, because even a single added transaction can change the ordering of all remaining ones.\r\n\r\n[_Edited to use a better example_] As an example of this effect, consider the following transaction graph (all transactions are same size, with ancestor feerates of children in parentheses):\r\n\r\n```mermaid\r\ngraph TD;\r\n    A[Tx A: fee 16]-->D[\"Tx D: fee 17 (16.5)\"];\r\n    A-->E[\"Tx E: fee 19 (16)\"];\r\n    B[Tx B: fee 13]-->E;\r\n    B-->F[\"Tx F: fee 23 (14.67)\"];\r\n    C[Tx C: fee 8]-->F;\r\n```\r\n\r\nWith these ancestor feerates, Tx D should be included first along with its parent Tx A. Once Tx A is included, Tx E will have the next highest ancestor feerate and it is included next with its parent, and so on to produce the ordering: [A, D, B, E, C, F].\r\n\r\nNow consider a single transaction being added, Tx G:\r\n\r\n```mermaid\r\ngraph TD;\r\n    A[Tx A: fee 16]-->D[\"Tx D: fee 17 (16.5)\"];\r\n    A-->E[\"Tx E: fee 19 (16)\"];\r\n    B[Tx B: fee 13]-->E;\r\n    B-->F[\"Tx F: fee 23 (14.67)\"];\r\n    C[Tx C: fee 8]-->F;\r\n    C-->G[\"Tx G: fee 29 (18.5)\"]\r\n```\r\n\r\nTransaction G now has the highest ancestor feerate, and so it would be chosen first in our ancestor-feerate-based ordering. Once Tx G and its parent Tx C are included, Tx F will see its ancestor feerate increase (as it only has one remaining ancestor) to 18, making it the next best to include (along with its parent Tx B). Once Tx B is in, Tx E has the next highest ancestor feerate and we can see that the final ordering of transactions is: [C, G, B, F, A, E, D]. Note that the order in which the child transactions appear has been reversed, and moreover, the number of transactions in this graph could be extended arbitrarily while retaining this behavior.\r\n\r\nFundamentally this means that we need to bound the number of transactions whose ordering can be affected by individual changes to the mempool. Our main insight is that this number is exactly the size of the largest \"cluster\" of transactions that we might have in the mempool, where a \"cluster\" is a maximal set of transactions that are connected via ancestor/descendant relationships in the transaction graph.\r\n\r\nOur proposal is thus to introduce a limit on the size of clusters in the mempool. It then becomes feasible to maintain an ordering for all the individual clusters at all times, and perform a quick merge sort over all of them whenever a total ordering of the entire mempool is needed.\r\n\r\n### Definitions\r\n\r\n#### Clusters\r\n\r\nWe associate the transactions in the mempool with a graph, where each transaction corresponds to a vertex and two transactions are adjacent (ie have an edge between them) if one spends any outputs of the other. We say that two transactions are in the same cluster if there exists a path of edges between them. The overall graph of transactions is partitioned into disjoint clusters, where each transaction is in exactly one cluster. \r\n\r\n#### Linearizations\r\n\r\nWe introduce the term \"linearization\" to refer to any topologically valid ordering of transactions, that is, any ordering of transactions that would be valid in a block under Bitcoin's consensus rules. This could be an ancestor-feerate-based ordering of transactions (like we use in the mining code today), or it could be the optimal ordering (one where we choose amongst all possible subsets of transactions the topologically valid subset that maximizes feerate, and repeat until all transactions are selected).  Or it could be something in between; for the purposes of discussion we abstract away the details of the cluster ordering algorithm, or \"linearization\", that we might settle on.\r\n\r\n#### Chunks\r\n\r\nOur intuition for cluster linearization algorithms is that we often will choose transactions with lower feerate before we choose transactions with higher feerate, because of topology constraints. This is a consequence of behaviors like \"child- pays-for-parent\".  So when thinking about how we might compare transactions from two different clusters to determine which  one is \"better\" (eg for mining) or \"worse\" (eg for eviction), we don't just want to look at the first or last transaction in the cluster. Instead, our intuition is that we want to look at the same package of transactions that our ordering algorithm would have used in coming up with the ordering in the first place.\r\n\r\nThis concept, that transactions should be looked at in some aggregate with other transactions, can be generalized in a way that is indifferent to the underlying linearization algorithm that is used. For a given linearized cluster  $[tx_1, ..., tx_n]$, we can partition the cluster into a series of disjoint \"chunks\" $[c_1, c_2, ..., c_j]$ where $c_1 = [tx_1, ..., tx_{i_1}]$, $c_2 = [tx_{i_1+1}, ..., tx_{i_2}]$ ,..., $c_j = [tx_{i_{j-1}+1}, ..., tx_n]$, such that the feerate of each chunk is no greater than the feerate of the chunk that precedes it. \r\n\r\nAnother way of putting it: chunks are the partitioning of a cluster that respects the linearization in a way that ensures that feerates from one chunk to the next are monotonically decreasing.\r\n\r\n(_Note that due to ties there can be more than one chunking that is compatible with the given definition; generally we'll prefer smaller chunks and therefore not merge together chunks with the same feerate._)\r\n\r\nGiven any cluster linearization, it turns out that it's possible to construct the chunks for the cluster in linear time, and this operation is independent of the linearization algorithm that may have been used.\r\n\r\n### Implementing fundamental mempool operations\r\n\r\nFor the sake of discussion below, let's now imagine that our mempool is grouped into its different clusters, and each cluster is linearized using some algorithm (perhaps the ancestor-feerate-based mining algorithm in use today, or perhaps an optimal ordering), and those linearized clusters are each chunked into their monotonically decreasing feerate order.  Given such a mempool, we can design algorithms to implement the fundamental mempool operations.\r\n\r\n#### Mining\r\n\r\nOur goal with mining is to maximize the fees in a block template, and we do so by applying a greedy algorithm. \r\n\r\n1. Make a highest-feerate-sorted heap consisting of the first chunk from each cluster.  Note that these will be each cluster's highest feerate chunk.\r\n2. While the candidate block is not yet full:\r\n    i. Remove the top of the heap and add to the block candidate.\r\n    ii. If the cluster from which the selection was made has more chunks left, insert the next best chunk from that cluster into the heap.\r\n\r\nNote that when we approach the end of a block, we run into a knapsack problem where chunks may not fit. How we might optimize the end of a block is deferred for later discussion.\r\n\r\n#### Eviction\r\n\r\nOur goal with eviction is to remove the transactions that would be the last ones selected by our mining algorithm. With a  fully ordered mempool, this calculation is straightforward and mirrors the mining algorithm.\r\n\r\n1. Make a lowest-feerate-sorted heap consisting of the last chunk from each cluster. Note that these will be each cluster's lowest feerate chunk.\r\n2. While the mempool is over its size limit:\r\n    i. Remove the top of the heap and evict from the mempool.\r\n    ii. If the cluster from which the selection was made has more chunks left, insert the next lowest feerate chunk from that cluster into the heap.\r\n\r\nAs with our current eviction algorithm, we will also bump up the mempool's minimum fee to be an increment above the highest feerate chunk that was evicted.\r\n\r\n#### RBF\r\n\r\nOur goal with RBF is to allow a \"better\" transaction (something a miner would prefer to have) to evict some existing, conflicting transactions in a way that is DoS-resistant but is otherwise as permissible as practical.\r\n\r\nGiven a mempool where all clusters are ordered and chunked, we can assign a score to a transaction which is the chunk feerate of the chunk to which it belongs.  Then our main RBF incentive compatibility rule just becomes:\r\n\r\n1. A replacement transaction must have a chunk feerate greater than that of all transactions which it would evict.\r\n\r\nThis would eliminate the BIP 125 rule against replacements introducing new unconfirmed parents and replaces the BIP 125 feerate rule in which a replacement transaction must have a higher individual feerate than all direct conflicts.\r\n\r\nHowever, at least for now, we would retain some of the additional anti-DoS rules:\r\n\r\n1. A replacement transaction must pay more total fees than the sum of fees paid by all evicted transactions.\r\n2. A replacement transaction must not evict more than (100?) existing transactions.\r\n\r\nThe first of those rules prevents free-relay attacks, while some version of the second rule is necessary to prevent us from needing to re-cluster/re-order too much of the mempool while processing a single transaction.\r\n\r\n## Some open questions\r\n\r\n1. Philosophically, is it problematic for RBF rules to be even more of a \"black box\" than the BIP 125 algorithm?\r\n2. Are there usage patterns for wallets or other protocols that would be fundamentally harmed by cluster size limits? Do we know what values would be acceptable or what values would be insufficient?\r\n3. What can we do if a high feerate transaction arrives that would violate the cluster limit? Can we design some sort of \"cluster-sibling eviction\" algorithm that is DoS-resistant and would help reduce the downsides of cluster size limits?\r\n4. Is it problematic if linearization algorithms used on the network are non-deterministic?\r\n   * We could imagine using a variety of linearization algorithms at any given moment -- perhaps for small clusters we use an exponential run-time optimal ordering algorithm, while for medium sized clusters we do something different, like an ancestor-feerate-based ordering, or an optimal ordering with some bounded computation limits.\r\n   * Are there situations where different nodes having different orders causes meaningful user-facing issues with transactions not relaying effectively, eg because of the use of chunk feerates in the RBF algorithm?\r\n6. Chunk sizes should be bounded in vbytes, so that we don't exacerbate the knapsack problem during mining. However, what is the best way to do that?\r\n   * We could just bound the vbytes allowed in a single cluster, which would guarantee that chunks are not too big.\r\n   * Or we could design linearization algorithms and adapt our chunking logic to never produce chunks bigger than a certain size -- but this would come at the expense of chunks within a cluster no longer having monotonically decreasing feerates. This may be possible to do, but is the need for large clusters (measured in vbytes) great enough to warrant the complexity that this would introduce in our algorithms?\r\n\r\n# Current status and next steps\r\n\r\n1. First draft implementation of this logic is done (link to be added).\r\n2. Analyzing effects of this logic on historical transaction data is in process, to try to answer questions like:\r\n   * How big are the clusters we've historically seen / what is the cluster size distribution on the network today\r\n   * How would the network have been affected if we'd had cluster sizes bounded at various different values in the past\r\n3. Performance analysis of all the mempool operations (particularly as a function of cluster size) to ensure that mempool operations are optimized with this approach.\r\n4. The information gathered will (eventually) inform a concrete proposal for what cluster size limits we might consider (along with chunk vbyte and/or cluster vbyte limits).\r\n",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 13,
          "created_at": "2023-05-16T17:29:33Z",
          "updated_at": "2023-06-14T01:38:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1590322328,
      "node_id": "IC_kwDOABII585eymSY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1590322328",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T01:56:56Z",
      "updated_at": "2023-06-14T01:56:56Z",
      "author_association": "MEMBER",
      "body": "Over-turning my comment from https://github.com/bitcoin/bitcoin/pull/23049#issuecomment-925446441. After studying more Stratum V2 and the inner details of mining operations, and in light of more “reactive\" block template construction in future in function of the processed mempool content, I think this more valuable to have Stratum V2 TP integrated in Bitcoin Core to enhance decentralization of the mining ecosystem. From a maintenance viewpoint, the changes are very “peripheral” from other subsystem like the validation engine or the p2p stack so concept ACK to have Stratum V2 TP in Core.\r\n\r\n> Another architectural approach other than a new thread and server for the Sv2 TP might be preferred such as the current work in the [multiprocess project](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Process-Separation)\r\n\r\nIn the future, it might make sense to split the `bitcoin-node` process in a bunch of more granualr process (e.g `bitcoin-validation`, `bitcoin-server` with indexes, `bitcoin-p2p`) to avoid exposed DoS leakage between them or having redundance of some functionality like block-relay. What can be a good architecture/deployment fit for a “hobbyist” full-node might not work for a substantial mining pool or Lightning Service Provider.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1590322328",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1591759027,
      "node_id": "IC_kwDOABII585e4FCz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1591759027",
      "actor": {
        "login": "dunxen",
        "id": 3072149,
        "node_id": "MDQ6VXNlcjMwNzIxNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3072149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dunxen",
        "html_url": "https://github.com/dunxen",
        "followers_url": "https://api.github.com/users/dunxen/followers",
        "following_url": "https://api.github.com/users/dunxen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dunxen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dunxen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dunxen/subscriptions",
        "organizations_url": "https://api.github.com/users/dunxen/orgs",
        "repos_url": "https://api.github.com/users/dunxen/repos",
        "events_url": "https://api.github.com/users/dunxen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dunxen/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T18:09:28Z",
      "updated_at": "2023-06-14T18:09:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK as an alternative to getblocktemplate. I’m still digging into the deeper bits of StratumV2 though. :)",
      "user": {
        "login": "dunxen",
        "id": 3072149,
        "node_id": "MDQ6VXNlcjMwNzIxNDk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3072149?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dunxen",
        "html_url": "https://github.com/dunxen",
        "followers_url": "https://api.github.com/users/dunxen/followers",
        "following_url": "https://api.github.com/users/dunxen/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dunxen/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dunxen/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dunxen/subscriptions",
        "organizations_url": "https://api.github.com/users/dunxen/orgs",
        "repos_url": "https://api.github.com/users/dunxen/repos",
        "events_url": "https://api.github.com/users/dunxen/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dunxen/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1591759027",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1591898368,
      "node_id": "IC_kwDOABII585e4nEA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1591898368",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-14T20:04:45Z",
      "updated_at": "2023-06-14T20:04:45Z",
      "author_association": "MEMBER",
      "body": "I've been playing around with Stratum v2 in recent months and may get my hands on an old S9. So hopefully I can test this when electricity prices go negative, soon(tm).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1591898368",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "benthecarman",
        "id": 15256660,
        "node_id": "MDQ6VXNlcjE1MjU2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benthecarman",
        "html_url": "https://github.com/benthecarman",
        "followers_url": "https://api.github.com/users/benthecarman/followers",
        "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
        "organizations_url": "https://api.github.com/users/benthecarman/orgs",
        "repos_url": "https://api.github.com/users/benthecarman/repos",
        "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benthecarman/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-15T17:43:27Z",
      "updated_at": "2023-06-15T17:43:27Z",
      "source": {
        "issue": {
          "id": 1717945905,
          "node_id": "I_kwDOExOzMs5mZcYx",
          "url": "https://api.github.com/repos/austinbitdevs/austinbitdevs.com/issues/20",
          "repository_url": "https://api.github.com/repos/austinbitdevs/austinbitdevs.com",
          "labels_url": "https://api.github.com/repos/austinbitdevs/austinbitdevs.com/issues/20/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/austinbitdevs/austinbitdevs.com/issues/20/comments",
          "events_url": "https://api.github.com/repos/austinbitdevs/austinbitdevs.com/issues/20/events",
          "html_url": "https://github.com/austinbitdevs/austinbitdevs.com/issues/20",
          "number": 20,
          "state": "closed",
          "state_reason": "completed",
          "title": "June Topics",
          "body": null,
          "user": {
            "login": "benthecarman",
            "id": 15256660,
            "node_id": "MDQ6VXNlcjE1MjU2NjYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benthecarman",
            "html_url": "https://github.com/benthecarman",
            "followers_url": "https://api.github.com/users/benthecarman/followers",
            "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
            "organizations_url": "https://api.github.com/users/benthecarman/orgs",
            "repos_url": "https://api.github.com/users/benthecarman/repos",
            "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/benthecarman/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 11,
          "closed_at": "2023-07-11T00:22:04Z",
          "created_at": "2023-05-19T23:55:58Z",
          "updated_at": "2023-07-11T00:22:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-16T10:37:04Z",
      "updated_at": "2023-06-16T10:37:04Z",
      "source": {
        "issue": {
          "id": 1760282121,
          "node_id": "PR_kwDOABII585TLBTv",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27896",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27896/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27896/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27896/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/27896",
          "number": 27896,
          "state": "closed",
          "state_reason": null,
          "title": "Remove the syscall sandbox",
          "body": "After initially being merged in #20487, it's no-longer clear that an internal syscall sandboxing mechanism is something that Bitcoin Core should have/maintain, especially when compared to better maintained/supported alterantives, i.e [firejail](https://github.com/netblue30/firejail).\r\n\r\nThere is more related discussion in #24771.\r\n\r\nNote that given where it's used, the sandbox also gets dragged into the kernel.\r\n\r\nIf it's removed, this should not require any sort of deprecation, as this was only ever an opt-in, experimental feature.\r\n\r\nCloses #24771.",
          "user": {
            "login": "fanquake",
            "id": 863730,
            "node_id": "MDQ6VXNlcjg2MzczMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fanquake",
            "html_url": "https://github.com/fanquake",
            "followers_url": "https://api.github.com/users/fanquake/followers",
            "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
            "organizations_url": "https://api.github.com/users/fanquake/orgs",
            "repos_url": "https://api.github.com/users/fanquake/repos",
            "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/fanquake/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 234878,
              "node_id": "MDU6TGFiZWwyMzQ4Nzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Linux/Unix",
              "name": "Linux/Unix",
              "color": "770000",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 6,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27896",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/27896",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/27896.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/27896.patch"
          },
          "closed_at": "2023-06-27T22:19:34Z",
          "created_at": "2023-06-16T09:41:43Z",
          "updated_at": "2023-06-28T10:15:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1598574675,
      "node_id": "IC_kwDOABII585fSFBT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1598574675",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-20T11:07:43Z",
      "updated_at": "2023-06-20T11:07:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK.\r\n\r\n> may get my hands on an old S9. So hopefully I can test this when electricity prices go negative\r\n\r\nI even have S9 and could be ok to pay that electricity bill for some tests, but currently it's already too hot in my flat (I use it as a space heater from time to time, when it's too cold).",
      "user": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1598574675",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1605237375,
      "node_id": "IC_kwDOABII585frfp_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1605237375",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-24T02:23:29Z",
      "updated_at": "2023-06-24T02:23:29Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1605237375",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "commented",
      "id": 1607656508,
      "node_id": "IC_kwDOABII585f0uQ8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1607656508",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-26T14:53:49Z",
      "updated_at": "2023-06-26T14:54:11Z",
      "author_association": "MEMBER",
      "body": "@kristapsk I removed two of the three hashboards and set the target consumption to 100W. In practice it's more like 130, but that's fine; not hot and not too noisy (mine came with BrainsOS+ installed)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1607656508",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "mentioned",
      "id": 9640164441,
      "node_id": "MEE_lADOABII585oYyolzwAAAAI-mTxZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9640164441",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-26T14:53:49Z"
    },
    {
      "event": "subscribed",
      "id": 9640164461,
      "node_id": "SE_lADOABII585oYyolzwAAAAI-mTxt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9640164461",
      "actor": {
        "login": "kristapsk",
        "id": 4500994,
        "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kristapsk",
        "html_url": "https://github.com/kristapsk",
        "followers_url": "https://api.github.com/users/kristapsk/followers",
        "following_url": "https://api.github.com/users/kristapsk/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kristapsk/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kristapsk/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
        "organizations_url": "https://api.github.com/users/kristapsk/orgs",
        "repos_url": "https://api.github.com/users/kristapsk/repos",
        "events_url": "https://api.github.com/users/kristapsk/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kristapsk/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-26T14:53:49Z"
    },
    {
      "event": "commented",
      "id": 1610320717,
      "node_id": "IC_kwDOABII585f-4tN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1610320717",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T22:46:44Z",
      "updated_at": "2023-06-27T22:46:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1610320717",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "labeled",
      "id": 9657776135,
      "node_id": "LE_lADOABII585oYyolzwAAAAI_pfgH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9657776135",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-27T22:46:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1511170547,
      "node_id": "PRR_kwDOABII585aEqHz",
      "url": null,
      "actor": null,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "The PR description could use instructions on how to test this. Specifically I'd like to try it on mainnet against my vintage S9 with BraiinsOS+ (not sure which pools already support job negotiation/ announcement). This can of course point to existing documentation. [Config D](https://stratumprotocol.org/getting-started/#config-d-sv1-firmware--translation-proxy-jn-job-negotiator--sv2-pool) is close but it assumes regtest and running your own pool.\r\n\r\nIt will also be easier to test and review this pull request if you add some functional tests. Maybe also add a `-debug=sv2` log category so it's easier to see what's happening.\r\n\r\n> There could be potential conflict with functional tests. [...] My guess is that it would be acceptable to disable the Sv2 TP when running functional tests [...]\r\n\r\nI think it's better to fix / improve these tests. Depending on the exact issue that could be done in a separate PR.\r\n\r\nImo this does not need to go behind a `--enable-template-provider` flag. Having `-stratumv2` off by default is enough. You're not adding a new dependency nor creating a new binary. Covering all possible configure flags in CI scales exponentially. Of course this ties into my previous point about tests.\r\n\r\nI'm seeing `CreateNewBlock()` messages now even when running without `-stratumv2`. That should probably be changed.\r\n\r\nWhen running with `-stratumv2` it says `Sv2 Template Provider listening on port: 0` so something is off with the default argument parsing there.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#pullrequestreview-1511170547",
      "submitted_at": "2023-07-03T13:57:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "lucasdcf",
        "id": 68931156,
        "node_id": "MDQ6VXNlcjY4OTMxMTU2",
        "avatar_url": "https://avatars.githubusercontent.com/u/68931156?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lucasdcf",
        "html_url": "https://github.com/lucasdcf",
        "followers_url": "https://api.github.com/users/lucasdcf/followers",
        "following_url": "https://api.github.com/users/lucasdcf/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lucasdcf/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lucasdcf/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lucasdcf/subscriptions",
        "organizations_url": "https://api.github.com/users/lucasdcf/orgs",
        "repos_url": "https://api.github.com/users/lucasdcf/repos",
        "events_url": "https://api.github.com/users/lucasdcf/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lucasdcf/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-10T16:09:19Z",
      "updated_at": "2023-07-10T16:09:19Z",
      "source": {
        "issue": {
          "id": 1786898987,
          "node_id": "I_kwDOHi0ngs5qgeor",
          "url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org/issues/5",
          "repository_url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org",
          "labels_url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org/issues/5/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org/issues/5/comments",
          "events_url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org/issues/5/events",
          "html_url": "https://github.com/saopaulobitdevs/saopaulobitdevs.org/issues/5",
          "number": 5,
          "state": "closed",
          "state_reason": "completed",
          "title": "Topicos Julho/2023",
          "body": "Issue para propor e discutir os topicos para o proximo bitdevs.\r\n\r\nComentem com os topicos que voces gostariam de abordar/discutir",
          "user": {
            "login": "lorenzolfm",
            "id": 38786333,
            "node_id": "MDQ6VXNlcjM4Nzg2MzMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38786333?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lorenzolfm",
            "html_url": "https://github.com/lorenzolfm",
            "followers_url": "https://api.github.com/users/lorenzolfm/followers",
            "following_url": "https://api.github.com/users/lorenzolfm/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/lorenzolfm/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/lorenzolfm/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/lorenzolfm/subscriptions",
            "organizations_url": "https://api.github.com/users/lorenzolfm/orgs",
            "repos_url": "https://api.github.com/users/lorenzolfm/repos",
            "events_url": "https://api.github.com/users/lorenzolfm/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/lorenzolfm/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 5694222796,
              "node_id": "LA_kwDOHi0ngs8AAAABU2bxzA",
              "url": "https://api.github.com/repos/saopaulobitdevs/saopaulobitdevs.org/labels/discussion",
              "name": "discussion",
              "description": "",
              "color": "E9652D",
              "default": false
            }
          ],
          "assignee": {
            "login": "lorenzolfm",
            "id": 38786333,
            "node_id": "MDQ6VXNlcjM4Nzg2MzMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/38786333?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lorenzolfm",
            "html_url": "https://github.com/lorenzolfm",
            "followers_url": "https://api.github.com/users/lorenzolfm/followers",
            "following_url": "https://api.github.com/users/lorenzolfm/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/lorenzolfm/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/lorenzolfm/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/lorenzolfm/subscriptions",
            "organizations_url": "https://api.github.com/users/lorenzolfm/orgs",
            "repos_url": "https://api.github.com/users/lorenzolfm/repos",
            "events_url": "https://api.github.com/users/lorenzolfm/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/lorenzolfm/received_events",
            "type": "User",
            "site_admin": false
          },
          "assignees": [
            {
              "login": "lorenzolfm",
              "id": 38786333,
              "node_id": "MDQ6VXNlcjM4Nzg2MzMz",
              "avatar_url": "https://avatars.githubusercontent.com/u/38786333?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/lorenzolfm",
              "html_url": "https://github.com/lorenzolfm",
              "followers_url": "https://api.github.com/users/lorenzolfm/followers",
              "following_url": "https://api.github.com/users/lorenzolfm/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/lorenzolfm/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/lorenzolfm/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/lorenzolfm/subscriptions",
              "organizations_url": "https://api.github.com/users/lorenzolfm/orgs",
              "repos_url": "https://api.github.com/users/lorenzolfm/repos",
              "events_url": "https://api.github.com/users/lorenzolfm/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/lorenzolfm/received_events",
              "type": "User",
              "site_admin": false
            }
          ],
          "author_association": "COLLABORATOR",
          "locked": false,
          "comments": 18,
          "closed_at": "2023-07-24T18:48:10Z",
          "created_at": "2023-07-03T22:52:55Z",
          "updated_at": "2023-07-24T18:48:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1632207805,
      "node_id": "IC_kwDOABII585hSYO9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632207805",
      "actor": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T09:56:42Z",
      "updated_at": "2023-07-12T09:56:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hi @Sjors , thanks and appreciate the review,\r\n\r\n> The PR description could use instructions on how to test this. Specifically I'd like to try it on mainnet against my vintage S9 with BraiinsOS+ (not sure which pools already support job negotiation/ announcement). This can of course point to existing documentation. [Config D](https://stratumprotocol.org/getting-started/#config-d-sv1-firmware--translation-proxy-jn-job-negotiator--sv2-pool) is close but it assumes regtest and running your own pool.\r\n\r\nFor this, honestly I'm not sure which would be the best configuration, I'll need to ask a few people that have done mainnet testing/testing with devices. I'll update the PR description once I find out.\r\n\r\n---\r\n\r\n> It will also be easier to test and review this pull request if you add some functional tests. Maybe also add a `-debug=sv2` log category so it's easier to see what's happening.\r\n> \r\n> > There could be potential conflict with functional tests. [...] My guess is that it would be acceptable to disable the Sv2 TP when running functional tests [...]\r\n> \r\n> I think it's better to fix / improve these tests. Depending on the exact issue that could be done in a separate PR.\r\n\r\nYou're right, I'll work on setting up some functional tests and also adding the debug log category.\r\n\r\n---\r\n\r\n> Imo this does not need to go behind a `--enable-template-provider` flag. Having `-stratumv2` off by default is enough. You're not adding a new dependency nor creating a new binary. Covering all possible configure flags in CI scales exponentially. Of course this ties into my previous point about tests.\r\n> \r\n> I'm seeing `CreateNewBlock()` messages now even when running without `-stratumv2`. That should probably be changed.\r\n> \r\n> When running with `-stratumv2` it says `Sv2 Template Provider listening on port: 0` so something is off with the default argument parsing there.\r\n\r\nThis makes more sense. I implemented this change removing the compile configuration flag and just used `-stratumv2` and `stratumv2port` with some default ports for each env. \r\n\r\nI think since there's a lot of changes in this one PR and noise to come, it would probably make sense to break this down into much smaller focused PRs? I think it would be much more beneficial for reviewers to consume and review smaller chunks of code.",
      "user": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1632207805",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27854"
    },
    {
      "event": "mentioned",
      "id": 9797177204,
      "node_id": "MEE_lADOABII585oYyolzwAAAAJH9Q90",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9797177204",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T09:56:43Z"
    },
    {
      "event": "subscribed",
      "id": 9797177227,
      "node_id": "SE_lADOABII585oYyolzwAAAAJH9Q-L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9797177227",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-12T09:56:43Z"
    },
    {
      "event": "reviewed",
      "id": 1550950789,
      "node_id": "PRR_kwDOABII585ccaGF",
      "url": null,
      "actor": null,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#pullrequestreview-1550950789",
      "submitted_at": "2023-07-27T22:52:21Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226922409",
      "pull_request_review_id": 1475323709,
      "id": 1226922409,
      "node_id": "PRRC_kwDOABII585JIVmp",
      "diff_hunk": "@@ -344,6 +344,17 @@ AC_ARG_ENABLE([lto],\n     [enable_lto=$enableval],\n     [enable_lto=no])\n \n+dnl Enable running a StratumV2 Template Provider server.",
      "path": "configure.ac",
      "position": 4,
      "original_position": 4,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why bother making this optional? Can just have a config flag.",
      "created_at": "2023-06-12T16:28:32Z",
      "updated_at": "2023-06-12T16:35:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226922409",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226922409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 347,
      "original_line": 347,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226924386",
      "pull_request_review_id": 1475323709,
      "id": 1226924386,
      "node_id": "PRRC_kwDOABII585JIWFi",
      "diff_hunk": "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;\n+\n+    /**\n+     * Optional protocol features provided by the server.\n+     */\n+    uint16_t optional_features = 0;\n+\n+    /**\n+     * The default option for the additional space required for coinbase output.\n+     */\n+    unsigned int default_coinbase_tx_additional_output_size = 0;",
      "path": "src/sv2_template_provider.h",
      "position": 64,
      "original_position": 64,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Shouldnt this be non-0? 1KB would match the current GBT logic. More generally, there doesn't seem to be a way to set this, somehow I'd thought it was in the exposed protocol, but if not it probably should be.",
      "created_at": "2023-06-12T16:30:29Z",
      "updated_at": "2023-06-12T16:35:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226924386",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226924386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 64,
      "original_line": 64,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226927976",
      "pull_request_review_id": 1475323709,
      "id": 1226927976,
      "node_id": "PRRC_kwDOABII585JIW9o",
      "diff_hunk": "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;\n+\n+    /**\n+     * Optional protocol features provided by the server.\n+     */\n+    uint16_t optional_features = 0;\n+\n+    /**\n+     * The default option for the additional space required for coinbase output.\n+     */\n+    unsigned int default_coinbase_tx_additional_output_size = 0;\n+\n+    /**\n+     * The default flag for all new work.\n+     */\n+    bool default_future_templates = true;",
      "path": "src/sv2_template_provider.h",
      "position": 69,
      "original_position": 69,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why is this a config flag? The message future_template bit indicates that its a predicted template, and presumably we'll have a stream of both predicted and current templates on the wire, not something in the options?",
      "created_at": "2023-06-12T16:33:58Z",
      "updated_at": "2023-06-12T16:35:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226927976",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226927976"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226928617",
      "pull_request_review_id": 1475323709,
      "id": 1226928617,
      "node_id": "PRRC_kwDOABII585JIXHp",
      "diff_hunk": "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;",
      "path": "src/sv2_template_provider.h",
      "position": 54,
      "original_position": 54,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": null,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Is there a reason not to hard-code this and optional_features until we actually have a need for them? Just less code if we do.",
      "created_at": "2023-06-12T16:34:37Z",
      "updated_at": "2023-06-12T16:35:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226928617",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226928617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227252081",
      "pull_request_review_id": 1475838967,
      "id": 1227252081,
      "node_id": "PRRC_kwDOABII585JJmFx",
      "diff_hunk": "@@ -344,6 +344,17 @@ AC_ARG_ENABLE([lto],\n     [enable_lto=$enableval],\n     [enable_lto=no])\n \n+dnl Enable running a StratumV2 Template Provider server.",
      "path": "configure.ac",
      "position": 4,
      "original_position": 4,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": 1226922409,
      "user": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I reasoned since that this proposal wasn't introducing/editing arguably a core feature that it should be optional. Also setting it by default, I think clashes with how the functional tests currently run in Bitcoin since the sv2 server will respond to building a new template on best block change and will affect assertions on the state of the mempool in functional tests.",
      "created_at": "2023-06-12T21:17:42Z",
      "updated_at": "2023-06-12T21:17:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227252081",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227252081"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 347,
      "original_line": 347,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227252607",
      "pull_request_review_id": 1475839499,
      "id": 1227252607,
      "node_id": "PRRC_kwDOABII585JJmN_",
      "diff_hunk": "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;\n+\n+    /**\n+     * Optional protocol features provided by the server.\n+     */\n+    uint16_t optional_features = 0;\n+\n+    /**\n+     * The default option for the additional space required for coinbase output.\n+     */\n+    unsigned int default_coinbase_tx_additional_output_size = 0;\n+\n+    /**\n+     * The default flag for all new work.\n+     */\n+    bool default_future_templates = true;",
      "path": "src/sv2_template_provider.h",
      "position": 69,
      "original_position": 69,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": 1226927976,
      "user": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is true, I treated this PR as draft. Currently in development and testing against the SRI, all templates are assumed to be future so this would be updated if this PR gains interest for a complete implementation.",
      "created_at": "2023-06-12T21:18:12Z",
      "updated_at": "2023-06-12T21:18:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227252607",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227252607"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227253132",
      "pull_request_review_id": 1475839956,
      "id": 1227253132,
      "node_id": "PRRC_kwDOABII585JJmWM",
      "diff_hunk": "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;",
      "path": "src/sv2_template_provider.h",
      "position": 54,
      "original_position": 54,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": 1226928617,
      "user": {
        "login": "ccdle12",
        "id": 18324680,
        "node_id": "MDQ6VXNlcjE4MzI0Njgw",
        "avatar_url": "https://avatars.githubusercontent.com/u/18324680?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ccdle12",
        "html_url": "https://github.com/ccdle12",
        "followers_url": "https://api.github.com/users/ccdle12/followers",
        "following_url": "https://api.github.com/users/ccdle12/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ccdle12/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ccdle12/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ccdle12/subscriptions",
        "organizations_url": "https://api.github.com/users/ccdle12/orgs",
        "repos_url": "https://api.github.com/users/ccdle12/repos",
        "events_url": "https://api.github.com/users/ccdle12/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ccdle12/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "True, we can hard code it when these fields need to be serialized and add a comment above explaining why they are currently hard coded",
      "created_at": "2023-06-12T21:18:38Z",
      "updated_at": "2023-06-12T21:18:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227253132",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227253132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227309139",
      "pull_request_review_id": 1475918893,
      "id": 1227309139,
      "node_id": "PRRC_kwDOABII585JJ0BT",
      "diff_hunk": "@@ -344,6 +344,17 @@ AC_ARG_ENABLE([lto],\n     [enable_lto=$enableval],\n     [enable_lto=no])\n \n+dnl Enable running a StratumV2 Template Provider server.",
      "path": "configure.ac",
      "position": 4,
      "original_position": 4,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": 1226922409,
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We can turn it on with a non-default config knob, though, it doesn't have to be non-built. I'm not sure I understand why it should be compile-time optional - it doesn't add a new dependency, doesn't invasive touch other code, and is completely unused if the config knob isn't turned on.",
      "created_at": "2023-06-12T22:35:45Z",
      "updated_at": "2023-06-12T22:35:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227309139",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227309139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 347,
      "original_line": 347,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1250873859",
      "pull_request_review_id": 1511170547,
      "id": 1250873859,
      "node_id": "PRRC_kwDOABII585KjtID",
      "diff_hunk": "@@ -630,6 +638,10 @@ void SetupServerArgs(ArgsManager& argsman)\n #if defined(USE_SYSCALL_SANDBOX)\n     argsman.AddArg(\"-sandbox=<mode>\", \"Use the experimental syscall sandbox in the specified mode (-sandbox=log-and-abort or -sandbox=abort). Allow only expected syscalls to be used by bitcoind. Note that this is an experimental new feature that may cause bitcoind to exit or crash unexpectedly: use with caution. In the \\\"log-and-abort\\\" mode the invocation of an unexpected syscall results in a debug handler being invoked which will log the incident and terminate the program (without executing the unexpected syscall). In the \\\"abort\\\" mode the invocation of an unexpected syscall results in the entire process being killed immediately by the kernel without executing the unexpected syscall.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif // USE_SYSCALL_SANDBOX\n+       //\n+#if ENABLE_TEMPLATE_PROVIDER\n+    argsman.AddArg(\"-stratumv2=<port>\", \"Listen for stratumv2 connections on <port>. Bitcoind will act as a Template Provider. (default: 8442)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init.cpp",
      "position": 42,
      "original_position": 42,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This should also mention the testnet, regtest and signet ports.",
      "created_at": "2023-07-03T13:11:18Z",
      "updated_at": "2023-07-03T13:57:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1250873859",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1250873859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 643,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276895712",
      "pull_request_review_id": 1550950789,
      "id": 1276895712,
      "node_id": "PRRC_kwDOABII585MG-Hg",
      "diff_hunk": "@@ -630,6 +638,10 @@ void SetupServerArgs(ArgsManager& argsman)\n #if defined(USE_SYSCALL_SANDBOX)\n     argsman.AddArg(\"-sandbox=<mode>\", \"Use the experimental syscall sandbox in the specified mode (-sandbox=log-and-abort or -sandbox=abort). Allow only expected syscalls to be used by bitcoind. Note that this is an experimental new feature that may cause bitcoind to exit or crash unexpectedly: use with caution. In the \\\"log-and-abort\\\" mode the invocation of an unexpected syscall results in a debug handler being invoked which will log the incident and terminate the program (without executing the unexpected syscall). In the \\\"abort\\\" mode the invocation of an unexpected syscall results in the entire process being killed immediately by the kernel without executing the unexpected syscall.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif // USE_SYSCALL_SANDBOX\n+       //\n+#if ENABLE_TEMPLATE_PROVIDER\n+    argsman.AddArg(\"-stratumv2=<port>\", \"Listen for stratumv2 connections on <port>. Bitcoind will act as a Template Provider. (default: 8442)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init.cpp",
      "position": 42,
      "original_position": 42,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Probably should be called `-stratumv2port`, unless it supports specifying an IP to bind to (probably a good idea)",
      "created_at": "2023-07-27T22:48:41Z",
      "updated_at": "2023-07-27T22:52:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276895712",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276895712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 643,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896030",
      "pull_request_review_id": 1550950789,
      "id": 1276896030,
      "node_id": "PRRC_kwDOABII585MG-Me",
      "diff_hunk": "@@ -630,6 +638,10 @@ void SetupServerArgs(ArgsManager& argsman)\n #if defined(USE_SYSCALL_SANDBOX)\n     argsman.AddArg(\"-sandbox=<mode>\", \"Use the experimental syscall sandbox in the specified mode (-sandbox=log-and-abort or -sandbox=abort). Allow only expected syscalls to be used by bitcoind. Note that this is an experimental new feature that may cause bitcoind to exit or crash unexpectedly: use with caution. In the \\\"log-and-abort\\\" mode the invocation of an unexpected syscall results in a debug handler being invoked which will log the incident and terminate the program (without executing the unexpected syscall). In the \\\"abort\\\" mode the invocation of an unexpected syscall results in the entire process being killed immediately by the kernel without executing the unexpected syscall.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif // USE_SYSCALL_SANDBOX\n+       //\n+#if ENABLE_TEMPLATE_PROVIDER\n+    argsman.AddArg(\"-stratumv2=<port>\", \"Listen for stratumv2 connections on <port>. Bitcoind will act as a Template Provider. (default: 8442)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init.cpp",
      "position": 42,
      "original_position": 42,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We don't typically refer to \"Bitcoind\" like this",
      "created_at": "2023-07-27T22:49:07Z",
      "updated_at": "2023-07-27T22:52:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276896030",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 643,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896582",
      "pull_request_review_id": 1550950789,
      "id": 1276896582,
      "node_id": "PRRC_kwDOABII585MG-VG",
      "diff_hunk": "@@ -1869,6 +1881,22 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         return false;\n     }\n \n+#ifdef ENABLE_TEMPLATE_PROVIDER\n+    assert(!node.sv2_template_provider);\n+    assert(node.chainman);\n+    assert(node.mempool);\n+\n+    node.sv2_template_provider = std::make_unique<Sv2TemplateProvider>(*node.chainman, *node.mempool);\n+\n+    try {\n+        auto sv2_port{static_cast<uint16_t>(gArgs.GetIntArg(\"-stratumv2\", 8442))};",
      "path": "src/init.cpp",
      "position": 59,
      "original_position": 59,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be added to the port number check earlier",
      "created_at": "2023-07-27T22:49:48Z",
      "updated_at": "2023-07-27T22:52:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276896582",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1892,
      "original_line": 1892,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896935",
      "pull_request_review_id": 1550950789,
      "id": 1276896935,
      "node_id": "PRRC_kwDOABII585MG-an",
      "diff_hunk": "@@ -1869,6 +1881,22 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         return false;\n     }\n \n+#ifdef ENABLE_TEMPLATE_PROVIDER\n+    assert(!node.sv2_template_provider);\n+    assert(node.chainman);\n+    assert(node.mempool);\n+\n+    node.sv2_template_provider = std::make_unique<Sv2TemplateProvider>(*node.chainman, *node.mempool);\n+\n+    try {\n+        auto sv2_port{static_cast<uint16_t>(gArgs.GetIntArg(\"-stratumv2\", 8442))};\n+        node.sv2_template_provider->Start(Sv2TemplateProviderOptions { .port = sv2_port });\n+    } catch (const std::runtime_error& e) {\n+        LogPrintf(\"sv2: %s\\n\", e.what());",
      "path": "src/init.cpp",
      "position": 62,
      "original_position": 62,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": null,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Rather than prefixing with \"sv2:\", suggest a new log category.",
      "created_at": "2023-07-27T22:50:15Z",
      "updated_at": "2023-07-27T22:52:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276896935",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1895,
      "original_line": 1895,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276897878",
      "pull_request_review_id": 1550950789,
      "id": 1276897878,
      "node_id": "PRRC_kwDOABII585MG-pW",
      "diff_hunk": "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;",
      "path": "src/sv2_template_provider.h",
      "position": 54,
      "original_position": 54,
      "commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_commit_id": "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "in_reply_to_id": 1226928617,
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Code readability is more important than \"less code\"...",
      "created_at": "2023-07-27T22:51:26Z",
      "updated_at": "2023-07-27T22:52:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276897878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276897878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 54,
      "original_line": 54,
      "side": "RIGHT"
    }
  ]
}