{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31375",
    "id": 2201625045,
    "node_id": "PR_kwDOABII586DOiHV",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31375",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31375.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31375.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31375",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31375/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31375/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31375/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/637b01fbf5064028f9a23c20f8b916325fbf82ec",
    "number": 31375,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "multiprocess: Add bitcoin wrapper executable",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Intended to make bitcoin command line features more discoverable and allow installing new multiprocess binaries in libexec/ instead of bin/ so they don't cause confusion.\r\n\r\nIdea and implementation of this were discussed in https://github.com/bitcoin/bitcoin/issues/30983\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).",
    "labels": [
      {
        "id": 955867938,
        "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
        "name": "Needs rebase",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2024-11-26T17:57:32Z",
    "updated_at": "2024-12-11T15:46:19Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "30cd20319c269bf2a819167fbf7eaaffb6e16d05",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ryanofsky:pr/wrap",
      "ref": "pr/wrap",
      "sha": "637b01fbf5064028f9a23c20f8b916325fbf82ec",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 15,
        "watchers_count": 15,
        "size": 272592,
        "default_branch": "master",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-11T15:45:35Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2024-12-03T23:24:02Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "62bd61de110b057cbfd6e31e4d0b727d93119c72",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36536,
        "stargazers_count": 80543,
        "watchers_count": 80543,
        "size": 273417,
        "default_branch": "master",
        "open_issues_count": 665,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-11T09:46:37Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-12-11T15:43:23Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31375"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 290,
    "deletions": 37,
    "changed_files": 11,
    "commits": 3,
    "review_comments": 3,
    "comments": 8
  },
  "events": [
    {
      "event": "commented",
      "id": 2501598456,
      "node_id": "IC_kwDOABII586VG1z4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2501598456",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T17:57:35Z",
      "updated_at": "2024-12-10T10:20:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31375.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/31375#pullrequestreview-2467341532) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31250](https://github.com/bitcoin/bitcoin/pull/31250) (wallet: Disable creating and loading legacy wallets by achow101)\n* [#31061](https://github.com/bitcoin/bitcoin/pull/31061) (refactor: Check translatable format strings at compile-time by maflcko)\n* [#30975](https://github.com/bitcoin/bitcoin/pull/30975) (Add multiprocess binaries to release build by Sjors)\n* [#30933](https://github.com/bitcoin/bitcoin/pull/30933) (test: Prove+document ConstevalFormatString/tinyformat parity by hodlinator)\n* [#30437](https://github.com/bitcoin/bitcoin/pull/30437) (multiprocess: add bitcoin-mine test program by ryanofsky)\n* [#30125](https://github.com/bitcoin/bitcoin/pull/30125) (test: improve BDB parser (handle internal/overflow pages, support all page sizes) by theStack)\n* [#29838](https://github.com/bitcoin/bitcoin/pull/29838) (Feature: Use different datadirs for different signets by BrandonOdiwuor)\n* [#29418](https://github.com/bitcoin/bitcoin/pull/29418) (rpc: provide per message stats for global traffic via new RPC 'getnetmsgstats' by vasild)\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#issuecomment-2501598456",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31375"
    },
    {
      "event": "labeled",
      "id": 15440634825,
      "node_id": "LE_lADOABII586gq9mazwAAAAOYVWPJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15440634825",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T18:23:46Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2501645442,
      "node_id": "IC_kwDOABII586VHBSC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2501645442",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-26T18:23:47Z",
      "updated_at": "2024-11-26T18:23:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/33557375133</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#issuecomment-2501645442",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15455666453,
      "node_id": "HRFPE_lADOABII586gq9mazwAAAAOZOsEV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15455666453",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "63df9f3deb35be79496f7c240e3303e1d96c6832",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/63df9f3deb35be79496f7c240e3303e1d96c6832",
      "created_at": "2024-11-27T17:12:49Z"
    },
    {
      "event": "commented",
      "id": 2504400845,
      "node_id": "IC_kwDOABII586VRh_N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2504400845",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-27T17:15:20Z",
      "updated_at": "2024-11-27T21:12:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 19ae652376faca65d972c12cb51cfc8af0560c9e -> 63df9f3deb35be79496f7c240e3303e1d96c6832 ([`pr/wrap.3`](https://github.com/ryanofsky/bitcoin/commits/pr/wrap.3) -> [`pr/wrap.4`](https://github.com/ryanofsky/bitcoin/commits/pr/wrap.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wrap.3..pr/wrap.4)) with fixes for windows and fuzz CI errors, and lint and tidy fixes\r\nUpdated 63df9f3deb35be79496f7c240e3303e1d96c6832 -> da108a6e5be220654a65b6613ee7eb2c4ddc8677 ([`pr/wrap.4`](https://github.com/ryanofsky/bitcoin/commits/pr/wrap.4) -> [`pr/wrap.5`](https://github.com/ryanofsky/bitcoin/commits/pr/wrap.5), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wrap.4..pr/wrap.5)) fixing windows include error, fs lint error, and previous releases test bug",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#issuecomment-2504400845",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15457677611,
      "node_id": "HRFPE_lADOABII586gq9mazwAAAAOZWXEr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15457677611",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "da108a6e5be220654a65b6613ee7eb2c4ddc8677",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/da108a6e5be220654a65b6613ee7eb2c4ddc8677",
      "created_at": "2024-11-27T21:11:22Z"
    },
    {
      "event": "unlabeled",
      "id": 15458110967,
      "node_id": "UNLE_lADOABII586gq9mazwAAAAOZYA33",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15458110967",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-27T22:18:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2467341532,
      "node_id": "PRR_kwDOABII586TEKTc",
      "url": null,
      "actor": null,
      "commit_id": "da108a6e5be220654a65b6613ee7eb2c4ddc8677",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nI think it would be more clear to move `build/src/bitcoin-{node,gui}` to `build/src/libexec`, rather than use a different file organization for CMake builds than for installs. \r\n\r\nThe \"Win64 native, VS 2022\" job still seems unhappy.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#pullrequestreview-2467341532",
      "submitted_at": "2024-11-28T09:40:29Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31375"
    },
    {
      "event": "commented",
      "id": 2505819725,
      "node_id": "IC_kwDOABII586VW8ZN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2505819725",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-28T10:49:50Z",
      "updated_at": "2024-11-28T10:49:50Z",
      "author_association": "MEMBER",
      "body": "> The \"Win64 native, VS 2022\" job still seems unhappy.\r\n\r\nhttps://learn.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warning-level-3-c4996?view=msvc-170#posix-function-names:\r\n> To turn off deprecation warnings for these functions, define the preprocessor macro `_CRT_NONSTDC_NO_WARNINGS`. You can define this macro at the command line by including the option `/D_CRT_NONSTDC_NO_WARNINGS`.\r\n\r\nWe have already used this macro:https://github.com/bitcoin/bitcoin/blob/7590e93bc73b3bbac641f05d490fd5c984156b33/cmake/leveldb.cmake#L87-L89\r\n",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#issuecomment-2505819725",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15515874549,
      "node_id": "HRFPE_lADOABII586gq9mazwAAAAOc0XT1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15515874549",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "02567bf2bef5997ea5f0765780d196f36d3053e8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/02567bf2bef5997ea5f0765780d196f36d3053e8",
      "created_at": "2024-12-03T20:50:20Z"
    },
    {
      "event": "reviewed",
      "id": 2476650402,
      "node_id": "PRR_kwDOABII586Tnq-i",
      "url": null,
      "actor": null,
      "commit_id": "02567bf2bef5997ea5f0765780d196f36d3053e8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews!\r\n\r\nUpdated da108a6e5be220654a65b6613ee7eb2c4ddc8677 -> 02567bf2bef5997ea5f0765780d196f36d3053e8 ([`pr/wrap.5`](https://github.com/ryanofsky/bitcoin/commits/pr/wrap.5) -> [`pr/wrap.6`](https://github.com/ryanofsky/bitcoin/commits/pr/wrap.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wrap.5..pr/wrap.6)) to fix windows build warning and making a change to avoid a potentially confusing behavior https://github.com/bitcoin/bitcoin/pull/31375#discussion_r1861814807\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/31375#pullrequestreview-2467341532\r\n\r\n> I think it would be more clear to move `build/src/bitcoin-{node,gui}` to `build/src/libexec`, rather than use a different file organization for CMake builds than for installs.\r\n\r\nAgree and I think #31161 should allow this to be simplified.\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/31375#issuecomment-2505819725\r\n\r\n> We have already used this macro:\r\n> \r\n> https://github.com/bitcoin/bitcoin/blob/7590e93bc73b3bbac641f05d490fd5c984156b33/cmake/leveldb.cmake#L87-L89\r\n\r\nIt seems like it would be better if this code could be compiled without disabling warnings, especially since if the old names are being deprecated. For now I just added a #define to switch to the recommended name. For leveldb it probably does make sense to disable the warnings to avoid needing to change the code too much.\r\n\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#pullrequestreview-2476650402",
      "submitted_at": "2024-12-03T20:56:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31375"
    },
    {
      "event": "commented",
      "id": 2516421998,
      "node_id": "IC_kwDOABII586V_Y1u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2516421998",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T07:40:34Z",
      "updated_at": "2024-12-04T07:40:34Z",
      "author_association": "MEMBER",
      "body": "For reference the CI failure is:\r\n\r\n```\r\n                                   subprocess.CalledProcessError: Command '['C:\\\\hostedtoolcache\\\\windows\\\\Python\\\\3.12.7\\\\x64\\\\python.exe', 'D:/a/bitcoin/bitcoin\\\\contrib\\\\signet\\\\miner', \"--cli='D:\\\\a\\\\bitcoin\\\\bitcoin\\\\build\\\\src\\\\Release\\\\bitcoin-cli.exe' -nonamed '-datadir=D:\\\\a\\\\_temp\\\\test_runner_₿_🏃_20241203_223434\\\\tool_signet_miner_211\\\\node0'\", 'generate', '--address=tb1q2ndfasp67k5wp30fkt63tw9gf465lcjf7rm5fc', \"--grind-cmd='D:\\\\a\\\\bitcoin\\\\bitcoin\\\\build\\\\src\\\\Release\\\\bitcoin-util.exe' grind\", '--nbits=1d00ffff', '--set-block-time=1733265821', '--poolnum=99']' returned non-zero exit status 1.\r\n```\r\n\r\nEarlier it says:\r\n\r\n```\r\nFileNotFoundError: [WinError 2] The system cannot find the file specified",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#issuecomment-2516421998",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31375"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15527389194,
      "node_id": "HRFPE_lADOABII586gq9mazwAAAAOdgSgK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15527389194",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2def75a15deeb39fa66b1e8d45679ac29fd18b82",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/2def75a15deeb39fa66b1e8d45679ac29fd18b82",
      "created_at": "2024-12-04T14:35:17Z"
    },
    {
      "event": "commented",
      "id": 2517621750,
      "node_id": "IC_kwDOABII586WD9v2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2517621750",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T14:36:49Z",
      "updated_at": "2024-12-04T14:36:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "Updated 02567bf2bef5997ea5f0765780d196f36d3053e8 -> 2def75a15deeb39fa66b1e8d45679ac29fd18b82 ([`pr/wrap.6`](https://github.com/ryanofsky/bitcoin/commits/pr/wrap.6) -> [`pr/wrap.7`](https://github.com/ryanofsky/bitcoin/commits/pr/wrap.7), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wrap.6..pr/wrap.7)) to fix argument parsing bug causing a test failure on windows https://github.com/bitcoin/bitcoin/actions/runs/12147886951/job/33875123699?pr=31375#step:12:95",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#issuecomment-2517621750",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31375"
    },
    {
      "event": "labeled",
      "id": 15611384257,
      "node_id": "LE_lADOABII586gq9mazwAAAAOigtHB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15611384257",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T04:50:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2533627311,
      "node_id": "IC_kwDOABII586XBBWv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2533627311",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T04:50:53Z",
      "updated_at": "2024-12-11T04:50:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#issuecomment-2533627311",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31375"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNhZDMyOWIzYWMxYTE1OTk0N2U1YWJlYzBlNWIwODg2Y2QyODQ1NmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ad329b3ac1a159947e5abec0e5b0886cd28456f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3ad329b3ac1a159947e5abec0e5b0886cd28456f",
      "tree": {
        "sha": "4108979a9aaf455e68d3e7026473052138e69e5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4108979a9aaf455e68d3e7026473052138e69e5d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62bd61de110b057cbfd6e31e4d0b727d93119c72",
          "sha": "62bd61de110b057cbfd6e31e4d0b727d93119c72",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/62bd61de110b057cbfd6e31e4d0b727d93119c72"
        }
      ],
      "message": "multiprocess: Add bitcoin wrapper executable\n\nIntended to make bitcoin command line features more discoverable and allow\ninstalling new multiprocess binaries in libexec/ instead of bin/ so they don't\ncause confusion.\n\nIdea and implementation of this were discussed in\nhttps://github.com/bitcoin/bitcoin/issues/30983\n\nIt's possible to debug this and see what programs it is trying to call by running:\n\nstrace -e trace=execve -s 10000 build/src/bitcoin ...",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-12-11T09:46:34Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-10-01T20:06:28Z"
      },
      "sha": "3ad329b3ac1a159947e5abec0e5b0886cd28456f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY3YmFmZGUzMjI3MzIwNjgyNWIzYzJlYWM2ZmJlM2FkMzMxZmJhNjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67bafde32273206825b3c2eac6fbe3ad331fba60",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/67bafde32273206825b3c2eac6fbe3ad331fba60",
      "tree": {
        "sha": "bb4677a44745de7190faccc4be7ed4f201f32b79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb4677a44745de7190faccc4be7ed4f201f32b79"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ad329b3ac1a159947e5abec0e5b0886cd28456f",
          "sha": "3ad329b3ac1a159947e5abec0e5b0886cd28456f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3ad329b3ac1a159947e5abec0e5b0886cd28456f"
        }
      ],
      "message": "test: Support BITCOIN_CMD environment variable\n\nSupport new BITCOIN_CMD environment variable in functional test to be able to\ntest the new bitcoin wrapper executable and run other commands through it\ninstead of calling them directly.",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-12-11T09:46:34Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-11-26T16:51:41Z"
      },
      "sha": "67bafde32273206825b3c2eac6fbe3ad331fba60"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYzN2IwMWZiZjUwNjQwMjhmOWEyM2MyMGY4YjkxNjMyNWZiZjgyZWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/637b01fbf5064028f9a23c20f8b916325fbf82ec",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/637b01fbf5064028f9a23c20f8b916325fbf82ec",
      "tree": {
        "sha": "456eb53cf83d2a12e3733ccd4ed5880001710ade",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/456eb53cf83d2a12e3733ccd4ed5880001710ade"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67bafde32273206825b3c2eac6fbe3ad331fba60",
          "sha": "67bafde32273206825b3c2eac6fbe3ad331fba60",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/67bafde32273206825b3c2eac6fbe3ad331fba60"
        }
      ],
      "message": "ci: Run multiprocess tests through wrapper executable",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-12-11T09:46:34Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-11-26T16:58:16Z"
      },
      "sha": "637b01fbf5064028f9a23c20f8b916325fbf82ec"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15620793515,
      "node_id": "HRFPE_lADOABII586gq9mazwAAAAOjEmSr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15620793515",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "637b01fbf5064028f9a23c20f8b916325fbf82ec",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/637b01fbf5064028f9a23c20f8b916325fbf82ec",
      "created_at": "2024-12-11T15:45:37Z"
    },
    {
      "event": "commented",
      "id": 2536362028,
      "node_id": "IC_kwDOABII586XLdAs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2536362028",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T15:46:17Z",
      "updated_at": "2024-12-11T15:46:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 2def75a15deeb39fa66b1e8d45679ac29fd18b82 -> 637b01fbf5064028f9a23c20f8b916325fbf82ec ([`pr/wrap.7`](https://github.com/ryanofsky/bitcoin/commits/pr/wrap.7) -> [`pr/wrap.8`](https://github.com/ryanofsky/bitcoin/commits/pr/wrap.8), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/wrap.7-rebase..pr/wrap.8)) due to conflict with #30933\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#issuecomment-2536362028",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31375"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1861814807",
      "pull_request_review_id": 2467341532,
      "id": 1861814807,
      "node_id": "PRRC_kwDOABII585u-QoX",
      "diff_hunk": "@@ -0,0 +1,190 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <clientversion.h>\n+#include <util/fs.h>\n+#include <util/strencodings.h>\n+\n+#include <iostream>\n+#include <optional>\n+#include <string>\n+#include <tinyformat.h>\n+#include <vector>\n+\n+#ifdef WIN32\n+#include <process.h>\n+#include <windows.h>\n+#else\n+#include <unistd.h>\n+#endif\n+\n+extern const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static constexpr auto HELP_USAGE = R\"(Usage: %1$s [OPTIONS] COMMAND...\n+\n+Commands (run help command for more information):\n+  {gui,daemon,rpc,wallet,test,help}\n+\n+Options:\n+  -m, --multiprocess     Run multiprocess binaries bitcoin-node, bitcoin-gui.\\n\"\n+  -M, --monolothic       Run monolithic binaries bitcoind, bitcoin-qt. (Default behavior)\\n\"\n+  -v, --version          Show version information\n+  -h, --help             Show this help message\n+)\";\n+\n+static constexpr auto HELP_COMMANDS = R\"(Command overview:\n+\n+%1$s gui [ARGS]     Start GUI, equivalent to running 'bitcoin-qt [ARGS]' or 'bitcoin-gui [ARGS]'.\n+%1$s daemon [ARGS]  Start daemon, equivalent to running 'bitcoind [ARGS]' or 'bitcoin-node [ARGS]'.\n+%1$s rpc [ARGS]     Call RPC method, equivalent to running 'bitcoin-cli -named [ARGS]'.\n+%1$s wallet [ARGS]  Call wallet command, equivalent to running 'bitcoin-wallet [ARGS]'.\n+%1$s tx [ARGS]      Manipulate hex-encoded transactions, equivalent to running 'bitcoin-tx [ARGS]'.\n+%1$s test [ARGS]    Run unit tests, equivalent to running 'test_bitcoin [ARGS]'.\n+%1$s help           Show this help message.\n+)\";\n+\n+struct CommandLine {\n+    bool use_multiprocess{false};\n+    bool show_version{false};\n+    bool show_help{false};\n+    std::string_view command;\n+    std::vector<std::string_view> args;\n+};\n+\n+CommandLine ParseCommandLine(int argc, char* argv[]);\n+void ExecCommand(const std::vector<std::string>& args, std::string_view argv0);\n+\n+int main(int argc, char* argv[])\n+{\n+    try {\n+        CommandLine cmd{ParseCommandLine(argc, argv)};\n+        if (cmd.show_version) {\n+            std::cout << FormatParagraph(LicenseInfo());\n+        }\n+        if (cmd.show_help || cmd.command.empty()) {\n+            tfm::format(std::cout, HELP_USAGE, argv[0]);\n+        }\n+\n+        std::vector<std::string> args;\n+        if (cmd.command == \"gui\") {\n+            args.emplace_back(cmd.use_multiprocess ? \"qt/bitcoin-gui\" : \"qt/bitcoin-qt\");\n+        } else if (cmd.command == \"daemon\") {\n+            args.emplace_back(cmd.use_multiprocess ? \"bitcoin-node\" : \"bitcoind\");\n+        } else if (cmd.command == \"rpc\") {\n+            args.emplace_back(\"bitcoin-cli\");\n+            args.emplace_back(\"-named\");\n+        } else if (cmd.command == \"wallet\") {\n+            args.emplace_back(\"bitcoin-wallet\");\n+        } else if (cmd.command == \"tx\") {\n+            args.emplace_back(\"bitcoin-tx\");\n+        } else if (cmd.command == \"test\") {\n+            args.emplace_back(\"test/test_bitcoin\");\n+        } else if (cmd.command == \"help\") {\n+            tfm::format(std::cout, HELP_COMMANDS, argv[0]);\n+        } else if (cmd.command == \"mine\") { // undocumented, used by tests\n+            args.emplace_back(\"bitcoin-mine\");\n+        } else if (cmd.command == \"util\") { // undocumented, used by tests\n+            args.emplace_back(\"bitcoin-util\");\n+        } else if (!cmd.command.empty()){\n+            throw std::runtime_error(strprintf(\"Unrecognized command: '%s'\", cmd.command));\n+        }\n+        if (!args.empty()) {\n+            args.insert(args.end(), cmd.args.begin(), cmd.args.end());\n+            ExecCommand(args, argv[0]);\n+        }\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\nTry '%s --help' for more information.\", e.what(), argv[0]);\n+        return EXIT_FAILURE;\n+    }\n+    return EXIT_SUCCESS;\n+}\n+\n+CommandLine ParseCommandLine(int argc, char* argv[])\n+{\n+    CommandLine cmd;\n+    cmd.args.reserve(argc);\n+    for (int i = 1; i < argc; ++i) {\n+        std::string_view arg = argv[i];\n+        if (!cmd.command.empty()) {\n+            cmd.args.emplace_back(arg);\n+        } else if (arg == \"-m\" || arg == \"--multiprocess\") {\n+            cmd.use_multiprocess = true;\n+        } else if (arg == \"-M\" || arg == \"--monolithic\") {\n+            cmd.use_multiprocess = false;\n+        } else if (arg == \"-v\" || arg == \"--version\") {\n+            cmd.show_version = true;\n+        } else if (arg == \"-h\" || arg == \"--help\") {\n+            cmd.show_help = true;\n+        } else if (arg.starts_with(\"-\")) {\n+            throw std::runtime_error(strprintf(\"Unknown option: %s\", arg));\n+        } else if (!arg.empty()) {\n+            cmd.command = arg;\n+        }\n+    }\n+    return cmd;\n+}\n+\n+void ExecCommand(const std::vector<std::string>& args, std::string_view argv0)\n+{\n+    // Construct argument string for execvp\n+    std::vector<const char*> cstr_args{};\n+    cstr_args.reserve(args.size() + 1);\n+    for (const auto& arg : args) {\n+        cstr_args.emplace_back(arg.c_str());\n+    }\n+    cstr_args.emplace_back(nullptr);\n+\n+    // Try to call execvp with given exe path.\n+    auto try_exec = [&](fs::path exe_path, bool allow_notfound = true) {\n+        std::string exe_path_str{fs::PathToString(exe_path)};\n+        cstr_args[0] = exe_path_str.c_str();\n+        if (execvp(cstr_args[0], (char*const*)cstr_args.data()) == -1) {\n+            if (allow_notfound && errno == ENOENT) return false;\n+            throw std::system_error(errno, std::system_category(), strprintf(\"execvp failed to execute '%s'\", cstr_args[0]));\n+        }\n+        return true; // Will not actually be reached if execvp succeeds\n+    };\n+\n+    // Try to figure out where current executable is located. This is a\n+    // simplified search that won't work perfectly on every platform and doesn't\n+    // need to, as it is only trying to prioritize locally built or installed\n+    // executables over system executables. We may want to add options to\n+    // override this behavior in the future, though.\n+    fs::path exe_dir(argv0);\n+    std::error_code ec;\n+#ifndef WIN32\n+    if (argv0.find('/') == std::string_view::npos) {\n+        if (const char* path_env = std::getenv(\"PATH\")) {\n+            size_t start{0}, end{0};\n+            for (std::string_view paths{path_env}; end != std::string_view::npos; start = end + 1) {\n+                end = paths.find(':', start);\n+                fs::path candidate = fs::path(paths.substr(start, end - start)) / exe_dir;\n+                if (fs::exists(candidate, ec) && fs::is_regular_file(candidate, ec)) {\n+                    exe_dir = candidate;\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+#else\n+    wchar_t module_path[MAX_PATH];\n+    if (GetModuleFileNameW(nullptr, module_path, MAX_PATH) > 0) {\n+        exe_dir = fs::path{module_path};\n+    } else {\n+        tfm::format(std::cerr, \"Warning: Failed to get executable path. Error: %s\\n\", GetLastError());\n+    }\n+#endif\n+    exe_dir = fs::weakly_canonical(exe_dir, ec).parent_path();\n+\n+    // If exe is in a CMake build tree, first look for target executable\n+    // relative to it.\n+    (exe_dir.filename() == \"src\" && try_exec(exe_dir / fs::PathFromString(args[0]))) ||\n+    // Otherwise if exe is installed in a bin/ directory, first look for target\n+    // executable in libexec/\n+    (exe_dir.filename() == \"bin\" && try_exec(fs::path{exe_dir.parent_path()} / \"libexec\" / fs::PathFromString(args[0]).filename())) ||\n+    // Otherwise look for target executable next to current exe\n+    try_exec(exe_dir / fs::PathFromString(args[0]).filename()) ||\n+    // Otherwise just look on the system path.",
      "path": "src/bitcoin.cpp",
      "position": 205,
      "original_position": 188,
      "commit_id": "637b01fbf5064028f9a23c20f8b916325fbf82ec",
      "original_commit_id": "b06c7ad0ae91102fe8cdcac6f86d627aace2219b",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "b06c7ad0ae91102fe8cdcac6f86d627aace2219b: this is potentially confusing. If I build without gui, I expect `build/src/bitcoin gui` to fail. Right now it would launch any  `bitcoin-qt` in my `$PATH`.",
      "created_at": "2024-11-28T09:29:39Z",
      "updated_at": "2024-11-28T09:40:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#discussion_r1861814807",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1861814807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 205,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868303275",
      "pull_request_review_id": 2476650402,
      "id": 1868303275,
      "node_id": "PRRC_kwDOABII585vXAur",
      "diff_hunk": "@@ -0,0 +1,190 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <clientversion.h>\n+#include <util/fs.h>\n+#include <util/strencodings.h>\n+\n+#include <iostream>\n+#include <optional>\n+#include <string>\n+#include <tinyformat.h>\n+#include <vector>\n+\n+#ifdef WIN32\n+#include <process.h>\n+#include <windows.h>\n+#else\n+#include <unistd.h>\n+#endif\n+\n+extern const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static constexpr auto HELP_USAGE = R\"(Usage: %1$s [OPTIONS] COMMAND...\n+\n+Commands (run help command for more information):\n+  {gui,daemon,rpc,wallet,test,help}\n+\n+Options:\n+  -m, --multiprocess     Run multiprocess binaries bitcoin-node, bitcoin-gui.\\n\"\n+  -M, --monolothic       Run monolithic binaries bitcoind, bitcoin-qt. (Default behavior)\\n\"\n+  -v, --version          Show version information\n+  -h, --help             Show this help message\n+)\";\n+\n+static constexpr auto HELP_COMMANDS = R\"(Command overview:\n+\n+%1$s gui [ARGS]     Start GUI, equivalent to running 'bitcoin-qt [ARGS]' or 'bitcoin-gui [ARGS]'.\n+%1$s daemon [ARGS]  Start daemon, equivalent to running 'bitcoind [ARGS]' or 'bitcoin-node [ARGS]'.\n+%1$s rpc [ARGS]     Call RPC method, equivalent to running 'bitcoin-cli -named [ARGS]'.\n+%1$s wallet [ARGS]  Call wallet command, equivalent to running 'bitcoin-wallet [ARGS]'.\n+%1$s tx [ARGS]      Manipulate hex-encoded transactions, equivalent to running 'bitcoin-tx [ARGS]'.\n+%1$s test [ARGS]    Run unit tests, equivalent to running 'test_bitcoin [ARGS]'.\n+%1$s help           Show this help message.\n+)\";\n+\n+struct CommandLine {\n+    bool use_multiprocess{false};\n+    bool show_version{false};\n+    bool show_help{false};\n+    std::string_view command;\n+    std::vector<std::string_view> args;\n+};\n+\n+CommandLine ParseCommandLine(int argc, char* argv[]);\n+void ExecCommand(const std::vector<std::string>& args, std::string_view argv0);\n+\n+int main(int argc, char* argv[])\n+{\n+    try {\n+        CommandLine cmd{ParseCommandLine(argc, argv)};\n+        if (cmd.show_version) {\n+            std::cout << FormatParagraph(LicenseInfo());\n+        }\n+        if (cmd.show_help || cmd.command.empty()) {\n+            tfm::format(std::cout, HELP_USAGE, argv[0]);\n+        }\n+\n+        std::vector<std::string> args;\n+        if (cmd.command == \"gui\") {\n+            args.emplace_back(cmd.use_multiprocess ? \"qt/bitcoin-gui\" : \"qt/bitcoin-qt\");\n+        } else if (cmd.command == \"daemon\") {\n+            args.emplace_back(cmd.use_multiprocess ? \"bitcoin-node\" : \"bitcoind\");\n+        } else if (cmd.command == \"rpc\") {\n+            args.emplace_back(\"bitcoin-cli\");\n+            args.emplace_back(\"-named\");\n+        } else if (cmd.command == \"wallet\") {\n+            args.emplace_back(\"bitcoin-wallet\");\n+        } else if (cmd.command == \"tx\") {\n+            args.emplace_back(\"bitcoin-tx\");\n+        } else if (cmd.command == \"test\") {\n+            args.emplace_back(\"test/test_bitcoin\");\n+        } else if (cmd.command == \"help\") {\n+            tfm::format(std::cout, HELP_COMMANDS, argv[0]);\n+        } else if (cmd.command == \"mine\") { // undocumented, used by tests\n+            args.emplace_back(\"bitcoin-mine\");\n+        } else if (cmd.command == \"util\") { // undocumented, used by tests\n+            args.emplace_back(\"bitcoin-util\");\n+        } else if (!cmd.command.empty()){\n+            throw std::runtime_error(strprintf(\"Unrecognized command: '%s'\", cmd.command));\n+        }\n+        if (!args.empty()) {\n+            args.insert(args.end(), cmd.args.begin(), cmd.args.end());\n+            ExecCommand(args, argv[0]);\n+        }\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\nTry '%s --help' for more information.\", e.what(), argv[0]);\n+        return EXIT_FAILURE;\n+    }\n+    return EXIT_SUCCESS;\n+}\n+\n+CommandLine ParseCommandLine(int argc, char* argv[])\n+{\n+    CommandLine cmd;\n+    cmd.args.reserve(argc);\n+    for (int i = 1; i < argc; ++i) {\n+        std::string_view arg = argv[i];\n+        if (!cmd.command.empty()) {\n+            cmd.args.emplace_back(arg);\n+        } else if (arg == \"-m\" || arg == \"--multiprocess\") {\n+            cmd.use_multiprocess = true;\n+        } else if (arg == \"-M\" || arg == \"--monolithic\") {\n+            cmd.use_multiprocess = false;\n+        } else if (arg == \"-v\" || arg == \"--version\") {\n+            cmd.show_version = true;\n+        } else if (arg == \"-h\" || arg == \"--help\") {\n+            cmd.show_help = true;\n+        } else if (arg.starts_with(\"-\")) {\n+            throw std::runtime_error(strprintf(\"Unknown option: %s\", arg));\n+        } else if (!arg.empty()) {\n+            cmd.command = arg;\n+        }\n+    }\n+    return cmd;\n+}\n+\n+void ExecCommand(const std::vector<std::string>& args, std::string_view argv0)\n+{\n+    // Construct argument string for execvp\n+    std::vector<const char*> cstr_args{};\n+    cstr_args.reserve(args.size() + 1);\n+    for (const auto& arg : args) {\n+        cstr_args.emplace_back(arg.c_str());\n+    }\n+    cstr_args.emplace_back(nullptr);\n+\n+    // Try to call execvp with given exe path.\n+    auto try_exec = [&](fs::path exe_path, bool allow_notfound = true) {\n+        std::string exe_path_str{fs::PathToString(exe_path)};\n+        cstr_args[0] = exe_path_str.c_str();\n+        if (execvp(cstr_args[0], (char*const*)cstr_args.data()) == -1) {\n+            if (allow_notfound && errno == ENOENT) return false;\n+            throw std::system_error(errno, std::system_category(), strprintf(\"execvp failed to execute '%s'\", cstr_args[0]));\n+        }\n+        return true; // Will not actually be reached if execvp succeeds\n+    };\n+\n+    // Try to figure out where current executable is located. This is a\n+    // simplified search that won't work perfectly on every platform and doesn't\n+    // need to, as it is only trying to prioritize locally built or installed\n+    // executables over system executables. We may want to add options to\n+    // override this behavior in the future, though.\n+    fs::path exe_dir(argv0);\n+    std::error_code ec;\n+#ifndef WIN32\n+    if (argv0.find('/') == std::string_view::npos) {\n+        if (const char* path_env = std::getenv(\"PATH\")) {\n+            size_t start{0}, end{0};\n+            for (std::string_view paths{path_env}; end != std::string_view::npos; start = end + 1) {\n+                end = paths.find(':', start);\n+                fs::path candidate = fs::path(paths.substr(start, end - start)) / exe_dir;\n+                if (fs::exists(candidate, ec) && fs::is_regular_file(candidate, ec)) {\n+                    exe_dir = candidate;\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+#else\n+    wchar_t module_path[MAX_PATH];\n+    if (GetModuleFileNameW(nullptr, module_path, MAX_PATH) > 0) {\n+        exe_dir = fs::path{module_path};\n+    } else {\n+        tfm::format(std::cerr, \"Warning: Failed to get executable path. Error: %s\\n\", GetLastError());\n+    }\n+#endif\n+    exe_dir = fs::weakly_canonical(exe_dir, ec).parent_path();\n+\n+    // If exe is in a CMake build tree, first look for target executable\n+    // relative to it.\n+    (exe_dir.filename() == \"src\" && try_exec(exe_dir / fs::PathFromString(args[0]))) ||\n+    // Otherwise if exe is installed in a bin/ directory, first look for target\n+    // executable in libexec/\n+    (exe_dir.filename() == \"bin\" && try_exec(fs::path{exe_dir.parent_path()} / \"libexec\" / fs::PathFromString(args[0]).filename())) ||\n+    // Otherwise look for target executable next to current exe\n+    try_exec(exe_dir / fs::PathFromString(args[0]).filename()) ||\n+    // Otherwise just look on the system path.",
      "path": "src/bitcoin.cpp",
      "position": 205,
      "original_position": 188,
      "commit_id": "637b01fbf5064028f9a23c20f8b916325fbf82ec",
      "original_commit_id": "b06c7ad0ae91102fe8cdcac6f86d627aace2219b",
      "in_reply_to_id": 1861814807,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31375#discussion_r1861814807\r\n\r\n> [b06c7ad](https://github.com/bitcoin/bitcoin/commit/b06c7ad0ae91102fe8cdcac6f86d627aace2219b): this is potentially confusing. If I build without gui, I expect `build/src/bitcoin gui` to fail. Right now it would launch any `bitcoin-qt` in my `$PATH`.\r\n\r\nAgree this behavior is potentially confusing, and prevented it for now, but I'm not totally I sure see it as a downside. I like the simplicity of `bitcoin daemon` being an alias for `bitcoind` and for the `bitcoin` wrapper to add a few additional search directories of its own but not otherwise care where other executables are installed on the PATH.\r\n\r\nBut for now added a check to avoid searching for other executables using the PATH if the `bitcoin` executable was not invoked using the PATH. Probably will need to keep tweaking this behavior, seeing what works and maybe adding options to control it.",
      "created_at": "2024-12-03T20:09:57Z",
      "updated_at": "2024-12-03T20:56:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#discussion_r1868303275",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868303275"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 205,
      "original_line": 205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1872727800",
      "pull_request_review_id": 2483862103,
      "id": 1872727800,
      "node_id": "PRRC_kwDOABII585vn474",
      "diff_hunk": "@@ -0,0 +1,190 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <clientversion.h>\n+#include <util/fs.h>\n+#include <util/strencodings.h>\n+\n+#include <iostream>\n+#include <optional>\n+#include <string>\n+#include <tinyformat.h>\n+#include <vector>\n+\n+#ifdef WIN32\n+#include <process.h>\n+#include <windows.h>\n+#else\n+#include <unistd.h>\n+#endif\n+\n+extern const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\n+\n+static constexpr auto HELP_USAGE = R\"(Usage: %1$s [OPTIONS] COMMAND...\n+\n+Commands (run help command for more information):\n+  {gui,daemon,rpc,wallet,test,help}\n+\n+Options:\n+  -m, --multiprocess     Run multiprocess binaries bitcoin-node, bitcoin-gui.\\n\"\n+  -M, --monolothic       Run monolithic binaries bitcoind, bitcoin-qt. (Default behavior)\\n\"\n+  -v, --version          Show version information\n+  -h, --help             Show this help message\n+)\";\n+\n+static constexpr auto HELP_COMMANDS = R\"(Command overview:\n+\n+%1$s gui [ARGS]     Start GUI, equivalent to running 'bitcoin-qt [ARGS]' or 'bitcoin-gui [ARGS]'.\n+%1$s daemon [ARGS]  Start daemon, equivalent to running 'bitcoind [ARGS]' or 'bitcoin-node [ARGS]'.\n+%1$s rpc [ARGS]     Call RPC method, equivalent to running 'bitcoin-cli -named [ARGS]'.\n+%1$s wallet [ARGS]  Call wallet command, equivalent to running 'bitcoin-wallet [ARGS]'.\n+%1$s tx [ARGS]      Manipulate hex-encoded transactions, equivalent to running 'bitcoin-tx [ARGS]'.\n+%1$s test [ARGS]    Run unit tests, equivalent to running 'test_bitcoin [ARGS]'.\n+%1$s help           Show this help message.\n+)\";\n+\n+struct CommandLine {\n+    bool use_multiprocess{false};\n+    bool show_version{false};\n+    bool show_help{false};\n+    std::string_view command;\n+    std::vector<std::string_view> args;\n+};\n+\n+CommandLine ParseCommandLine(int argc, char* argv[]);\n+void ExecCommand(const std::vector<std::string>& args, std::string_view argv0);\n+\n+int main(int argc, char* argv[])\n+{\n+    try {\n+        CommandLine cmd{ParseCommandLine(argc, argv)};\n+        if (cmd.show_version) {\n+            std::cout << FormatParagraph(LicenseInfo());\n+        }\n+        if (cmd.show_help || cmd.command.empty()) {\n+            tfm::format(std::cout, HELP_USAGE, argv[0]);\n+        }\n+\n+        std::vector<std::string> args;\n+        if (cmd.command == \"gui\") {\n+            args.emplace_back(cmd.use_multiprocess ? \"qt/bitcoin-gui\" : \"qt/bitcoin-qt\");\n+        } else if (cmd.command == \"daemon\") {\n+            args.emplace_back(cmd.use_multiprocess ? \"bitcoin-node\" : \"bitcoind\");\n+        } else if (cmd.command == \"rpc\") {\n+            args.emplace_back(\"bitcoin-cli\");\n+            args.emplace_back(\"-named\");\n+        } else if (cmd.command == \"wallet\") {\n+            args.emplace_back(\"bitcoin-wallet\");\n+        } else if (cmd.command == \"tx\") {\n+            args.emplace_back(\"bitcoin-tx\");\n+        } else if (cmd.command == \"test\") {\n+            args.emplace_back(\"test/test_bitcoin\");\n+        } else if (cmd.command == \"help\") {\n+            tfm::format(std::cout, HELP_COMMANDS, argv[0]);\n+        } else if (cmd.command == \"mine\") { // undocumented, used by tests\n+            args.emplace_back(\"bitcoin-mine\");\n+        } else if (cmd.command == \"util\") { // undocumented, used by tests\n+            args.emplace_back(\"bitcoin-util\");\n+        } else if (!cmd.command.empty()){\n+            throw std::runtime_error(strprintf(\"Unrecognized command: '%s'\", cmd.command));\n+        }\n+        if (!args.empty()) {\n+            args.insert(args.end(), cmd.args.begin(), cmd.args.end());\n+            ExecCommand(args, argv[0]);\n+        }\n+    } catch (const std::exception& e) {\n+        tfm::format(std::cerr, \"Error: %s\\nTry '%s --help' for more information.\", e.what(), argv[0]);\n+        return EXIT_FAILURE;\n+    }\n+    return EXIT_SUCCESS;\n+}\n+\n+CommandLine ParseCommandLine(int argc, char* argv[])\n+{\n+    CommandLine cmd;\n+    cmd.args.reserve(argc);\n+    for (int i = 1; i < argc; ++i) {\n+        std::string_view arg = argv[i];\n+        if (!cmd.command.empty()) {\n+            cmd.args.emplace_back(arg);\n+        } else if (arg == \"-m\" || arg == \"--multiprocess\") {\n+            cmd.use_multiprocess = true;\n+        } else if (arg == \"-M\" || arg == \"--monolithic\") {\n+            cmd.use_multiprocess = false;\n+        } else if (arg == \"-v\" || arg == \"--version\") {\n+            cmd.show_version = true;\n+        } else if (arg == \"-h\" || arg == \"--help\") {\n+            cmd.show_help = true;\n+        } else if (arg.starts_with(\"-\")) {\n+            throw std::runtime_error(strprintf(\"Unknown option: %s\", arg));\n+        } else if (!arg.empty()) {\n+            cmd.command = arg;\n+        }\n+    }\n+    return cmd;\n+}\n+\n+void ExecCommand(const std::vector<std::string>& args, std::string_view argv0)\n+{\n+    // Construct argument string for execvp\n+    std::vector<const char*> cstr_args{};\n+    cstr_args.reserve(args.size() + 1);\n+    for (const auto& arg : args) {\n+        cstr_args.emplace_back(arg.c_str());\n+    }\n+    cstr_args.emplace_back(nullptr);\n+\n+    // Try to call execvp with given exe path.\n+    auto try_exec = [&](fs::path exe_path, bool allow_notfound = true) {\n+        std::string exe_path_str{fs::PathToString(exe_path)};\n+        cstr_args[0] = exe_path_str.c_str();\n+        if (execvp(cstr_args[0], (char*const*)cstr_args.data()) == -1) {\n+            if (allow_notfound && errno == ENOENT) return false;\n+            throw std::system_error(errno, std::system_category(), strprintf(\"execvp failed to execute '%s'\", cstr_args[0]));\n+        }\n+        return true; // Will not actually be reached if execvp succeeds\n+    };\n+\n+    // Try to figure out where current executable is located. This is a\n+    // simplified search that won't work perfectly on every platform and doesn't\n+    // need to, as it is only trying to prioritize locally built or installed\n+    // executables over system executables. We may want to add options to\n+    // override this behavior in the future, though.\n+    fs::path exe_dir(argv0);\n+    std::error_code ec;\n+#ifndef WIN32\n+    if (argv0.find('/') == std::string_view::npos) {\n+        if (const char* path_env = std::getenv(\"PATH\")) {\n+            size_t start{0}, end{0};\n+            for (std::string_view paths{path_env}; end != std::string_view::npos; start = end + 1) {\n+                end = paths.find(':', start);\n+                fs::path candidate = fs::path(paths.substr(start, end - start)) / exe_dir;\n+                if (fs::exists(candidate, ec) && fs::is_regular_file(candidate, ec)) {\n+                    exe_dir = candidate;\n+                    break;\n+                }\n+            }\n+        }\n+    }\n+#else\n+    wchar_t module_path[MAX_PATH];\n+    if (GetModuleFileNameW(nullptr, module_path, MAX_PATH) > 0) {\n+        exe_dir = fs::path{module_path};\n+    } else {\n+        tfm::format(std::cerr, \"Warning: Failed to get executable path. Error: %s\\n\", GetLastError());\n+    }\n+#endif\n+    exe_dir = fs::weakly_canonical(exe_dir, ec).parent_path();\n+\n+    // If exe is in a CMake build tree, first look for target executable\n+    // relative to it.\n+    (exe_dir.filename() == \"src\" && try_exec(exe_dir / fs::PathFromString(args[0]))) ||\n+    // Otherwise if exe is installed in a bin/ directory, first look for target\n+    // executable in libexec/\n+    (exe_dir.filename() == \"bin\" && try_exec(fs::path{exe_dir.parent_path()} / \"libexec\" / fs::PathFromString(args[0]).filename())) ||\n+    // Otherwise look for target executable next to current exe\n+    try_exec(exe_dir / fs::PathFromString(args[0]).filename()) ||\n+    // Otherwise just look on the system path.",
      "path": "src/bitcoin.cpp",
      "position": 205,
      "original_position": 188,
      "commit_id": "637b01fbf5064028f9a23c20f8b916325fbf82ec",
      "original_commit_id": "b06c7ad0ae91102fe8cdcac6f86d627aace2219b",
      "in_reply_to_id": 1861814807,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "One advantage of allowing anything in `$PATH` would be once the interfaces are stable and \"public\", at which point folks might install e.g. an alternative GUI implementation.",
      "created_at": "2024-12-06T07:36:28Z",
      "updated_at": "2024-12-06T07:36:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31375#discussion_r1872727800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1872727800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31375"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 205,
      "original_line": 205,
      "side": "RIGHT"
    }
  ]
}