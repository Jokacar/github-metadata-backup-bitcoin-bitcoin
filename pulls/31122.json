{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122",
    "id": 2134676355,
    "node_id": "PR_kwDOABII585_PJOD",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31122",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31122.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31122.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31122",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31122/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
    "number": 31122,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "cluster mempool: Implement changeset interface for mempool",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "part of cluster mempool: #30289 \r\n\r\nIt became clear while working on cluster mempool that it would be helpful for transaction validation if we could consider a full set of proposed changes to the mempool -- consisting of a set of transactions to add, and a set of transactions (ie conflicts) to simultaneously remove -- and perform calculations on what the mempool would look like if the proposed changes were to be applied.  Two specific examples of where we'd like to do this:\r\n\r\n- Determining if ancestor/descendant/TRUC limits would be violated (in the future, cluster limits) if either a single transaction or a package of transactions were to be accepted\r\n- Determining if an RBF would make the mempool \"better\", however that idea is defined, both in the single transaction and package of transaction cases\r\n\r\nIn preparation for cluster mempool, I have pulled this reworking of the mempool interface out of #28676 so it can be reviewed on its own.  I have not re-implemented ancestor/descendant limits to be run through the changeset, since with cluster mempool those limits will be going away, so this seems like wasted effort.  However, I have rebased #28676 on top of this branch so reviewers can see what the new mempool interface could look like in the cluster mempool setting.\r\n\r\nThere are some minor behavior changes here, which I believe are inconsequential:\r\n- In the package validation setting, transactions would be added to the mempool before the `ConsensusScriptChecks()` are run. In theory, `ConsensusScriptChecks()` should always pass if the `PolicyScriptChecks()` have passed and it's just a belt-and-suspenders for us, but if somehow they were to diverge then there could be some small behavior change from adding transactions and then removing them, versus never adding them at all.\r\n- The error reporting on `CheckConflictTopology()` has slightly changed due to no longer distinguishing between direct conflicts and indirect conflicts. I believe this should be entirely inconsequential because there shouldn't be a logical difference between those two ideas from the perspective of this function, but I did have to update some error strings in some tests.\r\n- Because, in a package setting, RBFs now happen as part of the entire package being accepted, the logging has changed slightly because we do not know which transaction specifically evicted a given removed transaction. \r\n  -  Specifically, the \"package hash\" is now used to reference the set of transactions that are being accepted, rather than any single txid. The log message relating to package RBF that happen in the `TXPACKAGES` category has been updated as well to include the package hash, so that it's possible to see which specific set of transactions are being referenced by that package hash.\r\n  - Relatedly, the tracepoint logging in the package rbf case has been updated as well to reference the package hash, rather than a transaction hash.",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "created_at": "2024-10-20T17:46:28Z",
    "updated_at": "2024-11-01T15:02:22Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "349709e6da218191cd451d4348fefa37d4ebcecf",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sdaftuar:2024-10-mempool-changeset",
      "ref": "2024-10-mempool-changeset",
      "sha": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 28761781,
        "node_id": "MDEwOlJlcG9zaXRvcnkyODc2MTc4MQ==",
        "name": "bitcoin",
        "full_name": "sdaftuar/bitcoin",
        "owner": {
          "login": "sdaftuar",
          "id": 7463573,
          "node_id": "MDQ6VXNlcjc0NjM1NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sdaftuar",
          "html_url": "https://github.com/sdaftuar",
          "followers_url": "https://api.github.com/users/sdaftuar/followers",
          "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
          "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
          "repos_url": "https://api.github.com/users/sdaftuar/repos",
          "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/sdaftuar/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sdaftuar/bitcoin",
        "archive_url": "https://api.github.com/repos/sdaftuar/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sdaftuar/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sdaftuar/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sdaftuar/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sdaftuar/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sdaftuar/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sdaftuar/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sdaftuar/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sdaftuar/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sdaftuar/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sdaftuar/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sdaftuar/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sdaftuar/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sdaftuar/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sdaftuar/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sdaftuar/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sdaftuar/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sdaftuar/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sdaftuar/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sdaftuar/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sdaftuar/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sdaftuar/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sdaftuar/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sdaftuar/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sdaftuar/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sdaftuar/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sdaftuar/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sdaftuar/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sdaftuar/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sdaftuar/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sdaftuar/bitcoin/hooks",
        "svn_url": "https://github.com/sdaftuar/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 281098,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-01T15:00:49Z",
        "created_at": "2015-01-04T02:52:13Z",
        "updated_at": "2024-02-09T22:47:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "f07a533dfcb172321972e5afb3b38a4bd24edb87",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36303,
        "stargazers_count": 79159,
        "watchers_count": 79159,
        "size": 270512,
        "default_branch": "master",
        "open_issues_count": 639,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-11-01T15:40:48Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2024-11-01T15:40:54Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 670,
    "deletions": 387,
    "changed_files": 23,
    "commits": 17,
    "review_comments": 111,
    "comments": 6
  },
  "events": [
    {
      "event": "commented",
      "id": 2425149525,
      "node_id": "IC_kwDOABII586QjNhV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2425149525",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-20T17:46:31Z",
      "updated_at": "2024-11-01T14:54:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31122.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [instagibbs](https://github.com/bitcoin/bitcoin/pull/31122#issuecomment-2452011156) |\n| Concept ACK | [glozow](https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2383546169), [ismaelsadeeq](https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2385159381) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30964](https://github.com/bitcoin/bitcoin/pull/30964) (Disable RBF Rule 2 by arik-so)\n* [#30391](https://github.com/bitcoin/bitcoin/pull/30391) (BlockAssembler: return selected packages vsize and feerate by ismaelsadeeq)\n* [#30157](https://github.com/bitcoin/bitcoin/pull/30157) (Fee Estimation via Fee rate Forecasters by ismaelsadeeq)\n* [#29680](https://github.com/bitcoin/bitcoin/pull/29680) (wallet: fix unrelated parent conflict doesn't cause child tx to be marked as conflict by Eunovo)\n* [#26593](https://github.com/bitcoin/bitcoin/pull/26593) (tracing: Only prepare tracepoint arguments when actually tracing by 0xB10C)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#issuecomment-2425149525",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31122"
    },
    {
      "event": "labeled",
      "id": 14754851711,
      "node_id": "LE_lADOABII586bBCeXzwAAAANvdSt_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14754851711",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-20T17:48:00Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "labeled",
      "id": 14755142049,
      "node_id": "LE_lADOABII586bBCeXzwAAAANveZmh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14755142049",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-20T19:19:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2425184701,
      "node_id": "IC_kwDOABII586QjWG9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2425184701",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-20T19:19:59Z",
      "updated_at": "2024-10-20T19:19:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/31793556861</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#issuecomment-2425184701",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14755665335,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAANvgZW3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14755665335",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-20T23:38:55Z"
    },
    {
      "event": "unlabeled",
      "id": 14755962530,
      "node_id": "UNLE_lADOABII586bBCeXzwAAAANvhh6i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14755962530",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T00:55:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unsubscribed",
      "id": 14758033128,
      "node_id": "UE_lADOABII586bBCeXzwAAAANvpbbo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14758033128",
      "actor": {
        "login": "gsannikov",
        "id": 52405655,
        "node_id": "MDQ6VXNlcjUyNDA1NjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/52405655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gsannikov",
        "html_url": "https://github.com/gsannikov",
        "followers_url": "https://api.github.com/users/gsannikov/followers",
        "following_url": "https://api.github.com/users/gsannikov/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gsannikov/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gsannikov/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gsannikov/subscriptions",
        "organizations_url": "https://api.github.com/users/gsannikov/orgs",
        "repos_url": "https://api.github.com/users/gsannikov/repos",
        "events_url": "https://api.github.com/users/gsannikov/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gsannikov/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T05:36:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14763926218,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAANv_6LK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14763926218",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T12:30:32Z"
    },
    {
      "event": "reviewed",
      "id": 2383546169,
      "node_id": "PRR_kwDOABII586OEgc5",
      "url": null,
      "actor": null,
      "commit_id": "aeefd31c973b9933afcf38109f1f25c76ab9f689",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, did a first pass",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2383546169",
      "submitted_at": "2024-10-22T02:04:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "reviewed",
      "id": 2385138219,
      "node_id": "PRR_kwDOABII586OKlIr",
      "url": null,
      "actor": null,
      "commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2385138219",
      "submitted_at": "2024-10-22T13:02:26Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "reviewed",
      "id": 2385150906,
      "node_id": "PRR_kwDOABII586OKoO6",
      "url": null,
      "actor": null,
      "commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2385150906",
      "submitted_at": "2024-10-22T13:07:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "reviewed",
      "id": 2385159381,
      "node_id": "PRR_kwDOABII586OKqTV",
      "url": null,
      "actor": null,
      "commit_id": "aeefd31c973b9933afcf38109f1f25c76ab9f689",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nThe changes are straightforward to understand, and the large diff is primarily due to changes in the error message and the removal of `addUnchecked`.",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2385159381",
      "submitted_at": "2024-10-22T13:10:16Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14789278739,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAANxgnwT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14789278739",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-22T16:55:28Z"
    },
    {
      "event": "commented",
      "id": 2429804570,
      "node_id": "IC_kwDOABII586Q0-Aa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2429804570",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-22T17:01:08Z",
      "updated_at": "2024-10-22T17:01:08Z",
      "author_association": "MEMBER",
      "body": "Thanks @glozow and @ismaelsadeeq for the review; I've incorporated some of the comments.  If you have suggestions for how the logging can be improved in the package RBF case (and how the USDT tracing messages can be improved, similarly) please let me know your thoughts.\r\n\r\nAlso, I wanted to flag that the locking is a bit of a mess in this branch.  Initially, I tried to add lock annotations to the `CTxMemPoolChangeSet` functions to guarantee that the mempool itself was locked whenever any of those functions were invoked.  I had mixed results with the compiler understanding those annotations, and ran into a roadblock at some point with a unit test which was taking the mempool lock and should have satisfied the annotations, but the compiler wasn't recognizing the lock as being the same one that needed to be held.  I assume the complication is mostly that the changeset is a different object than the mempool, so one thing I could try is moving all the changeset methods to instead be methods of the mempool itself (which take a changeset as an argument, potentially) -- but that also seems like a little bit of a mess to me, so wasn't sure if that was worth doing.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#issuecomment-2429804570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31122"
    },
    {
      "event": "mentioned",
      "id": 14789364117,
      "node_id": "MEE_lADOABII586bBCeXzwAAAANxg8mV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14789364117",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-22T17:01:10Z"
    },
    {
      "event": "subscribed",
      "id": 14789364142,
      "node_id": "SE_lADOABII586bBCeXzwAAAANxg8mu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14789364142",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-22T17:01:10Z"
    },
    {
      "event": "mentioned",
      "id": 14789364185,
      "node_id": "MEE_lADOABII586bBCeXzwAAAANxg8nZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14789364185",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-22T17:01:10Z"
    },
    {
      "event": "subscribed",
      "id": 14789364201,
      "node_id": "SE_lADOABII586bBCeXzwAAAANxg8np",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14789364201",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-22T17:01:10Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14791754763,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAANxqEQL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14791754763",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-22T19:49:45Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14793672164,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAANxxYXk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14793672164",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-22T22:10:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14793691023,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAANxxc-P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14793691023",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-22T22:12:00Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14823422433,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAANzi3nh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14823422433",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-23T16:46:15Z"
    },
    {
      "event": "labeled",
      "id": 14824292920,
      "node_id": "LE_lADOABII586bBCeXzwAAAANzmMI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14824292920",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-23T17:12:19Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2432901486,
      "node_id": "IC_kwDOABII586RAyFu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2432901486",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-23T17:12:20Z",
      "updated_at": "2024-10-23T17:12:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/31962210262</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#issuecomment-2432901486",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31122"
    },
    {
      "event": "reviewed",
      "id": 2389151891,
      "node_id": "PRR_kwDOABII586OZ5CT",
      "url": null,
      "actor": null,
      "commit_id": "dcbfe98b7c2314c4f50c5a0f1ef6867ce444c168",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "first pass through, concept ACK",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2389151891",
      "submitted_at": "2024-10-23T19:23:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "unlabeled",
      "id": 14829380137,
      "node_id": "UNLE_lADOABII586bBCeXzwAAAANz5mIp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14829380137",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-23T19:44:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14845466657,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAAN029gh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14845466657",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T09:37:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14845813514,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAAN04SMK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14845813514",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T09:58:08Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14846610134,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAAN07UrW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14846610134",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T10:07:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14848682030,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAAN1DOgu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14848682030",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T10:50:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14855217202,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAAN1cKAy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14855217202",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T16:44:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14860260957,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAAN1vZZd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14860260957",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-25T00:45:49Z"
    },
    {
      "event": "reviewed",
      "id": 2396086132,
      "node_id": "PRR_kwDOABII586O0V90",
      "url": null,
      "actor": null,
      "commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2396086132",
      "submitted_at": "2024-10-25T18:09:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "reviewed",
      "id": 2396123518,
      "node_id": "PRR_kwDOABII586O0fF-",
      "url": null,
      "actor": null,
      "commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2396123518",
      "submitted_at": "2024-10-25T18:24:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "referenced",
      "id": 14903562551,
      "node_id": "REFE_lADOABII586bBCeXzwAAAAN4UlE3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14903562551",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "2a52718d734cf65aaeeb18f627547e5bca3483f4",
      "commit_url": "https://api.github.com/repos/bitcoin-core/gui/commits/2a52718d734cf65aaeeb18f627547e5bca3483f4",
      "created_at": "2024-10-26T13:37:44Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNjMDE2NjE5OWMxY2EzMDU4ZTIyMDExZTVmNWQxNmY5ZDUxMGQ5ZjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c0166199c1ca3058e22011e5f5d16f9d510d9f2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3c0166199c1ca3058e22011e5f5d16f9d510d9f2",
      "tree": {
        "sha": "7099e541394faabc1831853ff468ef3584b4ee28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7099e541394faabc1831853ff468ef3584b4ee28"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a52718d734cf65aaeeb18f627547e5bca3483f4",
          "sha": "2a52718d734cf65aaeeb18f627547e5bca3483f4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2a52718d734cf65aaeeb18f627547e5bca3483f4"
        }
      ],
      "message": "Add package hash to package-rbf log message",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-10-26T20:36:41Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-23T16:24:41Z"
      },
      "sha": "3c0166199c1ca3058e22011e5f5d16f9d510d9f2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJlZTdmZDk3MDg3MjUyNmEzZDUxMDgwOTNhYWU0ZmI3NGQwNTJhMmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ee7fd970872526a3d5108093aae4fb74d052a2a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ee7fd970872526a3d5108093aae4fb74d052a2a",
      "tree": {
        "sha": "ef9c1dab084c324c2eaef0feb52bdad1f7cf6e0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef9c1dab084c324c2eaef0feb52bdad1f7cf6e0e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c0166199c1ca3058e22011e5f5d16f9d510d9f2",
          "sha": "3c0166199c1ca3058e22011e5f5d16f9d510d9f2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3c0166199c1ca3058e22011e5f5d16f9d510d9f2"
        }
      ],
      "message": "test: Add unit test coverage of package rbf + prioritisetransaction",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-10-26T20:36:41Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-24T12:24:00Z"
      },
      "sha": "2ee7fd970872526a3d5108093aae4fb74d052a2a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14913302222,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAAN45u7O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14913302222",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:11:53Z"
    },
    {
      "event": "commented",
      "id": 2439740158,
      "node_id": "IC_kwDOABII586Ra3r-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2439740158",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-26T21:21:29Z",
      "updated_at": "2024-10-26T21:21:29Z",
      "author_association": "MEMBER",
      "body": "Rebased (to pick up the test introduced in #31152) and addressed latest feedback.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#issuecomment-2439740158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31122"
    },
    {
      "event": "reviewed",
      "id": 2397526415,
      "node_id": "PRR_kwDOABII586O51mP",
      "url": null,
      "actor": null,
      "commit_id": "0df81a420e9b6fc31711cf6f04a1b4fc0fc58852",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2397526415",
      "submitted_at": "2024-10-27T12:53:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "reviewed",
      "id": 2397529546,
      "node_id": "PRR_kwDOABII586O52XK",
      "url": null,
      "actor": null,
      "commit_id": "0df81a420e9b6fc31711cf6f04a1b4fc0fc58852",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2397529546",
      "submitted_at": "2024-10-27T13:08:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "reviewed",
      "id": 2397554272,
      "node_id": "PRR_kwDOABII586O58Zg",
      "url": null,
      "actor": null,
      "commit_id": "0df81a420e9b6fc31711cf6f04a1b4fc0fc58852",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2397554272",
      "submitted_at": "2024-10-27T13:36:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14931252592,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAAN5-NVw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14931252592",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-27T20:06:50Z"
    },
    {
      "event": "reviewed",
      "id": 2402586962,
      "node_id": "PRR_kwDOABII586PNJFS",
      "url": null,
      "actor": null,
      "commit_id": "e2324779781b695024d3b17340001fa2da5d3c7f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "LGTM e2324779781b695024d3b17340001fa2da5d3c7f\r\n\r\nwith non-blocking nits\r\n\r\nwill do some testing",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#pullrequestreview-2402586962",
      "submitted_at": "2024-10-29T19:41:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgxMGE3OTQ5NDYwNDY0N2I2YTZiZTY5NzZjMjE5ODIzOGNlYzJiYTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/810a79494604647b6a6be6976c2198238cec2ba7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/810a79494604647b6a6be6976c2198238cec2ba7",
      "tree": {
        "sha": "6694651eb147c8b3e727912f17d1db140c6c9369",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6694651eb147c8b3e727912f17d1db140c6c9369"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ee7fd970872526a3d5108093aae4fb74d052a2a",
          "sha": "2ee7fd970872526a3d5108093aae4fb74d052a2a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2ee7fd970872526a3d5108093aae4fb74d052a2a"
        }
      ],
      "message": "Introduce mempool changesets\n\nIntroduce the CTxMemPool::ChangeSet, a wrapper for creating (potential) new\nmempool entries and removing conflicts.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T13:02:20Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-08-23T22:45:49Z"
      },
      "sha": "810a79494604647b6a6be6976c2198238cec2ba7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc4MDdhZTgyNjVhYzYwYzIzMjJjYTM5ZTFiNGYyOTRkMzIxYjM3N2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7807ae8265ac60c2322ca39e1b4f294d321b377e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7807ae8265ac60c2322ca39e1b4f294d321b377e",
      "tree": {
        "sha": "af2f6a43a854815301079ac8c004ca89fd533063",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af2f6a43a854815301079ac8c004ca89fd533063"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/810a79494604647b6a6be6976c2198238cec2ba7",
          "sha": "810a79494604647b6a6be6976c2198238cec2ba7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/810a79494604647b6a6be6976c2198238cec2ba7"
        }
      ],
      "message": "Move changeset from workspace to subpackage",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-08-24T10:53:43Z"
      },
      "sha": "7807ae8265ac60c2322ca39e1b4f294d321b377e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDllZjE5ZDRmZjQ2YjFhNzQzZTc2NTlkODljMDQ2MmU5YWQ5MDJiMzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ef19d4ff46b1a743e7659d89c0462e9ad902b35",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9ef19d4ff46b1a743e7659d89c0462e9ad902b35",
      "tree": {
        "sha": "eee1880707b689645aaee74a1380184f4eee7a88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eee1880707b689645aaee74a1380184f4eee7a88"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7807ae8265ac60c2322ca39e1b4f294d321b377e",
          "sha": "7807ae8265ac60c2322ca39e1b4f294d321b377e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7807ae8265ac60c2322ca39e1b4f294d321b377e"
        }
      ],
      "message": "Move LimitMempoolSize to take place outside FinalizeSubpackage",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-08-24T11:26:09Z"
      },
      "sha": "9ef19d4ff46b1a743e7659d89c0462e9ad902b35"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNjNjY2ZWM1MmEyZWNlYjA0Nzk2MTMzYzUwOTYzNGYzMzlkMGVmNmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc666ec52a2eceb04796133c509634f339d0ef6a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cc666ec52a2eceb04796133c509634f339d0ef6a",
      "tree": {
        "sha": "83790289cc1b937e7975c558cbcf98f01f3bde2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83790289cc1b937e7975c558cbcf98f01f3bde2a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ef19d4ff46b1a743e7659d89c0462e9ad902b35",
          "sha": "9ef19d4ff46b1a743e7659d89c0462e9ad902b35",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9ef19d4ff46b1a743e7659d89c0462e9ad902b35"
        }
      ],
      "message": "Clean up FinalizeSubpackage to avoid workspace-specific information\n\nAlso, use the \"package hash\" for logging replacements in the package rbf\nsetting.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-08-24T11:26:09Z"
      },
      "sha": "cc666ec52a2eceb04796133c509634f339d0ef6a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU5MWZmNjY2YWVkMTMyNzdiNDhmYzliYTc4OTRkNjRkY2M4Mzc5MmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e91ff666aed13277b48fc9ba7894d64dcc83792c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e91ff666aed13277b48fc9ba7894d64dcc83792c",
      "tree": {
        "sha": "ffe79274318513860f069063ace8433b548041a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ffe79274318513860f069063ace8433b548041a6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc666ec52a2eceb04796133c509634f339d0ef6a",
          "sha": "cc666ec52a2eceb04796133c509634f339d0ef6a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cc666ec52a2eceb04796133c509634f339d0ef6a"
        }
      ],
      "message": "Apply mempool changeset transactions directly into the mempool\n\nRather than individually calling addUnchecked for each transaction added in a\nchangeset (after removing all the to-be-removed transactions), instead we can\ntake advantage of boost::multi_index's splicing features to extract and insert\nentries directly from the staging multi_index into mapTx.\n\nThis has the immediate advantage of saving allocation overhead for mempool\nentries which have already been allocated once. This also means that the memory\nlocations of mempool entries will not change when transactions go from staging\nto the main mempool.\n\nAdditionally, eliminate addUnchecked and require all new transactions to enter\nthe mempool via a CTxMemPoolChangeSet.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-10T18:59:23Z"
      },
      "sha": "e91ff666aed13277b48fc9ba7894d64dcc83792c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU4OWIyMDlhOGQ1NzIxNzdhMDJkMzNkMDZjOWZmMTNkOWY1MzNhYzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/589b209a8d572177a02d33d06c9ff13d9f533ac0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/589b209a8d572177a02d33d06c9ff13d9f533ac0",
      "tree": {
        "sha": "d69afe3d2b19815e363a1f263d13a2c9c65d0937",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d69afe3d2b19815e363a1f263d13a2c9c65d0937"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e91ff666aed13277b48fc9ba7894d64dcc83792c",
          "sha": "e91ff666aed13277b48fc9ba7894d64dcc83792c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e91ff666aed13277b48fc9ba7894d64dcc83792c"
        }
      ],
      "message": "Enforce that there is only one changeset at a time",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-14T14:19:44Z"
      },
      "sha": "589b209a8d572177a02d33d06c9ff13d9f533ac0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQyOTc1Zjc3ZGU4MzA4OGVlNDEwYmVjMjY5MGQ4ZWFkOTZmNTEwMTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42975f77de83088ee410bec2690d8ead96f51018",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/42975f77de83088ee410bec2690d8ead96f51018",
      "tree": {
        "sha": "e025fcf0ac2c3bd4f4708a7e41dee9953a59cd53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e025fcf0ac2c3bd4f4708a7e41dee9953a59cd53"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/589b209a8d572177a02d33d06c9ff13d9f533ac0",
          "sha": "589b209a8d572177a02d33d06c9ff13d9f533ac0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/589b209a8d572177a02d33d06c9ff13d9f533ac0"
        }
      ],
      "message": "Make RemoveStaged() private",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T13:46:05Z"
      },
      "sha": "42975f77de83088ee410bec2690d8ead96f51018"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNjMmMwMDJlNDdjY2ZkZjM5YWMwY2IzMzk3ZTcwZjY2NWJhMWY4YWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c2c002e47ccfdf39ac0cb3397e70f665ba1f8af",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3c2c002e47ccfdf39ac0cb3397e70f665ba1f8af",
      "tree": {
        "sha": "1c1edfa97eb2cf82ae05b6c106a53fdc66c3914a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c1edfa97eb2cf82ae05b6c106a53fdc66c3914a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42975f77de83088ee410bec2690d8ead96f51018",
          "sha": "42975f77de83088ee410bec2690d8ead96f51018",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/42975f77de83088ee410bec2690d8ead96f51018"
        }
      ],
      "message": "Public mempool removal methods Assume() no changeset is outstanding\n\nWhile a changeset is outstanding, removing transaction directly from the\nmempool will invalidate the changeset state, so this is not permitted.",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2024-10-18T14:36:36Z"
      },
      "sha": "3c2c002e47ccfdf39ac0cb3397e70f665ba1f8af"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA4YzdkYzlkNzlkN2NkYWQwMGI0NmU0MzVmYTIwMjkxNGYxM2U5NDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08c7dc9d79d7cdad00b46e435fa202914f13e942",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/08c7dc9d79d7cdad00b46e435fa202914f13e942",
      "tree": {
        "sha": "81526a4ee66476e446c77cb2fdcf480b36eb33ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/81526a4ee66476e446c77cb2fdcf480b36eb33ae"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c2c002e47ccfdf39ac0cb3397e70f665ba1f8af",
          "sha": "3c2c002e47ccfdf39ac0cb3397e70f665ba1f8af",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3c2c002e47ccfdf39ac0cb3397e70f665ba1f8af"
        }
      ],
      "message": "Duplicate transactions are not permitted within a changeset",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-14T14:27:27Z"
      },
      "sha": "08c7dc9d79d7cdad00b46e435fa202914f13e942"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhmYzQ3YTUyZjI2ZWUxYjY0YWQxMmVjZDhlNTBmN2I4Zjk3MjlmZDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8fc47a52f26ee1b64ad12ecd8e50f7b8f9729fd0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8fc47a52f26ee1b64ad12ecd8e50f7b8f9729fd0",
      "tree": {
        "sha": "efe65493eaa16a6a6051af429804989ad6fe56e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/efe65493eaa16a6a6051af429804989ad6fe56e3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08c7dc9d79d7cdad00b46e435fa202914f13e942",
          "sha": "08c7dc9d79d7cdad00b46e435fa202914f13e942",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/08c7dc9d79d7cdad00b46e435fa202914f13e942"
        }
      ],
      "message": "Don't distinguish between direct conflicts and all conflicts when doing cluster-size-2-rbf checks",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-14T15:11:17Z"
      },
      "sha": "8fc47a52f26ee1b64ad12ecd8e50f7b8f9729fd0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzZjA1M2VjZTE2M2FmZTRhYzczZDI2ODMxOWJhYWU0NDAzZGU2YTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23f053ece163afe4ac73d268319baae4403de6a7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/23f053ece163afe4ac73d268319baae4403de6a7",
      "tree": {
        "sha": "2d578da95bf20f165ae4d57625b7ede2b2451a2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d578da95bf20f165ae4d57625b7ede2b2451a2a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8fc47a52f26ee1b64ad12ecd8e50f7b8f9729fd0",
          "sha": "8fc47a52f26ee1b64ad12ecd8e50f7b8f9729fd0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8fc47a52f26ee1b64ad12ecd8e50f7b8f9729fd0"
        }
      ],
      "message": "Move prioritisation into changeset",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-16T20:36:36Z"
      },
      "sha": "23f053ece163afe4ac73d268319baae4403de6a7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ0NmRjNjQ4YjI1Nzk0NWQyMDI0NDJjMTU3NjQ4Y2UwYTY5ZWI1Njc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/446dc648b257945d202442c157648ce0a69eb567",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/446dc648b257945d202442c157648ce0a69eb567",
      "tree": {
        "sha": "5818c82c446eeb919217ee83e167714f8163f998",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5818c82c446eeb919217ee83e167714f8163f998"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23f053ece163afe4ac73d268319baae4403de6a7",
          "sha": "23f053ece163afe4ac73d268319baae4403de6a7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/23f053ece163afe4ac73d268319baae4403de6a7"
        }
      ],
      "message": "Move CalculateChunksForRBF() to the mempool changeset",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-16T13:09:44Z"
      },
      "sha": "446dc648b257945d202442c157648ce0a69eb567"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU1MjMzYmE1YWQ0ODE5OTAzOWQ5YmJiNWIwOTUwOGJkOTUzZGQ5ZTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55233ba5ad48199039d9bbb5b09508bd953dd9e6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/55233ba5ad48199039d9bbb5b09508bd953dd9e6",
      "tree": {
        "sha": "bc5ea1d19125d35c427ebf043ab2f9535b8d54c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc5ea1d19125d35c427ebf043ab2f9535b8d54c5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/446dc648b257945d202442c157648ce0a69eb567",
          "sha": "446dc648b257945d202442c157648ce0a69eb567",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/446dc648b257945d202442c157648ce0a69eb567"
        }
      ],
      "message": "Ensure that we don't add duplicate transactions in rbf fuzz tests",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-19T14:18:53Z"
      },
      "sha": "55233ba5ad48199039d9bbb5b09508bd953dd9e6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM4MjRiYzkwMzljMGM4YTdiMWJlZWJmZGNiNTM5ZWM1ZDFhZjc2NmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3824bc9039c0c8a7b1beebfdcb539ec5d1af766b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3824bc9039c0c8a7b1beebfdcb539ec5d1af766b",
      "tree": {
        "sha": "52705339365664e84bd228e2679a6fe5e183cae9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52705339365664e84bd228e2679a6fe5e183cae9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55233ba5ad48199039d9bbb5b09508bd953dd9e6",
          "sha": "55233ba5ad48199039d9bbb5b09508bd953dd9e6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/55233ba5ad48199039d9bbb5b09508bd953dd9e6"
        }
      ],
      "message": "Remove m_all_conflicts from SubPackageState",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-25T00:29:42Z"
      },
      "sha": "3824bc9039c0c8a7b1beebfdcb539ec5d1af766b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1MTJiZDM0YTNkNzRkMTVjM2NlMTA4NmE4MGExZWRmYTVhYzNhY2Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "tree": {
        "sha": "8c81ee1fd5829d4de3c0c79a53549d1739ccdc57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c81ee1fd5829d4de3c0c79a53549d1739ccdc57"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3824bc9039c0c8a7b1beebfdcb539ec5d1af766b",
          "sha": "3824bc9039c0c8a7b1beebfdcb539ec5d1af766b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3824bc9039c0c8a7b1beebfdcb539ec5d1af766b"
        }
      ],
      "message": "doc: add comments for CTxMemPool::ChangeSet",
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-11-01T14:10:58Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2024-10-25T00:42:47Z"
      },
      "sha": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15069023124,
      "node_id": "HRFPE_lADOABII586bBCeXzwAAAAOCLwuU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15069023124",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T14:11:38Z"
    },
    {
      "event": "commented",
      "id": 2452011156,
      "node_id": "IC_kwDOABII586SJriU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2452011156",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T14:54:29Z",
      "updated_at": "2024-11-01T14:54:29Z",
      "author_association": "MEMBER",
      "body": "ACK 9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf\r\n\r\nvia `git range-diff master e2324779781b695024d3b17340001fa2da5d3c7f 9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf`",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#issuecomment-2452011156",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31122"
    },
    {
      "event": "review_requested",
      "id": 15070156365,
      "node_id": "RRE_lADOABII586bBCeXzwAAAAOCQFZN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15070156365",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T14:54:35Z",
      "requested_reviewer": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "review_requested",
      "id": 15070157045,
      "node_id": "RRE_lADOABII586bBCeXzwAAAAOCQFj1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15070157045",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-01T14:54:36Z",
      "requested_reviewer": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1809704580",
      "pull_request_review_id": 2383546169,
      "id": 1809704580,
      "node_id": "PRRC_kwDOABII585r3eaE",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle AddTx(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void RemoveTx(CTxMemPool::txiter it) { m_all_conflicts.insert(it); }",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 16,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "fc03c77f8b9a50459076bce3000d18e687f52820",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`StageAddition` and `StageRemoval` seem a bit more intuitive, but it's a nit",
      "created_at": "2024-10-22T00:57:53Z",
      "updated_at": "2024-10-22T02:04:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1809704580",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1809704580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 830,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 831,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1809735446",
      "pull_request_review_id": 2383546169,
      "id": 1809735446,
      "node_id": "PRRC_kwDOABII585r3l8W",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle AddTx(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void RemoveTx(CTxMemPool::txiter it) { m_all_conflicts.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_stage_tx;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order\n+        // map from the stage_tx index to the ancestors for the transaction\n+        std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;\n+        CTxMemPool::setEntries m_all_conflicts;",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 34,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "fc03c77f8b9a50459076bce3000d18e687f52820",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Similarly, `m_stage_tx` and `m_all_conflicts` could be `m_to_add` and `m_to_remove`?",
      "created_at": "2024-10-22T01:50:03Z",
      "updated_at": "2024-10-22T02:04:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1809735446",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1809735446"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 845,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 849,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1809737214",
      "pull_request_review_id": 2383546169,
      "id": 1809737214,
      "node_id": "PRRC_kwDOABII585r3mX-",
      "diff_hunk": "@@ -847,7 +847,14 @@ class CTxMemPool\n         friend class CTxMemPool;\n     };\n \n-    std::unique_ptr<CTxMemPoolChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) { return std::make_unique<CTxMemPoolChangeSet>(this); }\n+    std::unique_ptr<CTxMemPoolChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) {\n+        Assume(m_changeset == nullptr);\n+        auto ret = std::make_unique<CTxMemPoolChangeSet>(this);\n+        m_changeset = ret.get();\n+        return ret;\n+    }\n+\n+    CTxMemPoolChangeSet* m_changeset GUARDED_BY(cs){nullptr};",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 21,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1282bc0ac2820c1e7217c5c974c0d6756a48d820",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Question: why isn't this a `shared_ptr` / what's the purpose of the `unique_ptr`? I get that there should only ever be one changeset, but I'm confused by the fact that this carries a copy of the underlying raw pointer, as the `unique_ptr` then doesn't seem very unique.",
      "created_at": "2024-10-22T01:53:37Z",
      "updated_at": "2024-10-22T02:04:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1809737214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1809737214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 852,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 883,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1809741165",
      "pull_request_review_id": 2383546169,
      "id": 1809741165,
      "node_id": "PRRC_kwDOABII585r3nVt",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You could use `m_subpackage.m_total_modified_fees, m_subpackage.m_total_vsize` here? Unless you feel that `CTxMemPoolChangeSet::GetAggregateFeeRate` will be useful in the future.",
      "created_at": "2024-10-22T02:00:17Z",
      "updated_at": "2024-10-22T02:04:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1809741165",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1809741165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1810686447",
      "pull_request_review_id": 2385138219,
      "id": 1810686447,
      "node_id": "PRRC_kwDOABII585r7OHv",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should this be just logged once; i.e after replacing the transactions.",
      "created_at": "2024-10-22T13:02:25Z",
      "updated_at": "2024-10-22T13:02:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1810686447",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1810686447"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 1313,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1810694092",
      "pull_request_review_id": 2385150906,
      "id": 1810694092,
      "node_id": "PRRC_kwDOABII585r7P_M",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }\n         TRACE7(mempool, replaced,\n                 it->GetTx().GetHash().data(),\n                 it->GetTxSize(),\n                 it->GetFee(),\n                 std::chrono::duration_cast<std::chrono::duration<std::uint64_t>>(it->GetTime()).count(),\n-                hash.data(),\n-                workspaces[0].m_tx_handle->GetTxSize(),\n-                workspaces[0].m_tx_handle->GetFee()\n+                m_subpackage.m_changeset->GetTx(0).GetHash().data(),",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Why are we only tracing the first tx in the package",
      "created_at": "2024-10-22T13:07:08Z",
      "updated_at": "2024-10-22T13:07:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1810694092",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1810694092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811061628",
      "pull_request_review_id": 2385759109,
      "id": 1811061628,
      "node_id": "PRRC_kwDOABII585r8pt8",
      "diff_hunk": "@@ -847,7 +847,14 @@ class CTxMemPool\n         friend class CTxMemPool;\n     };\n \n-    std::unique_ptr<CTxMemPoolChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) { return std::make_unique<CTxMemPoolChangeSet>(this); }\n+    std::unique_ptr<CTxMemPoolChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) {\n+        Assume(m_changeset == nullptr);\n+        auto ret = std::make_unique<CTxMemPoolChangeSet>(this);\n+        m_changeset = ret.get();\n+        return ret;\n+    }\n+\n+    CTxMemPoolChangeSet* m_changeset GUARDED_BY(cs){nullptr};",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 21,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1282bc0ac2820c1e7217c5c974c0d6756a48d820",
      "in_reply_to_id": 1809737214,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This only exists for sanity checking that we don't have more than one changeset at a time.  We could just as easily replace this with a `bool`; I made it a pointer mostly for debugging purposes, if the `Assume()` were ever hit.\r\n\r\nThe idea behind the `unique_ptr` is that I wanted all the state in the ChangeSet to magically go away whenever the object goes out of scope, so that I didn't have to explicitly clean up state everywhere that a transaction might fail validation (which seems like a lot of places).  In this PR, there's not a ton of state, but I expect that when we implement cluster mempool that we'll be creating similar staging data structures within the `TxGraph` layer that will exist one level below the mempool (for computing clusters and feerate diagrams for candidate transactions), and I thought this mechanism of ending a staging when the changeset goes out of scope would be an easy way to manage things at that layer as well.  So in the future you could imagine that in the `CTxMemPoolChangeSet` constructor, we might initiate a staging in the underlying `TxGraph`; in the mempool `Apply()` function we might also apply the staging to the `TxGraph`; and in the `CTxMemPoolChangeSet` destructor we might abort a staging in the underlying `TxGraph`.\r\n\r\nThe paradigm I'm looking for is that you can have at most one changeset at a time, and when there's a changeset outstanding that serves as a lock on the mempool so that you can't otherwise add/remove things (except via the changeset) until the changes are either applied or aborted, and the changeset is the destroyed.  However if there's a better way to implement that than what I tried here, I'm certainly open to suggestions.",
      "created_at": "2024-10-22T16:39:56Z",
      "updated_at": "2024-10-22T16:39:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1811061628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811061628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 852,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 883,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811072822",
      "pull_request_review_id": 2385780065,
      "id": 1811072822,
      "node_id": "PRRC_kwDOABII585r8sc2",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": 1810686447,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I tried to make this code analogous to the old code, which repeated information for each transaction.  I'm open to changing the logging but I am always a little afraid of breaking user's scripts or habits if people are used to grepping for a transaction ID and seeing more information? (Though I guess this PR already is breaking the logging for package RBF... so maybe not a big concern.)",
      "created_at": "2024-10-22T16:48:25Z",
      "updated_at": "2024-10-22T16:48:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1811072822",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811072822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 1313,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811074008",
      "pull_request_review_id": 2385781647,
      "id": 1811074008,
      "node_id": "PRRC_kwDOABII585r8svY",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }\n         TRACE7(mempool, replaced,\n                 it->GetTx().GetHash().data(),\n                 it->GetTxSize(),\n                 it->GetFee(),\n                 std::chrono::duration_cast<std::chrono::duration<std::uint64_t>>(it->GetTime()).count(),\n-                hash.data(),\n-                workspaces[0].m_tx_handle->GetTxSize(),\n-                workspaces[0].m_tx_handle->GetFee()\n+                m_subpackage.m_changeset->GetTx(0).GetHash().data(),",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": 1810694092,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure if the tracing API is well-specified for package based replacement.  I'm open to doing something different than what I propose here though, suggestions?",
      "created_at": "2024-10-22T16:49:14Z",
      "updated_at": "2024-10-22T16:49:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1811074008",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811074008"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811083143",
      "pull_request_review_id": 2385796227,
      "id": 1811083143,
      "node_id": "PRRC_kwDOABII585r8u-H",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle AddTx(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void RemoveTx(CTxMemPool::txiter it) { m_all_conflicts.insert(it); }",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 16,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "fc03c77f8b9a50459076bce3000d18e687f52820",
      "in_reply_to_id": 1809704580,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed, done.",
      "created_at": "2024-10-22T16:55:51Z",
      "updated_at": "2024-10-22T16:55:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1811083143",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811083143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 830,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 831,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811083287",
      "pull_request_review_id": 2385796501,
      "id": 1811083287,
      "node_id": "PRRC_kwDOABII585r8vAX",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle AddTx(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void RemoveTx(CTxMemPool::txiter it) { m_all_conflicts.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_stage_tx;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order\n+        // map from the stage_tx index to the ancestors for the transaction\n+        std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;\n+        CTxMemPool::setEntries m_all_conflicts;",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 34,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "fc03c77f8b9a50459076bce3000d18e687f52820",
      "in_reply_to_id": 1809735446,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed, done.",
      "created_at": "2024-10-22T16:56:00Z",
      "updated_at": "2024-10-22T16:56:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1811083287",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811083287"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 845,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 849,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811084319",
      "pull_request_review_id": 2385798008,
      "id": 1811084319,
      "node_id": "PRRC_kwDOABII585r8vQf",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": 1809741165,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks that is much better; the only reason I had introduced `GetAggregateFeeRate()` was for access in this one place, so now that is gone.",
      "created_at": "2024-10-22T16:56:43Z",
      "updated_at": "2024-10-22T16:56:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1811084319",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1811084319"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1312,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1812617677",
      "pull_request_review_id": 2388430909,
      "id": 1812617677,
      "node_id": "PRRC_kwDOABII585sClnN",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": 1810686447,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yeah will break existing grepping scripts, but I think we will need to do this anyway to improve the logging for package replacements. \r\n\r\nI think we should log the new package or new transaction replacement only once after logging all the replaced transactions:\r\n\r\n1. First, log all replaced transactions with their ID, witness, fee, and size.\r\n2. Then:\r\n   - For a single transaction replacement, log its ID, witness, fee, and size.\r\n   - For a package replacement, log that a new package has been received, along with the package's number of transactions, fees, and vsize. Then, log each transaction ID and witness in the package.\r\n\r\nThis approach preserves the previous logging behavior for individual transactions.\r\nCurrently, in this PR, for a single transaction, the logs show the following:\r\n\r\n```\r\n2024-10-23T10:26:03.802679Z [httpworker.3] [src/validation.cpp:1310] [FinalizeSubpackage] [mempool] replacing mempool tx 6ae77ff52efae84e0cca125e4b5acfe2f3415298f4f98e850b40f89a2aa5990f (wtxid=57f1edd04c15f6532cdddf4a7c8393f5c5e5584f00003855df8c490053027ac8, fees=10000000, vsize=104).\r\n2024-10-23T10:26:03.802686Z [httpworker.3] [src/validation.cpp:1317] [FinalizeSubpackage] [mempool] New tx e089a6391ae23d41baeed46fb1d8ac04cd0db73e82b4b330275f7d7cafcda33c (wtxid=db89e399619446928fb74a41a5207164beb0fd99972ba147b806a6a24f140e13, fees=490000000, vsize=104)\r\n```\r\n\r\nFor a package, we see duplicate removal logs, which makes it seem like multiple packages are being added for each replacement:\r\n\r\n```\r\n2024-10-23T10:30:28.361089Z [httpworker.3] [src/validation.cpp:1310] [FinalizeSubpackage] [mempool] replacing mempool tx 05ad4c0db1a2fe169acd15bf5d8d1f4fa0ff834b5e8259baab4219f3d20b8991 (wtxid=39676091a39b5f77ee0865c2c52ac4bb8378ff7283fc1668738155ec247c3868, fees=10000, vsize=104).\r\n2024-10-23T10:30:28.361110Z [httpworker.3] [src/validation.cpp:1322] [FinalizeSubpackage] [mempool] New package with 2 txs, fees=50000, vsize=208\r\n2024-10-23T10:30:28.361127Z [httpworker.3] [src/validation.cpp:1310] [FinalizeSubpackage] [mempool] replacing mempool tx 992204e731c78b7afc6e4b17e14adf0f6b93d472fddc4ba184dd86e1899a83d1 (wtxid=05d9f03194089441530d7503a12b7f36086a2c41deac0960e238e426ed59e5f4, fees=10000, vsize=104).\r\n2024-10-23T10:30:28.361139Z [httpworker.3] [src/validation.cpp:1322] [FinalizeSubpackage] [mempool] New package with 2 txs, fees=50000, vsize=208\r\n```\r\n\r\nWith the idea above, the logs for individual transactions will remain the same, but for packages, the logs will look like this:\r\n\r\n```\r\n2024-10-23T11:46:49.459665Z [httpworker.2] [src/validation.cpp:1312] [operator()] [mempool] Replacing mempool tx 05ad4c0db1a2fe169acd15bf5d8d1f4fa0ff834b5e8259baab4219f3d20b8991 (wtxid=39676091a39b5f77ee0865c2c52ac4bb8378ff7283fc1668738155ec247c3868, fees=10000, vsize=104).\r\n2024-10-23T11:46:49.459683Z [httpworker.2] [src/validation.cpp:1312] [operator()] [mempool] Replacing mempool tx 992204e731c78b7afc6e4b17e14adf0f6b93d472fddc4ba184dd86e1899a83d1 (wtxid=05d9f03194089441530d7503a12b7f36086a2c41deac0960e238e426ed59e5f4, fees=10000, vsize=104).\r\n2024-10-23T11:46:49.459696Z [httpworker.2] [src/validation.cpp:1342] [FinalizeSubpackage] [mempool] New package (txs=2, fees=50000, vsize=208)\r\n2024-10-23T11:46:49.459709Z [httpworker.2] [src/validation.cpp:1330] [operator()] [mempool] tx acd7ea806cd261b6c8cdb6d15210dad53daabbe68d5cb99f7df31646a769b69d (wtxid=8a867c2e5aea0d89831d3fe6831535e8cf8ce662ba36b6331fa072babc06f08c)\r\n2024-10-23T11:46:49.459721Z [httpworker.2] [src/validation.cpp:1330] [operator()] [mempool] tx 28deb9d38a4490c3f542f0fd173805eb6c2c8309aa12d5e1669fc71a453d23fe (wtxid=8f8a74f38ed9deada97ef37bb5138b46d16f448da7585e33fc861b4142f764d5)\r\n```\r\n\r\nThis will make the logs much easier to parse with a script. \r\nSee naive diff implementing this change suggestion https://github.com/ismaelsadeeq/bitcoin/commit/555b05680d8e782fbe0d7b4807d2fce23f512b44",
      "created_at": "2024-10-23T12:14:48Z",
      "updated_at": "2024-10-23T12:14:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1812617677",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1812617677"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 1313,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1812631628",
      "pull_request_review_id": 2388452698,
      "id": 1812631628,
      "node_id": "PRRC_kwDOABII585sCpBM",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }\n         TRACE7(mempool, replaced,\n                 it->GetTx().GetHash().data(),\n                 it->GetTxSize(),\n                 it->GetFee(),\n                 std::chrono::duration_cast<std::chrono::duration<std::uint64_t>>(it->GetTime()).count(),\n-                hash.data(),\n-                workspaces[0].m_tx_handle->GetTxSize(),\n-                workspaces[0].m_tx_handle->GetFee()\n+                m_subpackage.m_changeset->GetTx(0).GetHash().data(),",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": 1810694092,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Its not specified, I think we have to specify tracing api for packages;\r\n\r\nShould be something like\r\n\r\n#### Tracepoint `mempool:replaced_by_package`\r\n\r\nIs called when a transaction in the node's mempool is getting replaced by a package.\r\nPasses information about the replaced transaction and  the replacement package.\r\n\r\nArguments passed:\r\n1. Replaced transaction ID (hash) as `pointer to unsigned chars` (i.e. 32 bytes in little-endian)\r\n2. Replaced transaction virtual size as `int32`\r\n3. Replaced transaction fee as `int64`\r\n4. Replaced transaction mempool entry time (epoch) as `uint64`\r\n5. Replacement package virtual size as `int32`\r\n6. Replacement package fee as `int64`\r\n\r\n",
      "created_at": "2024-10-23T12:21:00Z",
      "updated_at": "2024-10-23T12:21:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1812631628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1812631628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813013432",
      "pull_request_review_id": 2389151891,
      "id": 1813013432,
      "node_id": "PRRC_kwDOABII585sEGO4",
      "diff_hunk": "@@ -1306,25 +1312,23 @@ bool MemPoolAccept::Finalize(const ATMPArgs& args, Workspace& ws)\n                 it->GetTxSize(),\n                 hash.ToString(),\n                 tx.GetWitnessHash().ToString(),\n-                entry->GetFee(),\n-                entry->GetTxSize());\n+                ws.m_tx_handle->GetFee(),\n+                ws.m_tx_handle->GetTxSize());\n         TRACE7(mempool, replaced,\n                 it->GetTx().GetHash().data(),\n                 it->GetTxSize(),\n                 it->GetFee(),\n                 std::chrono::duration_cast<std::chrono::duration<std::uint64_t>>(it->GetTime()).count(),\n                 hash.data(),\n-                entry->GetTxSize(),\n-                entry->GetFee()\n+                ws.m_tx_handle->GetTxSize(),\n+                ws.m_tx_handle->GetFee()\n         );\n         m_subpackage.m_replaced_transactions.push_back(it->GetSharedTx());\n     }\n-    m_pool.RemoveStaged(m_subpackage.m_all_conflicts, false, MemPoolRemovalReason::REPLACED);\n+    ws.m_changeset->Apply();\n     // Don't attempt to process the same conflicts repeatedly during subpackage evaluation:\n     // they no longer exist on subsequent calls to Finalize() post-RemoveStaged",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "s/RemoveStaged/Apply/",
      "created_at": "2024-10-23T15:13:14Z",
      "updated_at": "2024-10-23T19:23:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813013432",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813013432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813066539",
      "pull_request_review_id": 2389151891,
      "id": 1813066539,
      "node_id": "PRRC_kwDOABII585sETMr",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_to_add;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order\n+        // map from the m_to_add index to the ancestors for the transaction\n+        std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;",
      "path": "src/txmempool.h",
      "position": 196,
      "original_position": 33,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "note: circa 88e109f1091561639aca323cb455180317a12b32 this field is set but never read from making the `CalculateMemPoolAncestors` wrapper a bit mysterious. Could a motivating comment be given?",
      "created_at": "2024-10-23T15:41:49Z",
      "updated_at": "2024-10-23T19:24:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813066539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813066539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 878,
      "original_line": 878,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813069337",
      "pull_request_review_id": 2389151891,
      "id": 1813069337,
      "node_id": "PRRC_kwDOABII585sET4Z",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_to_add;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order",
      "path": "src/txmempool.h",
      "position": 194,
      "original_position": 31,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "what order should caller call things, e.g. `StageAddition`? I think some notes for this class would help with assumptions for caller.",
      "created_at": "2024-10-23T15:43:07Z",
      "updated_at": "2024-10-23T19:23:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813069337",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813069337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 876,
      "original_line": 876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813100135",
      "pull_request_review_id": 2389151891,
      "id": 1813100135,
      "node_id": "PRRC_kwDOABII585sEbZn",
      "diff_hunk": "@@ -1312,20 +1315,21 @@ bool MemPoolAccept::Finalize(const ATMPArgs& args, Workspace& ws)\n                 it->GetTxSize(),\n                 hash.ToString(),\n                 tx.GetWitnessHash().ToString(),\n-                ws.m_tx_handle->GetFee(),\n-                ws.m_tx_handle->GetTxSize());\n+                workspaces[0].m_tx_handle->GetFee(),\n+                workspaces[0].m_tx_handle->GetTxSize());\n         TRACE7(mempool, replaced,\n                 it->GetTx().GetHash().data(),\n                 it->GetTxSize(),\n                 it->GetFee(),\n                 std::chrono::duration_cast<std::chrono::duration<std::uint64_t>>(it->GetTime()).count(),\n                 hash.data(),\n-                ws.m_tx_handle->GetTxSize(),\n-                ws.m_tx_handle->GetFee()\n+                workspaces[0].m_tx_handle->GetTxSize(),\n+                workspaces[0].m_tx_handle->GetFee()\n         );\n         m_subpackage.m_replaced_transactions.push_back(it->GetSharedTx());\n     }\n-    ws.m_changeset->Apply();\n+    m_subpackage.m_changeset->Apply();\n+    m_subpackage.m_changeset.reset();",
      "path": "src/validation.cpp",
      "position": 268,
      "original_position": 118,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "32101330ec6f6e9c4d467dec370c848cf4d14f23",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think \"cleanup\" of `m_subpackage` can now all be managed inside `ClearSubPackageState`, including the `m_all_conflicts` clear below.",
      "created_at": "2024-10-23T16:02:43Z",
      "updated_at": "2024-10-23T19:23:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813100135",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813100135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1339,
      "original_line": 1339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813104310",
      "pull_request_review_id": 2389151891,
      "id": 1813104310,
      "node_id": "PRRC_kwDOABII585sEca2",
      "diff_hunk": "@@ -1381,7 +1381,13 @@ void CTxMemPool::CTxMemPoolChangeSet::Apply()\n     m_pool->RemoveStaged(m_to_remove, false, MemPoolRemovalReason::REPLACED);\n     for (size_t i=0; i<m_entry_vec.size(); ++i) {\n         auto tx_entry = m_entry_vec[i];\n-        m_pool->addUnchecked(*tx_entry);\n+        if (i == 0 && m_ancestors.count(tx_entry)) {",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "32101330ec6f6e9c4d467dec370c848cf4d14f23",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "as of 32101330ec6f6e9c4d467dec370c848cf4d14f23 , now the *first* entry of m_entry_vec now uses `m_ancestors` but no others.\r\n\r\nAm I understanding the extend of its use?",
      "created_at": "2024-10-23T16:05:18Z",
      "updated_at": "2024-10-23T19:23:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813104310",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813104310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1384,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813106158",
      "pull_request_review_id": 2389324835,
      "id": 1813106158,
      "node_id": "PRRC_kwDOABII585sEc3u",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": 1810686447,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for pointing out how the logging looks in this PR -- my intent was to preserve the existing behavior in the single transaction replacement case, and not introduce a new line break.  (I think the behavior of `LogDebug()` changed recently in #30929, which made what I wrote here no longer do what I expected.)\r\n\r\nSo we're all on the same page, here's what the logging looks like today (I grabbed this output from the functional tests `feature_rbf.py` and `mempool_package_rbf.py`), in the single transaction and package replacement cases:\r\n\r\nsingle transaction:\r\n```\r\n2024-10-23T14:08:01.250431Z [httpworker.3] [../../src/validation.cpp:1302] [Finalize] [mempool] replacing mempool tx 38335600f2465c0f8bb2b86d5830a34851d86fa879800c0e1434ddfc78c42898 (wtxid=c033cd3efd301c369d66cf759769159609471bd4f9efb3ee30e7209e57b74778, fees=31200, vsize=104). New tx b4001854dc577e21fde7acb4016a9179c3dd5a5af076295d8b0b7c47c35e2032 (wtxid=1f0a0b164999ac0843a8865df347e4fb63191ea3eec539d685b94dcdbeb39fae, fees=10031200, vsize=104)\r\n```\r\n\r\npackage:\r\n```\r\n2024-10-23T14:10:19.726907Z [httpworker.2] [../../src/validation.cpp:1219] [PackageMempoolChecks] [txpackages] package RBF checks passed: parent acd7ea806cd261b6c8cdb6d15210dad53daabbe68d5cb99f7df31646a769b69d (wtxid=8a867c2e5aea0d89831d3fe68315\r\n35e8cf8ce662ba36b6331fa072babc06f08c), child 28deb9d38a4490c3f542f0fd173805eb6c2c8309aa12d5e1669fc71a453d23fe (wtxid=8f8a74f38ed9deada97ef37bb5138b46d16f448da7585e33fc861b4142f764d5)\r\n2024-10-23T14:10:19.727195Z [httpworker.2] [../../src/validation.cpp:1302] [Finalize] [mempool] replacing mempool tx 05ad4c0db1a2fe169acd15bf5d8d1f4fa0ff834b5e8259baab4219f3d20b8991 (wtxid=39676091a39b5f77ee0865c2c52ac4bb8378ff7283fc1668738155ec247c3868, fees=10000, vsize=104). New tx acd7ea806cd261b6c8cdb6d15210dad53daabbe68d5cb99f7df31646a769b69d (wtxid=8a867c2e5aea0d89831d3fe6831535e8cf8ce662ba36b6331fa072babc06f08c, fees=10000, vsize=104)\r\n2024-10-23T14:10:19.727212Z [httpworker.2] [../../src/validation.cpp:1302] [Finalize] [mempool] replacing mempool tx 992204e731c78b7afc6e4b17e14adf0f6b93d472fddc4ba184dd86e1899a83d1 (wtxid=05d9f03194089441530d7503a12b7f36086a2c41deac0960e238e426ed59e5f4, fees=10000, vsize=104). New tx acd7ea806cd261b6c8cdb6d15210dad53daabbe68d5cb99f7df31646a769b69d (wtxid=8a867c2e5aea0d89831d3fe6831535e8cf8ce662ba36b6331fa072babc06f08c, fees=10000, vsize=104)\r\n```\r\n\r\nHere's what the logging would look like in the commit you shared:\r\n\r\nsingle transaction:\r\n```\r\n2024-10-23T13:51:10.728066Z [httpworker.3] [../../src/validation.cpp:1312] [operator()] [mempool] Replacing mempool tx 38335600f2465c0f8bb2b86d5830a34851d86fa879800c0e1434ddfc78c42898 (wtxid=c033cd3efd301c369d66cf759769159609471bd4f9efb3ee30e7209e57b74778, fees=31200, vsize=104).\r\n2024-10-23T13:51:10.728089Z [httpworker.3] [../../src/validation.cpp:1333] [operator()] [mempool] New tx b4001854dc577e21fde7acb4016a9179c3dd5a5af076295d8b0b7c47c35e2032 (wtxid=1f0a0b164999ac0843a8865df347e4fb63191ea3eec539d685b94dcdbeb39fae, fees=10031200, vsize=104)\r\n```\r\n\r\npackage:\r\n```\r\n2024-10-23T13:56:13.459972Z [httpworker.1] [../../src/validation.cpp:1230] [PackageMempoolChecks] [txpackages] package RBF checks passed: parent acd7ea806cd261b6c8cdb6d15210dad53daabbe68d5cb99f7df31646a769b69d (wtxid=8a867c2e5aea0d89831d3fe68315\r\n35e8cf8ce662ba36b6331fa072babc06f08c), child 28deb9d38a4490c3f542f0fd173805eb6c2c8309aa12d5e1669fc71a453d23fe (wtxid=8f8a74f38ed9deada97ef37bb5138b46d16f448da7585e33fc861b4142f764d5)\r\n2024-10-23T13:56:13.460177Z [httpworker.1] [../../src/validation.cpp:1312] [operator()] [mempool] Replacing mempool tx 05ad4c0db1a2fe169acd15bf5d8d1f4fa0ff834b5e8259baab4219f3d20b8991 (wtxid=39676091a39b5f77ee0865c2c52ac4bb8378ff7283fc1668738155ec247c3868, fees=10000, vsize=104).\r\n2024-10-23T13:56:13.460227Z [httpworker.1] [../../src/validation.cpp:1312] [operator()] [mempool] Replacing mempool tx 992204e731c78b7afc6e4b17e14adf0f6b93d472fddc4ba184dd86e1899a83d1 (wtxid=05d9f03194089441530d7503a12b7f36086a2c41deac0960e238e426ed59e5f4, fees=10000, vsize=104).\r\n2024-10-23T13:56:13.460243Z [httpworker.1] [../../src/validation.cpp:1342] [FinalizeSubpackage] [mempool] New package (txs=2, fees=50000, vsize=208)\r\n2024-10-23T13:56:13.460260Z [httpworker.1] [../../src/validation.cpp:1330] [operator()] [mempool] tx acd7ea806cd261b6c8cdb6d15210dad53daabbe68d5cb99f7df31646a769b69d (wtxid=8a867c2e5aea0d89831d3fe6831535e8cf8ce662ba36b6331fa072babc06f08c)\r\n2024-10-23T13:56:13.460274Z [httpworker.1] [../../src/validation.cpp:1330] [operator()] [mempool] tx 28deb9d38a4490c3f542f0fd173805eb6c2c8309aa12d5e1669fc71a453d23fe (wtxid=8f8a74f38ed9deada97ef37bb5138b46d16f448da7585e33fc861b4142f764d5)\r\n```\r\n\r\nMy proposal would be to leave the single-transaction case exactly as-is, so I can just fix what I tried to before to avoid the extra line break. For the package case, given that the `txpackages` log level is already reporting what transactions are in the package, does it make sense to duplicate that information in the `mempool` log category as well?\r\n\r\nAn issue that occurred to me with splitting up log messages for what's in a package across multiple lines is that other threads may be logging simultaneously and cause messages to be interleaved, making the resulting log difficult to parse.\r\n\r\nAnother option would be to simply augment the existing `txpackages` log message to include the aggregate fee/size of the package, and reference the cumulative fee/size of the package that evicted a transaction.  Or we could be even more precise and use some kind of identifier for the package (perhaps BIP 331's \"Combined Hash\"?) in our logging. Now that I think about it, this may make the most sense: if we logged the combined hash in the `txpackages` log message, and referenced the combined hash in the replacement message, I think that would be pretty good.  And we could use the same combined in the tracepoints as well... Thoughts?\r\n",
      "created_at": "2024-10-23T16:06:14Z",
      "updated_at": "2024-10-23T16:06:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813106158",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813106158"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 1313,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813115879",
      "pull_request_review_id": 2389151891,
      "id": 1813115879,
      "node_id": "PRRC_kwDOABII585sEfPn",
      "diff_hunk": "@@ -1381,7 +1381,13 @@ void CTxMemPool::CTxMemPoolChangeSet::Apply()\n     m_pool->RemoveStaged(m_to_remove, false, MemPoolRemovalReason::REPLACED);\n     for (size_t i=0; i<m_entry_vec.size(); ++i) {\n         auto tx_entry = m_entry_vec[i];\n-        m_pool->addUnchecked(*tx_entry);\n+        if (i == 0 && m_ancestors.count(tx_entry)) {",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "32101330ec6f6e9c4d467dec370c848cf4d14f23",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```Suggestion\r\n        if (i == 0 && m_ancestors.contains(tx_entry)) {\r\n```",
      "created_at": "2024-10-23T16:10:43Z",
      "updated_at": "2024-10-23T19:23:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813115879",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813115879"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1384,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813159728",
      "pull_request_review_id": 2389398286,
      "id": 1813159728,
      "node_id": "PRRC_kwDOABII585sEp8w",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": 1810686447,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> For the package case, given that the txpackages log level is already reporting what transactions are in the package, does it make sense to duplicate that information in the mempool log category as well\r\n\r\nNo it does not\r\n\r\n> An issue that occurred to me with splitting up log messages for what's in a package across multiple lines is that other threads may be logging simultaneously and cause messages to be interleaved, making the resulting log difficult to parse.\r\n\r\nGood point\r\n\r\n> if we logged the combined hash in the txpackages log message, and referenced the combined hash in the replacement message, I think that would be pretty good. And we could use the same combined in the tracepoints as well\r\n\r\nThis makes sense +1. \r\n\r\nAt some point I was thinking whether we should add the package sponsor tx id in the tracing API, but I think the combinedHash is better.",
      "created_at": "2024-10-23T16:35:28Z",
      "updated_at": "2024-10-23T16:35:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813159728",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813159728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 1313,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813272637",
      "pull_request_review_id": 2389151891,
      "id": 1813272637,
      "node_id": "PRRC_kwDOABII585sFFg9",
      "diff_hunk": "@@ -1467,11 +1471,16 @@ MempoolAcceptResult MemPoolAccept::AcceptSingleTransaction(const CTransactionRef\n                                             ws.m_base_fees, effective_feerate, single_wtxid);\n     }\n \n-    if (!FinalizeSubpackage(args, workspaces)) {\n-        // The only possible failure reason is fee-related (mempool full).\n-        // Failed for fee reasons. Provide the effective feerate and which txns were included.\n-        Assume(ws.m_state.GetResult() == TxValidationResult::TX_RECONSIDERABLE);\n-        return MempoolAcceptResult::FeeFailure(ws.m_state, CFeeRate(ws.m_modified_fees, ws.m_vsize), {ws.m_ptx->GetWitnessHash()});\n+    FinalizeSubpackage(args);\n+\n+    // Limit the mempool, if appropriate.\n+    if (!args.m_bypass_limits) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1360fd36d1234be142372f05713a1fb011fae577",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "The dropping of `m_package_submission` seems problematic, since that's the original use-case for the argument: https://github.com/bitcoin/bitcoin/pull/28251\r\n\r\nIn this PR it's essentially no longer used.\r\n\r\nit has a regression test that isn't failing in this commit/PR, so either it's resolved a different way or the test fell over or I don't understand what's going on: https://github.com/bitcoin/bitcoin/pull/28251/commits/32c1dd1ad65af0ad4d36a56d2ca32a8481237e68#diff-63dc84ee23b871d1f4931c4f261b3c6b815bd8d5a65098a61bce8ea9b6b81965R81",
      "created_at": "2024-10-23T17:49:59Z",
      "updated_at": "2024-10-23T19:23:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813272637",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813272637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1477,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813383434",
      "pull_request_review_id": 2389151891,
      "id": 1813383434,
      "node_id": "PRRC_kwDOABII585sFgkK",
      "diff_hunk": "@@ -104,10 +104,18 @@ FUZZ_TARGET(package_rbf, .init = initialize_package_rbf)\n     std::vector<CTransaction> mempool_txs;\n     size_t iter{0};\n \n-    int32_t replacement_vsize = fuzzed_data_provider.ConsumeIntegralInRange<int32_t>(1, 1000000);\n-\n     // Keep track of the total vsize of CTxMemPoolEntry's being added to the mempool to avoid overflow\n     // Add replacement_vsize since this is added to new diagram during RBF check\n+    std::optional<CMutableTransaction> replacement_tx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider, TX_WITH_WITNESS);",
      "path": "src/test/fuzz/rbf.cpp",
      "position": 27,
      "original_position": 8,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1c33e133db5f876f2ba6eeb28877a5dcf3f6ac04",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "noting that this isn't actually required to get variable vsize transactions since `ConsumeTxMemPoolEntry` injects a fuzz-selected sigops value. Simpler if you just build a minimal tx then allow `ConsumeTxMemPoolEntry` to choose how big it is in vbytes?",
      "created_at": "2024-10-23T19:02:56Z",
      "updated_at": "2024-10-23T19:23:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813383434",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813383434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813400339",
      "pull_request_review_id": 2389151891,
      "id": 1813400339,
      "node_id": "PRRC_kwDOABII585sFksT",
      "diff_hunk": "@@ -184,14 +184,10 @@ std::optional<std::string> PaysForRBF(CAmount original_fees,\n     return std::nullopt;\n }\n \n-std::optional<std::pair<DiagramCheckError, std::string>> ImprovesFeerateDiagram(CTxMemPool& pool,\n-                                                const CTxMemPool::setEntries& direct_conflicts,\n-                                                const CTxMemPool::setEntries& all_conflicts,\n-                                                CAmount replacement_fees,\n-                                                int64_t replacement_vsize)\n+std::optional<std::pair<DiagramCheckError, std::string>> ImprovesFeerateDiagram(CTxMemPool::CTxMemPoolChangeSet& changeset)",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1c33e133db5f876f2ba6eeb28877a5dcf3f6ac04",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "at commit 1c33e133db5f876f2ba6eeb28877a5dcf3f6ac04 are we not applying priority values when computing RBFs, since they're only being applied during `Apply()` stage?\r\n\r\nsubsequent commit 2b5268ebac8daee0521ea82c2688e5e4fac885bc pulls it into changeset, meaning it can act on it?\r\n\r\nDo we have coverage of package rbf with priority?",
      "created_at": "2024-10-23T19:14:38Z",
      "updated_at": "2024-10-23T19:23:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813400339",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813400339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813404075",
      "pull_request_review_id": 2389151891,
      "id": 1813404075,
      "node_id": "PRRC_kwDOABII585sFlmr",
      "diff_hunk": "@@ -1810,6 +1810,8 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         AcceptSubPackage(txns_package_eval, args);\n     PackageValidationState& package_state_final = multi_submission_result.m_state;\n \n+    ClearSubPackageState();",
      "path": "src/validation.cpp",
      "position": 398,
      "original_position": 4,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b431ab44b0ad04ea9aed9e73a15c1eb599a131dd",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This shouldn't be necessary, but shouldn't hurt either. `AcceptSubPackage` calls it already for each subpackage.",
      "created_at": "2024-10-23T19:17:04Z",
      "updated_at": "2024-10-23T19:23:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813404075",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813404075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1809,
      "original_line": 1809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813408039",
      "pull_request_review_id": 2389151891,
      "id": 1813408039,
      "node_id": "PRRC_kwDOABII585sFmkn",
      "diff_hunk": "@@ -149,7 +154,9 @@ FUZZ_TARGET(package_rbf, .init = initialize_package_rbf)\n             mempool_txs.pop_back();\n             break;\n         }\n-        AddToMempool(pool, child_entry);\n+        if (!pool.GetIter(child_entry.GetTx().GetHash())) {",
      "path": "src/test/fuzz/rbf.cpp",
      "position": 55,
      "original_position": 32,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a981f07f037b1a154a71ab8f42aebf3965ef4ea5",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "belt-and-suspenders are fine, but it \"shouldn't happen\" since each tx chain is sourced from a new `g_outpoints`?",
      "created_at": "2024-10-23T19:19:21Z",
      "updated_at": "2024-10-23T19:23:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813408039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813408039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 157,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813525410",
      "pull_request_review_id": 2390542403,
      "id": 1813525410,
      "node_id": "PRRC_kwDOABII585sGDOi",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_to_add;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order\n+        // map from the m_to_add index to the ancestors for the transaction\n+        std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;",
      "path": "src/txmempool.h",
      "position": 196,
      "original_position": 33,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": 1813066539,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My thought process here was to mimic the old behavior of having the in-mempool ancestors calculated once and then cached for any further needs, such as adding the transaction to the mempool (in the single transaction case).\r\n\r\nIn the package setting, we calculate the in-mempool ancestors of each transaction in a package, and I believe we use that information for some policy checks, but we throw it away as transactions get added.\r\n\r\nThis all goes away with cluster mempool, so I didn't spend a lot of time thinking about this.  Possibly it would be clearer to just not bother with the caching at all, but then we lose the optimization...  Thoughts?",
      "created_at": "2024-10-23T20:42:43Z",
      "updated_at": "2024-10-23T20:42:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813525410",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813525410"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 878,
      "original_line": 878,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813525748",
      "pull_request_review_id": 2390543066,
      "id": 1813525748,
      "node_id": "PRRC_kwDOABII585sGDT0",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_to_add;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order",
      "path": "src/txmempool.h",
      "position": 194,
      "original_position": 31,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": 1813069337,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My intention was to allow calling `StageAddition` and `StageRemoval` in any order.  I can add comments to that effect.",
      "created_at": "2024-10-23T20:42:50Z",
      "updated_at": "2024-10-23T20:42:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813525748",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813525748"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 876,
      "original_line": 876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813527740",
      "pull_request_review_id": 2390547949,
      "id": 1813527740,
      "node_id": "PRRC_kwDOABII585sGDy8",
      "diff_hunk": "@@ -1381,7 +1381,13 @@ void CTxMemPool::CTxMemPoolChangeSet::Apply()\n     m_pool->RemoveStaged(m_to_remove, false, MemPoolRemovalReason::REPLACED);\n     for (size_t i=0; i<m_entry_vec.size(); ++i) {\n         auto tx_entry = m_entry_vec[i];\n-        m_pool->addUnchecked(*tx_entry);\n+        if (i == 0 && m_ancestors.count(tx_entry)) {",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "32101330ec6f6e9c4d467dec370c848cf4d14f23",
      "in_reply_to_id": 1813104310,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes this matches the old behavior, I believe.",
      "created_at": "2024-10-23T20:43:33Z",
      "updated_at": "2024-10-23T20:43:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1813527740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1813527740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1384,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814688729",
      "pull_request_review_id": 2391991104,
      "id": 1814688729,
      "node_id": "PRRC_kwDOABII585sKfPZ",
      "diff_hunk": "@@ -1306,25 +1312,23 @@ bool MemPoolAccept::Finalize(const ATMPArgs& args, Workspace& ws)\n                 it->GetTxSize(),\n                 hash.ToString(),\n                 tx.GetWitnessHash().ToString(),\n-                entry->GetFee(),\n-                entry->GetTxSize());\n+                ws.m_tx_handle->GetFee(),\n+                ws.m_tx_handle->GetTxSize());\n         TRACE7(mempool, replaced,\n                 it->GetTx().GetHash().data(),\n                 it->GetTxSize(),\n                 it->GetFee(),\n                 std::chrono::duration_cast<std::chrono::duration<std::uint64_t>>(it->GetTime()).count(),\n                 hash.data(),\n-                entry->GetTxSize(),\n-                entry->GetFee()\n+                ws.m_tx_handle->GetTxSize(),\n+                ws.m_tx_handle->GetFee()\n         );\n         m_subpackage.m_replaced_transactions.push_back(it->GetSharedTx());\n     }\n-    m_pool.RemoveStaged(m_subpackage.m_all_conflicts, false, MemPoolRemovalReason::REPLACED);\n+    ws.m_changeset->Apply();\n     // Don't attempt to process the same conflicts repeatedly during subpackage evaluation:\n     // they no longer exist on subsequent calls to Finalize() post-RemoveStaged",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 107,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": 1813013432,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2024-10-24T10:07:39Z",
      "updated_at": "2024-10-24T10:07:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1814688729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814688729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1346,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814692827",
      "pull_request_review_id": 2392001217,
      "id": 1814692827,
      "node_id": "PRRC_kwDOABII585sKgPb",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": 1810686447,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@0xB10C Any thoughts on changing the way replacement logging works via tracepoints, in the package RBF case? One issue I can think of with what I'm proposing here is that the \"package hash\" we'd be sending is not one that would come through any other tracing messages -- would that be a problem?\r\n\r\nIf that is a problem, would it make sense to add a tracepoint that lines up with the existing `txpackages` debug log message, which (as of this PR) would now report the package hash along with the transaction ids that are in it?",
      "created_at": "2024-10-24T10:10:22Z",
      "updated_at": "2024-10-24T10:10:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1814692827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814692827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 1313,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814694147",
      "pull_request_review_id": 2392004019,
      "id": 1814694147,
      "node_id": "PRRC_kwDOABII585sKgkD",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }\n         TRACE7(mempool, replaced,\n                 it->GetTx().GetHash().data(),\n                 it->GetTxSize(),\n                 it->GetFee(),\n                 std::chrono::duration_cast<std::chrono::duration<std::uint64_t>>(it->GetTime()).count(),\n-                hash.data(),\n-                workspaces[0].m_tx_handle->GetTxSize(),\n-                workspaces[0].m_tx_handle->GetFee()\n+                m_subpackage.m_changeset->GetTx(0).GetHash().data(),",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": 1810694092,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Tracking this issue above (https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1814692827), so marking this conversation as resolved.",
      "created_at": "2024-10-24T10:11:18Z",
      "updated_at": "2024-10-24T10:11:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1814694147",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814694147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1329,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814698298",
      "pull_request_review_id": 2392014150,
      "id": 1814698298,
      "node_id": "PRRC_kwDOABII585sKhk6",
      "diff_hunk": "@@ -1381,7 +1381,13 @@ void CTxMemPool::CTxMemPoolChangeSet::Apply()\n     m_pool->RemoveStaged(m_to_remove, false, MemPoolRemovalReason::REPLACED);\n     for (size_t i=0; i<m_entry_vec.size(); ++i) {\n         auto tx_entry = m_entry_vec[i];\n-        m_pool->addUnchecked(*tx_entry);\n+        if (i == 0 && m_ancestors.count(tx_entry)) {",
      "path": "src/txmempool.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "32101330ec6f6e9c4d467dec370c848cf4d14f23",
      "in_reply_to_id": 1813115879,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is done?",
      "created_at": "2024-10-24T10:14:06Z",
      "updated_at": "2024-10-24T10:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1814698298",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814698298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1384,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814706398",
      "pull_request_review_id": 2392034785,
      "id": 1814706398,
      "node_id": "PRRC_kwDOABII585sKjje",
      "diff_hunk": "@@ -1467,11 +1471,16 @@ MempoolAcceptResult MemPoolAccept::AcceptSingleTransaction(const CTransactionRef\n                                             ws.m_base_fees, effective_feerate, single_wtxid);\n     }\n \n-    if (!FinalizeSubpackage(args, workspaces)) {\n-        // The only possible failure reason is fee-related (mempool full).\n-        // Failed for fee reasons. Provide the effective feerate and which txns were included.\n-        Assume(ws.m_state.GetResult() == TxValidationResult::TX_RECONSIDERABLE);\n-        return MempoolAcceptResult::FeeFailure(ws.m_state, CFeeRate(ws.m_modified_fees, ws.m_vsize), {ws.m_ptx->GetWitnessHash()});\n+    FinalizeSubpackage(args);\n+\n+    // Limit the mempool, if appropriate.\n+    if (!args.m_bypass_limits) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1360fd36d1234be142372f05713a1fb011fae577",
      "in_reply_to_id": 1813272637,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agreed, I have restored this argument where `LimitMempoolSize()` is invoked in `AcceptSingleTransaction()`, and I pulled this change out into its own commit so that it's easier to review and less tangled with the other changes.\r\n\r\nMore thoughts on this [here](https://github.com/bitcoin/bitcoin/pull/28251#issuecomment-2433501732).  It would be nice to have a test that packages which involve a parent transaction that would be just at the bottom of the mempool without their children are able to make it in with a child, if the resulting package would score higher in the mempool than other transactions. ",
      "created_at": "2024-10-24T10:19:43Z",
      "updated_at": "2024-10-24T10:19:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1814706398",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814706398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1477,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814887974",
      "pull_request_review_id": 2392341958,
      "id": 1814887974,
      "node_id": "PRRC_kwDOABII585sLP4m",
      "diff_hunk": "@@ -149,7 +154,9 @@ FUZZ_TARGET(package_rbf, .init = initialize_package_rbf)\n             mempool_txs.pop_back();\n             break;\n         }\n-        AddToMempool(pool, child_entry);\n+        if (!pool.GetIter(child_entry.GetTx().GetHash())) {",
      "path": "src/test/fuzz/rbf.cpp",
      "position": 55,
      "original_position": 32,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a981f07f037b1a154a71ab8f42aebf3965ef4ea5",
      "in_reply_to_id": 1813408039,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No I think this one is just \"belt\" -- if you look at lines 146-148 above, we're not always modifying the \"child\" transaction here, so sometimes it'll be a duplicate of something we already have.",
      "created_at": "2024-10-24T12:31:50Z",
      "updated_at": "2024-10-24T12:31:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1814887974",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814887974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 157,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814895952",
      "pull_request_review_id": 2392355691,
      "id": 1814895952,
      "node_id": "PRRC_kwDOABII585sLR1Q",
      "diff_hunk": "@@ -184,14 +184,10 @@ std::optional<std::string> PaysForRBF(CAmount original_fees,\n     return std::nullopt;\n }\n \n-std::optional<std::pair<DiagramCheckError, std::string>> ImprovesFeerateDiagram(CTxMemPool& pool,\n-                                                const CTxMemPool::setEntries& direct_conflicts,\n-                                                const CTxMemPool::setEntries& all_conflicts,\n-                                                CAmount replacement_fees,\n-                                                int64_t replacement_vsize)\n+std::optional<std::pair<DiagramCheckError, std::string>> ImprovesFeerateDiagram(CTxMemPool::CTxMemPoolChangeSet& changeset)",
      "path": "src/policy/rbf.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1c33e133db5f876f2ba6eeb28877a5dcf3f6ac04",
      "in_reply_to_id": 1813400339,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yep you're right. I swapped the order of those two commits to avoid this problem, and I also added a test for package rbf with priority (which fails on https://github.com/bitcoin/bitcoin/commit/1c33e133db5f876f2ba6eeb28877a5dcf3f6ac04, but passes by the end of this branch).",
      "created_at": "2024-10-24T12:36:55Z",
      "updated_at": "2024-10-24T12:36:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1814895952",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1814895952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815386949",
      "pull_request_review_id": 2393234995,
      "id": 1815386949,
      "node_id": "PRRC_kwDOABII585sNJtF",
      "diff_hunk": "@@ -1467,11 +1471,16 @@ MempoolAcceptResult MemPoolAccept::AcceptSingleTransaction(const CTransactionRef\n                                             ws.m_base_fees, effective_feerate, single_wtxid);\n     }\n \n-    if (!FinalizeSubpackage(args, workspaces)) {\n-        // The only possible failure reason is fee-related (mempool full).\n-        // Failed for fee reasons. Provide the effective feerate and which txns were included.\n-        Assume(ws.m_state.GetResult() == TxValidationResult::TX_RECONSIDERABLE);\n-        return MempoolAcceptResult::FeeFailure(ws.m_state, CFeeRate(ws.m_modified_fees, ws.m_vsize), {ws.m_ptx->GetWitnessHash()});\n+    FinalizeSubpackage(args);\n+\n+    // Limit the mempool, if appropriate.\n+    if (!args.m_bypass_limits) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1360fd36d1234be142372f05713a1fb011fae577",
      "in_reply_to_id": 1813272637,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm working on a test case for master for that case",
      "created_at": "2024-10-24T16:49:57Z",
      "updated_at": "2024-10-24T16:49:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1815386949",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815386949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1477,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815842865",
      "pull_request_review_id": 2393930125,
      "id": 1815842865,
      "node_id": "PRRC_kwDOABII585sO5Ax",
      "diff_hunk": "@@ -1312,20 +1315,21 @@ bool MemPoolAccept::Finalize(const ATMPArgs& args, Workspace& ws)\n                 it->GetTxSize(),\n                 hash.ToString(),\n                 tx.GetWitnessHash().ToString(),\n-                ws.m_tx_handle->GetFee(),\n-                ws.m_tx_handle->GetTxSize());\n+                workspaces[0].m_tx_handle->GetFee(),\n+                workspaces[0].m_tx_handle->GetTxSize());\n         TRACE7(mempool, replaced,\n                 it->GetTx().GetHash().data(),\n                 it->GetTxSize(),\n                 it->GetFee(),\n                 std::chrono::duration_cast<std::chrono::duration<std::uint64_t>>(it->GetTime()).count(),\n                 hash.data(),\n-                ws.m_tx_handle->GetTxSize(),\n-                ws.m_tx_handle->GetFee()\n+                workspaces[0].m_tx_handle->GetTxSize(),\n+                workspaces[0].m_tx_handle->GetFee()\n         );\n         m_subpackage.m_replaced_transactions.push_back(it->GetSharedTx());\n     }\n-    ws.m_changeset->Apply();\n+    m_subpackage.m_changeset->Apply();\n+    m_subpackage.m_changeset.reset();",
      "path": "src/validation.cpp",
      "position": 268,
      "original_position": 118,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "32101330ec6f6e9c4d467dec370c848cf4d14f23",
      "in_reply_to_id": 1813100135,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "After looking at this a little more, I don't think we need `m_all_conflicts` to live in `SubPackageState` anymore -- `FinalizeSubpackage` can grab this information from the changeset and then the other two places are just local uses within a function. \r\n\r\nPushed a commit to get rid of this extra state.",
      "created_at": "2024-10-25T00:36:16Z",
      "updated_at": "2024-10-25T00:36:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1815842865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815842865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1339,
      "original_line": 1339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815846450",
      "pull_request_review_id": 2393935028,
      "id": 1815846450,
      "node_id": "PRRC_kwDOABII585sO54y",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_to_add;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order",
      "path": "src/txmempool.h",
      "position": 194,
      "original_position": 31,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": 1813069337,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added docs in 7bc0f1f48c079b019f1d7a3fef00ae711f25d624",
      "created_at": "2024-10-25T00:43:36Z",
      "updated_at": "2024-10-25T00:43:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1815846450",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815846450"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 876,
      "original_line": 876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815846892",
      "pull_request_review_id": 2393935678,
      "id": 1815846892,
      "node_id": "PRRC_kwDOABII585sO5_s",
      "diff_hunk": "@@ -1467,11 +1471,16 @@ MempoolAcceptResult MemPoolAccept::AcceptSingleTransaction(const CTransactionRef\n                                             ws.m_base_fees, effective_feerate, single_wtxid);\n     }\n \n-    if (!FinalizeSubpackage(args, workspaces)) {\n-        // The only possible failure reason is fee-related (mempool full).\n-        // Failed for fee reasons. Provide the effective feerate and which txns were included.\n-        Assume(ws.m_state.GetResult() == TxValidationResult::TX_RECONSIDERABLE);\n-        return MempoolAcceptResult::FeeFailure(ws.m_state, CFeeRate(ws.m_modified_fees, ws.m_vsize), {ws.m_ptx->GetWitnessHash()});\n+    FinalizeSubpackage(args);\n+\n+    // Limit the mempool, if appropriate.\n+    if (!args.m_bypass_limits) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1360fd36d1234be142372f05713a1fb011fae577",
      "in_reply_to_id": 1813272637,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is all good now (your test in #31152 passes for me locally), so marking this as resolved.",
      "created_at": "2024-10-25T00:44:33Z",
      "updated_at": "2024-10-25T00:44:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1815846892",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815846892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1477,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815883458",
      "pull_request_review_id": 2393992818,
      "id": 1815883458,
      "node_id": "PRRC_kwDOABII585sPC7C",
      "diff_hunk": "@@ -1467,11 +1471,16 @@ MempoolAcceptResult MemPoolAccept::AcceptSingleTransaction(const CTransactionRef\n                                             ws.m_base_fees, effective_feerate, single_wtxid);\n     }\n \n-    if (!FinalizeSubpackage(args, workspaces)) {\n-        // The only possible failure reason is fee-related (mempool full).\n-        // Failed for fee reasons. Provide the effective feerate and which txns were included.\n-        Assume(ws.m_state.GetResult() == TxValidationResult::TX_RECONSIDERABLE);\n-        return MempoolAcceptResult::FeeFailure(ws.m_state, CFeeRate(ws.m_modified_fees, ws.m_vsize), {ws.m_ptx->GetWitnessHash()});\n+    FinalizeSubpackage(args);\n+\n+    // Limit the mempool, if appropriate.\n+    if (!args.m_bypass_limits) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 135,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1360fd36d1234be142372f05713a1fb011fae577",
      "in_reply_to_id": 1813272637,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nice catch",
      "created_at": "2024-10-25T01:39:56Z",
      "updated_at": "2024-10-25T01:39:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1815883458",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815883458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1477,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817154002",
      "pull_request_review_id": 2396086132,
      "id": 1817154002,
      "node_id": "PRRC_kwDOABII585sT5HS",
      "diff_hunk": "@@ -816,6 +790,102 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg due to rbf).\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of the proposed\n+     * set of new transactions and comare with the existing mempool.",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 70,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "\r\n```suggestion\r\n     * set of new transactions and compare with the existing mempool.\r\n```",
      "created_at": "2024-10-25T18:06:10Z",
      "updated_at": "2024-10-25T18:09:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817154002",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817154002"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 801,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817154923",
      "pull_request_review_id": 2396086132,
      "id": 1817154923,
      "node_id": "PRRC_kwDOABII585sT5Vr",
      "diff_hunk": "@@ -816,6 +790,102 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg due to rbf).",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 66,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "aside from reorgs?",
      "created_at": "2024-10-25T18:06:31Z",
      "updated_at": "2024-10-25T18:09:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817154923",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817154923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 797,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817158265",
      "pull_request_review_id": 2396086132,
      "id": 1817158265,
      "node_id": "PRRC_kwDOABII585sT6J5",
      "diff_hunk": "@@ -816,6 +790,102 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg due to rbf).\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of the proposed\n+     * set of new transactions and comare with the existing mempool.\n+     *\n+     * CalculateMemPoolAncestors() calculates the in-mempool (not including\n+     * what is in the change set itself) ancestors of a given transacion.\n+     *\n+     * Apply() will apply the removals and additions that are staged into the* mempool.\n+     *\n+     * Only one changeset may exist at a time. While a changeset is outstanding, no removals",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 77,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "when would removals or additions happen outside of a changeset?",
      "created_at": "2024-10-25T18:07:42Z",
      "updated_at": "2024-10-25T18:09:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817158265",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817158265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 808,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817158983",
      "pull_request_review_id": 2396086132,
      "id": 1817158983,
      "node_id": "PRRC_kwDOABII585sT6VH",
      "diff_hunk": "@@ -816,6 +790,102 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg due to rbf).\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of the proposed\n+     * set of new transactions and comare with the existing mempool.\n+     *\n+     * CalculateMemPoolAncestors() calculates the in-mempool (not including\n+     * what is in the change set itself) ancestors of a given transacion.\n+     *\n+     * Apply() will apply the removals and additions that are staged into the* mempool.",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 75,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "?\r\n```suggestion\r\n     * Apply() will apply the removals and additions that are staged into the mempool.\r\n```",
      "created_at": "2024-10-25T18:07:53Z",
      "updated_at": "2024-10-25T18:09:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817158983",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817158983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 806,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817161237",
      "pull_request_review_id": 2396086132,
      "id": 1817161237,
      "node_id": "PRRC_kwDOABII585sT64V",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_to_add;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order\n+        // map from the m_to_add index to the ancestors for the transaction\n+        std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;",
      "path": "src/txmempool.h",
      "position": 196,
      "original_position": 33,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": 1813066539,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "logically seems to work, probably not worth nitting",
      "created_at": "2024-10-25T18:09:05Z",
      "updated_at": "2024-10-25T18:09:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817161237",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817161237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 878,
      "original_line": 878,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817170430",
      "pull_request_review_id": 2396123518,
      "id": 1817170430,
      "node_id": "PRRC_kwDOABII585sT9H-",
      "diff_hunk": "@@ -1364,36 +1373,18 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n             package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n                                   strprintf(\"BUG! PolicyScriptChecks succeeded but ConsensusScriptChecks failed: %s\",\n                                             ws.m_ptx->GetHash().ToString()));\n+            // Remove the transaction from the mempool.\n+            if (!m_subpackage.m_changeset) m_subpackage.m_changeset = m_pool.GetChangeSet();\n+            m_subpackage.m_changeset->StageRemoval(m_pool.GetIter(ws.m_ptx->GetHash()).value());\n         }\n-\n-        // Re-calculate mempool ancestors to call addUnchecked(). They may have changed since the\n-        // last calculation done in PreChecks, since package ancestors have already been submitted.\n-        {\n-            auto ancestors{m_pool.CalculateMemPoolAncestors(*ws.m_entry, m_pool.m_opts.limits)};\n-            if(!ancestors) {\n-                results.emplace(ws.m_ptx->GetWitnessHash(), MempoolAcceptResult::Failure(ws.m_state));\n-                // Since PreChecks() and PackageMempoolChecks() both enforce limits, this should never fail.\n-                Assume(false);\n-                all_submitted = false;\n-                package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n-                                    strprintf(\"BUG! Mempool ancestors or descendants were underestimated: %s\",\n-                                                ws.m_ptx->GetHash().ToString()));\n-            }\n-            ws.m_ancestors = std::move(ancestors).value_or(ws.m_ancestors);\n-        }\n-        // If we call LimitMempoolSize() for each individual Finalize(), the mempool will not take\n-        // the transaction's descendant feerate into account because it hasn't seen them yet. Also,\n-        // we risk evicting a transaction that a subsequent package transaction depends on. Instead,\n-        // allow the mempool to temporarily bypass limits, the maximum package size) while\n-        // submitting transactions individually and then trim at the very end.\n-        if (!Finalize(args, ws)) {\n-            results.emplace(ws.m_ptx->GetWitnessHash(), MempoolAcceptResult::Failure(ws.m_state));\n-            // Since LimitMempoolSize() won't be called, this should never fail.\n-            Assume(false);\n-            all_submitted = false;\n-            package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n-                                  strprintf(\"BUG! Adding to mempool failed: %s\", ws.m_ptx->GetHash().ToString()));\n-        }\n+    }\n+    if (!all_submitted) {\n+        // This code should be unreachable; it's here as belt-and-suspenders\n+        // to try to ensure we have no consensus-invalid transactions in the",
      "path": "src/validation.cpp",
      "position": 324,
      "original_position": 318,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "we're still applying on failure, so it's not really a belt and suspenders for that anymore is it?",
      "created_at": "2024-10-25T18:17:21Z",
      "updated_at": "2024-10-25T18:24:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817170430",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817170430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1378,
      "original_line": 1378,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817171820",
      "pull_request_review_id": 2396123518,
      "id": 1817171820,
      "node_id": "PRRC_kwDOABII585sT9ds",
      "diff_hunk": "@@ -1100,13 +1100,15 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n                              strprintf(\"insufficient fee%s\", ws.m_sibling_eviction ? \" (including sibling eviction)\" : \"\"), *err_string);\n     }\n \n+    CTxMemPool::setEntries m_all_conflicts;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    CTxMemPool::setEntries all_conflicts;\r\n```",
      "created_at": "2024-10-25T18:18:39Z",
      "updated_at": "2024-10-25T18:24:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817171820",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817171820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817172422",
      "pull_request_review_id": 2396123518,
      "id": 1817172422,
      "node_id": "PRRC_kwDOABII585sT9nG",
      "diff_hunk": "@@ -1178,13 +1185,16 @@ bool MemPoolAccept::PackageMempoolChecks(const std::vector<CTransactionRef>& txn\n \n     // Don't consider replacements that would cause us to remove a large number of mempool entries.\n     // This limit is not increased in a package RBF. Use the aggregate number of transactions.\n+    CTxMemPool::setEntries m_all_conflicts;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 142,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```suggestion\r\n    CTxMemPool::setEntries all_conflicts;\r\n```",
      "created_at": "2024-10-25T18:19:17Z",
      "updated_at": "2024-10-25T18:24:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817172422",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817172422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817177783",
      "pull_request_review_id": 2396123518,
      "id": 1817177783,
      "node_id": "PRRC_kwDOABII585sT-63",
      "diff_hunk": "@@ -149,7 +154,9 @@ FUZZ_TARGET(package_rbf, .init = initialize_package_rbf)\n             mempool_txs.pop_back();\n             break;\n         }\n-        AddToMempool(pool, child_entry);\n+        if (!pool.GetIter(child_entry.GetTx().GetHash())) {",
      "path": "src/test/fuzz/rbf.cpp",
      "position": 55,
      "original_position": 32,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a981f07f037b1a154a71ab8f42aebf3965ef4ea5",
      "in_reply_to_id": 1813408039,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ah right",
      "created_at": "2024-10-25T18:24:40Z",
      "updated_at": "2024-10-25T18:24:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817177783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817177783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 157,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817922747",
      "pull_request_review_id": 2397351296,
      "id": 1817922747,
      "node_id": "PRRC_kwDOABII585sW0y7",
      "diff_hunk": "@@ -816,6 +790,102 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg due to rbf).",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 66,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": 1817154923,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reorgs are split: additions happen via the changesets (since we just use ATMP), while removals happen in their own special funky way.\r\n\r\nI can update the comment.",
      "created_at": "2024-10-26T20:16:47Z",
      "updated_at": "2024-10-26T20:16:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817922747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817922747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 797,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817923233",
      "pull_request_review_id": 2397351602,
      "id": 1817923233,
      "node_id": "PRRC_kwDOABII585sW06h",
      "diff_hunk": "@@ -816,6 +790,102 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg due to rbf).\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of the proposed\n+     * set of new transactions and comare with the existing mempool.\n+     *\n+     * CalculateMemPoolAncestors() calculates the in-mempool (not including\n+     * what is in the change set itself) ancestors of a given transacion.\n+     *\n+     * Apply() will apply the removals and additions that are staged into the* mempool.\n+     *\n+     * Only one changeset may exist at a time. While a changeset is outstanding, no removals",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 77,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": 1817158265,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Additions never happen outside a changeset.  RBF-related removals always go through a changeset as well.\r\n\r\nRemovals that happen because a block is found, or due to a reorg, or due to mempool expiry or mempool limiting do not go through the changeset.",
      "created_at": "2024-10-26T20:20:03Z",
      "updated_at": "2024-10-26T20:20:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817923233",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817923233"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 808,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817924314",
      "pull_request_review_id": 2397352389,
      "id": 1817924314,
      "node_id": "PRRC_kwDOABII585sW1La",
      "diff_hunk": "@@ -1364,36 +1373,18 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n             package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n                                   strprintf(\"BUG! PolicyScriptChecks succeeded but ConsensusScriptChecks failed: %s\",\n                                             ws.m_ptx->GetHash().ToString()));\n+            // Remove the transaction from the mempool.\n+            if (!m_subpackage.m_changeset) m_subpackage.m_changeset = m_pool.GetChangeSet();\n+            m_subpackage.m_changeset->StageRemoval(m_pool.GetIter(ws.m_ptx->GetHash()).value());\n         }\n-\n-        // Re-calculate mempool ancestors to call addUnchecked(). They may have changed since the\n-        // last calculation done in PreChecks, since package ancestors have already been submitted.\n-        {\n-            auto ancestors{m_pool.CalculateMemPoolAncestors(*ws.m_entry, m_pool.m_opts.limits)};\n-            if(!ancestors) {\n-                results.emplace(ws.m_ptx->GetWitnessHash(), MempoolAcceptResult::Failure(ws.m_state));\n-                // Since PreChecks() and PackageMempoolChecks() both enforce limits, this should never fail.\n-                Assume(false);\n-                all_submitted = false;\n-                package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n-                                    strprintf(\"BUG! Mempool ancestors or descendants were underestimated: %s\",\n-                                                ws.m_ptx->GetHash().ToString()));\n-            }\n-            ws.m_ancestors = std::move(ancestors).value_or(ws.m_ancestors);\n-        }\n-        // If we call LimitMempoolSize() for each individual Finalize(), the mempool will not take\n-        // the transaction's descendant feerate into account because it hasn't seen them yet. Also,\n-        // we risk evicting a transaction that a subsequent package transaction depends on. Instead,\n-        // allow the mempool to temporarily bypass limits, the maximum package size) while\n-        // submitting transactions individually and then trim at the very end.\n-        if (!Finalize(args, ws)) {\n-            results.emplace(ws.m_ptx->GetWitnessHash(), MempoolAcceptResult::Failure(ws.m_state));\n-            // Since LimitMempoolSize() won't be called, this should never fail.\n-            Assume(false);\n-            all_submitted = false;\n-            package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n-                                  strprintf(\"BUG! Adding to mempool failed: %s\", ws.m_ptx->GetHash().ToString()));\n-        }\n+    }\n+    if (!all_submitted) {\n+        // This code should be unreachable; it's here as belt-and-suspenders\n+        // to try to ensure we have no consensus-invalid transactions in the",
      "path": "src/validation.cpp",
      "position": 324,
      "original_position": 318,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": 1817170430,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure I follow -- if somehow the PolicyScriptChecks() passed for something that failed ConsensusChecks(), then this logic would trigger and we would then remove the transactions from the mempool.  It's slightly different than the old behavior of never allowing it to enter in the first place, but given that we're holding the mempool locks the whole time it is not really directly observable?",
      "created_at": "2024-10-26T20:28:00Z",
      "updated_at": "2024-10-26T20:28:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817924314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817924314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1378,
      "original_line": 1378,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817930330",
      "pull_request_review_id": 2397357238,
      "id": 1817930330,
      "node_id": "PRRC_kwDOABII585sW2pa",
      "diff_hunk": "@@ -816,6 +790,102 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg due to rbf).\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of the proposed\n+     * set of new transactions and comare with the existing mempool.\n+     *\n+     * CalculateMemPoolAncestors() calculates the in-mempool (not including\n+     * what is in the change set itself) ancestors of a given transacion.\n+     *\n+     * Apply() will apply the removals and additions that are staged into the* mempool.",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 75,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": 1817158983,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.",
      "created_at": "2024-10-26T21:12:25Z",
      "updated_at": "2024-10-26T21:12:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817930330",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817930330"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 806,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817930359",
      "pull_request_review_id": 2397357256,
      "id": 1817930359,
      "node_id": "PRRC_kwDOABII585sW2p3",
      "diff_hunk": "@@ -816,6 +790,102 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg due to rbf).\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of the proposed\n+     * set of new transactions and comare with the existing mempool.",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 70,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": 1817154002,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.",
      "created_at": "2024-10-26T21:12:36Z",
      "updated_at": "2024-10-26T21:12:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817930359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817930359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 801,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817930369",
      "pull_request_review_id": 2397357270,
      "id": 1817930369,
      "node_id": "PRRC_kwDOABII585sW2qB",
      "diff_hunk": "@@ -1100,13 +1100,15 @@ bool MemPoolAccept::ReplacementChecks(Workspace& ws)\n                              strprintf(\"insufficient fee%s\", ws.m_sibling_eviction ? \" (including sibling eviction)\" : \"\"), *err_string);\n     }\n \n+    CTxMemPool::setEntries m_all_conflicts;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 103,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": 1817171820,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.",
      "created_at": "2024-10-26T21:12:49Z",
      "updated_at": "2024-10-26T21:12:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817930369",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817930369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817930536",
      "pull_request_review_id": 2397357377,
      "id": 1817930536,
      "node_id": "PRRC_kwDOABII585sW2so",
      "diff_hunk": "@@ -1178,13 +1185,16 @@ bool MemPoolAccept::PackageMempoolChecks(const std::vector<CTransactionRef>& txn\n \n     // Don't consider replacements that would cause us to remove a large number of mempool entries.\n     // This limit is not increased in a package RBF. Use the aggregate number of transactions.\n+    CTxMemPool::setEntries m_all_conflicts;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 142,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": 1817172422,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed, thanks.",
      "created_at": "2024-10-26T21:14:03Z",
      "updated_at": "2024-10-26T21:14:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1817930536",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817930536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818083019",
      "pull_request_review_id": 2397525780,
      "id": 1818083019,
      "node_id": "PRRC_kwDOABII585sXb7L",
      "diff_hunk": "@@ -847,7 +847,14 @@ class CTxMemPool\n         friend class CTxMemPool;\n     };\n \n-    std::unique_ptr<CTxMemPoolChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) { return std::make_unique<CTxMemPoolChangeSet>(this); }\n+    std::unique_ptr<CTxMemPoolChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) {\n+        Assume(m_changeset == nullptr);\n+        auto ret = std::make_unique<CTxMemPoolChangeSet>(this);\n+        m_changeset = ret.get();\n+        return ret;\n+    }\n+\n+    CTxMemPoolChangeSet* m_changeset GUARDED_BY(cs){nullptr};",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 21,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1282bc0ac2820c1e7217c5c974c0d6756a48d820",
      "in_reply_to_id": 1809737214,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think it suffices to have a `bool m_have_changeset GUARDED_BY(cs){false};`, as it's only used for tracking and enforcing the \"no two changesets\" rule?",
      "created_at": "2024-10-27T12:50:06Z",
      "updated_at": "2024-10-27T12:50:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1818083019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818083019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 852,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 883,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818083695",
      "pull_request_review_id": 2397526415,
      "id": 1818083695,
      "node_id": "PRRC_kwDOABII585sXcFv",
      "diff_hunk": "@@ -816,6 +790,111 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg\n+     * due to rbf). Removals that don't need to be evaluated for acceptance,\n+     * such as removing transactions that appear in a block, or due to reorg,\n+     * or removals related to mempool limiting or expiry do not need to use\n+     * this.\n+     *\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions\n+     * in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of\n+     * the proposed set of new transactions and compare with the existing\n+     * mempool.\n+     *\n+     * CalculateMemPoolAncestors() calculates the in-mempool (not including\n+     * what is in the change set itself) ancestors of a given transacion.\n+     *\n+     * Apply() will apply the removals and additions that are staged into the\n+     * mempool.\n+     *\n+     * Only one changeset may exist at a time. While a changeset is\n+     * outstanding, no removals or additions may be made directly to the\n+     * mempool.\n+     */\n+    class CTxMemPoolChangeSet {",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 89,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "0df81a420e9b6fc31711cf6f04a1b4fc0fc58852",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Nit, if it's a member class of `CTxMempool` anyway, maybe a shorter name like `ChangeSet` suffices?",
      "created_at": "2024-10-27T12:53:11Z",
      "updated_at": "2024-10-27T12:53:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1818083695",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818083695"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 820,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818086982",
      "pull_request_review_id": 2397529546,
      "id": 1818086982,
      "node_id": "PRRC_kwDOABII585sXc5G",
      "diff_hunk": "@@ -816,6 +790,111 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg\n+     * due to rbf). Removals that don't need to be evaluated for acceptance,\n+     * such as removing transactions that appear in a block, or due to reorg,\n+     * or removals related to mempool limiting or expiry do not need to use\n+     * this.\n+     *\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions\n+     * in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of\n+     * the proposed set of new transactions and compare with the existing\n+     * mempool.\n+     *\n+     * CalculateMemPoolAncestors() calculates the in-mempool (not including\n+     * what is in the change set itself) ancestors of a given transacion.\n+     *\n+     * Apply() will apply the removals and additions that are staged into the\n+     * mempool.\n+     *\n+     * Only one changeset may exist at a time. While a changeset is\n+     * outstanding, no removals or additions may be made directly to the\n+     * mempool.\n+     */\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() EXCLUSIVE_LOCKS_REQUIRED(m_pool->cs) { m_pool->m_changeset = nullptr; }\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        const CTxMemPool::setEntries& GetRemovals() const { return m_to_remove; }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 107,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "0df81a420e9b6fc31711cf6f04a1b4fc0fc58852",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Style: use braces/newlines/indentation when the entire `if` statement doesn't fit on a single line.",
      "created_at": "2024-10-27T13:08:37Z",
      "updated_at": "2024-10-27T13:08:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1818086982",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818086982"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 838,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818101205",
      "pull_request_review_id": 2397554272,
      "id": 1818101205,
      "node_id": "PRRC_kwDOABII585sXgXV",
      "diff_hunk": "@@ -816,6 +790,111 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg\n+     * due to rbf). Removals that don't need to be evaluated for acceptance,\n+     * such as removing transactions that appear in a block, or due to reorg,\n+     * or removals related to mempool limiting or expiry do not need to use\n+     * this.\n+     *\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions\n+     * in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of\n+     * the proposed set of new transactions and compare with the existing\n+     * mempool.\n+     *\n+     * CalculateMemPoolAncestors() calculates the in-mempool (not including\n+     * what is in the change set itself) ancestors of a given transacion.\n+     *\n+     * Apply() will apply the removals and additions that are staged into the\n+     * mempool.\n+     *\n+     * Only one changeset may exist at a time. While a changeset is\n+     * outstanding, no removals or additions may be made directly to the\n+     * mempool.\n+     */\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() EXCLUSIVE_LOCKS_REQUIRED(m_pool->cs) { m_pool->m_changeset = nullptr; }\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        const CTxMemPool::setEntries& GetRemovals() const { return m_to_remove; }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 104,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "0df81a420e9b6fc31711cf6f04a1b4fc0fc58852",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I do find this function a bit confusing; it seems like `m_ancestors` is effectively a cache for the result of `m_pool->CalculateMempoolAncestors()`, but then I'd expect this function to also act like a cache?\r\n\r\nHow about:\r\n\r\n```c++\r\nutil::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits)\r\n{\r\n    LOCK(m_pool->cs);\r\n    auto it = m_ancestors.find(tx);\r\n    util::Result<CTxMemPool::setEntries> ret;\r\n    if (it == m_ancestors.end()) {\r\n        ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\r\n        if (ret) {\r\n            m_ancestors.try_emplace(tx, *ret);\r\n        } else {\r\n            // Is erasing ever needed? Maybe when the cache gets invalidated?\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n```\r\n\r\nand then always use this function, rather than directly accessing `m_ancestors` in `CTxMempool::Apply`.",
      "created_at": "2024-10-27T13:36:51Z",
      "updated_at": "2024-10-27T13:36:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1818101205",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818101205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 835,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818172232",
      "pull_request_review_id": 2397620046,
      "id": 1818172232,
      "node_id": "PRRC_kwDOABII585sXxtI",
      "diff_hunk": "@@ -847,7 +847,14 @@ class CTxMemPool\n         friend class CTxMemPool;\n     };\n \n-    std::unique_ptr<CTxMemPoolChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) { return std::make_unique<CTxMemPoolChangeSet>(this); }\n+    std::unique_ptr<CTxMemPoolChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) {\n+        Assume(m_changeset == nullptr);\n+        auto ret = std::make_unique<CTxMemPoolChangeSet>(this);\n+        m_changeset = ret.get();\n+        return ret;\n+    }\n+\n+    CTxMemPoolChangeSet* m_changeset GUARDED_BY(cs){nullptr};",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 21,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1282bc0ac2820c1e7217c5c974c0d6756a48d820",
      "in_reply_to_id": 1809737214,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-10-27T20:07:11Z",
      "updated_at": "2024-10-27T20:07:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1818172232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818172232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 852,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 883,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818172279",
      "pull_request_review_id": 2397620091,
      "id": 1818172279,
      "node_id": "PRRC_kwDOABII585sXxt3",
      "diff_hunk": "@@ -816,6 +790,111 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg\n+     * due to rbf). Removals that don't need to be evaluated for acceptance,\n+     * such as removing transactions that appear in a block, or due to reorg,\n+     * or removals related to mempool limiting or expiry do not need to use\n+     * this.\n+     *\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions\n+     * in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of\n+     * the proposed set of new transactions and compare with the existing\n+     * mempool.\n+     *\n+     * CalculateMemPoolAncestors() calculates the in-mempool (not including\n+     * what is in the change set itself) ancestors of a given transacion.\n+     *\n+     * Apply() will apply the removals and additions that are staged into the\n+     * mempool.\n+     *\n+     * Only one changeset may exist at a time. While a changeset is\n+     * outstanding, no removals or additions may be made directly to the\n+     * mempool.\n+     */\n+    class CTxMemPoolChangeSet {",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 89,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "0df81a420e9b6fc31711cf6f04a1b4fc0fc58852",
      "in_reply_to_id": 1818083695,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-10-27T20:07:32Z",
      "updated_at": "2024-10-27T20:07:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1818172279",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818172279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 820,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818172329",
      "pull_request_review_id": 2397620151,
      "id": 1818172329,
      "node_id": "PRRC_kwDOABII585sXxup",
      "diff_hunk": "@@ -816,6 +790,111 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg\n+     * due to rbf). Removals that don't need to be evaluated for acceptance,\n+     * such as removing transactions that appear in a block, or due to reorg,\n+     * or removals related to mempool limiting or expiry do not need to use\n+     * this.\n+     *\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions\n+     * in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of\n+     * the proposed set of new transactions and compare with the existing\n+     * mempool.\n+     *\n+     * CalculateMemPoolAncestors() calculates the in-mempool (not including\n+     * what is in the change set itself) ancestors of a given transacion.\n+     *\n+     * Apply() will apply the removals and additions that are staged into the\n+     * mempool.\n+     *\n+     * Only one changeset may exist at a time. While a changeset is\n+     * outstanding, no removals or additions may be made directly to the\n+     * mempool.\n+     */\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() EXCLUSIVE_LOCKS_REQUIRED(m_pool->cs) { m_pool->m_changeset = nullptr; }\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        const CTxMemPool::setEntries& GetRemovals() const { return m_to_remove; }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 107,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "0df81a420e9b6fc31711cf6f04a1b4fc0fc58852",
      "in_reply_to_id": 1818086982,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No longer relevant after rewriting this function.",
      "created_at": "2024-10-27T20:07:57Z",
      "updated_at": "2024-10-27T20:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1818172329",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818172329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 838,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818173833",
      "pull_request_review_id": 2397621326,
      "id": 1818173833,
      "node_id": "PRRC_kwDOABII585sXyGJ",
      "diff_hunk": "@@ -816,6 +790,111 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg\n+     * due to rbf). Removals that don't need to be evaluated for acceptance,\n+     * such as removing transactions that appear in a block, or due to reorg,\n+     * or removals related to mempool limiting or expiry do not need to use\n+     * this.\n+     *\n+     * Callers can invoke StageAddition()/StageRemoval() of transactions\n+     * in any order.\n+     *\n+     * CalculateChunksForRBF() can be used to calculate the feerate diagram of\n+     * the proposed set of new transactions and compare with the existing\n+     * mempool.\n+     *\n+     * CalculateMemPoolAncestors() calculates the in-mempool (not including\n+     * what is in the change set itself) ancestors of a given transacion.\n+     *\n+     * Apply() will apply the removals and additions that are staged into the\n+     * mempool.\n+     *\n+     * Only one changeset may exist at a time. While a changeset is\n+     * outstanding, no removals or additions may be made directly to the\n+     * mempool.\n+     */\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() EXCLUSIVE_LOCKS_REQUIRED(m_pool->cs) { m_pool->m_changeset = nullptr; }\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        const CTxMemPool::setEntries& GetRemovals() const { return m_to_remove; }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 104,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "0df81a420e9b6fc31711cf6f04a1b4fc0fc58852",
      "in_reply_to_id": 1818101205,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I reworked your suggestion to capture the caching idea, and now invoke this function in `Apply`.  However, there's still an ugly special case in `Apply()` in that we can only used a cached ancestor set calculation for the first transaction in a package (because the calculation is no longer correct once transactions start getting added to the mempool).\r\n\r\nNote that in the cluster mempool implementation, this ugliness in `Apply()` goes away, because we will no longer need to have ancestor sets calculated in order to add a transaction to the mempool.  \r\n\r\nFurthermore, I believe that we may be able to completely eliminate the need for this function altogether, post-cluster-mempool.  I should go back and try to rework #28676 to demonstrate that this is the case, but my recollection is that the only reason we will need to calculate ancestors sets in the future is for an RBF sanity check (namely that we're not replacing an ancestor of any to-be-added transaction) which we can reimplement without these ancestor calculations.",
      "created_at": "2024-10-27T20:15:09Z",
      "updated_at": "2024-10-27T20:15:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1818173833",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818173833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 835,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818596465",
      "pull_request_review_id": 2398305160,
      "id": 1818596465,
      "node_id": "PRRC_kwDOABII585sZZRx",
      "diff_hunk": "@@ -1810,6 +1810,8 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         AcceptSubPackage(txns_package_eval, args);\n     PackageValidationState& package_state_final = multi_submission_result.m_state;\n \n+    ClearSubPackageState();",
      "path": "src/validation.cpp",
      "position": 398,
      "original_position": 4,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b431ab44b0ad04ea9aed9e73a15c1eb599a131dd",
      "in_reply_to_id": 1813404075,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think the issue is if we `quit_early`; I recall the fuzzer hitting the new `Assume()` calls via `LimitMempoolSize()` at the line just below, before I added this.",
      "created_at": "2024-10-28T08:53:10Z",
      "updated_at": "2024-10-28T08:53:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1818596465",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818596465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1809,
      "original_line": 1809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818600499",
      "pull_request_review_id": 2398311166,
      "id": 1818600499,
      "node_id": "PRRC_kwDOABII585sZaQz",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_to_add;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order",
      "path": "src/txmempool.h",
      "position": 194,
      "original_position": 31,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": 1813069337,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Update: I realized that at least for now, there is a requirement that any added transactions are added in a topological order, with parents coming before children -- this is so that we can add things to the mempool's multi_index at `Apply()` time without creating any missing dependencies.  But removals can happen in any order and can be interleaved with the additions.",
      "created_at": "2024-10-28T08:55:56Z",
      "updated_at": "2024-10-28T08:55:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1818600499",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818600499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 876,
      "original_line": 876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819093318",
      "pull_request_review_id": 2399136684,
      "id": 1819093318,
      "node_id": "PRRC_kwDOABII585sbSlG",
      "diff_hunk": "@@ -1364,36 +1373,18 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n             package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n                                   strprintf(\"BUG! PolicyScriptChecks succeeded but ConsensusScriptChecks failed: %s\",\n                                             ws.m_ptx->GetHash().ToString()));\n+            // Remove the transaction from the mempool.\n+            if (!m_subpackage.m_changeset) m_subpackage.m_changeset = m_pool.GetChangeSet();\n+            m_subpackage.m_changeset->StageRemoval(m_pool.GetIter(ws.m_ptx->GetHash()).value());\n         }\n-\n-        // Re-calculate mempool ancestors to call addUnchecked(). They may have changed since the\n-        // last calculation done in PreChecks, since package ancestors have already been submitted.\n-        {\n-            auto ancestors{m_pool.CalculateMemPoolAncestors(*ws.m_entry, m_pool.m_opts.limits)};\n-            if(!ancestors) {\n-                results.emplace(ws.m_ptx->GetWitnessHash(), MempoolAcceptResult::Failure(ws.m_state));\n-                // Since PreChecks() and PackageMempoolChecks() both enforce limits, this should never fail.\n-                Assume(false);\n-                all_submitted = false;\n-                package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n-                                    strprintf(\"BUG! Mempool ancestors or descendants were underestimated: %s\",\n-                                                ws.m_ptx->GetHash().ToString()));\n-            }\n-            ws.m_ancestors = std::move(ancestors).value_or(ws.m_ancestors);\n-        }\n-        // If we call LimitMempoolSize() for each individual Finalize(), the mempool will not take\n-        // the transaction's descendant feerate into account because it hasn't seen them yet. Also,\n-        // we risk evicting a transaction that a subsequent package transaction depends on. Instead,\n-        // allow the mempool to temporarily bypass limits, the maximum package size) while\n-        // submitting transactions individually and then trim at the very end.\n-        if (!Finalize(args, ws)) {\n-            results.emplace(ws.m_ptx->GetWitnessHash(), MempoolAcceptResult::Failure(ws.m_state));\n-            // Since LimitMempoolSize() won't be called, this should never fail.\n-            Assume(false);\n-            all_submitted = false;\n-            package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n-                                  strprintf(\"BUG! Adding to mempool failed: %s\", ws.m_ptx->GetHash().ToString()));\n-        }\n+    }\n+    if (!all_submitted) {\n+        // This code should be unreachable; it's here as belt-and-suspenders\n+        // to try to ensure we have no consensus-invalid transactions in the",
      "path": "src/validation.cpp",
      "position": 324,
      "original_position": 318,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": 1817170430,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Misunderstood the code at time of writing this comment, mark as resolved",
      "created_at": "2024-10-28T13:49:26Z",
      "updated_at": "2024-10-28T13:49:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1819093318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819093318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1378,
      "original_line": 1378,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819197161",
      "pull_request_review_id": 2399307741,
      "id": 1819197161,
      "node_id": "PRRC_kwDOABII585sbr7p",
      "diff_hunk": "@@ -816,6 +790,102 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg due to rbf).",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 66,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": 1817154923,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is updated -- does this seem sufficient now, or should I add more documentation about how reorgs work?",
      "created_at": "2024-10-28T14:41:55Z",
      "updated_at": "2024-10-28T14:41:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1819197161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819197161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 797,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819506779",
      "pull_request_review_id": 2399809155,
      "id": 1819506779,
      "node_id": "PRRC_kwDOABII585sc3hb",
      "diff_hunk": "@@ -1810,6 +1810,8 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         AcceptSubPackage(txns_package_eval, args);\n     PackageValidationState& package_state_final = multi_submission_result.m_state;\n \n+    ClearSubPackageState();",
      "path": "src/validation.cpp",
      "position": 398,
      "original_position": 4,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b431ab44b0ad04ea9aed9e73a15c1eb599a131dd",
      "in_reply_to_id": 1813404075,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Was the assert failed because of the changeset state, or something that could be hit in master?\r\n\r\n`AcceptSubPackage` is called for each submission attempt of any subpackage, so I'm not sure why `quit_early` would be problematic.",
      "created_at": "2024-10-28T17:55:23Z",
      "updated_at": "2024-10-28T17:55:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1819506779",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819506779"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1809,
      "original_line": 1809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819507957",
      "pull_request_review_id": 2399810852,
      "id": 1819507957,
      "node_id": "PRRC_kwDOABII585sc3z1",
      "diff_hunk": "@@ -1312,20 +1315,21 @@ bool MemPoolAccept::Finalize(const ATMPArgs& args, Workspace& ws)\n                 it->GetTxSize(),\n                 hash.ToString(),\n                 tx.GetWitnessHash().ToString(),\n-                ws.m_tx_handle->GetFee(),\n-                ws.m_tx_handle->GetTxSize());\n+                workspaces[0].m_tx_handle->GetFee(),\n+                workspaces[0].m_tx_handle->GetTxSize());\n         TRACE7(mempool, replaced,\n                 it->GetTx().GetHash().data(),\n                 it->GetTxSize(),\n                 it->GetFee(),\n                 std::chrono::duration_cast<std::chrono::duration<std::uint64_t>>(it->GetTime()).count(),\n                 hash.data(),\n-                ws.m_tx_handle->GetTxSize(),\n-                ws.m_tx_handle->GetFee()\n+                workspaces[0].m_tx_handle->GetTxSize(),\n+                workspaces[0].m_tx_handle->GetFee()\n         );\n         m_subpackage.m_replaced_transactions.push_back(it->GetSharedTx());\n     }\n-    ws.m_changeset->Apply();\n+    m_subpackage.m_changeset->Apply();\n+    m_subpackage.m_changeset.reset();",
      "path": "src/validation.cpp",
      "position": 268,
      "original_position": 118,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "32101330ec6f6e9c4d467dec370c848cf4d14f23",
      "in_reply_to_id": 1813100135,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "think this is right, you can resolve this",
      "created_at": "2024-10-28T17:56:15Z",
      "updated_at": "2024-10-28T17:56:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1819507957",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819507957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1339,
      "original_line": 1339,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1820876152",
      "pull_request_review_id": 2402023470,
      "id": 1820876152,
      "node_id": "PRRC_kwDOABII585siF14",
      "diff_hunk": "@@ -1295,36 +1295,41 @@ bool MemPoolAccept::ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws)\n     return true;\n }\n \n-bool MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& workspaces)\n+void MemPoolAccept::FinalizeSubpackage(const ATMPArgs& args)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_pool.cs);\n-    const CTransaction& tx = *workspaces.front().m_ptx;\n-    const uint256& hash = workspaces.front().m_hash;\n-    TxValidationState& state = workspaces.front().m_state;\n-    const bool bypass_limits = args.m_bypass_limits;\n \n     if (!m_subpackage.m_all_conflicts.empty()) Assume(args.m_allow_replacement);\n     // Remove conflicting transactions from the mempool\n     for (CTxMemPool::txiter it : m_subpackage.m_all_conflicts)\n     {\n-        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+        LogDebug(BCLog::MEMPOOL, \"replacing mempool tx %s (wtxid=%s, fees=%s, vsize=%s). \",\n                 it->GetTx().GetHash().ToString(),\n                 it->GetTx().GetWitnessHash().ToString(),\n                 it->GetFee(),\n-                it->GetTxSize(),\n-                hash.ToString(),\n-                tx.GetWitnessHash().ToString(),\n-                workspaces[0].m_tx_handle->GetFee(),\n-                workspaces[0].m_tx_handle->GetTxSize());\n+                it->GetTxSize());\n+        FeeFrac feerate = m_subpackage.m_changeset->GetAggregateFeeRate();\n+        if (m_subpackage.m_changeset->GetTxCount() == 1) {\n+            const CTransaction& tx = m_subpackage.m_changeset->GetTx(0);\n+            LogDebug(BCLog::MEMPOOL, \"New tx %s (wtxid=%s, fees=%s, vsize=%s)\\n\",\n+                    tx.GetHash().ToString(),\n+                    tx.GetWitnessHash().ToString(),\n+                    feerate.fee, feerate.size);\n+        } else {\n+            LogDebug(BCLog::MEMPOOL, \"New package with %lu txs, fees=%s, vsize=%s\\n\",\n+                    m_subpackage.m_changeset->GetTxCount(),\n+                    feerate.fee,\n+                    feerate.size);\n+        }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d3118d0cf39e0e49e54814c7a75150b7db2b44",
      "in_reply_to_id": 1810686447,
      "user": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Thanks for the ping, sorry for the late response. I agree that a \"package hash\" on it's own might not be useful for someone interested in \"which transactions were replaced by which other transactions\". On the other hand, the tracepoints are on purpose only semi-stable as they expose internals. If the internals change, the tracepoints need to change too.\r\n\r\n > which (as of this PR) would now report the package hash along with the transaction ids that are in it?\r\n\r\nThat could be useful, yes. However, constructing and passing arrays/lists to tracepoints is probably not something we want / can  do (at least not without https://github.com/bitcoin/bitcoin/pull/26593).\r\n\r\nOne solution could be to update the current tracepoint to a `TRACE8` and have a bool argument indicating if `tx_or_package_hash` is a tx or package hash with `m_subpackage.m_changeset->GetTxCount() == 1`. This wouldn't allow to get data on \"which transactions were replaced by which other transactions\", but consumers would know that the hash is either referring to a tx or package. While I'm currently using the tracepoint to monitor count, size and fees in replacements, I don't use the txids at the moment. I used them a while ago for [fullrbf.mempool.observer](https://web.archive.org/web/20230213002456/https://fullrbf.mempool.observer/). \r\n\r\nalso, CC @virtu who initially worked on these tracepoints. Maybe you have another idea.",
      "created_at": "2024-10-29T14:06:10Z",
      "updated_at": "2024-10-29T14:06:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1820876152",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1820876152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": 1313,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1325,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821226055",
      "pull_request_review_id": 2402586962,
      "id": 1821226055,
      "node_id": "PRRC_kwDOABII585sjbRH",
      "diff_hunk": "@@ -1366,7 +1370,7 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         // Re-calculate mempool ancestors to call addUnchecked(). They may have changed since the\n         // last calculation done in PreChecks, since package ancestors have already been submitted.\n         {\n-            auto ancestors{m_pool.CalculateMemPoolAncestors(*ws.m_entry, m_pool.m_opts.limits)};\n+            auto ancestors{ws.m_changeset->CalculateMemPoolAncestors(ws.m_tx_handle, m_pool.m_opts.limits)};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "8e2aac1e87b67a5d28cdc507df9bca85614cc97d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "8e2aac1e87b67a5d28cdc507df9bca85614cc97d it's using the same cached value, so how can it return something new?\r\n\r\nthis disappears next commit of course...",
      "created_at": "2024-10-29T17:03:31Z",
      "updated_at": "2024-10-29T19:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821226055",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821226055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1373,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821276305",
      "pull_request_review_id": 2402586962,
      "id": 1821276305,
      "node_id": "PRRC_kwDOABII585sjniR",
      "diff_hunk": "@@ -1365,36 +1370,18 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n             package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n                                   strprintf(\"BUG! PolicyScriptChecks succeeded but ConsensusScriptChecks failed: %s\",\n                                             ws.m_ptx->GetHash().ToString()));\n+            // Remove the transaction from the mempool.\n+            if (!m_subpackage.m_changeset) m_subpackage.m_changeset = m_pool.GetChangeSet();\n+            m_subpackage.m_changeset->StageRemoval(m_pool.GetIter(ws.m_ptx->GetHash()).value());\n         }\n-\n-        // Re-calculate mempool ancestors to call addUnchecked(). They may have changed since the\n-        // last calculation done in PreChecks, since package ancestors have already been submitted.\n-        {\n-            auto ancestors{ws.m_changeset->CalculateMemPoolAncestors(ws.m_tx_handle, m_pool.m_opts.limits)};\n-            if(!ancestors) {\n-                results.emplace(ws.m_ptx->GetWitnessHash(), MempoolAcceptResult::Failure(ws.m_state));\n-                // Since PreChecks() and PackageMempoolChecks() both enforce limits, this should never fail.\n-                Assume(false);\n-                all_submitted = false;\n-                package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n-                                    strprintf(\"BUG! Mempool ancestors or descendants were underestimated: %s\",\n-                                                ws.m_ptx->GetHash().ToString()));\n-            }\n-            ws.m_ancestors = std::move(ancestors).value_or(ws.m_ancestors);\n-        }\n-        // If we call LimitMempoolSize() for each individual Finalize(), the mempool will not take\n-        // the transaction's descendant feerate into account because it hasn't seen them yet. Also,\n-        // we risk evicting a transaction that a subsequent package transaction depends on. Instead,\n-        // allow the mempool to temporarily bypass limits, the maximum package size) while\n-        // submitting transactions individually and then trim at the very end.\n-        if (!Finalize(args, ws)) {\n-            results.emplace(ws.m_ptx->GetWitnessHash(), MempoolAcceptResult::Failure(ws.m_state));\n-            // Since LimitMempoolSize() won't be called, this should never fail.\n-            Assume(false);\n-            all_submitted = false;\n-            package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n-                                  strprintf(\"BUG! Adding to mempool failed: %s\", ws.m_ptx->GetHash().ToString()));\n-        }\n+    }\n+    if (!all_submitted) {",
      "path": "src/validation.cpp",
      "position": 321,
      "original_position": 168,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "27c2abffbd9c5a83fd2becf6d7b70c7b30031f76",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: would be nice to check the changeset exists before applying it",
      "created_at": "2024-10-29T17:29:39Z",
      "updated_at": "2024-10-29T19:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821276305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821276305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1375,
      "original_line": 1375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821342151",
      "pull_request_review_id": 2402586962,
      "id": 1821342151,
      "node_id": "PRRC_kwDOABII585sj3nH",
      "diff_hunk": "@@ -844,6 +844,18 @@ class CTxMemPool\n             return ret;\n         }\n \n+        std::vector<CTransactionRef> GetAddedTxns() const {\n+            std::vector<CTransactionRef> ret;\n+            ret.reserve(m_entry_vec.size());\n+            for (const auto& entry : m_entry_vec) {\n+                ret.emplace_back(entry->GetSharedTx());\n+            }\n+            return ret;\n+        }\n+\n+        size_t GetTxCount() const { return m_entry_vec.size(); }\n+        const CTransaction& GetTx(size_t index) const { return m_entry_vec.at(index)->GetTx(); }",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 14,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d0976de7edf43d3cfea8dff3afc923580d8f84",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "`GetAddedTxn` ?",
      "created_at": "2024-10-29T18:21:36Z",
      "updated_at": "2024-10-29T19:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821342151",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821342151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821344367",
      "pull_request_review_id": 2402586962,
      "id": 1821344367,
      "node_id": "PRRC_kwDOABII585sj4Jv",
      "diff_hunk": "@@ -682,7 +682,9 @@ class MemPoolAccept\n     bool ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_pool.cs);\n \n     // Try to add the transaction to the mempool, removing any conflicts first.\n-    void FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& ws) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_pool.cs);\n+    // Returns true if the transaction is in the mempool after any size",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d0976de7edf43d3cfea8dff3afc923580d8f84",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "copy/past error or something?",
      "created_at": "2024-10-29T18:23:21Z",
      "updated_at": "2024-10-29T19:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821344367",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821344367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 685,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821388766",
      "pull_request_review_id": 2402586962,
      "id": 1821388766,
      "node_id": "PRRC_kwDOABII585skC_e",
      "diff_hunk": "@@ -865,9 +856,25 @@ class CTxMemPool\n         // map from the m_to_add index to the ancestors for the transaction\n         std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;\n         CTxMemPool::setEntries m_to_remove;\n+\n+        friend class CTxMemPool;\n     };\n \n     std::unique_ptr<ChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) { return std::make_unique<ChangeSet>(this); }\n+\n+    friend class CTxMemPool::ChangeSet;\n+\n+private:\n+    // addNewTransaction must updated state for all ancestors of a given transaction,",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 47,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "ca235933e0ce8bf63611d7c88c92553402cc0954",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "while we're moving the comment, can we fix the grammar: \"must updated\"?",
      "created_at": "2024-10-29T19:00:26Z",
      "updated_at": "2024-10-29T19:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821388766",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821388766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 868,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821389449",
      "pull_request_review_id": 2402586962,
      "id": 1821389449,
      "node_id": "PRRC_kwDOABII585skDKJ",
      "diff_hunk": "@@ -865,9 +856,25 @@ class CTxMemPool\n         // map from the m_to_add index to the ancestors for the transaction\n         std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;\n         CTxMemPool::setEntries m_to_remove;\n+\n+        friend class CTxMemPool;\n     };\n \n     std::unique_ptr<ChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) { return std::make_unique<ChangeSet>(this); }\n+\n+    friend class CTxMemPool::ChangeSet;\n+\n+private:\n+    // addNewTransaction must updated state for all ancestors of a given transaction,\n+    // to track size/count of descendant transactions.  First version of\n+    // addNewTransaction can be used to have it call CalculateMemPoolAncestors(), and\n+    // then invoke the second version.\n+    // Note that addNewTransaction is ONLY called from ATMP outside of tests\n+    // and any other callers may break wallet's in-mempool tracking (due to\n+    // lack of CValidationInterface::TransactionAddedToMempool callbacks).\n+    void Apply(CTxMemPool::ChangeSet* changeset) EXCLUSIVE_LOCKS_REQUIRED(cs);",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 54,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "ca235933e0ce8bf63611d7c88c92553402cc0954",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "comment above this  isn't for `Apply`.",
      "created_at": "2024-10-29T19:01:04Z",
      "updated_at": "2024-10-29T19:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821389449",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821389449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 875,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821390942",
      "pull_request_review_id": 2402586962,
      "id": 1821390942,
      "node_id": "PRRC_kwDOABII585skDhe",
      "diff_hunk": "@@ -865,9 +856,25 @@ class CTxMemPool\n         // map from the m_to_add index to the ancestors for the transaction\n         std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;\n         CTxMemPool::setEntries m_to_remove;\n+\n+        friend class CTxMemPool;\n     };\n \n     std::unique_ptr<ChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) { return std::make_unique<ChangeSet>(this); }\n+\n+    friend class CTxMemPool::ChangeSet;\n+\n+private:\n+    // addNewTransaction must updated state for all ancestors of a given transaction,\n+    // to track size/count of descendant transactions.  First version of\n+    // addNewTransaction can be used to have it call CalculateMemPoolAncestors(), and\n+    // then invoke the second version.\n+    // Note that addNewTransaction is ONLY called from ATMP outside of tests",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 51,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "ca235933e0ce8bf63611d7c88c92553402cc0954",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "it's not called from ATMP or tests anymore, thankfully it's private now",
      "created_at": "2024-10-29T19:02:19Z",
      "updated_at": "2024-10-29T19:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821390942",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821390942"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 872,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821393533",
      "pull_request_review_id": 2402586962,
      "id": 1821393533,
      "node_id": "PRRC_kwDOABII585skEJ9",
      "diff_hunk": "@@ -260,7 +260,7 @@ struct TxMempoolInfo\n  *\n  * Usually when a new transaction is added to the mempool, it has no in-mempool\n  * children (because any such children would be an orphan).  So in\n- * addUnchecked(), we:\n+ * addNewTransaction(), we:\n  * - update a new entry's setMemPoolParents to include all in-mempool parents",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 6,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "ca235933e0ce8bf63611d7c88c92553402cc0954",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "not your fault but: I don't think `setMemPoolParents` exists in master even\r\n\r\nI feel like these paragraphs are a minefield of old information",
      "created_at": "2024-10-29T19:04:42Z",
      "updated_at": "2024-10-29T19:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821393533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821393533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821407375",
      "pull_request_review_id": 2402586962,
      "id": 1821407375,
      "node_id": "PRRC_kwDOABII585skHiP",
      "diff_hunk": "@@ -603,6 +603,7 @@ void CTxMemPool::removeRecursive(const CTransaction &origTx, MemPoolRemovalReaso\n {",
      "path": "src/txmempool.cpp",
      "position": 83,
      "original_position": 1,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "c8b896067d42001f2a47cd837c0aed07bb39f329",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "c8b896067d42001f2a47cd837c0aed07bb39f329 commit message could probably use a little massaging since removals can happen in a changeset? I'm assuming these are all block/trimming related",
      "created_at": "2024-10-29T19:17:17Z",
      "updated_at": "2024-10-29T19:41:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821407375",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821407375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 593,
      "original_line": 593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821412595",
      "pull_request_review_id": 2402586962,
      "id": 1821412595,
      "node_id": "PRRC_kwDOABII585skIzz",
      "diff_hunk": "@@ -374,6 +374,10 @@ BOOST_FIXTURE_TEST_CASE(improves_feerate, TestChain100Setup)\n     const auto tx2_fee = entry2->GetModifiedFee();\n     const auto tx2_size = entry2->GetTxSize();\n \n+    // conflicting transactions\n+    const auto tx1_conflict = make_tx(/*inputs=*/ {m_coinbase_txns[0], m_coinbase_txns[2]}, /*output_values=*/ {10 * COIN});\n+    auto entry1_conflict = entry.FromTx(tx1_conflict);",
      "path": "src/test/rbf_tests.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "5e447a3059224ac97ec7cf5681dc3ca492770968",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "5e447a3059224ac97ec7cf5681dc3ca492770968 unused?",
      "created_at": "2024-10-29T19:22:00Z",
      "updated_at": "2024-10-29T19:41:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821412595",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821412595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821424007",
      "pull_request_review_id": 2402586962,
      "id": 1821424007,
      "node_id": "PRRC_kwDOABII585skLmH",
      "diff_hunk": "@@ -740,6 +739,8 @@ class MemPoolAccept\n         CTxMemPool::setEntries m_all_conflicts;\n         /** Mempool transactions that were replaced. */\n         std::list<CTransactionRef> m_replaced_transactions;\n+        /* Changeset representing adding a transaction and removing its conflicts. */",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "27c2abffbd9c5a83fd2becf6d7b70c7b30031f76",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "circa 27c2abffbd9c5a83fd2becf6d7b70c7b30031f76 it's applying multiple transactions\r\n```Suggestion\r\n        /* Changeset representing adding transactions and removing their conflicts. */\r\n```",
      "created_at": "2024-10-29T19:31:52Z",
      "updated_at": "2024-10-29T19:41:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821424007",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821424007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 742,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821427152",
      "pull_request_review_id": 2402586962,
      "id": 1821427152,
      "node_id": "PRRC_kwDOABII585skMXQ",
      "diff_hunk": "@@ -1309,11 +1309,15 @@ std::optional<std::string> CTxMemPool::CheckConflictTopology(const setEntries& d\n     return std::nullopt;\n }\n \n-util::Result<std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>>> CTxMemPool::CalculateChunksForRBF(CAmount replacement_fees, int64_t replacement_vsize, const setEntries& direct_conflicts, const setEntries& all_conflicts)\n+util::Result<std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>>> CTxMemPool::ChangeSet::CalculateChunksForRBF()\n {\n-    Assume(replacement_vsize > 0);\n+    LOCK(m_pool->cs);\n+    FeeFrac replacement_feerate{0, 0};\n+    for (auto it : m_entry_vec) {\n+        replacement_feerate += {it->GetModifiedFee(), it->GetTxSize()};\n+    }",
      "path": "src/txmempool.cpp",
      "position": 147,
      "original_position": 12,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "e60239454c11903d99b3dd1ac3286e558e36be1c",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "after this loop, sanity check replacement_feerate isn't size 0?",
      "created_at": "2024-10-29T19:34:21Z",
      "updated_at": "2024-10-29T19:41:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821427152",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821427152"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1318,
      "original_line": 1318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821435939",
      "pull_request_review_id": 2402925254,
      "id": 1821435939,
      "node_id": "PRRC_kwDOABII585skOgj",
      "diff_hunk": "@@ -816,6 +790,102 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    /*\n+     * CTxMemPoolChangeSet:\n+     *\n+     * This class is used for all mempool additions and associated removals (eg due to rbf).",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 66,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b1f32cd943fe6fc831786660231e5cb988115db7",
      "in_reply_to_id": 1817154923,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "text is better thanks",
      "created_at": "2024-10-29T19:42:25Z",
      "updated_at": "2024-10-29T19:42:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821435939",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821435939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 797,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821436409",
      "pull_request_review_id": 2402926057,
      "id": 1821436409,
      "node_id": "PRRC_kwDOABII585skOn5",
      "diff_hunk": "@@ -1810,6 +1810,8 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         AcceptSubPackage(txns_package_eval, args);\n     PackageValidationState& package_state_final = multi_submission_result.m_state;\n \n+    ClearSubPackageState();",
      "path": "src/validation.cpp",
      "position": 398,
      "original_position": 4,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b431ab44b0ad04ea9aed9e73a15c1eb599a131dd",
      "in_reply_to_id": 1813404075,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "still curious about this if you figure out how it was hit",
      "created_at": "2024-10-29T19:42:52Z",
      "updated_at": "2024-10-29T19:42:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1821436409",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1821436409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1809,
      "original_line": 1809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1822539819",
      "pull_request_review_id": 2404736977,
      "id": 1822539819,
      "node_id": "PRRC_kwDOABII585socAr",
      "diff_hunk": "@@ -682,7 +682,9 @@ class MemPoolAccept\n     bool ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_pool.cs);\n \n     // Try to add the transaction to the mempool, removing any conflicts first.\n-    void FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& ws) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_pool.cs);\n+    // Returns true if the transaction is in the mempool after any size",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d0976de7edf43d3cfea8dff3afc923580d8f84",
      "in_reply_to_id": 1821344367,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "in a8d0976de7edf43d3cfea8dff3afc923580d8f84",
      "created_at": "2024-10-30T12:40:36Z",
      "updated_at": "2024-10-30T12:40:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1822539819",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1822539819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 685,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824943979",
      "pull_request_review_id": 2408728371,
      "id": 1824943979,
      "node_id": "PRRC_kwDOABII585sxm9r",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_to_add;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order\n+        // map from the m_to_add index to the ancestors for the transaction\n+        std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;",
      "path": "src/txmempool.h",
      "position": 196,
      "original_position": 33,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": 1813066539,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think this is resolved now with the rewrite of `ChangeSet::CalculateMemPoolAncestors()` -- let me know if you agree.",
      "created_at": "2024-10-31T18:04:07Z",
      "updated_at": "2024-10-31T18:04:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1824943979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824943979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 878,
      "original_line": 878,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824955448",
      "pull_request_review_id": 2408744791,
      "id": 1824955448,
      "node_id": "PRRC_kwDOABII585sxpw4",
      "diff_hunk": "@@ -104,10 +104,18 @@ FUZZ_TARGET(package_rbf, .init = initialize_package_rbf)\n     std::vector<CTransaction> mempool_txs;\n     size_t iter{0};\n \n-    int32_t replacement_vsize = fuzzed_data_provider.ConsumeIntegralInRange<int32_t>(1, 1000000);\n-\n     // Keep track of the total vsize of CTxMemPoolEntry's being added to the mempool to avoid overflow\n     // Add replacement_vsize since this is added to new diagram during RBF check\n+    std::optional<CMutableTransaction> replacement_tx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider, TX_WITH_WITNESS);",
      "path": "src/test/fuzz/rbf.cpp",
      "position": 27,
      "original_position": 8,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1c33e133db5f876f2ba6eeb28877a5dcf3f6ac04",
      "in_reply_to_id": 1813383434,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think I prefer letting the fuzzer pick it, so that I don't have to worry about whether there are other aspects of the transaction I'm overfitting (and thus getting worse coverage than if I let the fuzzer do all the work).\r\n\r\nOn the other hand, if there are certain transaction templates that we want to be sure are covered, then perhaps I can flip a bool and determine whether to use a pre-constructed transaction versus use one from the fuzzer.  \r\n\r\nI can't think of what that might be though, so I'm inclined to leave this as-is unless you feel differently.\r\n\r\nEDIT: sorry I just realized that the transaction is actually carefully structured down below (at least the inputs), so yeah I can see why this feels a bit silly.",
      "created_at": "2024-10-31T18:08:04Z",
      "updated_at": "2024-10-31T18:09:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1824955448",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824955448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824957314",
      "pull_request_review_id": 2408747317,
      "id": 1824957314,
      "node_id": "PRRC_kwDOABII585sxqOC",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_to_add;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order\n+        // map from the m_to_add index to the ancestors for the transaction\n+        std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;",
      "path": "src/txmempool.h",
      "position": 196,
      "original_position": 33,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": 1813066539,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "this is fine, feel free to resolve it",
      "created_at": "2024-10-31T18:08:41Z",
      "updated_at": "2024-10-31T18:08:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1824957314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824957314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 878,
      "original_line": 878,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824965387",
      "pull_request_review_id": 2408758156,
      "id": 1824965387,
      "node_id": "PRRC_kwDOABII585sxsML",
      "diff_hunk": "@@ -104,10 +104,18 @@ FUZZ_TARGET(package_rbf, .init = initialize_package_rbf)\n     std::vector<CTransaction> mempool_txs;\n     size_t iter{0};\n \n-    int32_t replacement_vsize = fuzzed_data_provider.ConsumeIntegralInRange<int32_t>(1, 1000000);\n-\n     // Keep track of the total vsize of CTxMemPoolEntry's being added to the mempool to avoid overflow\n     // Add replacement_vsize since this is added to new diagram during RBF check\n+    std::optional<CMutableTransaction> replacement_tx = ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider, TX_WITH_WITNESS);",
      "path": "src/test/fuzz/rbf.cpp",
      "position": 27,
      "original_position": 8,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "1c33e133db5f876f2ba6eeb28877a5dcf3f6ac04",
      "in_reply_to_id": 1813383434,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I can't imagine it would greatly effect performance of the fuzz target as it's a single transaction, but it might matter more if more are constructed like in the rest of the harness.\r\n\r\nfeel free to resolve",
      "created_at": "2024-10-31T18:11:21Z",
      "updated_at": "2024-10-31T18:11:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1824965387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824965387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 113,
      "original_line": 113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824996488",
      "pull_request_review_id": 2408805832,
      "id": 1824996488,
      "node_id": "PRRC_kwDOABII585sxzyI",
      "diff_hunk": "@@ -1810,6 +1810,8 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptPackage(const Package& package,\n         AcceptSubPackage(txns_package_eval, args);\n     PackageValidationState& package_state_final = multi_submission_result.m_state;\n \n+    ClearSubPackageState();",
      "path": "src/validation.cpp",
      "position": 398,
      "original_position": 4,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "b431ab44b0ad04ea9aed9e73a15c1eb599a131dd",
      "in_reply_to_id": 1813404075,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Now I think I may have been mistaken; I've commented out this line and started fuzzing again, and I cannot reproduce the crash. Also, I agree with your assessment after re-reading the code some more.\r\n\r\nHowever, it would be nice if the SubPackageState were clearly destroyed when it goes out of scope from logic that uses it...  Even though it's seemingly not necessary to call cleanup here, it makes me a little uncomfortable to leave the code in a place where it takes some investigation to figure out that the changeset will be gone by the time LimitMempoolSize() is called.\r\n\r\nI might just add a comment mentioning that this should have gotten cleaned up by `AcceptSubPackage()` but that I'm leaving the cleanup call for readability, given that the call to `LimitMempoolSize` requires that the changeset be gone.  Does that seem reasonable?",
      "created_at": "2024-10-31T18:26:57Z",
      "updated_at": "2024-10-31T18:26:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1824996488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824996488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1809,
      "original_line": 1809,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825015423",
      "pull_request_review_id": 2408834974,
      "id": 1825015423,
      "node_id": "PRRC_kwDOABII585sx4Z_",
      "diff_hunk": "@@ -1366,7 +1370,7 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         // Re-calculate mempool ancestors to call addUnchecked(). They may have changed since the\n         // last calculation done in PreChecks, since package ancestors have already been submitted.\n         {\n-            auto ancestors{m_pool.CalculateMemPoolAncestors(*ws.m_entry, m_pool.m_opts.limits)};\n+            auto ancestors{ws.m_changeset->CalculateMemPoolAncestors(ws.m_tx_handle, m_pool.m_opts.limits)};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "8e2aac1e87b67a5d28cdc507df9bca85614cc97d",
      "in_reply_to_id": 1821226055,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'm very puzzled why none of the tests appear to fail on this commit.",
      "created_at": "2024-10-31T18:40:39Z",
      "updated_at": "2024-10-31T18:40:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825015423",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825015423"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1373,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825032783",
      "pull_request_review_id": 2408863673,
      "id": 1825032783,
      "node_id": "PRRC_kwDOABII585sx8pP",
      "diff_hunk": "@@ -1366,7 +1370,7 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         // Re-calculate mempool ancestors to call addUnchecked(). They may have changed since the\n         // last calculation done in PreChecks, since package ancestors have already been submitted.\n         {\n-            auto ancestors{m_pool.CalculateMemPoolAncestors(*ws.m_entry, m_pool.m_opts.limits)};\n+            auto ancestors{ws.m_changeset->CalculateMemPoolAncestors(ws.m_tx_handle, m_pool.m_opts.limits)};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "8e2aac1e87b67a5d28cdc507df9bca85614cc97d",
      "in_reply_to_id": 1821226055,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah, it's because at this point, the `Apply()` function doesn't use the ancestors anyway.  Agreed that this is pretty ugly -- I'll try to fix.",
      "created_at": "2024-10-31T18:56:50Z",
      "updated_at": "2024-10-31T18:56:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825032783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825032783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1373,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825058258",
      "pull_request_review_id": 2408906337,
      "id": 1825058258,
      "node_id": "PRRC_kwDOABII585syC3S",
      "diff_hunk": "@@ -816,6 +816,40 @@ class CTxMemPool\n         assert(m_epoch.guarded()); // verify guard even when it==nullopt\n         return !it || visited(*it);\n     }\n+\n+    class CTxMemPoolChangeSet {\n+    public:\n+        explicit CTxMemPoolChangeSet(CTxMemPool* pool) : m_pool(pool) {}\n+        ~CTxMemPoolChangeSet() = default;\n+\n+        CTxMemPoolChangeSet(const CTxMemPoolChangeSet&) = delete;\n+        CTxMemPoolChangeSet& operator=(const CTxMemPoolChangeSet&) = delete;\n+\n+        using TxHandle = CTxMemPool::txiter;\n+\n+        TxHandle StageAddition(const CTransactionRef& tx, const CAmount fee, int64_t time, unsigned int entry_height, uint64_t entry_sequence, bool spends_coinbase, int64_t sigops_cost, LockPoints lp);\n+        void StageRemoval(CTxMemPool::txiter it) { m_to_remove.insert(it); }\n+\n+        util::Result<CTxMemPool::setEntries> CalculateMemPoolAncestors(TxHandle tx, const Limits& limits) {\n+            LOCK(m_pool->cs);\n+            auto ret = m_pool->CalculateMemPoolAncestors(*tx, limits);\n+            if (ret) m_ancestors.insert({tx, *ret});\n+            else m_ancestors.erase(tx);\n+            return ret;\n+        }\n+\n+        void Apply() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    private:\n+        CTxMemPool* m_pool;\n+        CTxMemPool::indexed_transaction_set m_to_add;\n+        std::vector<CTxMemPool::txiter> m_entry_vec; // track the added transactions' insertion order\n+        // map from the m_to_add index to the ancestors for the transaction\n+        std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;",
      "path": "src/txmempool.h",
      "position": 196,
      "original_position": 33,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "88e109f1091561639aca323cb455180317a12b32",
      "in_reply_to_id": 1813066539,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "ok so I think I was a bit wrong, these values were being used and would \"blind\" us potentially from catching the \"BUG! Mempool ancestors or descendants were underestimated\" error.",
      "created_at": "2024-10-31T19:20:55Z",
      "updated_at": "2024-10-31T19:20:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825058258",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825058258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 878,
      "original_line": 878,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825864282",
      "pull_request_review_id": 2410145575,
      "id": 1825864282,
      "node_id": "PRRC_kwDOABII585s1Hpa",
      "diff_hunk": "@@ -1309,11 +1309,15 @@ std::optional<std::string> CTxMemPool::CheckConflictTopology(const setEntries& d\n     return std::nullopt;\n }\n \n-util::Result<std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>>> CTxMemPool::CalculateChunksForRBF(CAmount replacement_fees, int64_t replacement_vsize, const setEntries& direct_conflicts, const setEntries& all_conflicts)\n+util::Result<std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>>> CTxMemPool::ChangeSet::CalculateChunksForRBF()\n {\n-    Assume(replacement_vsize > 0);\n+    LOCK(m_pool->cs);\n+    FeeFrac replacement_feerate{0, 0};\n+    for (auto it : m_entry_vec) {\n+        replacement_feerate += {it->GetModifiedFee(), it->GetTxSize()};\n+    }",
      "path": "src/txmempool.cpp",
      "position": 147,
      "original_position": 12,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "e60239454c11903d99b3dd1ac3286e558e36be1c",
      "in_reply_to_id": 1821427152,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think if you created a changeset and immediately invoked `CalculateChunksForRBF()`, then this would be size 0 right?  Does anything here break if it is size 0?  (It looks ok to me, not sure if I'm missing something.)",
      "created_at": "2024-11-01T14:10:17Z",
      "updated_at": "2024-11-01T14:10:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825864282",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825864282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1318,
      "original_line": 1318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825867815",
      "pull_request_review_id": 2410151164,
      "id": 1825867815,
      "node_id": "PRRC_kwDOABII585s1Ign",
      "diff_hunk": "@@ -1366,7 +1370,7 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         // Re-calculate mempool ancestors to call addUnchecked(). They may have changed since the\n         // last calculation done in PreChecks, since package ancestors have already been submitted.\n         {\n-            auto ancestors{m_pool.CalculateMemPoolAncestors(*ws.m_entry, m_pool.m_opts.limits)};\n+            auto ancestors{ws.m_changeset->CalculateMemPoolAncestors(ws.m_tx_handle, m_pool.m_opts.limits)};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "8e2aac1e87b67a5d28cdc507df9bca85614cc97d",
      "in_reply_to_id": 1821226055,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Should be better now, I think -- now I'm introducing the ancestor caching inside of `CalculateMemPoolAncestors` into the same commit that introduces using the cached value in `Apply()`.",
      "created_at": "2024-11-01T14:13:22Z",
      "updated_at": "2024-11-01T14:13:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825867815",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825867815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1373,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825868624",
      "pull_request_review_id": 2410152520,
      "id": 1825868624,
      "node_id": "PRRC_kwDOABII585s1ItQ",
      "diff_hunk": "@@ -1365,36 +1370,18 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n             package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n                                   strprintf(\"BUG! PolicyScriptChecks succeeded but ConsensusScriptChecks failed: %s\",\n                                             ws.m_ptx->GetHash().ToString()));\n+            // Remove the transaction from the mempool.\n+            if (!m_subpackage.m_changeset) m_subpackage.m_changeset = m_pool.GetChangeSet();\n+            m_subpackage.m_changeset->StageRemoval(m_pool.GetIter(ws.m_ptx->GetHash()).value());\n         }\n-\n-        // Re-calculate mempool ancestors to call addUnchecked(). They may have changed since the\n-        // last calculation done in PreChecks, since package ancestors have already been submitted.\n-        {\n-            auto ancestors{ws.m_changeset->CalculateMemPoolAncestors(ws.m_tx_handle, m_pool.m_opts.limits)};\n-            if(!ancestors) {\n-                results.emplace(ws.m_ptx->GetWitnessHash(), MempoolAcceptResult::Failure(ws.m_state));\n-                // Since PreChecks() and PackageMempoolChecks() both enforce limits, this should never fail.\n-                Assume(false);\n-                all_submitted = false;\n-                package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n-                                    strprintf(\"BUG! Mempool ancestors or descendants were underestimated: %s\",\n-                                                ws.m_ptx->GetHash().ToString()));\n-            }\n-            ws.m_ancestors = std::move(ancestors).value_or(ws.m_ancestors);\n-        }\n-        // If we call LimitMempoolSize() for each individual Finalize(), the mempool will not take\n-        // the transaction's descendant feerate into account because it hasn't seen them yet. Also,\n-        // we risk evicting a transaction that a subsequent package transaction depends on. Instead,\n-        // allow the mempool to temporarily bypass limits, the maximum package size) while\n-        // submitting transactions individually and then trim at the very end.\n-        if (!Finalize(args, ws)) {\n-            results.emplace(ws.m_ptx->GetWitnessHash(), MempoolAcceptResult::Failure(ws.m_state));\n-            // Since LimitMempoolSize() won't be called, this should never fail.\n-            Assume(false);\n-            all_submitted = false;\n-            package_state.Invalid(PackageValidationResult::PCKG_MEMPOOL_ERROR,\n-                                  strprintf(\"BUG! Adding to mempool failed: %s\", ws.m_ptx->GetHash().ToString()));\n-        }\n+    }\n+    if (!all_submitted) {",
      "path": "src/validation.cpp",
      "position": 321,
      "original_position": 168,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "27c2abffbd9c5a83fd2becf6d7b70c7b30031f76",
      "in_reply_to_id": 1821276305,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added an `Assume()` for it.",
      "created_at": "2024-11-01T14:14:05Z",
      "updated_at": "2024-11-01T14:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825868624",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825868624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1375,
      "original_line": 1375,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825868980",
      "pull_request_review_id": 2410153146,
      "id": 1825868980,
      "node_id": "PRRC_kwDOABII585s1Iy0",
      "diff_hunk": "@@ -682,7 +682,9 @@ class MemPoolAccept\n     bool ConsensusScriptChecks(const ATMPArgs& args, Workspace& ws) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_pool.cs);\n \n     // Try to add the transaction to the mempool, removing any conflicts first.\n-    void FinalizeSubpackage(const ATMPArgs& args, std::vector<Workspace>& ws) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_pool.cs);\n+    // Returns true if the transaction is in the mempool after any size",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d0976de7edf43d3cfea8dff3afc923580d8f84",
      "in_reply_to_id": 1821344367,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "No idea!  Gone now.",
      "created_at": "2024-11-01T14:14:26Z",
      "updated_at": "2024-11-01T14:14:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825868980",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825868980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 685,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825869389",
      "pull_request_review_id": 2410153798,
      "id": 1825869389,
      "node_id": "PRRC_kwDOABII585s1I5N",
      "diff_hunk": "@@ -865,9 +856,25 @@ class CTxMemPool\n         // map from the m_to_add index to the ancestors for the transaction\n         std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;\n         CTxMemPool::setEntries m_to_remove;\n+\n+        friend class CTxMemPool;\n     };\n \n     std::unique_ptr<ChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) { return std::make_unique<ChangeSet>(this); }\n+\n+    friend class CTxMemPool::ChangeSet;\n+\n+private:\n+    // addNewTransaction must updated state for all ancestors of a given transaction,",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 47,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "ca235933e0ce8bf63611d7c88c92553402cc0954",
      "in_reply_to_id": 1821388766,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Fixed.",
      "created_at": "2024-11-01T14:14:47Z",
      "updated_at": "2024-11-01T14:14:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825869389",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825869389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 868,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825869528",
      "pull_request_review_id": 2410154006,
      "id": 1825869528,
      "node_id": "PRRC_kwDOABII585s1I7Y",
      "diff_hunk": "@@ -865,9 +856,25 @@ class CTxMemPool\n         // map from the m_to_add index to the ancestors for the transaction\n         std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;\n         CTxMemPool::setEntries m_to_remove;\n+\n+        friend class CTxMemPool;\n     };\n \n     std::unique_ptr<ChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) { return std::make_unique<ChangeSet>(this); }\n+\n+    friend class CTxMemPool::ChangeSet;\n+\n+private:\n+    // addNewTransaction must updated state for all ancestors of a given transaction,\n+    // to track size/count of descendant transactions.  First version of\n+    // addNewTransaction can be used to have it call CalculateMemPoolAncestors(), and\n+    // then invoke the second version.\n+    // Note that addNewTransaction is ONLY called from ATMP outside of tests\n+    // and any other callers may break wallet's in-mempool tracking (due to\n+    // lack of CValidationInterface::TransactionAddedToMempool callbacks).\n+    void Apply(CTxMemPool::ChangeSet* changeset) EXCLUSIVE_LOCKS_REQUIRED(cs);",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 54,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "ca235933e0ce8bf63611d7c88c92553402cc0954",
      "in_reply_to_id": 1821389449,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Moved.",
      "created_at": "2024-11-01T14:14:54Z",
      "updated_at": "2024-11-01T14:14:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825869528",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825869528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 875,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825869661",
      "pull_request_review_id": 2410154244,
      "id": 1825869661,
      "node_id": "PRRC_kwDOABII585s1I9d",
      "diff_hunk": "@@ -865,9 +856,25 @@ class CTxMemPool\n         // map from the m_to_add index to the ancestors for the transaction\n         std::map<CTxMemPool::txiter, CTxMemPool::setEntries, CompareIteratorByHash> m_ancestors;\n         CTxMemPool::setEntries m_to_remove;\n+\n+        friend class CTxMemPool;\n     };\n \n     std::unique_ptr<ChangeSet> GetChangeSet() EXCLUSIVE_LOCKS_REQUIRED(cs) { return std::make_unique<ChangeSet>(this); }\n+\n+    friend class CTxMemPool::ChangeSet;\n+\n+private:\n+    // addNewTransaction must updated state for all ancestors of a given transaction,\n+    // to track size/count of descendant transactions.  First version of\n+    // addNewTransaction can be used to have it call CalculateMemPoolAncestors(), and\n+    // then invoke the second version.\n+    // Note that addNewTransaction is ONLY called from ATMP outside of tests",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 51,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "ca235933e0ce8bf63611d7c88c92553402cc0954",
      "in_reply_to_id": 1821390942,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Reworded.",
      "created_at": "2024-11-01T14:15:02Z",
      "updated_at": "2024-11-01T14:15:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825869661",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825869661"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 872,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825870218",
      "pull_request_review_id": 2410155148,
      "id": 1825870218,
      "node_id": "PRRC_kwDOABII585s1JGK",
      "diff_hunk": "@@ -260,7 +260,7 @@ struct TxMempoolInfo\n  *\n  * Usually when a new transaction is added to the mempool, it has no in-mempool\n  * children (because any such children would be an orphan).  So in\n- * addUnchecked(), we:\n+ * addNewTransaction(), we:\n  * - update a new entry's setMemPoolParents to include all in-mempool parents",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 6,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "ca235933e0ce8bf63611d7c88c92553402cc0954",
      "in_reply_to_id": 1821393533,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Tried to remove all instances of setMemPoolParents and setMemPoolChildren from code comments.",
      "created_at": "2024-11-01T14:15:32Z",
      "updated_at": "2024-11-01T14:15:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825870218",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825870218"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825871071",
      "pull_request_review_id": 2410156718,
      "id": 1825871071,
      "node_id": "PRRC_kwDOABII585s1JTf",
      "diff_hunk": "@@ -603,6 +603,7 @@ void CTxMemPool::removeRecursive(const CTransaction &origTx, MemPoolRemovalReaso\n {",
      "path": "src/txmempool.cpp",
      "position": 83,
      "original_position": 1,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "c8b896067d42001f2a47cd837c0aed07bb39f329",
      "in_reply_to_id": 1821407375,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This was a good suggestion, thanks -- with the introduction of changesets, we can make `RemoveStaged()` a private method now, and so I updated the commit message to explain that the public removal methods may not be invoked while a changeset is outstanding.",
      "created_at": "2024-11-01T14:16:21Z",
      "updated_at": "2024-11-01T14:16:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825871071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825871071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 593,
      "original_line": 593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825871365",
      "pull_request_review_id": 2410157180,
      "id": 1825871365,
      "node_id": "PRRC_kwDOABII585s1JYF",
      "diff_hunk": "@@ -374,6 +374,10 @@ BOOST_FIXTURE_TEST_CASE(improves_feerate, TestChain100Setup)\n     const auto tx2_fee = entry2->GetModifiedFee();\n     const auto tx2_size = entry2->GetTxSize();\n \n+    // conflicting transactions\n+    const auto tx1_conflict = make_tx(/*inputs=*/ {m_coinbase_txns[0], m_coinbase_txns[2]}, /*output_values=*/ {10 * COIN});\n+    auto entry1_conflict = entry.FromTx(tx1_conflict);",
      "path": "src/test/rbf_tests.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "5e447a3059224ac97ec7cf5681dc3ca492770968",
      "in_reply_to_id": 1821412595,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Gone thanks",
      "created_at": "2024-11-01T14:16:36Z",
      "updated_at": "2024-11-01T14:16:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825871365",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825871365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825871510",
      "pull_request_review_id": 2410157414,
      "id": 1825871510,
      "node_id": "PRRC_kwDOABII585s1JaW",
      "diff_hunk": "@@ -740,6 +739,8 @@ class MemPoolAccept\n         CTxMemPool::setEntries m_all_conflicts;\n         /** Mempool transactions that were replaced. */\n         std::list<CTransactionRef> m_replaced_transactions;\n+        /* Changeset representing adding a transaction and removing its conflicts. */",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "27c2abffbd9c5a83fd2becf6d7b70c7b30031f76",
      "in_reply_to_id": 1821424007,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done",
      "created_at": "2024-11-01T14:16:45Z",
      "updated_at": "2024-11-01T14:16:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825871510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825871510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 742,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825901123",
      "pull_request_review_id": 2410207168,
      "id": 1825901123,
      "node_id": "PRRC_kwDOABII585s1QpD",
      "diff_hunk": "@@ -1309,11 +1309,15 @@ std::optional<std::string> CTxMemPool::CheckConflictTopology(const setEntries& d\n     return std::nullopt;\n }\n \n-util::Result<std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>>> CTxMemPool::CalculateChunksForRBF(CAmount replacement_fees, int64_t replacement_vsize, const setEntries& direct_conflicts, const setEntries& all_conflicts)\n+util::Result<std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>>> CTxMemPool::ChangeSet::CalculateChunksForRBF()\n {\n-    Assume(replacement_vsize > 0);\n+    LOCK(m_pool->cs);\n+    FeeFrac replacement_feerate{0, 0};\n+    for (auto it : m_entry_vec) {\n+        replacement_feerate += {it->GetModifiedFee(), it->GetTxSize()};\n+    }",
      "path": "src/txmempool.cpp",
      "position": 147,
      "original_position": 12,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "e60239454c11903d99b3dd1ac3286e558e36be1c",
      "in_reply_to_id": 1821427152,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, given new interface seems impossible to hit and seems well-defined. Added another test case to `ComapreChunks` to just make sure it was well-defined:\r\n\r\n```\r\ndiff --git a/src/test/rbf_tests.cpp b/src/test/rbf_tests.cpp\r\nindex c6d06c937c..d610661878 100644\r\n--- a/src/test/rbf_tests.cpp\r\n+++ b/src/test/rbf_tests.cpp\r\n@@ -631,20 +631,32 @@ BOOST_AUTO_TEST_CASE(feerate_chunks_utilities)\r\n {\r\n     // Sanity check the correctness of the feerate chunks comparison.\r\n \r\n     // A strictly better case.\r\n     std::vector<FeeFrac> old_chunks{{{950, 300}, {100, 100}}};\r\n     std::vector<FeeFrac> new_chunks{{{1000, 300}, {50, 100}}};\r\n \r\n     BOOST_CHECK(std::is_lt(CompareChunks(old_chunks, new_chunks)));\r\n     BOOST_CHECK(std::is_gt(CompareChunks(new_chunks, old_chunks)));\r\n \r\n+    // Empty comparisons\r\n+    old_chunks = {{0, 0}};\r\n+    new_chunks = {{1000, 300}, {0, 100}};\r\n+\r\n+    BOOST_CHECK(std::is_lt(CompareChunks(old_chunks, new_chunks)));\r\n+    BOOST_CHECK(std::is_gt(CompareChunks(new_chunks, old_chunks)));\r\n+\r\n+    old_chunks = {{0, 0}};\r\n+    new_chunks = {{0, 0}};\r\n+\r\n+    BOOST_CHECK(std::is_eq(CompareChunks(old_chunks, new_chunks)));\r\n+\r\n     // Incomparable diagrams\r\n     old_chunks = {{950, 300}, {100, 100}};\r\n     new_chunks = {{1000, 300}, {0, 100}};\r\n \r\n     BOOST_CHECK(CompareChunks(old_chunks, new_chunks) == std::partial_ordering::unordered);\r\n     BOOST_CHECK(CompareChunks(new_chunks, old_chunks) == std::partial_ordering::unordered);\r\n \r\n     // Strictly better but smaller size.\r\n     old_chunks = {{950, 300}, {100, 100}};\r\n     new_chunks = {{1100, 300}};\r\n```",
      "created_at": "2024-11-01T14:41:15Z",
      "updated_at": "2024-11-01T14:41:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825901123",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825901123"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1318,
      "original_line": 1318,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825906517",
      "pull_request_review_id": 2410215732,
      "id": 1825906517,
      "node_id": "PRRC_kwDOABII585s1R9V",
      "diff_hunk": "@@ -1366,7 +1370,7 @@ bool MemPoolAccept::SubmitPackage(const ATMPArgs& args, std::vector<Workspace>&\n         // Re-calculate mempool ancestors to call addUnchecked(). They may have changed since the\n         // last calculation done in PreChecks, since package ancestors have already been submitted.\n         {\n-            auto ancestors{m_pool.CalculateMemPoolAncestors(*ws.m_entry, m_pool.m_opts.limits)};\n+            auto ancestors{ws.m_changeset->CalculateMemPoolAncestors(ws.m_tx_handle, m_pool.m_opts.limits)};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "8e2aac1e87b67a5d28cdc507df9bca85614cc97d",
      "in_reply_to_id": 1821226055,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "history is cleaner, thank you",
      "created_at": "2024-11-01T14:45:52Z",
      "updated_at": "2024-11-01T14:45:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825906517",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825906517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1373,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825925061",
      "pull_request_review_id": 2410245630,
      "id": 1825925061,
      "node_id": "PRRC_kwDOABII585s1WfF",
      "diff_hunk": "@@ -844,6 +844,18 @@ class CTxMemPool\n             return ret;\n         }\n \n+        std::vector<CTransactionRef> GetAddedTxns() const {\n+            std::vector<CTransactionRef> ret;\n+            ret.reserve(m_entry_vec.size());\n+            for (const auto& entry : m_entry_vec) {\n+                ret.emplace_back(entry->GetSharedTx());\n+            }\n+            return ret;\n+        }\n+\n+        size_t GetTxCount() const { return m_entry_vec.size(); }\n+        const CTransaction& GetTx(size_t index) const { return m_entry_vec.at(index)->GetTx(); }",
      "path": "src/txmempool.h",
      "position": null,
      "original_position": 14,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "a8d0976de7edf43d3cfea8dff3afc923580d8f84",
      "in_reply_to_id": 1821342151,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Done.",
      "created_at": "2024-11-01T15:01:35Z",
      "updated_at": "2024-11-01T15:01:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825925061",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825925061"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 857,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825925932",
      "pull_request_review_id": 2410247137,
      "id": 1825925932,
      "node_id": "PRRC_kwDOABII585s1Wss",
      "diff_hunk": "@@ -1309,11 +1309,15 @@ std::optional<std::string> CTxMemPool::CheckConflictTopology(const setEntries& d\n     return std::nullopt;\n }\n \n-util::Result<std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>>> CTxMemPool::CalculateChunksForRBF(CAmount replacement_fees, int64_t replacement_vsize, const setEntries& direct_conflicts, const setEntries& all_conflicts)\n+util::Result<std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>>> CTxMemPool::ChangeSet::CalculateChunksForRBF()\n {\n-    Assume(replacement_vsize > 0);\n+    LOCK(m_pool->cs);\n+    FeeFrac replacement_feerate{0, 0};\n+    for (auto it : m_entry_vec) {\n+        replacement_feerate += {it->GetModifiedFee(), it->GetTxSize()};\n+    }",
      "path": "src/txmempool.cpp",
      "position": 147,
      "original_position": 12,
      "commit_id": "9512bd34a3d74d15c3ce1086a80a1edfa5ac3acf",
      "original_commit_id": "e60239454c11903d99b3dd1ac3286e558e36be1c",
      "in_reply_to_id": 1821427152,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Maybe worth a separate PR to ensure the test coverage; will mark this as resolved.",
      "created_at": "2024-11-01T15:02:22Z",
      "updated_at": "2024-11-01T15:02:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31122#discussion_r1825925932",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825925932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31122"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1318,
      "original_line": 1318,
      "side": "RIGHT"
    }
  ]
}