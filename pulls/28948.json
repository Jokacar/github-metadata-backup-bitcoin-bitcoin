{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948",
    "id": 1618181311,
    "node_id": "PR_kwDOABII585gc3y_",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28948",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28948.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28948.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/4fce51680cef5b2cde751bc088d2ff6085f1cf29",
    "number": 28948,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "v3 transaction policy for anti-pinning",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "See #27463 for overall package relay tracking.\r\n\r\nRationale:\r\n- There are various pinning problems with RBF and our general ancestor/descendant limits. These policies help mitigate many pinning attacks and make package RBF feasible (see #25038 which implements package RBF on top of this). [1][2]\r\n- Switching to a cluster-based mempool (see #27677 and #28676) requires the removal of CPFP carve out, which applications depend on. V3 + package RBF + ephemeral anchors + 1-parent-1-child package relay provides an intermediate solution.\r\n\r\nV3 policy [3] allows users to opt in to more restrictive topological limits for shared transactions. Even though we don't have cluster limits, we are able to treat these transactions as having as having a maximum cluster size of 2. If adopted by many nodes in the network, V3 mitigates various RBF pinning attacks. The \"cluster limit\" allows us to do things like calculate the \"miner score\" of a transaction and permit below-minrelayfeerate transactions.\r\n\r\n[1]: Original mailing list post and discussion about RBF pinning problems https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019817.html, https://gist.github.com/glozow/25d9662c52453bd08b4b4b1d3783b9ff\r\n[2]: A FAQ is \"we need this for cluster mempool, but is this still necessary afterwards?\" There are some pinning issues that are fixed here and not fully fixed in cluster mempool, so we will continue to use this or something similar afterward.\r\n[3]: Mailing list post for v3 https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020937.html",
    "labels": [
      {
        "id": 82428251,
        "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
        "name": "TX fees and policy",
        "color": "5319e7",
        "default": false
      },
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "created_at": "2023-11-27T15:17:11Z",
    "updated_at": "2023-12-10T00:46:17Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "4a1e2304e202254b07303a3c2b2badd1cb668735",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "glozow:v3-policy",
      "ref": "v3-policy",
      "sha": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 244262754,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDQyNjI3NTQ=",
        "name": "bitcoin",
        "full_name": "glozow/bitcoin",
        "owner": {
          "login": "glozow",
          "id": 25183001,
          "node_id": "MDQ6VXNlcjI1MTgzMDAx",
          "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/glozow",
          "html_url": "https://github.com/glozow",
          "followers_url": "https://api.github.com/users/glozow/followers",
          "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
          "organizations_url": "https://api.github.com/users/glozow/orgs",
          "repos_url": "https://api.github.com/users/glozow/repos",
          "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/glozow/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/glozow/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/glozow/bitcoin",
        "archive_url": "https://api.github.com/repos/glozow/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/glozow/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/glozow/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/glozow/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/glozow/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/glozow/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/glozow/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/glozow/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/glozow/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/glozow/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/glozow/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/glozow/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/glozow/bitcoin/events",
        "forks_url": "https://api.github.com/repos/glozow/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/glozow/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/glozow/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/glozow/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/glozow/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/glozow/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/glozow/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/glozow/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/glozow/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/glozow/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/glozow/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/glozow/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/glozow/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/glozow/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/glozow/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/glozow/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:glozow/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/glozow/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/glozow/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/glozow/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/glozow/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/glozow/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/glozow/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/glozow/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/glozow/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/glozow/bitcoin/hooks",
        "svn_url": "https://github.com/glozow/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 10,
        "watchers_count": 10,
        "size": 235979,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-05T05:26:00Z",
        "created_at": "2020-03-02T02:31:56Z",
        "updated_at": "2023-08-30T16:39:28Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "1c8893bd1c80043ee47e0dd9b63b09bb65d25fa2",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36123,
        "stargazers_count": 72582,
        "watchers_count": 72582,
        "size": 246413,
        "default_branch": "master",
        "open_issues_count": 671,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-12-09T18:56:21Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-12-10T00:44:48Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 882,
    "deletions": 38,
    "changed_files": 21,
    "commits": 9,
    "review_comments": 28,
    "comments": 11
  },
  "events": [
    {
      "event": "labeled",
      "id": 11072393786,
      "node_id": "LE_lADOABII58539HF9zwAAAAKT91I6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11072393786",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T15:17:11Z",
      "label": {
        "name": "TX fees and policy",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 11072393793,
      "node_id": "LE_lADOABII58539HF9zwAAAAKT91JB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11072393793",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T15:17:11Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "commented",
      "id": 1828035445,
      "node_id": "IC_kwDOABII585s9Zt1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828035445",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T15:17:15Z",
      "updated_at": "2023-12-07T20:25:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28948).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [sdaftuar](https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1832669087), [ismaelsadeeq](https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1842795172) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28984](https://github.com/bitcoin/bitcoin/pull/28984) (Cluster size 2 package rbf by instagibbs)\n* [#28972](https://github.com/bitcoin/bitcoin/pull/28972) (test: Add and use option for tx-version in MiniWallet methods by maflcko)\n* [#28960](https://github.com/bitcoin/bitcoin/pull/28960) (kernel: Remove dependency on CScheduler by TheCharlatan)\n* [#28886](https://github.com/bitcoin/bitcoin/pull/28886) (refactor: Replace sets of txiter with CTxMemPoolEntryRefs by TheCharlatan)\n* [#28690](https://github.com/bitcoin/bitcoin/pull/28690) (build: Introduce internal kernel library by TheCharlatan)\n* [#28676](https://github.com/bitcoin/bitcoin/pull/28676) ([WIP] Cluster mempool implementation by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1828035445",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11072750512,
      "node_id": "HRFPE_lADOABII58539HF9zwAAAAKT_MOw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11072750512",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T15:46:09Z"
    },
    {
      "event": "labeled",
      "id": 11072751480,
      "node_id": "LE_lADOABII58539HF9zwAAAAKT_Md4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11072751480",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T15:46:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T15:47:23Z",
      "updated_at": "2023-11-27T15:47:23Z",
      "source": {
        "issue": {
          "id": 1668056618,
          "node_id": "I_kwDOABII585jbIYq",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27463/events",
          "html_url": "https://github.com/bitcoin/bitcoin/issues/27463",
          "number": 27463,
          "state": "open",
          "state_reason": null,
          "title": "Package Relay Project Tracking",
          "body": "This issue will be edited frequently to reflect the current status of the project.\r\n\r\n**What should I review now?**\r\n:point_down: :point_down: :point_down: :point_down: :point_down: :point_down: :point_down:\r\n#28948\r\n:point_up: :point_up: :point_up: :point_up: :point_up: :point_up: :point_up:\r\n\r\n**(1) multi-parent-1-child package validation**\r\n\r\nWhat we get: the ability to validate multiple transactions, including CPFP of transactions below the mempool minimum feerate. An RPC to submit things locally.\r\n\r\n- Enable validation of multiple transactions in MemPoolAccept\r\n  - [x] Dependency: #21062\r\n  - [x] Dependency: #23381\r\n  - [x] Main feature 1/2: #20833\r\n  - [x] Main feature 2/2: #21800\r\n  - [x] Followup: #22084\r\n  - [x] Bug fix: #28471\r\n- Enable package CPFP\r\n  - [x] Main feature 1/2: #22674\r\n  - [x] Followup: #24310\r\n  - [x] Followup: #23804\r\n  - [x] Main feature 2/2: #24152\r\n- RPC access\r\n  - [x] #24836\r\n  - [x] #26646\r\n  - [x] #27609\r\n  - [x] #28848\r\n- [x] short term bug fix: avoid the risk of below-minrelaytxfee transactions hanging around forever in the mempool  #26933\r\n- [x] Bug fix: #28251\r\n- [x] Bug fix: #28472\r\n- Fuzzing\r\n  - [x] #28450\r\n  - [x] #28764\r\n  - [x] #28825\r\n\r\n**(2) 1-parent-1-child package relay**\r\n\r\nWhat we get: package relay of 1-parent-1-child packages.\r\nProtocols like LN can use this to create 0-fee presigned transactions with a single, 0-value anchor output; 0-fee commitment transactions can replace each other using the fees of the child attached to the anchor.\r\nThis makes CPFP carve out unnecessary, so we can remove that and switch from ancestor/descendant package limits to cluster limits (see next step).\r\n\r\n- Add v3 rules that make transactions/packages easier to work with\r\n  - [ ] Main feature: #28948\r\n- Enable Package RBF for v3 only. Enables things like LN to sign things 0-fee, add fees at broadcast, and avoid pinning attacks (assuming package relay is available)\r\n   - [x] Dependency: #22796 \r\n   - [x] Dependency: #22675 \r\n   - [x] Dependency: #22855\r\n   - [ ] Main feature (option 1, v3-only): #25038\r\n   - [ ] Main feature (option 2, cluster size 2): #28984\r\n- Add Ephemeral Anchors rules for v3 transactions.\r\n  - [ ] Main feature: #26403\r\n- Opportunistically submit 1-parent-1-child packages\r\n  - [x] Dependency: #28785\r\n  - [ ] WIP #28970\r\n- Try multiple peers for orphan resolution, make orphanage more robust\r\n  - [x] Dependency: #28785\r\n  - [x] Dependency: #28199\r\n  - [x] Dependency: #28364\r\n  - [ ] Main feature: #28031 \r\n  - [ ] WIP: token bucket orphanage protection\r\n\r\n**(3) cluster mempool**\r\n\r\nWhat we get: the ability to quickly assess the incentive compatibility of transactions, safer eviction, more incentive-compatible and pinning-free RBF rules.\r\n\r\n- [ ] Cluster Mempool #27677\r\n  - [ ] Dependency: Remove CPFP carve out\r\n  - [ ] See #28676\r\n\r\n**(4) TBD / other parts of package relay**\r\n\r\nGoals: propagate incentive-compatible packages that are more compelx than 1p1c, safely evaluate replacements within packages, handle orphans better.\r\n\r\n- WIP: Package RBF\r\n- WIP: Package validation of less restrictive topologies\r\n- [ ] use BIP 331 ancestor package relay for orphan-handling\r\n  - [ ] bitcoin/bips/pull/1382\r\n  - [ ] #27742 \r\n- [ ] Some sender-initiated protocol using chunks (?)\r\n\r\n<details><summary>See also:</summary>\r\n\r\nSuperseded/Deferred Work\r\n- Sub-package evaluation with ancestor packages\r\n- [x] #28758\r\n  - [x] #28808\r\n  - #26711 \r\n  - #28813\r\n- #27018\r\n\r\nPrehistory\r\n- [x] #16400 \r\n- #16401 \r\n- #14895 \r\n- #19621 \r\n- https://gist.github.com/sdaftuar/8756699bfcad4d3806ba9f3396d4e66a\r\n</details>",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64583,
              "node_id": "MDU6TGFiZWw2NDU4Mw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
              "name": "Feature",
              "color": "7cf575",
              "default": false
            },
            {
              "id": 64584,
              "node_id": "MDU6TGFiZWw2NDU4NA==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Brainstorming",
              "name": "Brainstorming",
              "color": "ebd775",
              "default": false
            },
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 15,
          "created_at": "2023-04-14T11:14:50Z",
          "updated_at": "2023-12-04T04:54:11Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1750753834,
      "node_id": "PRR_kwDOABII585oWmIq",
      "url": null,
      "actor": null,
      "commit_id": "f82c9fdfce0a299654c51001575aeb703ead3393",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Would be good to have some fuzzing for the new policy rules. Maybe amending the existing fuzz targets (tx_pool, tx_package_eval) to include v3 txs is enough? A standalone harness for the new rules would probably also be good regardless.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#pullrequestreview-1750753834",
      "submitted_at": "2023-11-27T15:52:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
    },
    {
      "event": "unlabeled",
      "id": 11073249486,
      "node_id": "UNLE_lADOABII58539HF9zwAAAAKUBGDO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11073249486",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T16:25:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11073409752,
      "node_id": "HRFPE_lADOABII58539HF9zwAAAAKUBtLY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11073409752",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T16:38:05Z"
    },
    {
      "event": "commented",
      "id": 1828199453,
      "node_id": "IC_kwDOABII585s-Bwd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828199453",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T16:38:53Z",
      "updated_at": "2023-11-27T16:56:43Z",
      "author_association": "MEMBER",
      "body": "Changed tx_pool and tx_package_eval fuzzer to sometimes create v3 transactions, and check v3 invariants at the end of each iteration.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1828199453",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T16:42:26Z",
      "updated_at": "2023-11-27T16:42:26Z",
      "source": {
        "issue": {
          "id": 1221671479,
          "node_id": "PR_kwDOABII5843Gzwx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25038",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25038/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25038/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/25038/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/25038",
          "number": 25038,
          "state": "open",
          "state_reason": null,
          "title": "policy: nVersion=3 and Package RBF",
          "body": "See #27463 for overall package relay tracking. This PR is in draft while ancestor package validation is being figured out.\r\n\r\nThis PR contains 2 projects: v3 policy and package RBF. Mailing list posts: [package RBF 1](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-September/019464.html) and [V3 + package RBF 2](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-September/020937.html). It stems from a long discussion about RBF pinning, across a [mailing list thread](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019817.html) and [gist](https://gist.github.com/glozow/25d9662c52453bd08b4b4b1d3783b9ff).\r\n\r\nV3 Policy: A set of policy rules applied to transactions with their `nVersion` field set to 3. Namely, it allows users to opt in to more restrictive descendant limits for shared transactions. If adopted by many nodes in the network, V3 mitigates various RBF pinning attacks. See doc/policy/version3_transactions.md for the exact rules and rationale, and [these review club notes](bitcoincore.reviews/25038) for more background and discussion.\r\n\r\nPackage RBF: In addition to allowing a child to pay for its parents within the package, also allow the child to pay for replacing the parent's conflicts. For example, this allows LN users to replace commitment transactions existing in the mempool, simply by broadcasting their respective commitment transactions with a high-fee child. The commitment transactions can be signed with 0 fees, which means no overpaying.\r\n\r\nFAQ: is v3 still helpful even with cluster mempool (#27677) ?\r\n\r\n- Rule 3 pinning: This is addressed with v3 but not really with cluster mempool (descendant allowance is still too permissive).\r\n- Package RBF and ACP pinning: This PR allows for package RBF with v3 packages. V3 has an effective \"cluster limit\" of 2 which makes it very cheap to calculate the mining score of a v3 transaction. With cluster mempool, which also makes it easier to calculate mining score, we could have package RBF for non-v3 transactions.\r\n- Allowing 0fee transactions: This PR allows v3 transactions to be below minimum relay feerate, provided they are CPFP'd. This is because the simplified topology allows us to avoid situations like the ones described in #26933. With cluster mempool, we can allow this for non-v3 transactions.",
          "user": {
            "login": "glozow",
            "id": 25183001,
            "node_id": "MDQ6VXNlcjI1MTgzMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glozow",
            "html_url": "https://github.com/glozow",
            "followers_url": "https://api.github.com/users/glozow/followers",
            "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
            "organizations_url": "https://api.github.com/users/glozow/orgs",
            "repos_url": "https://api.github.com/users/glozow/repos",
            "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/glozow/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 1392286103,
              "node_id": "MDU6TGFiZWwxMzkyMjg2MTAz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20Conceptual%20Review",
              "name": "Needs Conceptual Review",
              "description": "",
              "color": "fef2c0",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 32,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/25038",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/25038",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/25038.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/25038.patch"
          },
          "created_at": "2022-04-30T00:24:31Z",
          "updated_at": "2023-12-01T21:26:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11073619330,
      "node_id": "HRFPE_lADOABII58539HF9zwAAAAKUCgWC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11073619330",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T16:56:14Z"
    },
    {
      "event": "labeled",
      "id": 11073620119,
      "node_id": "LE_lADOABII58539HF9zwAAAAKUCgiX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11073620119",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T16:56:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11073885848,
      "node_id": "HRFPE_lADOABII58539HF9zwAAAAKUDhaY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11073885848",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T17:21:40Z"
    },
    {
      "event": "commented",
      "id": 1828351782,
      "node_id": "IC_kwDOABII585s-m8m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828351782",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T18:02:37Z",
      "updated_at": "2023-11-27T18:02:37Z",
      "author_association": "MEMBER",
      "body": "```\r\n$ echo \"ACVL/gA+Pj4+Pj4+3D4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPT09//8AAP/8AAAAigAAAAAAAAAAAAAAAAAAAAAAAAD6AAAAAAAIAQk9AAAAAAAAAAAAAAAAAAAAABMA9wAAAAYiACkAAAAAAAAAAAD///8AAPkAAAAkAAAAAACiAGxpbWl0YW739/f3Y2VzdG9yc2lSemUAAAAmAKMAAP9kZQBi4nUxZ2xvZ2ZpbGUAJgD/AA==\" | base64 --decode > tx_pool-bbe7bc3c2a6d0cb1a21c48506cd16fdb807ae3cf.crash\r\n$ FUZZ=tx_pool ./src/test/fuzz/fuzz tx_pool-bbe7bc3c2a6d0cb1a21c48506cd16fdb807ae3cf.crash\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 1136977254\r\nINFO: Loaded 1 modules   (572973 inline 8-bit counters): 572973 [0x563877bfae70, 0x563877c86c9d), \r\nINFO: Loaded 1 PC tables (572973 PCs): 572973 [0x563877c86ca0,0x563878544f70), \r\n/workdir/fuzz_bins/fuzz_libfuzzer: Running 1 inputs 1 time(s) each.\r\nRunning: /workdir/crashes/crash-bbe7bc3c2a6d0cb1a21c48506cd16fdb807ae3cf\r\ntest/fuzz/tx_pool.cpp:114 Finish: Assertion `entry.GetModFeesWithDescendants() > 0' failed.\r\n==1877== ERROR: libFuzzer: deadly signal\r\n    #0 0x5638764b4c88 in __sanitizer_print_stack_trace (/workdir/fuzz_bins/fuzz_libfuzzer+0x14b4c88) (BuildId: 7fbfcc32a58adde3cb3dcfe8229731b5bb30d71d)\r\n    #1 0x56387648c04c in fuzzer::PrintStackTrace() crtstuff.c\r\n    #2 0x563876471e67 in fuzzer::Fuzzer::CrashCallback() crtstuff.c\r\n    #3 0x7f168cc0850f  (/lib/x86_64-linux-gnu/libc.so.6+0x3c50f) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #4 0x7f168cc560fb  (/lib/x86_64-linux-gnu/libc.so.6+0x8a0fb) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #5 0x7f168cc08471 in raise (/lib/x86_64-linux-gnu/libc.so.6+0x3c471) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #6 0x7f168cbf24b1 in abort (/lib/x86_64-linux-gnu/libc.so.6+0x264b1) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #7 0x5638778c6167 in assertion_fail(std::basic_string_view<char, std::char_traits<char>>, int, std::basic_string_view<char, std::char_traits<char>>, std::basic_string_view<char, std::char_traits<char>>) check.cpp\r\n    #8 0x56387682def1 in (anonymous namespace)::Finish(FuzzedDataProvider&, (anonymous namespace)::MockedTxPool&, Chainstate&) tx_pool.cpp\r\n    #9 0x563876832e79 in (anonymous namespace)::tx_pool_fuzz_target(Span<unsigned char const>) tx_pool.cpp\r\n    #10 0x5638768972c7 in LLVMFuzzerTestOneInput fuzz.cpp\r\n    #11 0x563876473334 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) crtstuff.c\r\n    #12 0x56387645c263 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) crtstuff.c\r\n    #13 0x563876461e86 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) crtstuff.c\r\n    #14 0x56387648c9d6 in main crtstuff.c\r\n    #15 0x7f168cbf36c9  (/lib/x86_64-linux-gnu/libc.so.6+0x276c9) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #16 0x7f168cbf3784 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x27784) (BuildId: 8a1bf172e710f8ca0c1576912c057b45f90d90d8)\r\n    #17 0x563876456cd0 in _start (/workdir/fuzz_bins/fuzz_libfuzzer+0x1456cd0) (BuildId: 7fbfcc32a58adde3cb3dcfe8229731b5bb30d71d)\r\n\r\nNOTE: libFuzzer has rudimentary signal handlers.\r\n      Combine libFuzzer with AddressSanitizer or similar for better crash reports.\r\nSUMMARY: libFuzzer: deadly signal\r\n```",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1828351782",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T21:21:50Z",
      "updated_at": "2023-11-27T21:21:50Z",
      "source": {
        "issue": {
          "id": 1995651017,
          "node_id": "PR_kwDOABII585fkNjm",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28886/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28886",
          "number": 28886,
          "state": "open",
          "state_reason": null,
          "title": "refactor: Replace sets of txiter with CTxMemPoolEntryRefs",
          "body": "Currently the mempool returns and consumes sets of multiindex iterators in its public API. A likely motivation for this over working with references to the actual values is that the multi index interface works with these iterators and not with pointers or references to the actual values.\r\n\r\nHowever, using the iterator type in the `setEntries` set provides little benefit in practice as applied currently. Its purpose, ownership, and safety semantics often remain ambiguous, and it is hardly used for actually iterating through the data structures. So replace it where possible with `CTxMemPoolEntryRef`s.\r\n\r\nSince `CTxMemPoolEntry` itself refers to its Parents and Children by `CTxMemPoolEntryRef` and not `txiter`, this allowed for an overall reduction of calls to `iterator_to`. See the [docs](https://www.boost.org/doc/libs/1_83_0/libs/multi_index/doc/tutorial/indices.html#iterator_to) on `iterator_to` for more guidance.\r\n\r\nNo change in the performance of the mempool code was observed in my benchmarks.\r\n\r\nThis also makes the goal of eliminating boost types from the headers as done in https://github.com/bitcoin/bitcoin/pull/28335 more feasible.\r\n",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 13,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28886",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28886",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28886.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28886.patch"
          },
          "created_at": "2023-11-15T22:07:32Z",
          "updated_at": "2023-12-07T20:39:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T21:53:19Z",
      "updated_at": "2023-11-27T21:53:19Z",
      "source": {
        "issue": {
          "id": 1954053513,
          "node_id": "PR_kwDOABII585dXq6y",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28690/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28690",
          "number": 28690,
          "state": "open",
          "state_reason": null,
          "title": "build: Introduce internal kernel library",
          "body": "This PR introduces a new `libbitcoin_kernel` internal library. It completes the internal library design as laid out in [doc/design/libraries.md](https://github.com/bitcoin/bitcoin/blob/master/doc/design/libraries.md). The external `libbitcoinkernel` library now uses the source lists of the internal library for its compilation.\r\n\r\nShould also address https://github.com/bitcoin/bitcoin/issues/28548.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 61889416,
              "node_id": "MDU6TGFiZWw2MTg4OTQxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Build%20system",
              "name": "Build system",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 22,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28690",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28690",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28690.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28690.patch"
          },
          "created_at": "2023-10-20T11:01:03Z",
          "updated_at": "2023-12-07T21:08:29Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-27T22:31:20Z",
      "updated_at": "2023-11-27T22:31:20Z",
      "source": {
        "issue": {
          "id": 1864447692,
          "node_id": "PR_kwDOABII585YqB5K",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28335/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28335",
          "number": 28335,
          "state": "open",
          "state_reason": null,
          "title": "RFC: Remove boost usage from kernel api / headers",
          "body": "Similarly to #28327 I wanted to open this PR to receive some opinions and better approaches.\r\n\r\nThe kernel library is currently at the stage where unwanted headers are removed from its set of headers. In practice, this means we are reducing the number of includes that are required for compiling the experimental `bitcoin-chainstate` binary. This is described in stage 1 step 3 of the [project tracking issue](https://github.com/bitcoin/bitcoin/issues/27587).\r\n\r\nCurrently the mempool is part of the kernel library. The mempool headers include the boost multi index headers. Thus any application wanting to use the kernel library and its headers will have to include the boost headers too. This is not only undesirable because of the sheer size of these headers, but also might lead to conflicts if the including application uses a different boost version.\r\n\r\nIn the approach laid out by this PR, mempool member variables and methods are declared in the header without having to include boost by either wrapping them in a struct and [pimpling](https://en.cppreference.com/w/cpp/language/pimpl) them, or making methods static implementation functions. The boost definitions are gathered into separate header (`mempool_set_definitions.h`) that is only included by implementation files that require definitions of the boost types. This allows us to retain the current architecture with roughly the same interfaces. \r\n\r\nThe approach laid out by this PR also has some, albeit small, compilation speed and size benefits. Averaged over a few of compilation runs I consistently observe faster compilation by a couple of seconds and some smaller pre-processed and compiled object sizes. The main detractor of this method is obviously the number of lines touched. However it also has the benefit of inventorizing all the files that require direct access to the mempool data structures as well getting rid of boost multi index includes in non-kernel implementation files that include the mempool, but don't directly manipulate its data structures (e.g. wallet.cpp).\r\n\r\nA much simpler alternative approach, at least on the surface, would be removing all `txmempool.h` includes from kernel library headers (see [this branch](https://github.com/TheCharlatan/bitcoin/tree/mempoolBoostSimple)). Currently this is only `validation.h`.  Due to the mutex member of `CTxMemPool` and the correspondingly defined lock decorators on the chainstate methods this becomes a bit more complicated though and I am not sure how this might be possible with the current architecture.\r\n\r\nA discussion of how and if to remove the mempool from the kernel library has so far been intentionally punted to the next stage of the kernel library development. Pimpling the mempool itself precludes this discussion, since the library could never be shipped with the `CTxMemPool` headers. Pimpling the mempool members (like done in this PR) might also make a future splitting of block and mempool validation logic into separate compilation units easier.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 12,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28335",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28335",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28335.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28335.patch"
          },
          "created_at": "2023-08-24T05:46:16Z",
          "updated_at": "2023-12-01T21:17:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1828842996,
      "node_id": "IC_kwDOABII585tAe30",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828842996",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-28T00:07:13Z",
      "updated_at": "2023-11-28T00:07:13Z",
      "author_association": "MEMBER",
      "body": "> Even though we don't have cluster limits, we are able to treat these transactions as having as having a maximum cluster size of 2. \r\n\r\nI don’t think adopting cluster limits instead of max ancestors / descendants limits change anything for V3 packages. What matters is the overall weight limit of the package (4000 WU for a child), as this limit draws an anti-pinning security bound on the lowest off-chain payment that one can afford to burn as an absolute fee . Limit to be evaluated in function of network mempools congestion. Removing the absolute fee replacement rules I think would simplify current pinning analysis - though sounds this is beyond the scope of this proposal.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1828842996",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11086372593,
      "node_id": "HRFPE_lADOABII58539HF9zwAAAAKUzJ7x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11086372593",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-28T17:01:37Z"
    },
    {
      "event": "reviewed",
      "id": 1753556814,
      "node_id": "PRR_kwDOABII585ohSdO",
      "url": null,
      "actor": null,
      "commit_id": "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#pullrequestreview-1753556814",
      "submitted_at": "2023-11-28T18:02:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
    },
    {
      "event": "reviewed",
      "id": 1753714068,
      "node_id": "PRR_kwDOABII585oh42U",
      "url": null,
      "actor": null,
      "commit_id": "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#pullrequestreview-1753714068",
      "submitted_at": "2023-11-28T19:19:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T03:28:20Z",
      "updated_at": "2023-11-29T03:28:20Z",
      "source": {
        "issue": {
          "id": 1958204865,
          "node_id": "PR_kwDOABII585dlfBo",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28710/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
          "number": 28710,
          "state": "open",
          "state_reason": null,
          "title": "Remove the legacy wallet and BDB dependency",
          "body": "The final step of #20160.\r\n\r\nA bare minimum of legacy wallet code is kept in order to perform wallet migration. Migration of legacy wallets uses the independent BDB parser and a minimal `LegacyDataSPKM` that allows the legacy data to be loaded so that the migration can be completed.\r\n\r\nAll tests which tested legacy wallet behavior have been removed. The `--descriptors` and `--legacy-wallet` options are removed from the functional tests.\r\n\r\nBDB has been removed as a dependency and documentation have been updated to reflect that.\r\n\r\nDepends on #26596",
          "user": {
            "login": "achow101",
            "id": 3782274,
            "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achow101",
            "html_url": "https://github.com/achow101",
            "followers_url": "https://api.github.com/users/achow101/followers",
            "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
            "organizations_url": "https://api.github.com/users/achow101/orgs",
            "repos_url": "https://api.github.com/users/achow101/repos",
            "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/achow101/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28710",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28710",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28710.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28710.patch"
          },
          "created_at": "2023-10-23T23:36:07Z",
          "updated_at": "2023-11-30T17:45:23Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11094965004,
      "node_id": "HRFPE_lADOABII58539HF9zwAAAAKVT7sM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11094965004",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T11:12:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11095534697,
      "node_id": "HRFPE_lADOABII58539HF9zwAAAAKVWGxp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11095534697",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T12:07:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11096399343,
      "node_id": "HRFPE_lADOABII58539HF9zwAAAAKVZZ3v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11096399343",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T13:26:20Z"
    },
    {
      "event": "unlabeled",
      "id": 11097038242,
      "node_id": "UNLE_lADOABII58539HF9zwAAAAKVb12i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11097038242",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T14:17:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1832044826,
      "node_id": "IC_kwDOABII585tMska",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832044826",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T14:51:35Z",
      "updated_at": "2023-11-29T14:51:35Z",
      "author_association": "MEMBER",
      "body": "CI is green. I've added a rule for maximum sigops and updated the doc.\r\n(cc @sdaftuar)",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1832044826",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "mentioned",
      "id": 11097497748,
      "node_id": "MEE_lADOABII58539HF9zwAAAAKVdmCU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11097497748",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T14:51:36Z"
    },
    {
      "event": "subscribed",
      "id": 11097497769,
      "node_id": "SE_lADOABII58539HF9zwAAAAKVdmCp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11097497769",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T14:51:36Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T15:19:42Z",
      "updated_at": "2023-11-29T15:19:42Z",
      "source": {
        "issue": {
          "id": 2014832404,
          "node_id": "PR_kwDOABII585gk1DX",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28960/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28960",
          "number": 28960,
          "state": "open",
          "state_reason": null,
          "title": "kernel: Remove dependency on CScheduler",
          "body": "By defining a virtual interface class for the scheduler client, users of the kernel can now define their own event consuming infrastructure, without having to spawn threads or rely on the scheduler design.\r\n\r\nRemoving `CScheduler` also allows removing the thread and exception modules from the kernel library. \r\n\r\nTo make the `CMainSignals` class easier to use from a kernel library perspective, remove its global instantiation and adopt RAII practices.\r\n\r\n---\r\n\r\nThis PR is part of the [libbitcoinkernel project](https://github.com/bitcoin/bitcoin/issues/27587). It improves the kernel API and removes two modules from the kernel library.",
          "user": {
            "login": "TheCharlatan",
            "id": 8421793,
            "node_id": "MDQ6VXNlcjg0MjE3OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheCharlatan",
            "html_url": "https://github.com/TheCharlatan",
            "followers_url": "https://api.github.com/users/TheCharlatan/followers",
            "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
            "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
            "repos_url": "https://api.github.com/users/TheCharlatan/repos",
            "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": false,
          "comments": 7,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28960",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28960",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28960.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28960.patch"
          },
          "created_at": "2023-11-28T16:27:42Z",
          "updated_at": "2023-12-09T16:19:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1756044862,
      "node_id": "PRR_kwDOABII585oqx4-",
      "url": null,
      "actor": null,
      "commit_id": "fc62757320f216a8adf45726eeca121e13d6c39e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#pullrequestreview-1756044862",
      "submitted_at": "2023-11-29T19:21:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
    },
    {
      "event": "reviewed",
      "id": 1756063055,
      "node_id": "PRR_kwDOABII585oq2VP",
      "url": null,
      "actor": null,
      "commit_id": "fc62757320f216a8adf45726eeca121e13d6c39e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#pullrequestreview-1756063055",
      "submitted_at": "2023-11-29T19:32:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
    },
    {
      "event": "reviewed",
      "id": 1756128156,
      "node_id": "PRR_kwDOABII585orGOc",
      "url": null,
      "actor": null,
      "commit_id": "22ce995d0b4fbf697596738503a429de5a057c0e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#pullrequestreview-1756128156",
      "submitted_at": "2023-11-29T20:09:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
    },
    {
      "event": "reviewed",
      "id": 1756038415,
      "node_id": "PRR_kwDOABII585oqwUP",
      "url": null,
      "actor": null,
      "commit_id": "d9ebb11fe28e761df585c38d600bb0c4453a0e86",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#pullrequestreview-1756038415",
      "submitted_at": "2023-11-29T20:10:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
    },
    {
      "event": "commented",
      "id": 1832669087,
      "node_id": "IC_kwDOABII585tPE-f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832669087",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-29T20:41:29Z",
      "updated_at": "2023-11-29T20:41:29Z",
      "author_association": "MEMBER",
      "body": "Did a first pass review -- concept ACK.  \r\n\r\nAlso I think we should resurrect #27018 so that we will mine everything in the mempool, but that doesn't need to be in this PR (and probably isn't strictly necessary either).",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1832669087",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "reviewed",
      "id": 1756174839,
      "node_id": "PRR_kwDOABII585orRn3",
      "url": null,
      "actor": null,
      "commit_id": "fc62757320f216a8adf45726eeca121e13d6c39e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#pullrequestreview-1756174839",
      "submitted_at": "2023-11-29T20:42:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T15:19:26Z",
      "updated_at": "2023-11-30T15:19:26Z",
      "source": {
        "issue": {
          "id": 2018896655,
          "node_id": "PR_kwDOA6aTl85gyu0m",
          "url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/3",
          "repository_url": "https://api.github.com/repos/pinheadmz/bitcoin",
          "labels_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/3/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/3/comments",
          "events_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/3/events",
          "html_url": "https://github.com/pinheadmz/bitcoin/pull/3",
          "number": 3,
          "state": "closed",
          "state_reason": null,
          "title": "V3 policy",
          "body": "see https://github.com/bitcoin/bitcoin/pull/28948",
          "user": {
            "login": "pinheadmz",
            "id": 2084648,
            "node_id": "MDQ6VXNlcjIwODQ2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pinheadmz",
            "html_url": "https://github.com/pinheadmz",
            "followers_url": "https://api.github.com/users/pinheadmz/followers",
            "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
            "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
            "repos_url": "https://api.github.com/users/pinheadmz/repos",
            "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "OWNER",
          "locked": false,
          "comments": 0,
          "pull_request": {
            "url": "https://api.github.com/repos/pinheadmz/bitcoin/pulls/3",
            "html_url": "https://github.com/pinheadmz/bitcoin/pull/3",
            "diff_url": "https://github.com/pinheadmz/bitcoin/pull/3.diff",
            "patch_url": "https://github.com/pinheadmz/bitcoin/pull/3.patch"
          },
          "closed_at": "2023-12-05T15:03:56Z",
          "created_at": "2023-11-30T15:19:25Z",
          "updated_at": "2023-12-05T15:03:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-30T19:30:15Z",
      "updated_at": "2023-11-30T19:30:15Z",
      "source": {
        "issue": {
          "id": 2018689496,
          "node_id": "PR_kwDOABII585gyBK5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28972",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28972/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28972/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28972/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28972",
          "number": 28972,
          "state": "open",
          "state_reason": null,
          "title": "test: Add and use option for tx-version in MiniWallet methods",
          "body": "Fixes https://github.com/bitcoin/bitcoin/pull/26657#discussion_r1071362636 by adding a `version` keyword-argument to `create_self_transfer_multi`, and by passing it via `kwargs` from all other methods.",
          "user": {
            "login": "maflcko",
            "id": 6399679,
            "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maflcko",
            "html_url": "https://github.com/maflcko",
            "followers_url": "https://api.github.com/users/maflcko/followers",
            "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
            "organizations_url": "https://api.github.com/users/maflcko/orgs",
            "repos_url": "https://api.github.com/users/maflcko/repos",
            "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/maflcko/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 2,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28972",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28972",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28972.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28972.patch"
          },
          "created_at": "2023-11-30T13:37:17Z",
          "updated_at": "2023-12-05T20:45:37Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1835850051,
      "node_id": "IC_kwDOABII585tbNlD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1835850051",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-01T10:30:49Z",
      "updated_at": "2023-12-01T10:30:49Z",
      "author_association": "MEMBER",
      "body": "```\r\n$ echo \"jtHRO///YED/AAD/AAABCQAAgQAN/wAAAQAALAEB/QAAAAAJAAAAAAAAAAAAAAAA+GwAAPAV/v8BkAEicG9vcyYANwAAAAEBADsBAQHo/v7+bv4RAQEBkQABAQE3CTsBIQEBAQEBAAEBATcAACYKAAQBAf8BAQEBAQEBCAABAQEBfgEAAQEBCgAAADsBAQEBAQEB/v8BJgABQQE3AAAAAAFBATcAAAAA8AAAAQEBAQEBAQEBCAABLgEBAX4BAAE=\" | base64 --decode > tx_package_eval-81b8ec0e06b86811790d61f69fe27701ca0c8305.crash\r\n$ FUZZ=tx_package_eval ./src/test/fuzz/fuzz tx_package_eval-81b8ec0e06b86811790d61f69fe27701ca0c8305.crash\r\ntest/fuzz/package_eval.cpp:320 tx_package_eval_fuzz_target: Assertion `entry.GetModFeesWithDescendants() > 0' \r\n```",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1835850051",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-02T01:14:48Z",
      "updated_at": "2023-12-02T01:14:48Z",
      "source": {
        "issue": {
          "id": 2021654832,
          "node_id": "PR_kwDOABII585g8KkU",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28984/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28984",
          "number": 28984,
          "state": "open",
          "state_reason": null,
          "title": "Cluster size 2 package rbf",
          "body": "Allows any 2 transaction package with no in-mempool ancestors to do package RBF.\r\n\r\nSlightly alternative approach to https://github.com/bitcoin/bitcoin/pull/25038 in that it decouples the feature from V3, *except* in that if/when v3 packages are being conflicted *against*, we can use this information to do better by comparing actualy miner scores.\r\n\r\nPost-cluster mempool this will likely be expanded to general package rbf, but this is what we can safely support today.\r\n",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28984",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28984",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28984.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28984.patch"
          },
          "created_at": "2023-12-01T22:12:06Z",
          "updated_at": "2023-12-08T21:48:58Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1837780398,
      "node_id": "IC_kwDOABII585tik2u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1837780398",
      "actor": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-04T03:26:01Z",
      "updated_at": "2023-12-04T03:32:56Z",
      "author_association": "MEMBER",
      "body": "> Also I think we should resurrect https://github.com/bitcoin/bitcoin/pull/27018 so that we will mine everything in the mempool, but that doesn't need to be in this PR (and probably isn't strictly necessary either).\r\n\r\nI don’t know about automatically flushing out <= 0 fees even when the local mempool is empty. One could add significant computing payload on its mining competitors by throwing buffy packages with 0 fees parent and then replace the high-fee child (in a cycle). A more robust approach can be to let those 0 fees parent sleep in the local non-full mempool, and only evict them when you have non-0 fees transactions showing up. The asymmetry between the additional computational cost to flush out automatically and the rbf penalty paid sounds to be at the advantage of a potential denial-of-service attacker (edited).",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1837780398",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "commented",
      "id": 1838855510,
      "node_id": "IC_kwDOABII585tmrVW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1838855510",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-04T15:14:07Z",
      "updated_at": "2023-12-04T15:14:07Z",
      "author_association": "MEMBER",
      "body": "> I don’t know about automatically flushing out <= 0 fees even when the local mempool is empty. One could add significant computing payload on its mining competitors by throwing buffy packages with 0 fees parent and then replace the high-fee child (in a cycle). \r\n\r\nThe replacements are paying for those CPU cycles and bandwidth via \"incremental feerate\", it's equivalent to an entire package simply being RBF'd like normal. Keeping 0-fee parents hanging around in mempool would also allow new entries into the mempool that will never be mined. See https://github.com/bitcoin/bitcoin/pull/26933 for historical discussion. Post-cluster mempool maybe that isn't the case anymore.\r\n\r\nIt also neatly allows ephemeral anchors to be ejected from the mempool if it has no children.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1838855510",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "reviewed",
      "id": 1763610776,
      "node_id": "PRR_kwDOABII585pHpCY",
      "url": null,
      "actor": null,
      "commit_id": "d9ebb11fe28e761df585c38d600bb0c4453a0e86",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "[Edit]: Got confused about something yesterday, removed this point.\r\n\r\nAs a side effect, I think this will allow users to remove select entries from their non-full mempool by prioritizing to large negative values (so basically a poor man's  [removemempoolentry](https://github.com/bitcoin/bitcoin/pull/15873)).",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#pullrequestreview-1763610776",
      "submitted_at": "2023-12-04T23:09:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJiOTc5ZjRjNzZmNGY0ZjQzNTdhMDg2NzRkZjgzM2E1Y2M2ZGNmODI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb979f4c76f4f4f4357a08674df833a5cc6dcf82",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bb979f4c76f4f4f4357a08674df833a5cc6dcf82",
      "tree": {
        "sha": "2f1e6c586c865c51821e5c5a6413a81d01a38084",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f1e6c586c865c51821e5c5a6413a81d01a38084"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c8893bd1c80043ee47e0dd9b63b09bb65d25fa2",
          "sha": "1c8893bd1c80043ee47e0dd9b63b09bb65d25fa2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1c8893bd1c80043ee47e0dd9b63b09bb65d25fa2"
        }
      ],
      "message": "[mempool] evict everything paying 0 fees in TrimToSize()\n\nAt this point it's not expected that there are any such transactions,\nexcept from reorgs.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-12-05T05:04:31Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-11-10T13:51:39Z"
      },
      "sha": "bb979f4c76f4f4f4357a08674df833a5cc6dcf82"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ3MmJhM2Q1MzU3MGQyZDkyMWUwMTE2MjQwYzkwOGMxNzhjZTVkMDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d72ba3d53570d2d921e0116240c908c178ce5d04",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d72ba3d53570d2d921e0116240c908c178ce5d04",
      "tree": {
        "sha": "382872e955baf068d639d4347cfd3c9ccf50ed6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/382872e955baf068d639d4347cfd3c9ccf50ed6d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb979f4c76f4f4f4357a08674df833a5cc6dcf82",
          "sha": "bb979f4c76f4f4f4357a08674df833a5cc6dcf82",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bb979f4c76f4f4f4357a08674df833a5cc6dcf82"
        }
      ],
      "message": "[refactor] change Workspace::m_conflicts and adjacent funcs/structs to use Txid\n\nIt's preferable to use type-safe transaction identifiers to avoid\nconfusing txid and wtxid. The next commit will add a reference to this\nset; we use this opportunity to change it to Txid ahead of time instead\nof adding new uses of uint256.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-12-05T05:04:31Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-11-27T16:29:59Z"
      },
      "sha": "d72ba3d53570d2d921e0116240c908c178ce5d04"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIzOWNkZmJkNGM4OGFkYzIwNjA4NDFmNDlhNmNhYWY3ZTUyMDJjODI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b39cdfbd4c88adc2060841f49a6caaf7e5202c82",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b39cdfbd4c88adc2060841f49a6caaf7e5202c82",
      "tree": {
        "sha": "fba8761a8af27b90fc87cc96b90e7718c0b04bc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fba8761a8af27b90fc87cc96b90e7718c0b04bc5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d72ba3d53570d2d921e0116240c908c178ce5d04",
          "sha": "d72ba3d53570d2d921e0116240c908c178ce5d04",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d72ba3d53570d2d921e0116240c908c178ce5d04"
        }
      ],
      "message": "[policy] policy rules for nVersion=3",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-12-05T05:04:31Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-07-05T12:14:08Z"
      },
      "sha": "b39cdfbd4c88adc2060841f49a6caaf7e5202c82"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ1NTdlNTRjOTBiODU0NGI5ZDA3MWY0MzUzNDY4ZmRlYTFlYTY0ZTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4557e54c90b8544b9d071f4353468fdea1ea64e3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4557e54c90b8544b9d071f4353468fdea1ea64e3",
      "tree": {
        "sha": "c2325c3063e4017126152bc33e5b8148a884a291",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c2325c3063e4017126152bc33e5b8148a884a291"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b39cdfbd4c88adc2060841f49a6caaf7e5202c82",
          "sha": "b39cdfbd4c88adc2060841f49a6caaf7e5202c82",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b39cdfbd4c88adc2060841f49a6caaf7e5202c82"
        }
      ],
      "message": "[validation] allow V3 transactions under certain conditions",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-12-05T05:23:01Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-07-05T13:13:21Z"
      },
      "sha": "4557e54c90b8544b9d071f4353468fdea1ea64e3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1YTk5ZmVhNmQxNWNjMzUwNzhmZWQwZjM4NzVkZDcyYTBlNGFmYmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95a99fea6d15cc35078fed0f3875dd72a0e4afbd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/95a99fea6d15cc35078fed0f3875dd72a0e4afbd",
      "tree": {
        "sha": "e8a8ff1c4847c5c6421d5a8b51dd665bae0c94c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8a8ff1c4847c5c6421d5a8b51dd665bae0c94c2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4557e54c90b8544b9d071f4353468fdea1ea64e3",
          "sha": "4557e54c90b8544b9d071f4353468fdea1ea64e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4557e54c90b8544b9d071f4353468fdea1ea64e3"
        }
      ],
      "message": "[policy] allow individual v3 txns to be below min relay feerate\n\nAs long as they are otherwise paid for, i.e. through package CPFP.\nIf a v3 transaction loses its sponsor, we can evict them with no trouble\nbecause it will not have other descendants or ancestors to make the\nfeerate assessment more complicated.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-12-05T05:23:01Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-01-17T13:43:27Z"
      },
      "sha": "95a99fea6d15cc35078fed0f3875dd72a0e4afbd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEwNGIzZDM5ZjQxNmQyMGFiNDk2ZDc1M2FmYmU3ZTRkMzE5MDIwNjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/104b3d39f416d20ab496d753afbe7e4d31902065",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/104b3d39f416d20ab496d753afbe7e4d31902065",
      "tree": {
        "sha": "f6919e0ccdfe21a1a71b3b9ffeb4acf187f4998a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6919e0ccdfe21a1a71b3b9ffeb4acf187f4998a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95a99fea6d15cc35078fed0f3875dd72a0e4afbd",
          "sha": "95a99fea6d15cc35078fed0f3875dd72a0e4afbd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/95a99fea6d15cc35078fed0f3875dd72a0e4afbd"
        }
      ],
      "message": "[test framework] parameterize version in create_self_transfer",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-12-05T05:23:01Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-08-31T15:50:09Z"
      },
      "sha": "104b3d39f416d20ab496d753afbe7e4d31902065"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzNzc3ZTE5YWNkOWNiYWMyYzc4OWM2NDdlZTZlMThkYjRiYmI1MDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23777e19acd9cbac2c789c647ee6e18db4bbb509",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/23777e19acd9cbac2c789c647ee6e18db4bbb509",
      "tree": {
        "sha": "8d219867305becf95cb86844a38355ac52702bf7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d219867305becf95cb86844a38355ac52702bf7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/104b3d39f416d20ab496d753afbe7e4d31902065",
          "sha": "104b3d39f416d20ab496d753afbe7e4d31902065",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/104b3d39f416d20ab496d753afbe7e4d31902065"
        }
      ],
      "message": "[functional test] v3 transaction submission",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-12-05T05:23:01Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-08-31T14:38:42Z"
      },
      "sha": "23777e19acd9cbac2c789c647ee6e18db4bbb509"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1MWRiOTUyYjU2MWYxMzA1Nzc2NzljNjUwOTIxYjg2MmE0NWYwNWE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/951db952b561f130577679c650921b862a45f05a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/951db952b561f130577679c650921b862a45f05a",
      "tree": {
        "sha": "f382233501bc05766ee97182a821ba0d32f04bcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f382233501bc05766ee97182a821ba0d32f04bcc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23777e19acd9cbac2c789c647ee6e18db4bbb509",
          "sha": "23777e19acd9cbac2c789c647ee6e18db4bbb509",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/23777e19acd9cbac2c789c647ee6e18db4bbb509"
        }
      ],
      "message": "[doc] v3 policy",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-12-05T05:23:01Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2022-04-29T23:42:18Z"
      },
      "sha": "951db952b561f130577679c650921b862a45f05a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRmY2U1MTY4MGNlZjViMmNkZTc1MWJjMDg4ZDJmZjYwODVmMWNmMjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "tree": {
        "sha": "a0a6c40a00ef1731517bc8eea9b37a528452e37c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0a6c40a00ef1731517bc8eea9b37a528452e37c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/951db952b561f130577679c650921b862a45f05a",
          "sha": "951db952b561f130577679c650921b862a45f05a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/951db952b561f130577679c650921b862a45f05a"
        }
      ],
      "message": "[fuzz] v3 transactions",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-12-05T05:23:01Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-11-27T16:13:33Z"
      },
      "sha": "4fce51680cef5b2cde751bc088d2ff6085f1cf29"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11148020860,
      "node_id": "HRFPE_lADOABII58539HF9zwAAAAKYeUx8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11148020860",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T05:26:04Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-05T16:30:47Z",
      "updated_at": "2023-12-05T16:30:47Z",
      "source": {
        "issue": {
          "id": 2026622135,
          "node_id": "PR_kwDOABII585hM4GJ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29001",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29001/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29001/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29001/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/29001",
          "number": 29001,
          "state": "open",
          "state_reason": null,
          "title": "Ephemeral Anchors",
          "body": "Depends on https://github.com/bitcoin/bitcoin/pull/28948 and https://github.com/bitcoin/bitcoin/pull/28984\r\n\r\nReplaces https://github.com/bitcoin/bitcoin/pull/26403 to refresh the conversation.\r\n\r\nBIP text here: https://github.com/instagibbs/bips/blob/ephemeral_anchor/bip-ephemeralanchors.mediawiki\r\n\r\nExample usage:\r\nhttps://github.com/instagibbs/bolts/commits/zero_fee_commitment\r\nhttps://github.com/instagibbs/lightning/commits/commit_zero_fees\r\n\r\nTODO:\r\n1) figure out what precisely to do in a reorg when ephemeral transactions are trying to enter the mempool(and write a test)",
          "user": {
            "login": "instagibbs",
            "id": 5767891,
            "node_id": "MDQ6VXNlcjU3Njc4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/instagibbs",
            "html_url": "https://github.com/instagibbs",
            "followers_url": "https://api.github.com/users/instagibbs/followers",
            "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
            "organizations_url": "https://api.github.com/users/instagibbs/orgs",
            "repos_url": "https://api.github.com/users/instagibbs/repos",
            "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/instagibbs/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 1,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29001",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/29001",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/29001.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/29001.patch"
          },
          "created_at": "2023-12-05T16:30:46Z",
          "updated_at": "2023-12-07T20:02:56Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 1842795172,
      "node_id": "IC_kwDOABII585t1tKk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1842795172",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-06T12:44:41Z",
      "updated_at": "2023-12-06T12:44:41Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1842795172",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "commented",
      "id": 1845689097,
      "node_id": "IC_kwDOABII585uAvsJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1845689097",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T16:49:10Z",
      "updated_at": "2023-12-07T16:49:10Z",
      "author_association": "MEMBER",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1835850051\r\n\r\n`LimitMempoolSize` is only called upon successful transaction inclusions, so a v3 tx that is negatively prioritized later may not be evicted yet.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#issuecomment-1845689097",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28948"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-07T21:11:33Z",
      "updated_at": "2023-12-07T21:11:33Z",
      "source": {
        "issue": {
          "id": 1950437953,
          "node_id": "PR_kwDOABII585dLamZ",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28676/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
          "number": 28676,
          "state": "open",
          "state_reason": null,
          "title": "[WIP] Cluster mempool implementation",
          "body": "This is a draft implementation of the cluster mempool design described in #27677.  I'm opening this as a draft PR now to share the branch I'm working on with others, so that we can start to think about in-progress projects (like package relay, package validation, and package rbf) in the context of this design.  Also, I can use some help from others for parts of this work, including the interaction between the mempool and the wallet, and also reworking some of our existing test cases to fit a cluster-mempool world.\r\n\r\nNote that the design of this implementation is subject to change as I continue to iterate on the code (to make the code more hygienic and robust, in particular). At this point though I think the performance is pretty reasonable and I'm not currently aware of any bugs.  There are some microbenchmarks added here, and some improved fuzz tests; it would be great if others ran both of those on their own hardware as well and reported back on any findings.\r\n\r\nThis branch implements the following observable behavior changes:\r\n\r\n- Maintains a partitioning of the mempool into connected clusters\r\n- Each cluster is sorted (\"linearized\") either using an optimal sort, or an ancestor-feerate-based one, depending on the size of the cluster (thanks to @sipa for this logic)\r\n- Transaction selection for mining is updated to use the cluster linearizations\r\n- Mempool eviction is updated to use the cluster linearizations\r\n- The RBF rules are updated to drop the requirement that no new inputs are introduced, and to change the feerate requirement to instead check that the mining score of a replacement transaction exceed the mining score of the conflicted transactions\r\n- The CPFP carveout rule is eliminated (it doesn't make sense in a cluster-limited mempool)\r\n- The ancestor and descendant limits are no longer enforced.\r\n- New cluster count/cluster vsize limits are now enforced instead.\r\n\r\nSome less observable behavior changes:\r\n- The cached ancestor and descendant data are dropped from the mempool, along with the multi_index indices that were maintained to sort the mempool by ancestor and descendant feerates. For compatibility (eg with wallet behavior or RPCs exposing this), this information is now calculated dynamically instead.\r\n- The ancestor and descendant walking algorithms are now implemented using `epoch`s (resulting in a significant performance improvement, according to the benchmarks I've looked at)\r\n\r\nStill to do:\r\n\r\n- [ ] More comparisons between this branch and master on historical data to compare validation speed (accepting loose transactions, processing RBF transactions, validating a block/postprocessing, updating the mempool for a reorg).\r\n- [ ] More historical data analysis to try to evaluate the likely impact of setting the cluster size limits to varying values (to motivate what values we should ultimately pick)\r\n- [ ] Updating wallet code to be cluster-aware (including mini_miner and coin selection)\r\n- [ ] Rework many of our functional tests to be cluster-aware\r\n- [ ] Figure out what package validation and package RBF rules should be in this design\r\n- [ ] Rework the `partially_downloaded_block` fuzz target to not add mempool transactions in a topologically-invalid way.\r\n- [ ] Update RBF logic to ensure that replacements always strictly improve the mempool.\r\n- [ ] Figure out how we want to document our RBF policy (preserve historical references to BIP 125 or previous Bitcoin Core behvaiors vs clean slate documentation?)\r\n\r\nFor discussion/feedback:\r\n\r\n - How significant is it to be dropping the CPFP carveout rule?  Does that affect how we will ultimately want to stage new mempool deployment?\r\n - How well do the proposed RBF rules meet everyone's use cases?\r\n - What design improvements can we make to the cluster tracking implementation?\r\n - The ZMQ callbacks that occur when a block is found will happen in a slightly different order, because we now will fully remove all transactions occurring in a block from the mempool before removing any conflicts. Is this a problem?",
          "user": {
            "login": "sdaftuar",
            "id": 7463573,
            "node_id": "MDQ6VXNlcjc0NjM1NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdaftuar",
            "html_url": "https://github.com/sdaftuar",
            "followers_url": "https://api.github.com/users/sdaftuar/followers",
            "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
            "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
            "repos_url": "https://api.github.com/users/sdaftuar/repos",
            "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 5,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28676",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28676",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28676.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28676.patch"
          },
          "created_at": "2023-10-18T18:59:37Z",
          "updated_at": "2023-12-08T22:44:25Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 1773907154,
      "node_id": "PRR_kwDOABII585pu6zS",
      "url": null,
      "actor": null,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#pullrequestreview-1773907154",
      "submitted_at": "2023-12-10T00:46:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406359885",
      "pull_request_review_id": 1750753834,
      "id": 1406359885,
      "node_id": "PRRC_kwDOABII585T01lN",
      "diff_hunk": "@@ -0,0 +1,59 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_V3_POLICY_H\n+#define BITCOIN_POLICY_V3_POLICY_H\n+\n+#include <consensus/amount.h>\n+#include <policy/packages.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <txmempool.h>\n+\n+#include <string>\n+\n+// This module enforces rules for transactions with nVersion=3 (\"V3 transactions\") which help make\n+// RBF abilities more robust.\n+\n+// V3 only allows 1 parent and 1 child.\n+/** Maximum number of transactions including an unconfirmed tx and its descendants. */\n+static constexpr unsigned int V3_DESCENDANT_LIMIT{2};\n+/** Maximum number of transactions including a V3 tx and all its mempool ancestors. */\n+static constexpr unsigned int V3_ANCESTOR_LIMIT{2};\n+\n+/** Maximum weight of a tx which spends from an unconfirmed V3 transaction. */\n+static constexpr int64_t V3_CHILD_MAX_WEIGHT{4000};\n+// Since these limits are within the default ancestor/descendant limits, there is no need to\n+// additionally check ancestor/descendant limits for V3 transactions.\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_ANCESTOR_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_DESCENDANT_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+\n+/** Any two unconfirmed transactions with a dependency relationship must either both be V3 or both\n+ * non-V3. Check this rule for any list of unconfirmed transactions.\n+ * @returns a tuple (parent wtxid, child wtxid, bool) where one is V3 but the other is not, if at\n+ * least one such pair exists. The bool represents whether the child is v3 or not. There may be\n+ * other such pairs that are not returned.\n+ * Otherwise std::nullopt.\n+ */\n+std::optional<std::tuple<uint256, uint256, bool>> CheckV3Inheritance(const Package& package);",
      "path": "src/policy/v3_policy.h",
      "position": null,
      "original_position": 39,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "18406ecbd5080864154c6a2fc756e6b96ff4caf0",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Use `Wtxid`?",
      "created_at": "2023-11-27T15:41:52Z",
      "updated_at": "2023-11-27T15:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406359885",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406359885"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406361767",
      "pull_request_review_id": 1750753834,
      "id": 1406361767,
      "node_id": "PRRC_kwDOABII585T02Cn",
      "diff_hunk": "@@ -0,0 +1,59 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_V3_POLICY_H\n+#define BITCOIN_POLICY_V3_POLICY_H\n+\n+#include <consensus/amount.h>\n+#include <policy/packages.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <txmempool.h>\n+\n+#include <string>\n+\n+// This module enforces rules for transactions with nVersion=3 (\"V3 transactions\") which help make\n+// RBF abilities more robust.\n+\n+// V3 only allows 1 parent and 1 child.\n+/** Maximum number of transactions including an unconfirmed tx and its descendants. */\n+static constexpr unsigned int V3_DESCENDANT_LIMIT{2};\n+/** Maximum number of transactions including a V3 tx and all its mempool ancestors. */\n+static constexpr unsigned int V3_ANCESTOR_LIMIT{2};\n+\n+/** Maximum weight of a tx which spends from an unconfirmed V3 transaction. */\n+static constexpr int64_t V3_CHILD_MAX_WEIGHT{4000};\n+// Since these limits are within the default ancestor/descendant limits, there is no need to\n+// additionally check ancestor/descendant limits for V3 transactions.\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_ANCESTOR_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_DESCENDANT_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+\n+/** Any two unconfirmed transactions with a dependency relationship must either both be V3 or both\n+ * non-V3. Check this rule for any list of unconfirmed transactions.\n+ * @returns a tuple (parent wtxid, child wtxid, bool) where one is V3 but the other is not, if at\n+ * least one such pair exists. The bool represents whether the child is v3 or not. There may be\n+ * other such pairs that are not returned.\n+ * Otherwise std::nullopt.\n+ */\n+std::optional<std::tuple<uint256, uint256, bool>> CheckV3Inheritance(const Package& package);\n+\n+/** Every transaction that spends an unconfirmed V3 transaction must also be V3. */\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors);\n+\n+/** The following rules apply to V3 transactions:\n+ * 1. Tx with all of its ancestors (including non-nVersion=3) must be within V3_ANCESTOR_SIZE_LIMIT_KVB.\n+ * 2. Tx with all of its ancestors must be within V3_ANCESTOR_LIMIT.\n+ *\n+ * If a V3 tx has V3 ancestors,\n+ * 1. Each V3 ancestor and its descendants must be within V3_DESCENDANT_LIMIT.\n+ * 2. The tx must be within V3_CHILD_MAX_SIZE.\n+ *\n+ * @returns an error string if any V3 rule was violated, otherwise std::nullopt.\n+ */\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<uint256>& direct_conflicts);",
      "path": "src/policy/v3_policy.h",
      "position": null,
      "original_position": 57,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "18406ecbd5080864154c6a2fc756e6b96ff4caf0",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Are these txids/wtxids?",
      "created_at": "2023-11-27T15:42:53Z",
      "updated_at": "2023-11-27T15:52:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406361767",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406361767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406442920",
      "pull_request_review_id": 1750885461,
      "id": 1406442920,
      "node_id": "PRRC_kwDOABII585T1J2o",
      "diff_hunk": "@@ -0,0 +1,59 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_V3_POLICY_H\n+#define BITCOIN_POLICY_V3_POLICY_H\n+\n+#include <consensus/amount.h>\n+#include <policy/packages.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <txmempool.h>\n+\n+#include <string>\n+\n+// This module enforces rules for transactions with nVersion=3 (\"V3 transactions\") which help make\n+// RBF abilities more robust.\n+\n+// V3 only allows 1 parent and 1 child.\n+/** Maximum number of transactions including an unconfirmed tx and its descendants. */\n+static constexpr unsigned int V3_DESCENDANT_LIMIT{2};\n+/** Maximum number of transactions including a V3 tx and all its mempool ancestors. */\n+static constexpr unsigned int V3_ANCESTOR_LIMIT{2};\n+\n+/** Maximum weight of a tx which spends from an unconfirmed V3 transaction. */\n+static constexpr int64_t V3_CHILD_MAX_WEIGHT{4000};\n+// Since these limits are within the default ancestor/descendant limits, there is no need to\n+// additionally check ancestor/descendant limits for V3 transactions.\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_ANCESTOR_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_DESCENDANT_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+\n+/** Any two unconfirmed transactions with a dependency relationship must either both be V3 or both\n+ * non-V3. Check this rule for any list of unconfirmed transactions.\n+ * @returns a tuple (parent wtxid, child wtxid, bool) where one is V3 but the other is not, if at\n+ * least one such pair exists. The bool represents whether the child is v3 or not. There may be\n+ * other such pairs that are not returned.\n+ * Otherwise std::nullopt.\n+ */\n+std::optional<std::tuple<uint256, uint256, bool>> CheckV3Inheritance(const Package& package);\n+\n+/** Every transaction that spends an unconfirmed V3 transaction must also be V3. */\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors);\n+\n+/** The following rules apply to V3 transactions:\n+ * 1. Tx with all of its ancestors (including non-nVersion=3) must be within V3_ANCESTOR_SIZE_LIMIT_KVB.\n+ * 2. Tx with all of its ancestors must be within V3_ANCESTOR_LIMIT.\n+ *\n+ * If a V3 tx has V3 ancestors,\n+ * 1. Each V3 ancestor and its descendants must be within V3_DESCENDANT_LIMIT.\n+ * 2. The tx must be within V3_CHILD_MAX_SIZE.\n+ *\n+ * @returns an error string if any V3 rule was violated, otherwise std::nullopt.\n+ */\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<uint256>& direct_conflicts);",
      "path": "src/policy/v3_policy.h",
      "position": null,
      "original_position": 57,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "18406ecbd5080864154c6a2fc756e6b96ff4caf0",
      "in_reply_to_id": 1406361767,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Changed to specify `Txid`. I assume we want a \"update as we touch these lines\" kind of thing so I added a preceding commit to make `m_conflicts` a `std::set<Txid>` instead of uint256, and updated other places as necessary to compile.",
      "created_at": "2023-11-27T16:38:28Z",
      "updated_at": "2023-11-27T16:38:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406442920",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406442920"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406442992",
      "pull_request_review_id": 1750885588,
      "id": 1406442992,
      "node_id": "PRRC_kwDOABII585T1J3w",
      "diff_hunk": "@@ -0,0 +1,59 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_V3_POLICY_H\n+#define BITCOIN_POLICY_V3_POLICY_H\n+\n+#include <consensus/amount.h>\n+#include <policy/packages.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <txmempool.h>\n+\n+#include <string>\n+\n+// This module enforces rules for transactions with nVersion=3 (\"V3 transactions\") which help make\n+// RBF abilities more robust.\n+\n+// V3 only allows 1 parent and 1 child.\n+/** Maximum number of transactions including an unconfirmed tx and its descendants. */\n+static constexpr unsigned int V3_DESCENDANT_LIMIT{2};\n+/** Maximum number of transactions including a V3 tx and all its mempool ancestors. */\n+static constexpr unsigned int V3_ANCESTOR_LIMIT{2};\n+\n+/** Maximum weight of a tx which spends from an unconfirmed V3 transaction. */\n+static constexpr int64_t V3_CHILD_MAX_WEIGHT{4000};\n+// Since these limits are within the default ancestor/descendant limits, there is no need to\n+// additionally check ancestor/descendant limits for V3 transactions.\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_ANCESTOR_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_DESCENDANT_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+\n+/** Any two unconfirmed transactions with a dependency relationship must either both be V3 or both\n+ * non-V3. Check this rule for any list of unconfirmed transactions.\n+ * @returns a tuple (parent wtxid, child wtxid, bool) where one is V3 but the other is not, if at\n+ * least one such pair exists. The bool represents whether the child is v3 or not. There may be\n+ * other such pairs that are not returned.\n+ * Otherwise std::nullopt.\n+ */\n+std::optional<std::tuple<uint256, uint256, bool>> CheckV3Inheritance(const Package& package);",
      "path": "src/policy/v3_policy.h",
      "position": null,
      "original_position": 39,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "18406ecbd5080864154c6a2fc756e6b96ff4caf0",
      "in_reply_to_id": 1406359885,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Updated this file to use `Txid`/`Wtxid` instead of uint256 everywhere.",
      "created_at": "2023-11-27T16:38:31Z",
      "updated_at": "2023-11-27T16:38:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1406442992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406442992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408171165",
      "pull_request_review_id": 1753556814,
      "id": 1408171165,
      "node_id": "PRRC_kwDOABII585T7vyd",
      "diff_hunk": "@@ -301,5 +302,21 @@ FUZZ_TARGET(tx_package_eval, .init = initialize_tx_pool)\n     UnregisterSharedValidationInterface(outpoints_updater);\n \n     WITH_LOCK(::cs_main, tx_pool.check(chainstate.CoinsTip(), chainstate.m_chain.Height() + 1));\n+    LOCK(tx_pool.cs);\n+    for (const auto& tx_info : tx_pool.infoAll()) {\n+        const auto& entry = *Assert(tx_pool.GetEntry(tx_info.tx->GetHash()));\n+        if (tx_info.tx->nVersion == 3) {\n+            // Check that special v3 ancestor/descendant limits and rules are always respected\n+            Assert(entry.GetCountWithDescendants() <= V3_DESCENDANT_LIMIT);\n+            Assert(entry.GetCountWithAncestors() <= V3_ANCESTOR_LIMIT);\n+            if (entry.GetCountWithAncestors() > 1) {\n+                Assert(entry.GetTxWeight() <= V3_CHILD_MAX_WEIGHT);\n+            }\n+        }\n+        // Transactions with fees of 0 or lower should be proactively trimmed.\n+        if (tx_pool.m_min_relay_feerate.GetFeePerK() > 0) {\n+            Assert(entry.GetModFeesWithDescendants() > 0);",
      "path": "src/test/fuzz/package_eval.cpp",
      "position": 54,
      "original_position": 34,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "If `bypass_limits` is set for a single submission, this can fail since no trimming is done after that.",
      "created_at": "2023-11-28T18:02:18Z",
      "updated_at": "2023-11-28T18:02:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408171165",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408171165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 319,
      "original_line": 319,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408277869",
      "pull_request_review_id": 1753714068,
      "id": 1408277869,
      "node_id": "PRRC_kwDOABII585T8J1t",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {",
      "path": "src/policy/v3_policy.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "We need to limit the sigops-adjusted size of the child, since that effects the effectiveness of a potential pin. This difference can be up to 20x for really strange scripts.\r\n\r\nSimplest but perhaps controversial would be to disallow v3 transactions to have sigops-adjusted size different than bip141 vsize, Other solution would be to directly feed in the adjusted vsize and check against that instead of weight.",
      "created_at": "2023-11-28T19:19:45Z",
      "updated_at": "2023-11-28T19:19:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408277869",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408277869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408287424",
      "pull_request_review_id": 1753729645,
      "id": 1408287424,
      "node_id": "PRRC_kwDOABII585T8MLA",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {",
      "path": "src/policy/v3_policy.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "in_reply_to_id": 1408277869,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes definitely\r\n\r\n> disallow v3 transactions to have sigops-adjusted size different than bip141 vsize\r\n\r\nI actually think this is more complicated than adding a sigop limit, since we'd need to define what sigop-adjusted size is. Or just word it as \"number of sigops times this constant cannot be larger than the weight\" I guess.",
      "created_at": "2023-11-28T19:29:24Z",
      "updated_at": "2023-11-28T19:29:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408287424",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408287424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408289426",
      "pull_request_review_id": 1753732264,
      "id": 1408289426,
      "node_id": "PRRC_kwDOABII585T8MqS",
      "diff_hunk": "@@ -301,5 +302,21 @@ FUZZ_TARGET(tx_package_eval, .init = initialize_tx_pool)\n     UnregisterSharedValidationInterface(outpoints_updater);\n \n     WITH_LOCK(::cs_main, tx_pool.check(chainstate.CoinsTip(), chainstate.m_chain.Height() + 1));\n+    LOCK(tx_pool.cs);\n+    for (const auto& tx_info : tx_pool.infoAll()) {\n+        const auto& entry = *Assert(tx_pool.GetEntry(tx_info.tx->GetHash()));\n+        if (tx_info.tx->nVersion == 3) {\n+            // Check that special v3 ancestor/descendant limits and rules are always respected\n+            Assert(entry.GetCountWithDescendants() <= V3_DESCENDANT_LIMIT);\n+            Assert(entry.GetCountWithAncestors() <= V3_ANCESTOR_LIMIT);\n+            if (entry.GetCountWithAncestors() > 1) {\n+                Assert(entry.GetTxWeight() <= V3_CHILD_MAX_WEIGHT);\n+            }\n+        }\n+        // Transactions with fees of 0 or lower should be proactively trimmed.\n+        if (tx_pool.m_min_relay_feerate.GetFeePerK() > 0) {\n+            Assert(entry.GetModFeesWithDescendants() > 0);",
      "path": "src/test/fuzz/package_eval.cpp",
      "position": 54,
      "original_position": 34,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "in_reply_to_id": 1408171165,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ah true. I forgot that we do an atmp here too. I don't think we should do `bypass_limits` though - couldn't that cause the result to deviate from the package eval result?",
      "created_at": "2023-11-28T19:31:03Z",
      "updated_at": "2023-11-28T19:31:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408289426",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408289426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 319,
      "original_line": 319,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408290515",
      "pull_request_review_id": 1753734001,
      "id": 1408290515,
      "node_id": "PRRC_kwDOABII585T8M7T",
      "diff_hunk": "@@ -301,5 +302,21 @@ FUZZ_TARGET(tx_package_eval, .init = initialize_tx_pool)\n     UnregisterSharedValidationInterface(outpoints_updater);\n \n     WITH_LOCK(::cs_main, tx_pool.check(chainstate.CoinsTip(), chainstate.m_chain.Height() + 1));\n+    LOCK(tx_pool.cs);\n+    for (const auto& tx_info : tx_pool.infoAll()) {\n+        const auto& entry = *Assert(tx_pool.GetEntry(tx_info.tx->GetHash()));\n+        if (tx_info.tx->nVersion == 3) {\n+            // Check that special v3 ancestor/descendant limits and rules are always respected\n+            Assert(entry.GetCountWithDescendants() <= V3_DESCENDANT_LIMIT);\n+            Assert(entry.GetCountWithAncestors() <= V3_ANCESTOR_LIMIT);\n+            if (entry.GetCountWithAncestors() > 1) {\n+                Assert(entry.GetTxWeight() <= V3_CHILD_MAX_WEIGHT);\n+            }\n+        }\n+        // Transactions with fees of 0 or lower should be proactively trimmed.\n+        if (tx_pool.m_min_relay_feerate.GetFeePerK() > 0) {\n+            Assert(entry.GetModFeesWithDescendants() > 0);",
      "path": "src/test/fuzz/package_eval.cpp",
      "position": 54,
      "original_position": 34,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "in_reply_to_id": 1408171165,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "yeah I don't think we need to ever",
      "created_at": "2023-11-28T19:32:13Z",
      "updated_at": "2023-11-28T19:32:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1408290515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408290515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 319,
      "original_line": 319,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409129842",
      "pull_request_review_id": 1755016347,
      "id": 1409129842,
      "node_id": "PRRC_kwDOABII585T_Z1y",
      "diff_hunk": "@@ -301,5 +302,21 @@ FUZZ_TARGET(tx_package_eval, .init = initialize_tx_pool)\n     UnregisterSharedValidationInterface(outpoints_updater);\n \n     WITH_LOCK(::cs_main, tx_pool.check(chainstate.CoinsTip(), chainstate.m_chain.Height() + 1));\n+    LOCK(tx_pool.cs);\n+    for (const auto& tx_info : tx_pool.infoAll()) {\n+        const auto& entry = *Assert(tx_pool.GetEntry(tx_info.tx->GetHash()));\n+        if (tx_info.tx->nVersion == 3) {\n+            // Check that special v3 ancestor/descendant limits and rules are always respected\n+            Assert(entry.GetCountWithDescendants() <= V3_DESCENDANT_LIMIT);\n+            Assert(entry.GetCountWithAncestors() <= V3_ANCESTOR_LIMIT);\n+            if (entry.GetCountWithAncestors() > 1) {\n+                Assert(entry.GetTxWeight() <= V3_CHILD_MAX_WEIGHT);\n+            }\n+        }\n+        // Transactions with fees of 0 or lower should be proactively trimmed.\n+        if (tx_pool.m_min_relay_feerate.GetFeePerK() > 0) {\n+            Assert(entry.GetModFeesWithDescendants() > 0);",
      "path": "src/test/fuzz/package_eval.cpp",
      "position": 54,
      "original_position": 34,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "d79f36b1ecb2f26e3dd199e2bf1a0346627994ba",
      "in_reply_to_id": 1408171165,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Made bypass_limits always false",
      "created_at": "2023-11-29T11:12:39Z",
      "updated_at": "2023-11-29T11:12:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1409129842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409129842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 319,
      "original_line": 319,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409130981",
      "pull_request_review_id": 1755018211,
      "id": 1409130981,
      "node_id": "PRRC_kwDOABII585T_aHl",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {",
      "path": "src/policy/v3_policy.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "in_reply_to_id": 1408277869,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Added a 50-sigop limit, with a p2sh test.",
      "created_at": "2023-11-29T11:13:40Z",
      "updated_at": "2023-11-29T11:13:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1409130981",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409130981"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409750171",
      "pull_request_review_id": 1756015917,
      "id": 1409750171,
      "node_id": "PRRC_kwDOABII585UBxSb",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {",
      "path": "src/policy/v3_policy.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "in_reply_to_id": 1408277869,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What's the issue with using the transaction's vsize, which is already the value used everywhere else in the mempool?  It seems like that is simpler than introducing a second limit, and exactly captures how we apply the RBF rules anyway.",
      "created_at": "2023-11-29T19:07:43Z",
      "updated_at": "2023-11-29T19:07:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1409750171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409750171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409753009",
      "pull_request_review_id": 1755493640,
      "id": 1409753009,
      "node_id": "PRRC_kwDOABII585UBx-x",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {",
      "path": "src/policy/v3_policy.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "in_reply_to_id": 1408277869,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yes, I think the thing we're actually trying to protect against, sigops-adjusted vsize, is what should be used.",
      "created_at": "2023-11-29T19:10:19Z",
      "updated_at": "2023-11-29T19:10:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1409753009",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409753009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409761071",
      "pull_request_review_id": 1756038415,
      "id": 1409761071,
      "node_id": "PRRC_kwDOABII585UBz8v",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts,\n+                                        int64_t sigops)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {",
      "path": "src/policy/v3_policy.cpp",
      "position": null,
      "original_position": 82,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "fc62757320f216a8adf45726eeca121e13d6c39e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "you can remove this level of nesting since the 3 checks above all end early",
      "created_at": "2023-11-29T19:17:33Z",
      "updated_at": "2023-11-29T20:10:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1409761071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409761071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409765502",
      "pull_request_review_id": 1756044862,
      "id": 1409765502,
      "node_id": "PRRC_kwDOABII585UB1B-",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts,\n+                                        int64_t sigops)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {\n+            return strprintf(\"v3 child tx is too big: %u > %u weight units\", tx_weight, V3_CHILD_MAX_WEIGHT);\n+        }\n+        if (sigops > V3_CHILD_MAX_SIGOPS) {\n+            return strprintf(\"v3 child tx has too many sigops: %u > %u sigops\", sigops, V3_CHILD_MAX_SIGOPS);\n+        }\n+        // Any ancestor of a V3 transaction must also be V3.\n+        const auto& parent_entry = *ancestors.begin();",
      "path": "src/policy/v3_policy.cpp",
      "position": null,
      "original_position": 92,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "fc62757320f216a8adf45726eeca121e13d6c39e",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This logic only works if `V3_ANCESTOR_LIMIT <= 2`, I think?  Having a constant would imply that you could consider changing the value, but if the logic breaks with higher values then I think we should `static_assert` that the constant is in the range we expect.",
      "created_at": "2023-11-29T19:21:48Z",
      "updated_at": "2023-11-29T19:21:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1409765502",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409765502"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409768985",
      "pull_request_review_id": 1756038415,
      "id": 1409768985,
      "node_id": "PRRC_kwDOABII585UB14Z",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts,\n+                                        int64_t sigops)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;",
      "path": "src/policy/v3_policy.cpp",
      "position": 85,
      "original_position": 81,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "fc62757320f216a8adf45726eeca121e13d6c39e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "```Suggestion\r\n        // This is a v3 parent; no additional constraints\r\n        return std::nullopt;\r\n```",
      "created_at": "2023-11-29T19:25:25Z",
      "updated_at": "2023-11-29T20:10:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1409768985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409768985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409775820",
      "pull_request_review_id": 1756063055,
      "id": 1409775820,
      "node_id": "PRRC_kwDOABII585UB3jM",
      "diff_hunk": "@@ -0,0 +1,65 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_V3_POLICY_H\n+#define BITCOIN_POLICY_V3_POLICY_H\n+\n+#include <consensus/amount.h>\n+#include <policy/packages.h>\n+#include <policy/policy.h>\n+#include <primitives/transaction.h>\n+#include <txmempool.h>\n+\n+#include <string>\n+\n+// This module enforces rules for transactions with nVersion=3 (\"V3 transactions\") which help make\n+// RBF abilities more robust.\n+\n+// V3 only allows 1 parent and 1 child.\n+/** Maximum number of transactions including an unconfirmed tx and its descendants. */\n+static constexpr unsigned int V3_DESCENDANT_LIMIT{2};\n+/** Maximum number of transactions including a V3 tx and all its mempool ancestors. */\n+static constexpr unsigned int V3_ANCESTOR_LIMIT{2};\n+\n+/** Maximum weight of a tx which spends from an unconfirmed v3 transaction. */\n+static constexpr int64_t V3_CHILD_MAX_WEIGHT{4000};\n+// Since these limits are within the default ancestor/descendant limits, there is no need to\n+// additionally check ancestor/descendant limits for V3 transactions.\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_ANCESTOR_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+static_assert(V3_CHILD_MAX_WEIGHT + MAX_STANDARD_TX_WEIGHT <= DEFAULT_DESCENDANT_SIZE_LIMIT_KVB * WITNESS_SCALE_FACTOR * 1000);\n+/** Maximum sigops cost of a tx which spends from an unconfirmed v3 transaction. */\n+static constexpr int64_t V3_CHILD_MAX_SIGOPS{50};\n+// The maximum weight and sigops cost are the equivalent limit in virtual bytes (when calculated using default -bytespersigop).\n+static_assert(V3_CHILD_MAX_SIGOPS * DEFAULT_BYTES_PER_SIGOP == V3_CHILD_MAX_WEIGHT / WITNESS_SCALE_FACTOR);\n+\n+/** Any two unconfirmed transactions with a dependency relationship must either both be V3 or both\n+ * non-V3. Check this rule for any list of unconfirmed transactions.\n+ * @returns a tuple (parent wtxid, child wtxid, bool) where one is V3 but the other is not, if at\n+ * least one such pair exists. The bool represents whether the child is v3 or not. There may be\n+ * other such pairs that are not returned.\n+ * Otherwise std::nullopt.\n+ */\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package);\n+\n+/** Every transaction that spends an unconfirmed V3 transaction must also be V3. */\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors);\n+\n+/** The following rules apply to V3 transactions:\n+ * 1. Tx with all of its ancestors (including non-nVersion=3) must be within V3_ANCESTOR_SIZE_LIMIT_KVB.",
      "path": "src/policy/v3_policy.h",
      "position": null,
      "original_position": 50,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "fc62757320f216a8adf45726eeca121e13d6c39e",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I think a v3 transaction is not permitted to have non-v3 unconfirmed ancestors -- so this comment seems confusing?",
      "created_at": "2023-11-29T19:31:59Z",
      "updated_at": "2023-11-29T19:32:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1409775820",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409775820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409812453",
      "pull_request_review_id": 1756128156,
      "id": 1409812453,
      "node_id": "PRRC_kwDOABII585UCAfl",
      "diff_hunk": "@@ -372,11 +375,16 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n             }\n         }\n         // Transaction is still valid and cached LockPoints are updated.\n+        auto ancestors{m_mempool->AssumeCalculateMemPoolAncestors(func, *it, CTxMemPool::Limits::NoLimits(),",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "22ce995d0b4fbf697596738503a429de5a057c0e",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "1) This strikes me as a very expensive operation to perform in order to update the mempool for a reorg.  I think we could probably do better by only calculating ancestors or descendants for transactions that are themselves v3, if we decide we need to enforce the v3 rules after a reorg.\r\n\r\n2) With the logic as written, if a v3 parent-child pair (A, B) were to be reorged out and added back to the mempool, and A has some other spend C already in the mempool, then when `ApplyV3Rules()` is invoked on B, it would be selected for removal.  This in turn would prevent A from being mined, if we assume that B's feerate was the reason it was mined in the first place?  This strikes me as unfortunate.\r\n\r\nInstead, I'd suggest that we not bother enforcing the v3 rules on a reorg.  That seems safer than potentially evicting the fee-paying transaction, less CPU work (so reorgs won't be further slowed down by additional processing), and shouldn't materially affect pinning (if miners are reorging out your transactions, trying to minimize RBF pinning with v3 policy isn't really going to help you!).",
      "created_at": "2023-11-29T20:09:41Z",
      "updated_at": "2023-11-29T20:09:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1409812453",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409812453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 378,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409842026",
      "pull_request_review_id": 1756174839,
      "id": 1409842026,
      "node_id": "PRRC_kwDOABII585UCHtq",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,",
      "path": "src/policy/v3_policy.cpp",
      "position": 69,
      "original_position": 69,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "fc62757320f216a8adf45726eeca121e13d6c39e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This only seems to run useful checks on v3 children when the ancestor is already in the mempool, not when the ancestor is something new in a package. I suspect we want a parallel `ApplyV3Rules` that looks at the packages only, just like `CheckV3Inheritance`\r\n\r\nAs-is you can get large children and muiltiple ancestors in currently.\r\n\r\n(also, mempool_v3_accept.py needs tests covering this case for each situation)\r\n\r\n```\r\ndiff --git a/test/functional/mempool_accept_v3.py b/test/functional/mempool_accept_v3.py\r\nindex 5b72cca6b9..3a4b822a90 100755\r\n--- a/test/functional/mempool_accept_v3.py\r\n+++ b/test/functional/mempool_accept_v3.py\r\n@@ -22,57 +22,73 @@ def cleanup(func):\r\n         try:\r\n             func(self)\r\n         finally:\r\n             # Clear mempool\r\n             self.generate(self.nodes[0], 1)\r\n             # Reset config options\r\n             self.restart_node(0)\r\n     return wrapper\r\n \r\n class MempoolAcceptV3(BitcoinTestFramework):\r\n     def set_test_params(self):\r\n         self.num_nodes = 1\r\n         self.setup_clean_chain = True\r\n \r\n     def check_mempool(self, txids):\r\n         \"\"\"Assert exact contents of the node's mempool (by txid).\"\"\"\r\n         mempool_contents = self.nodes[0].getrawmempool()\r\n         assert_equal(len(txids), len(mempool_contents))\r\n         assert all([txid in txids for txid in mempool_contents])\r\n \r\n     @cleanup\r\n     def test_v3_acceptance(self):\r\n         node = self.nodes[0]\r\n         self.log.info(\"Test a child of a V3 transaction cannot be more than 1000vB\")\r\n         self.restart_node(0, extra_args=[\"-datacarriersize=1000\"])\r\n-        tx_v3_parent_normal = self.wallet.send_self_transfer(from_node=node, version=3)\r\n-        self.check_mempool([tx_v3_parent_normal[\"txid\"]])\r\n-        tx_v3_child_heavy = self.wallet.create_self_transfer(\r\n-            utxo_to_spend=tx_v3_parent_normal[\"new_utxo\"],\r\n+        tx_v3_parent_normal = self.wallet.create_self_transfer(\r\n+            fee_rate=0,\r\n+            target_weight=4004,\r\n+            version=3\r\n+        )\r\n+        tx_v3_parent_2_normal = self.wallet.create_self_transfer(\r\n+            fee_rate=0,\r\n             target_weight=4004,\r\n             version=3\r\n         )\r\n+        tx_v3_child_heavy = self.wallet.create_self_transfer_multi(\r\n+            utxos_to_spend=[tx_v3_parent_normal[\"new_utxo\"], tx_v3_parent_2_normal[\"new_utxo\"]],\r\n+            target_weight=4004,\r\n+            fee_per_output=10000,\r\n+            version=3\r\n+        )\r\n+\r\n+        assert_equal(node.getrawmempool(), [])\r\n+        node.submitpackage([tx_v3_parent_normal[\"hex\"], tx_v3_parent_2_normal[\"hex\"], tx_v3_child_heavy[\"hex\"]])\r\n+        # !!! Oversize child and multiple (in-package) ancestors\r\n+        assert_equal(len(node.getrawmempool()), 3)\r\n+        assert False\r\n+\r\n```",
      "created_at": "2023-11-29T20:42:14Z",
      "updated_at": "2023-11-29T20:42:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1409842026",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1409842026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410643071",
      "pull_request_review_id": 1757418889,
      "id": 1410643071,
      "node_id": "PRRC_kwDOABII585UFLR_",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {",
      "path": "src/policy/v3_policy.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "in_reply_to_id": 1408277869,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> What's the issue with using the transaction's vsize\r\n\r\nMy reasons were:\r\n- I wanted to specify a value of sigops that wouldn't depend on the node's `-bytespersigop` setting, and similarly didn't want it to be bypassable locally this way\r\n- People expressed confusion at what sigops-adjusted vsize was, so I wanted to make it clearer\r\n\r\nHappy to change though, if it's preferred?",
      "created_at": "2023-11-30T13:02:15Z",
      "updated_at": "2023-11-30T13:02:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1410643071",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410643071"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410653204",
      "pull_request_review_id": 1757435436,
      "id": 1410653204,
      "node_id": "PRRC_kwDOABII585UFNwU",
      "diff_hunk": "@@ -372,11 +375,16 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n             }\n         }\n         // Transaction is still valid and cached LockPoints are updated.\n+        auto ancestors{m_mempool->AssumeCalculateMemPoolAncestors(func, *it, CTxMemPool::Limits::NoLimits(),",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "22ce995d0b4fbf697596738503a429de5a057c0e",
      "in_reply_to_id": 1409812453,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> Instead, I'd suggest that we not bother enforcing the v3 rules on a reorg.\r\n\r\nI'm a fan of this approach. I want to spend a little bit of time thinking about what the possibilities are - I guess we can have some incorrect assumptions about transactions (resulting in e.g. incorect MinerScores) but it wouldn't be problematic if a reorg is the only way to get there, as you say.",
      "created_at": "2023-11-30T13:11:42Z",
      "updated_at": "2023-11-30T13:11:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1410653204",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410653204"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 378,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410793961",
      "pull_request_review_id": 1757665254,
      "id": 1410793961,
      "node_id": "PRRC_kwDOABII585UFwHp",
      "diff_hunk": "@@ -0,0 +1,111 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,",
      "path": "src/policy/v3_policy.cpp",
      "position": 69,
      "original_position": 69,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "fc62757320f216a8adf45726eeca121e13d6c39e",
      "in_reply_to_id": 1409842026,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "good news: this issue was discovered in less than a minute on a single core with the package fuzzer",
      "created_at": "2023-11-30T14:53:13Z",
      "updated_at": "2023-11-30T14:53:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1410793961",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410793961"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 69,
      "original_line": 69,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410816950",
      "pull_request_review_id": 1757702879,
      "id": 1410816950,
      "node_id": "PRRC_kwDOABII585UF1u2",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {",
      "path": "src/policy/v3_policy.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "in_reply_to_id": 1408277869,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I just think that the point of the policy rule is not to enforce a particular sigops limit, but instead to ensure that the total fee required to replace a child transaction is only high if the child itself has a high feerate, which is defined as `fee / sigops_adjusted_vsize`.  So there doesn't seem to me to be a benefit to thinking about two different limits.",
      "created_at": "2023-11-30T15:09:24Z",
      "updated_at": "2023-11-30T15:09:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1410816950",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410816950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1412155613",
      "pull_request_review_id": 1759897764,
      "id": 1412155613,
      "node_id": "PRRC_kwDOABII585UK8jd",
      "diff_hunk": "@@ -0,0 +1,107 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <policy/v3_policy.h>\n+\n+#include <coins.h>\n+#include <consensus/amount.h>\n+#include <logging.h>\n+#include <tinyformat.h>\n+\n+#include <numeric>\n+#include <vector>\n+\n+std::optional<std::tuple<Wtxid, Wtxid, bool>> CheckV3Inheritance(const Package& package)\n+{\n+    assert(std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx != nullptr;}));\n+    // If all transactions are V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion == 3;})) {\n+        return std::nullopt;\n+    }\n+    // If all transactions are non-V3, we can stop here.\n+    if (std::all_of(package.cbegin(), package.cend(), [](const auto& tx){return tx->nVersion != 3;})) {\n+        return std::nullopt;\n+    }\n+    // Look for a V3 transaction spending a non-V3 or vice versa.\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> v3_txid_to_wtxid;\n+    std::unordered_map<Txid, Wtxid, SaltedTxidHasher> non_v3_txid_to_wtxid;\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        } else {\n+            non_v3_txid_to_wtxid.emplace(tx->GetHash(), tx->GetWitnessHash());\n+        }\n+    }\n+    for (const auto& tx : package) {\n+        if (tx->nVersion == 3) {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = non_v3_txid_to_wtxid.find(input.prevout.hash); it != non_v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), true);\n+                }\n+            }\n+        } else {\n+            for (const auto& input : tx->vin) {\n+                if (auto it = v3_txid_to_wtxid.find(input.prevout.hash); it != v3_txid_to_wtxid.end()) {\n+                    return std::make_tuple(it->second, tx->GetWitnessHash(), false);\n+                }\n+            }\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> CheckV3Inheritance(const CTransactionRef& ptx,\n+                                              const CTxMemPool::setEntries& ancestors)\n+{\n+    for (const auto& entry : ancestors) {\n+        if (ptx->nVersion != 3 && entry->GetTx().nVersion == 3) {\n+            return strprintf(\"tx that spends from %s must be nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        } else if (ptx->nVersion == 3 && entry->GetTx().nVersion != 3) {\n+            return strprintf(\"v3 tx cannot spend from %s which is not nVersion=3\",\n+                             entry->GetTx().GetWitnessHash().ToString());\n+        }\n+    }\n+    return std::nullopt;\n+}\n+\n+std::optional<std::string> ApplyV3Rules(const CTransactionRef& ptx,\n+                                        const CTxMemPool::setEntries& ancestors,\n+                                        const std::set<Txid>& direct_conflicts)\n+{\n+    // These rules only apply to transactions with nVersion=3.\n+    if (ptx->nVersion != 3) return std::nullopt;\n+\n+    if (ancestors.size() + 1 > V3_ANCESTOR_LIMIT) {\n+        return strprintf(\"tx %s would have too many ancestors\", ptx->GetWitnessHash().ToString());\n+    }\n+    if (ancestors.empty()) {\n+        return std::nullopt;\n+    } else {\n+        const auto tx_weight{GetTransactionWeight(*ptx)};\n+        // If this transaction spends V3 parents, it cannot be too large.\n+        if (tx_weight > V3_CHILD_MAX_WEIGHT) {",
      "path": "src/policy/v3_policy.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "8ae62c58cf53792b4fb87d6eec4d6f224e7c2571",
      "in_reply_to_id": 1408277869,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Will change 👍 ",
      "created_at": "2023-12-01T14:15:35Z",
      "updated_at": "2023-12-01T14:15:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1412155613",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1412155613"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414612161",
      "pull_request_review_id": 1763610776,
      "id": 1414612161,
      "node_id": "PRRC_kwDOABII585UUUTB",
      "diff_hunk": "@@ -1157,17 +1157,25 @@ void CTxMemPool::TrimToSize(size_t sizelimit, std::vector<COutPoint>* pvNoSpends\n \n     unsigned nTxnRemoved = 0;\n     CFeeRate maxFeeRateRemoved(0);\n-    while (!mapTx.empty() && DynamicMemoryUsage() > sizelimit) {\n+    while (!mapTx.empty()) {\n         indexed_transaction_set::index<descendant_score>::type::iterator it = mapTx.get<descendant_score>().begin();\n \n+        // Keep trimming as long as memory is above the maximum.\n+        // Also, unless min relay feerate allows it, skim away everything paying <=0 fees.\n+        const bool keep_trimming{DynamicMemoryUsage() > sizelimit ||\n+            (m_min_relay_feerate.GetFeePerK() > 0 && it->GetModFeesWithDescendants() <= 0)};\n+        if (!keep_trimming) break;",
      "path": "src/txmempool.cpp",
      "position": 30,
      "original_position": 12,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "f6a382af7ba3378539af6375a51b3798cc1fea76",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This could lead to confusing log messages when removing 0-fee (or deprioritized) transactions: Such a tx could be removed due to \"size limit\" even if the mempool was almost empty.",
      "created_at": "2023-12-04T23:06:01Z",
      "updated_at": "2023-12-04T23:10:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1414612161",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414612161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1154,
      "original_line": 1154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421613674",
      "pull_request_review_id": 1773907154,
      "id": 1421613674,
      "node_id": "PRRC_kwDOABII585UvBpq",
      "diff_hunk": "@@ -328,11 +329,12 @@ void Chainstate::MaybeUpdateMempoolForReorg(\n     m_mempool->UpdateTransactionsFromBlock(vHashUpdate);\n \n     // Predicate to use for filtering transactions in removeForReorg.\n+    // Checks whether a non-v3 transaction spends v3 and or vice versa.",
      "path": "src/validation.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "4557e54c90b8544b9d071f4353468fdea1ea64e3",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Leftover comment?",
      "created_at": "2023-12-10T00:28:52Z",
      "updated_at": "2023-12-10T00:46:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1421613674",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421613674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 332,
      "original_line": 332,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421614259",
      "pull_request_review_id": 1773907154,
      "id": 1421614259,
      "node_id": "PRRC_kwDOABII585UvByz",
      "diff_hunk": "@@ -946,6 +948,16 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n     }\n \n     ws.m_ancestors = *ancestors;\n+    if (const auto err_string{CheckV3Inheritance(ws.m_ptx, ws.m_ancestors)}) {",
      "path": "src/validation.cpp",
      "position": 79,
      "original_position": 55,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "4557e54c90b8544b9d071f4353468fdea1ea64e3",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "This is an aside -- in the cluster mempool branch, I think I'd like to change this to just look at direct parents rather than ancestors (I believe that in the normal course of transaction validation, we should no longer need to calculate ancestor sets when we're not worried about ancestor limits or updating cached ancestor state anymore).  Can you think of any reason it would be problematic to replace ancestors with just an entry's direct parents here? ",
      "created_at": "2023-12-10T00:34:09Z",
      "updated_at": "2023-12-10T00:46:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1421614259",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421614259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 953,
      "original_line": 951,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421615040",
      "pull_request_review_id": 1773907154,
      "id": 1421615040,
      "node_id": "PRRC_kwDOABII585UvB_A",
      "diff_hunk": "@@ -1288,6 +1300,31 @@ PackageMempoolAcceptResult MemPoolAccept::AcceptMultipleTransactions(const std::\n                    [](const auto& tx) { return Workspace(tx); });\n     std::map<uint256, MempoolAcceptResult> results;\n \n+    if (const auto v3_violation{CheckV3Inheritance(txns)}) {",
      "path": "src/validation.cpp",
      "position": 96,
      "original_position": 72,
      "commit_id": "4fce51680cef5b2cde751bc088d2ff6085f1cf29",
      "original_commit_id": "4557e54c90b8544b9d071f4353468fdea1ea64e3",
      "in_reply_to_id": null,
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not sure if I'm missing something, but this only checks that the v3 inheritance rules are enforced among transactions in the package.  What if someone sent a package of 2 v3 transactions, but the child transaction also spent a transaction that was already in the mempool?  I think the `CheckV3Inheritance()` needs to be able to pull parents from both the mempool and from the package, perhaps? ",
      "created_at": "2023-12-10T00:44:11Z",
      "updated_at": "2023-12-10T00:46:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28948#discussion_r1421615040",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421615040"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28948"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1305,
      "original_line": 1303,
      "side": "RIGHT"
    }
  ]
}