{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209",
    "id": 1461246047,
    "node_id": "PR_kwDOABII585XGNhf",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/28209",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/28209.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/28209.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28209",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28209/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/e626f35d635d00952d2866550a878f8079ffd7b5",
    "number": 28209,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "fuzz: a target for the block index database",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This introduces a small fuzz target for `CBlockTreeDB` which asserts a few invariants by using an in-memory LevelDb.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2023-08-03T10:50:36Z",
    "updated_at": "2023-08-17T09:11:51Z",
    "mergeable_state": "unknown",
    "merge_commit_sha": "97eb8eaea2acbf54488618a268a1ebd73cc2350e",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "darosior:fuzz_block_index",
      "ref": "fuzz_block_index",
      "sha": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 168868367,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjg4NjgzNjc=",
        "name": "bitcoin",
        "full_name": "darosior/bitcoin",
        "owner": {
          "login": "darosior",
          "id": 22457751,
          "node_id": "MDQ6VXNlcjIyNDU3NzUx",
          "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/darosior",
          "html_url": "https://github.com/darosior",
          "followers_url": "https://api.github.com/users/darosior/followers",
          "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
          "organizations_url": "https://api.github.com/users/darosior/orgs",
          "repos_url": "https://api.github.com/users/darosior/repos",
          "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/darosior/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/darosior/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/darosior/bitcoin",
        "archive_url": "https://api.github.com/repos/darosior/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/darosior/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/darosior/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/darosior/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/darosior/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/darosior/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/darosior/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/darosior/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/darosior/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/darosior/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/darosior/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/darosior/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/darosior/bitcoin/events",
        "forks_url": "https://api.github.com/repos/darosior/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/darosior/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/darosior/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/darosior/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/darosior/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/darosior/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/darosior/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/darosior/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/darosior/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/darosior/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/darosior/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/darosior/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/darosior/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/darosior/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/darosior/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/darosior/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:darosior/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/darosior/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/darosior/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/darosior/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/darosior/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/darosior/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/darosior/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/darosior/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/darosior/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/darosior/bitcoin/hooks",
        "svn_url": "https://github.com/darosior/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 219421,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-17T09:12:20Z",
        "created_at": "2019-02-02T19:20:27Z",
        "updated_at": "2023-05-05T11:25:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "60d3e4b0cd8716a6fe1be6b4d1b8237da8e56126",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35547,
        "stargazers_count": 70959,
        "watchers_count": 70959,
        "size": 236497,
        "default_branch": "master",
        "open_issues_count": 677,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-17T09:52:11Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-17T09:57:53Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 132,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 17,
    "comments": 5
  },
  "events": [
    {
      "event": "commented",
      "id": 1663764798,
      "node_id": "IC_kwDOABII585jKwk-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1663764798",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T10:50:39Z",
      "updated_at": "2023-08-03T16:58:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [MarcoFalke](https://github.com/bitcoin/bitcoin/pull/28209#pullrequestreview-1560871534), [dergoegge](https://github.com/bitcoin/bitcoin/pull/28209#issuecomment-1663851387), [brunoerg](https://github.com/bitcoin/bitcoin/pull/28209#issuecomment-1664327227) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#issuecomment-1663764798",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28209"
    },
    {
      "event": "labeled",
      "id": 9997541256,
      "node_id": "LE_lADOABII585tXQ8MzwAAAAJT5l-I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9997541256",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T10:50:40Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "review_requested",
      "id": 9997548397,
      "node_id": "RRE_lADOABII585tXQ8MzwAAAAJT5ntt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9997548397",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T10:51:25Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false
      }
    },
    {
      "event": "reviewed",
      "id": 1560871534,
      "node_id": "PRR_kwDOABII585dCQJu",
      "url": null,
      "actor": null,
      "commit_id": "8f26ab29a944feedcb05deda7ab08fecdf5cdd91",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, left two nits",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#pullrequestreview-1560871534",
      "submitted_at": "2023-08-03T11:34:39Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9998079079,
      "node_id": "HRFPE_lADOABII585tXQ8MzwAAAAJT7pRn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9998079079",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T11:49:28Z"
    },
    {
      "event": "commented",
      "id": 1663841536,
      "node_id": "IC_kwDOABII585jLDUA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1663841536",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T11:49:42Z",
      "updated_at": "2023-08-03T11:49:42Z",
      "author_association": "MEMBER",
      "body": "Thanks, addressed your comments.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#issuecomment-1663841536",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28209"
    },
    {
      "event": "commented",
      "id": 1663851387,
      "node_id": "IC_kwDOABII585jLFt7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1663851387",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T11:57:14Z",
      "updated_at": "2023-08-03T11:57:14Z",
      "author_association": "MEMBER",
      "body": "Concept ACK",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#issuecomment-1663851387",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28209"
    },
    {
      "event": "commented",
      "id": 1664327227,
      "node_id": "IC_kwDOABII585jM547",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1664327227",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-03T16:58:57Z",
      "updated_at": "2023-08-03T16:58:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#issuecomment-1664327227",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28209"
    },
    {
      "event": "reviewed",
      "id": 1561543849,
      "node_id": "PRR_kwDOABII585dE0Sp",
      "url": null,
      "actor": null,
      "commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#pullrequestreview-1561543849",
      "submitted_at": "2023-08-03T17:18:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10007341419,
      "node_id": "HRFPE_lADOABII585tXQ8MzwAAAAJUe-lr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10007341419",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T09:24:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10007481760,
      "node_id": "HRFPE_lADOABII585tXQ8MzwAAAAJUfg2g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10007481760",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T09:40:28Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-04T12:31:17Z",
      "updated_at": "2023-08-04T12:31:17Z",
      "source": {
        "issue": {
          "id": 1836664702,
          "node_id": "PR_kwDOABII585XMXKB",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28216",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28216/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28216/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28216/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/28216",
          "number": 28216,
          "state": "open",
          "state_reason": null,
          "title": "fuzz: a new target for the coins database",
          "body": "Similarly to #28209, this introduces a fuzz target for `CCoinsViewDb` by using an in-memory LevelDB. We reuse the body of the existing fuzz target for `coins_view`.\r\n\r\nThis is based on #28215, which fixes a couple mistakes in the `coins_view` fuzz logic exposed by this new target.",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 62963516,
              "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
              "name": "Tests",
              "color": "d4c5f9",
              "default": false
            },
            {
              "id": 5334691551,
              "node_id": "LA_kwDOABII588AAAABPfju3w",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
              "name": "CI failed",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 4,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28216",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/28216",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/28216.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/28216.patch"
          },
          "created_at": "2023-08-04T12:31:16Z",
          "updated_at": "2023-08-17T09:13:32Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10095841037,
      "node_id": "HRFPE_lADOABII585tXQ8MzwAAAAJZwk8N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10095841037",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-15T10:43:40Z"
    },
    {
      "event": "labeled",
      "id": 10099041950,
      "node_id": "LE_lADOABII585tXQ8MzwAAAAJZ8yae",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10099041950",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-15T16:30:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU2MjZmMzVkNjM1ZDAwOTUyZDI4NjY1NTBhODc4ZjgwNzlmZmQ3YjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e626f35d635d00952d2866550a878f8079ffd7b5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e626f35d635d00952d2866550a878f8079ffd7b5",
      "tree": {
        "sha": "c282ee85c5a50ef6793eaaa393cc689443213f60",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c282ee85c5a50ef6793eaaa393cc689443213f60"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c282ee85c5a50ef6793eaaa393cc689443213f60\nparent 60d3e4b0cd8716a6fe1be6b4d1b8237da8e56126\nauthor Antoine Poinsot <darosior@protonmail.com> 1691054326 +0200\ncommitter Antoine Poinsot <darosior@protonmail.com> 1692263476 +0200\n\nqa: a fuzz target for the block index database\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEWQtykmla/6W2csuy4T/BRc0/QwQFAmTd5DQACgkQ4T/BRc0/\nQwSbEgv9F3e+gpmbdUl2XiSFSM/SFPgiEGYjZmPD9JVkcsxgngaoFtkGE8wfYIIq\niHv/4h5R15eaCH7TmDhkTPUfLvl5M0bMT3INP9QgCwFopYZolRCY6SAg+6WaUiPC\nPPB8gEslu/j+y9mKQSx1Y8l6fFV+sfy1NMAdPBYgG/i+d5Kg2Wpao/QpOwmdWVL4\nFgbHmQy2AMqAiW7noZlUOnfKg/Volprz+ztweEuTc2Ol2kdBs+ETpb//ezCSbVU8\nHcZjK1hP7Q/TNOlU1hATOmNntbLjCt4BJXUo2NiS7JGZ1mcuPofENmATy2UPIzJB\nN/R2fiOcJMGe08ZvzjrYLgusIu9UFoZbOGbF0ub15kZyML9z1kf5zMByEYLy1Q7X\nI4dCMWO3SqNXbKjsxmvpbirji0KfkzU4U7br+l0kdFWL5rfp+IAwXnY+6mP59Ggl\nrbR7FeMMstdN1ZPzHdcZboP8uwNc02c02U8+cfdNSenxtQsYXkWoX3Hee8U6QT2N\niwIIZWIg\n=/K1c\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60d3e4b0cd8716a6fe1be6b4d1b8237da8e56126",
          "sha": "60d3e4b0cd8716a6fe1be6b4d1b8237da8e56126",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/60d3e4b0cd8716a6fe1be6b4d1b8237da8e56126"
        }
      ],
      "message": "qa: a fuzz target for the block index database",
      "committer": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-17T09:11:16Z"
      },
      "author": {
        "name": "Antoine Poinsot",
        "email": "darosior@protonmail.com",
        "date": "2023-08-03T09:18:46Z"
      },
      "sha": "e626f35d635d00952d2866550a878f8079ffd7b5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10116888221,
      "node_id": "HRFPE_lADOABII585tXQ8MzwAAAAJbA3ad",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10116888221",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T09:11:36Z"
    },
    {
      "event": "commented",
      "id": 1681920298,
      "node_id": "IC_kwDOABII585kQBEq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1681920298",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-17T09:11:51Z",
      "updated_at": "2023-08-17T09:11:51Z",
      "author_association": "MEMBER",
      "body": "Rebased on master to fix the macOS CI.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#issuecomment-1681920298",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/28209"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283055992",
      "pull_request_review_id": 1560871534,
      "id": 1283055992,
      "node_id": "PRRC_kwDOABII585MeeF4",
      "diff_hunk": "@@ -92,6 +92,16 @@ class CBlockFileInfo\n         if (nTimeIn > nTimeLast)\n             nTimeLast = nTimeIn;\n     }\n+\n+    bool operator==(const CBlockFileInfo& b) const {",
      "path": "src/chain.h",
      "position": null,
      "original_position": 5,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8f26ab29a944feedcb05deda7ab08fecdf5cdd91",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "not sure about adding test-only code to \"real\" code. What about moving this to the only fuzz test that needs it?",
      "created_at": "2023-08-03T11:21:03Z",
      "updated_at": "2023-08-03T11:34:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1283055992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283055992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283056551",
      "pull_request_review_id": 1560871534,
      "id": 1283056551,
      "node_id": "PRRC_kwDOABII585MeeOn",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <pow.h>\n+",
      "path": "src/test/fuzz/block_index.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8f26ab29a944feedcb05deda7ab08fecdf5cdd91",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "nit: remove newline?",
      "created_at": "2023-08-03T11:21:38Z",
      "updated_at": "2023-08-03T11:34:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1283056551",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283056551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283080177",
      "pull_request_review_id": 1560908036,
      "id": 1283080177,
      "node_id": "PRRC_kwDOABII585Mej_x",
      "diff_hunk": "@@ -92,6 +92,16 @@ class CBlockFileInfo\n         if (nTimeIn > nTimeLast)\n             nTimeLast = nTimeIn;\n     }\n+\n+    bool operator==(const CBlockFileInfo& b) const {",
      "path": "src/chain.h",
      "position": null,
      "original_position": 5,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8f26ab29a944feedcb05deda7ab08fecdf5cdd91",
      "in_reply_to_id": 1283055992,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Sure",
      "created_at": "2023-08-03T11:44:44Z",
      "updated_at": "2023-08-03T11:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1283080177",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283080177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283080569",
      "pull_request_review_id": 1560908634,
      "id": 1283080569,
      "node_id": "PRRC_kwDOABII585MekF5",
      "diff_hunk": "@@ -0,0 +1,116 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <pow.h>\n+",
      "path": "src/test/fuzz/block_index.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8f26ab29a944feedcb05deda7ab08fecdf5cdd91",
      "in_reply_to_id": 1283056551,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh, i forgot to push my last change, this include shouldn't be here (that's why i had separated it).",
      "created_at": "2023-08-03T11:45:10Z",
      "updated_at": "2023-08-03T11:45:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1283080569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283080569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 6,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283499741",
      "pull_request_review_id": 1561543849,
      "id": 1283499741,
      "node_id": "PRRC_kwDOABII585MgKbd",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": null,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In 8a0cb8b2147e852ac80d2030057272bdb59a83f2: Instead of using `ConsumeDeserializable`, couldn't we have a function to create a `CBlockFileInfo`? E.g.:\r\n\r\n```diff\r\ndiff --git a/src/test/fuzz/block_index.cpp b/src/test/fuzz/block_index.cpp\r\nindex b5b25fcbc7..528c2fae9f 100644\r\n--- a/src/test/fuzz/block_index.cpp\r\n+++ b/src/test/fuzz/block_index.cpp\r\n@@ -37,6 +37,19 @@ void init_block_index()\r\n     SelectParams(ChainType::MAIN);\r\n }\r\n \r\n+CBlockFileInfo CreateCBlockFileInfo(FuzzedDataProvider& fuzzed_data_provider)\r\n+{\r\n+    CBlockFileInfo block_file_info;\r\n+    block_file_info.nBlocks = fuzzed_data_provider.ConsumeIntegral<unsigned int>();\r\n+    block_file_info.nSize = fuzzed_data_provider.ConsumeIntegral<unsigned int>();\r\n+    block_file_info.nUndoSize = fuzzed_data_provider.ConsumeIntegral<unsigned int>();\r\n+    block_file_info.nHeightFirst = fuzzed_data_provider.ConsumeIntegral<unsigned int>();\r\n+    block_file_info.nHeightLast = fuzzed_data_provider.ConsumeIntegral<unsigned int>();\r\n+    block_file_info.nTimeFirst = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\r\n+    block_file_info.nTimeLast = fuzzed_data_provider.ConsumeIntegral<uint64_t>();\r\n+    return block_file_info;\r\n+}\r\n+\r\n FUZZ_TARGET(block_index, .init = init_block_index)\r\n {\r\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\r\n@@ -53,12 +66,9 @@ FUZZ_TARGET(block_index, .init = init_block_index)\r\n     std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\r\n     files_info.reserve(files_count);\r\n     for (int i = 0; i < files_count; i++) {\r\n-        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {\r\n-            files.push_back(std::make_unique<CBlockFileInfo>(std::move(*file_info)));\r\n-            files_info.push_back({i, files.back().get()});\r\n-        } else {\r\n-            return;\r\n-        }\r\n+        auto file_info{CreateCBlockFileInfo(fuzzed_data_provider)};\r\n+        files.push_back(std::make_unique<CBlockFileInfo>(std::move(file_info)));\r\n+        files_info.push_back({i, files.back().get()});\r\n     }\r\n \r\n     // Generate a number of block headers to be stored in the index.\r\n```",
      "created_at": "2023-08-03T17:18:01Z",
      "updated_at": "2023-08-03T17:18:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1283499741",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283499741"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284198100",
      "pull_request_review_id": 1562512011,
      "id": 1284198100,
      "node_id": "PRRC_kwDOABII585Mi07U",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Good call, i've adopted this approach for both the `CBlockFile`s and the `CBlockHeader`s.",
      "created_at": "2023-08-04T09:25:22Z",
      "updated_at": "2023-08-04T09:25:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284198100",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284198100"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284353466",
      "pull_request_review_id": 1562761528,
      "id": 1284353466,
      "node_id": "PRRC_kwDOABII585Mja26",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "What is the benefit? Looks like this is more code, easier to break (when for example a type width changes, or when a new field is added), as well as more wasteful (the early return is now removed and the fuzz engine will do a full run even if the fuzz input buffer is the empty string)?",
      "created_at": "2023-08-04T12:18:15Z",
      "updated_at": "2023-08-04T12:18:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284353466",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284353466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284361515",
      "pull_request_review_id": 1562774300,
      "id": 1284361515,
      "node_id": "PRRC_kwDOABII585Mjc0r",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "My thinking was that it would actually be more efficient to not rely on `ConsumeDeserializable` which needs to first guess the length of the byte vector to be consumed:\r\nhttps://github.com/bitcoin/bitcoin/blob/a4ca4975880c4f870c6047065c70610af2529e74/src/test/fuzz/util.h#L95-L107",
      "created_at": "2023-08-04T12:27:23Z",
      "updated_at": "2023-08-04T12:27:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284361515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284361515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284364488",
      "pull_request_review_id": 1562779233,
      "id": 1284364488,
      "node_id": "PRRC_kwDOABII585MjdjI",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Ok, that could be. Maybe a benchmark can be done to see if it helps or hurts?\r\n\r\nIn any case, if you keep it, my preference would be to use `decltype()` to derive the type of the fields and not hardcode them.",
      "created_at": "2023-08-04T12:30:46Z",
      "updated_at": "2023-08-04T12:30:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284364488",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284364488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284376542",
      "pull_request_review_id": 1562799161,
      "id": 1284376542,
      "node_id": "PRRC_kwDOABII585Mjgfe",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "+1 \r\n\r\n> My thinking was that it would actually be more efficient to not rely on ConsumeDeserializable which needs to first guess the length of the byte vector to be consumed\r\n\r\nMy initial thought was it facilitates especially for cases that `files_count`/`files_count` is closer to their max possible value.",
      "created_at": "2023-08-04T12:44:25Z",
      "updated_at": "2023-08-04T12:44:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284376542",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284376542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284450094",
      "pull_request_review_id": 1562914740,
      "id": 1284450094,
      "node_id": "PRRC_kwDOABII585Mjycu",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Alright, in order to benchmark which approach was most efficient i ran both versions with `-runs=100000` on an empty folder 3 times and compared the average coverage and runtime.\r\n\r\n- `ConsumeIntegral`-based: runtime of 75 seconds for a coverage of `1565` for all 3 runs.\r\n- `ConsumeDeserializable`-based: average runtime of 12 seconds for a coverage of `1560`.\r\n\r\nGiven the burst in coverage at the start of the run, the clear difference in runtime and the small difference in coverage i figured i'd need better measurement. I ran both on an empty folders with `-runs=1000000`:\r\n- `ConsumeIntegral`-based: coverage of `2230` after 1M runs (runtime: 2872 seconds).\r\n- `ConsumeDeserializable`-based: coverage of `2167` after 1M runs (runtime: 1614 seconds).\r\n\r\nMy interpretation of these results is that the `ConsumeDeserializable`-based target runs faster because of the invalid deserializations, that both targets quickly get to some basic coverage, but that the `ConsumeIntegral`-based one eventually gets to produce more interesting coverage. In my opinion i should therefore keep the `ConsumeIntegral`-based version even though its coverage/second is lower.",
      "created_at": "2023-08-04T13:49:27Z",
      "updated_at": "2023-08-04T13:49:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284450094",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284450094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284458654",
      "pull_request_review_id": 1562929155,
      "id": 1284458654,
      "node_id": "PRRC_kwDOABII585Mj0ie",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Yea, `ConsumeDeserializable` is faster because it will 'return' every time it gets an invalid deserialization. The coverage is similar but I believe that it's expected because the difference between both approaches will only reflect on the size of blocks and files.",
      "created_at": "2023-08-04T13:57:12Z",
      "updated_at": "2023-08-04T13:57:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284458654",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284458654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284461013",
      "pull_request_review_id": 1562933535,
      "id": 1284461013,
      "node_id": "PRRC_kwDOABII585Mj1HV",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You could also test both approaches by putting an assert right after the loop, something like: `assert(files.size() > 50)`. I believe that the `ConsumeDeserializable`-based will take much more time to reach it.",
      "created_at": "2023-08-04T13:59:16Z",
      "updated_at": "2023-08-04T13:59:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284461013",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284461013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284468527",
      "pull_request_review_id": 1562945396,
      "id": 1284468527,
      "node_id": "PRRC_kwDOABII585Mj28v",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "> My interpretation of these results is\r\n\r\nI don't think you can use coverage as a metric when comparing two different code bases. The version that has higher coverage is also the version that has more code in the fuzz target, which is also counted toward \"coverage\".",
      "created_at": "2023-08-04T14:04:47Z",
      "updated_at": "2023-08-04T14:04:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284468527",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284468527"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284480443",
      "pull_request_review_id": 1562964970,
      "id": 1284480443,
      "node_id": "PRRC_kwDOABII585Mj527",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Trying to maximum the coverage in 100_000 runs for each target i managed to:\r\n- achieve `2099` of coverage with the `ConsumeDeserializable`-based target using `-max_len=10000 -len_control=1 -mutate_depth=3` (in 305 seconds).\r\n- achieve `2088` of coverage with the `ConsumeIntegral`-based target using -max_len=8000 -len_control=0 -use_value_profile=1 -mutate_depth=1` (in 252 seconds).\r\n\r\n------\r\n\r\n> I don't think you can use coverage as a metric\r\n\r\nOh, right.. I had overlooked this. However the difference should be minimal, there is only 8 more lines for the `ConsumeIntegral` version. So i think it's still interesting to compare.\r\n\r\nI'm quite surprised by how well the  `ConsumeDeserializable`-based compares though.. I'm starting to lean toward reverting to this version.\r\n\r\nDo you have a suggestion of a better metric? I feel like introducing a crash wouldn't be interesting given the low coverage of the target.",
      "created_at": "2023-08-04T14:15:26Z",
      "updated_at": "2023-08-04T14:15:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284480443",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284480443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284506824",
      "pull_request_review_id": 1563009595,
      "id": 1284506824,
      "node_id": "PRRC_kwDOABII585MkATI",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": ">  I'm starting to lean toward reverting to this version.\r\n\r\nThere's also the possibility to add back the early return to the `ConsumeIntegral` one. (I haven't looked at the fuzz target to see if early return makes more or less sense)\r\n\r\n> I feel like introducing a crash wouldn't be interesting given the low coverage of the target.\r\n\r\nyeah, I guess it is hard to find a meaningful crash. I'd pick a line of code that is usually reached the \"last\" by coverage or is deeply nested.",
      "created_at": "2023-08-04T14:35:21Z",
      "updated_at": "2023-08-04T14:35:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1284506824",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1284506824"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294444800",
      "pull_request_review_id": 1578335372,
      "id": 1294444800,
      "node_id": "PRRC_kwDOABII585NJ6kA",
      "diff_hunk": "@@ -0,0 +1,127 @@\n+// Copyright (c) 2023 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <chainparams.h>\n+#include <txdb.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+\n+namespace {\n+// Hardcoded block hash and nBits to make sure the blocks we store pass the pow check.\n+const uint256 g_block_hash{uint256S(\"000000002c05cc2e78923c34df87fd108b22221ac6076c18f3ade378a4d915e9\")};\n+uint32_t g_bits{0x1d00ffff};\n+\n+util::SignalInterrupt g_interrupt;\n+\n+//! Compare two block files.\n+bool BlockFileEq(const CBlockFileInfo& a, const CBlockFileInfo& b)\n+{\n+    return a.nBlocks == b.nBlocks &&\n+        a.nSize == b.nSize &&\n+        a.nUndoSize == b.nUndoSize &&\n+        a.nHeightFirst == b.nHeightFirst &&\n+        a.nHeightLast == b.nHeightLast &&\n+        a.nTimeFirst == b.nTimeFirst &&\n+        a.nTimeLast == b.nTimeLast;\n+}\n+\n+} // namespace\n+\n+void init_block_index()\n+{\n+    SelectParams(ChainType::MAIN);\n+}\n+\n+FUZZ_TARGET(block_index, .init = init_block_index)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    auto block_index = CBlockTreeDB(DBParams{\n+        .path = \"\", // Memory only.\n+        .cache_bytes = 1 << 20, // 1MB.\n+        .memory_only = true,\n+    });\n+\n+    // Generate a number of block files to be stored in the index.\n+    int files_count = fuzzed_data_provider.ConsumeIntegralInRange(1, 100);\n+    std::vector<std::unique_ptr<CBlockFileInfo>> files;\n+    files.reserve(files_count);\n+    std::vector<std::pair<int, const CBlockFileInfo*>> files_info;\n+    files_info.reserve(files_count);\n+    for (int i = 0; i < files_count; i++) {\n+        if (auto file_info = ConsumeDeserializable<CBlockFileInfo>(fuzzed_data_provider)) {",
      "path": "src/test/fuzz/block_index.cpp",
      "position": 67,
      "original_position": 56,
      "commit_id": "e626f35d635d00952d2866550a878f8079ffd7b5",
      "original_commit_id": "8a0cb8b2147e852ac80d2030057272bdb59a83f2",
      "in_reply_to_id": 1283499741,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I've reverted back to using `ConsumeDeserializable`. I had the same intuition as @brunoerg but from my testing it's not clear that the custom way is more efficient (in terms of coverage per unit of time). Absent this, it makes sense to not introduce more code and simply use the existing utilities.",
      "created_at": "2023-08-15T10:49:05Z",
      "updated_at": "2023-08-15T10:49:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/28209#discussion_r1294444800",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294444800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/28209"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 67,
      "original_line": 67,
      "side": "RIGHT"
    }
  ]
}