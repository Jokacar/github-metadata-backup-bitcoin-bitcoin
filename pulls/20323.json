{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323",
    "id": 516271231,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NTE2MjcxMjMx",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20323",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/20323.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/20323.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/81137c60fe6234569e1c5e6760f3a6f016956944",
    "number": 20323,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "tests: Create or use existing properly initialized NodeContexts",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is part 1/n of the effort to [de-globalize `ChainstateManager`](https://github.com/bitcoin/bitcoin/pull/20158)\r\n\r\nReviewers: Looking for tested/Code-Review/plain-ACKs\r\n\r\n### Context\r\n\r\nIn many of our tests, we manually instantiate `NodeContext`s or `ChainstateManager`s in the test code, which is error prone. Instead, we should create or use existing references because:\r\n1. Before we [de-globalize `ChainstateManager`](https://github.com/bitcoin/bitcoin/pull/20158), much of our code still acts on `g_chainman` (our global `ChainstateManager`), sometimes even when you're calling a method on a specific instance of `ChainstateManager`! This means that we may act on two instances of `ChainstateManager`, which is most likely not what we want.\r\n2. Using existing references (initialized by the `{Basic,}TestingSetup` constructors) means that you're acting on objects which are properly initialized, instead of \"just initialized enough for this dang test to pass\". Also, they're already there! It's free!\r\n3. By acting on the right object, we also allow the review-only assertions in future commits of [de-globalize `ChainstateManager`](https://github.com/bitcoin/bitcoin/pull/20158) to work and demonstrate correctness.\r\n\r\nSome more detailed debugging notes can be found in the first commit, reproduced below:\r\n```\r\nPreviously, the validation_chainstatemanager_tests test suite\r\ninstantiated its own duplicate ChainstateManager on which tests were\r\nperformed.\r\n\r\nThis wasn't a problem for the specific actions performed in\r\nthat suite. However, the existence of this duplicate ChainstateManager\r\nand the fact that many of our validation static functions reach for\r\ng_chainman, ::Chain(state|)Active means we may end up acting on two\r\ndifferent CChainStates should we write more extensive tests in the\r\nfuture.\r\n\r\nThis change adds a new ChainTestingSetup which performs all\r\ninitialization previously done by TestingSetup except:\r\n\r\n1. Mempool sanity check frequency setting\r\n2. ChainState initialization\r\n3. Genesis Activation\r\n4. {Ban,Conn,Peer}Man initialization\r\n\r\nMeans that we will no longer need to initialize a duplicate\r\nChainstateManger in order to test the initialization codepaths of\r\nCChainState and ChainstateManager.\r\n\r\nLastly, this change has the additional benefit of allowing for\r\nreview-only assertions meant to show correctness to work in future work\r\nde-globalizing g_chainman.\r\n\r\nIn the test chainstatemanager_rebalance_caches, an additional\r\nLoadGenesisBlock call is added as MaybeReblanaceCaches eventually calls\r\nFlushBlockFile, which tries to access vinfoBlockFile[nLastBlockFile],\r\nwhich is out of bounds when LoadGenesisBlock hasn't been called yet.\r\n\r\n-----\r\n\r\nNote for the future:\r\n\r\nIn a previous version of this change, I put ChainTestingSetup between\r\nBasicTestingSetup and TestingSetup such that TestingSetup inherited from\r\nChainTestingSetup.\r\n\r\nThis was suboptimal, and showed how the class con/destructor inheritance\r\nstructure we have for these TestingSetup classes is probably not the\r\nmost suitable abstraction. In particular, for both TestingSetup and\r\nChainTestingSetup, we need to stop the scheduler first before anything\r\nelse. Otherwise classes depending on the scheduler may be referenced\r\nby the scheduler after said classes are freed. This means that there's\r\nno clear parallel between our teardown code and C++'s destructuring\r\norder for class hierarchies.\r\n\r\nFuture work should strive to coalesce (as much as possible) test and\r\nnon-test init codepaths and perhaps structure it in a more fail-proof\r\nway.\r\n```",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "active_lock_reason": "resolved",
    "created_at": "2020-11-05T18:56:53Z",
    "updated_at": "2022-02-15T10:49:24Z",
    "closed_at": "2020-12-09T09:24:41Z",
    "mergeable_state": "unknown",
    "merged_at": "2020-12-09T09:24:41Z",
    "merge_commit_sha": "a3586d592078aab09c56aa372d5adc7d897efb15",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "dongcarl:2020-10-chainman-fixes",
      "ref": "2020-10-chainman-fixes",
      "sha": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "repo": {
        "id": 97671618,
        "node_id": "MDEwOlJlcG9zaXRvcnk5NzY3MTYxOA==",
        "name": "bitcoin",
        "full_name": "dongcarl/bitcoin",
        "owner": {
          "login": "dongcarl",
          "id": 3445290,
          "node_id": "MDQ6VXNlcjM0NDUyOTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dongcarl",
          "html_url": "https://github.com/dongcarl",
          "followers_url": "https://api.github.com/users/dongcarl/followers",
          "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
          "organizations_url": "https://api.github.com/users/dongcarl/orgs",
          "repos_url": "https://api.github.com/users/dongcarl/repos",
          "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/dongcarl/received_events",
          "type": "User",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/dongcarl/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/dongcarl/bitcoin",
        "archive_url": "https://api.github.com/repos/dongcarl/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/dongcarl/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/dongcarl/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/dongcarl/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/dongcarl/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/dongcarl/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/dongcarl/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/dongcarl/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/dongcarl/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/dongcarl/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/dongcarl/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/dongcarl/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/dongcarl/bitcoin/events",
        "forks_url": "https://api.github.com/repos/dongcarl/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/dongcarl/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/dongcarl/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/dongcarl/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/dongcarl/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/dongcarl/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/dongcarl/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/dongcarl/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/dongcarl/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/dongcarl/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/dongcarl/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/dongcarl/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/dongcarl/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/dongcarl/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/dongcarl/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/dongcarl/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:dongcarl/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/dongcarl/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/dongcarl/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/dongcarl/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/dongcarl/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/dongcarl/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/dongcarl/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/dongcarl/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/dongcarl/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/dongcarl/bitcoin/hooks",
        "svn_url": "https://github.com/dongcarl/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 204504,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-05-28T17:13:06Z",
        "created_at": "2017-07-19T04:07:18Z",
        "updated_at": "2022-06-03T10:08:14Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "e98d1d674091681f88c5872f3e3923e37ce81b00",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 35476,
        "stargazers_count": 70608,
        "watchers_count": 70608,
        "size": 236222,
        "default_branch": "master",
        "open_issues_count": 672,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2023-08-02T20:20:41Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2023-08-02T18:21:18Z",
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 88,
    "deletions": 73,
    "changed_files": 4,
    "commits": 2,
    "review_comments": 14,
    "comments": 13
  },
  "events": [
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T19:00:33Z",
      "updated_at": "2020-11-05T19:00:33Z",
      "source": {
        "issue": {
          "id": 722569048,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA0Mjk2MzUx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20158/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20158",
          "number": 20158,
          "state": "closed",
          "state_reason": null,
          "title": "tree-wide: De-globalize ChainstateManager",
          "body": "## Prelude\r\n\r\n**Note to reviewers**: Currently looking Code Review on Sub-PRs (see below)\r\n\r\nOriginally: #20049\r\n\r\n### Sub-PRs\r\n\r\n_Last updated May 9th, 2020_\r\n\r\n- [x] #20323 | tests: Create or use existing properly initialized NodeContexts\r\n- [x] #20946 | fuzz: Consolidate fuzzing TestingSetup initialization\r\n- [x] #20972 | locks: Annotate CTxMemPool::check to require cs_main\r\n- [x] #20749 | [Bundle 1/n] Prune g_chainman usage related to ::LookupBlockIndex\r\n- [x] #20750 | [Bundle 2/n] Prune g_chainman usage in mempool-related validation functions\r\n- [x] #21055 | [Bundle 3/n] Prune remaining g_chainman usage in validation functions\r\n- [x] #21270 | [Bundle 4/n] Prune g_chainman usage in validation-adjacent modules\r\n- [x] #21391 | [Bundle 5/n] Prune g_chainman usage in RPC modules\r\n- [x] #21767 | [Bundle 6/n] Prune g_chainman usage in auxiliary modules\r\n- [x] #21866 | [Bundle 7/n] Farewell, global Chainstate!\r\n\r\n### Todo List\r\n\r\n_Last updated Feb 1st, 2020_\r\n\r\n- [x] Address ryanofsky's comments\r\n\t- [x] https://github.com/bitcoin/bitcoin/pull/20158#discussion_r520639845\r\n\r\n## Motivation\r\n\r\n###  Modularizing our consensus engine\r\n\r\nExcerpt from #20049\r\n> From my reading of past conversations and from a few offline chats, it seems that modularizing our consensus engine is a worthwhile first step towards a more complete isolation of said engine from non-consensus code.\r\n> \r\n> Modularizing our consensus engine means that:\r\n> \r\n> 1. We get clearer visibility into what currently lies in consensus codepaths **and** what depends on our consensus engine\r\n> 1. We can coalesce duplicate consensus initialization codepaths, mitigating against bugs that arise out of test/non-test initialization inconsistencies\r\n\r\n### De-globalizing `g_chainman`\r\n\r\nExcerpt from #20049\r\n> In order to modularize our consensus engine, we need to first de-globalize the global `ChainstateManager` -- namely `g_chainman` -- as it and its dependencies are what makes up the bulk of our consensus engine. A few direct references to `g_chainman` have already been removed in #19927, however, its indirect uses (mainly via `::Chain(state|)Active()`) are numerous in our codebase and often used to ~~cheat~~ avoid obtaining a `ChainstateManager` reference.\r\n\r\n## Description\r\n\r\nThis changeset moves the global `ChainstateManger` to `NodeContext` and removes `::Chain{state,}Active()` as a first step towards better modularization of our consensus engine. \r\n\r\nThe commits are ordered as such:\r\n1. Fixes to our existing codebase crucial to subsequent changes in this changeset\r\nhttps://github.com/bitcoin/bitcoin/compare/master...dongcarl:2020-10-chainman-fixes\r\n1. Remove all references to `g_chainman`, `::Chain{state,}Active()`\r\n\t1. In `src/validation.{cpp,h}`\r\n\t\t1. In a bundle of functions related to `::LookupBlockIndex` in the call graph\r\n\t\thttps://github.com/dongcarl/bitcoin/compare/2020-10-chainman-fixes...dongcarl:2020-09-libbitcoinruntime-v4\r\n\t\t1. In a bundle of functions that are mempool-related\r\n\t\thttps://github.com/dongcarl/bitcoin/compare/dongcarl:2020-09-libbitcoinruntime-v4...2020-09-reduce-validation-mempool-ccsactiveglobal-usage\r\n\t\t1. In a bundle of functions which do not belong in previous bundles\r\n\t\thttps://github.com/dongcarl/bitcoin/compare/2020-09-reduce-validation-mempool-ccsactiveglobal-usage...dongcarl:2020-09-reduce-validation-ccsactiveglobal-usage\r\n\t1. In \"validation-adjacent\" modules of the codebase\r\n\thttps://github.com/dongcarl/bitcoin/compare/dongcarl:2020-09-reduce-validation-ccsactiveglobal-usage...2020-09-libbitcoinruntime-v6\r\n\t\t1. In `src/txmempool.cpp`\r\n\t\t1. In `src/miner.cpp`\r\n\t\t1. In `src/node`\r\n\t\t1. In `src/net_processing.cpp`\r\n\t1. In RPC modules of the codebase\r\n\thttps://github.com/dongcarl/bitcoin/compare/2020-09-libbitcoinruntime-v6...dongcarl:2020-10-libbitcoinruntime-v7\r\n\t\t1. In `src/rpc`\r\n\t\t1. In `src/rest.cpp`\r\n\t1. In auxiliary modules of the codebase\r\n\thttps://github.com/dongcarl/bitcoin/compare/dongcarl:2020-10-libbitcoinruntime-v7...2020-10-libbitcoinruntime-v8\r\n\t\t1. In `src/bench`\r\n\t\t1. In `src/index`\r\n\t1. In initialization codepaths and tests\r\n\thttps://github.com/dongcarl/bitcoin/compare/2020-10-libbitcoinruntime-v8...dongcarl:2020-06-libbitcoinruntime\r\n\t\t1. In `src/init.cpp`\r\n\t\t1. In `src/test`\r\n\t\t1. In `src/wallet/test`\r\n\t\t1. In `src/qt/test`\r\n\r\nA few things to note:\r\n- The above ordering is constructed according to the overall call graph of our codebase such that we avoid touching the same function/module twice. \r\n- Due to the length of this overall change, each commit aims to be trivially-reviewable and only requires the reviewer to reason about the correctness of one function/module at a time.\r\n- There are a lot of review-only assertions which can be used to check for correctness. They are removed in 2236237070a45fe570cd0113f0025b0a46ac89be.\r\n",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135946,
              "node_id": "MDU6TGFiZWwxMzU5NDY=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/GUI",
              "name": "GUI",
              "color": "02d7e1",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            },
            {
              "id": 118378960,
              "node_id": "MDU6TGFiZWwxMTgzNzg5NjA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mining",
              "name": "Mining",
              "color": "c7def8",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 164208572,
              "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
              "name": "Mempool",
              "color": "fef2c0",
              "default": false
            },
            {
              "id": 192202000,
              "node_id": "MDU6TGFiZWwxOTIyMDIwMDA=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Consensus",
              "name": "Consensus",
              "color": "009800",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 17,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20158",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20158",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20158.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20158.patch"
          },
          "closed_at": "2021-06-16T16:19:42Z",
          "created_at": "2020-10-15T18:28:35Z",
          "updated_at": "2022-11-27T09:59:55Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 722598817,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjU5ODgxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722598817",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T19:38:36Z",
      "updated_at": "2020-11-05T19:38:36Z",
      "author_association": "MEMBER",
      "body": "Concept ACK. Thanks for moving ChainTestingSetup into validation_chainstatemanager_tests.cpp!",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-722598817",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "commented",
      "id": 722614162,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjYxNDE2Mg==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722614162",
      "actor": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T20:05:48Z",
      "updated_at": "2020-11-05T20:05:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "practicalswift",
        "id": 7826565,
        "node_id": "MDQ6VXNlcjc4MjY1NjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/practicalswift",
        "html_url": "https://github.com/practicalswift",
        "followers_url": "https://api.github.com/users/practicalswift/followers",
        "following_url": "https://api.github.com/users/practicalswift/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/practicalswift/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/practicalswift/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
        "organizations_url": "https://api.github.com/users/practicalswift/orgs",
        "repos_url": "https://api.github.com/users/practicalswift/repos",
        "events_url": "https://api.github.com/users/practicalswift/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/practicalswift/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-722614162",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "labeled",
      "id": 3964273824,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM5NjQyNzM4MjQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3964273824",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T20:30:40Z",
      "label": {
        "name": "GUI",
        "color": "02d7e1"
      }
    },
    {
      "event": "labeled",
      "id": 3964273826,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM5NjQyNzM4MjY=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3964273826",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T20:30:40Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "labeled",
      "id": 3964419528,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDM5NjQ0MTk1Mjg=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3964419528",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T21:12:16Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 722648327,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjY0ODMyNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/722648327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T21:12:49Z",
      "updated_at": "2020-12-09T09:01:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20228 (addrman: Make addrman a top-level component by jnewbery)\n* #20217 (net: Remove g_relay_txes by jnewbery)\n* #19064 (refactor: Cleanup thread ctor calls by hebasto)\n* #18731 (refactor: Make CCheckQueue RAII-styled by hebasto)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-722648327",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T23:10:17Z",
      "updated_at": "2020-11-05T23:10:17Z",
      "source": {
        "issue": {
          "id": 685710084,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDczMzkxNTc5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19806",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19806/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19806/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19806/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19806",
          "number": 19806,
          "state": "closed",
          "state_reason": null,
          "title": "validation: UTXO snapshot activation",
          "body": "This is part of the [assumeutxo project](https://github.com/bitcoin/bitcoin/projects/11):\r\n\r\nParent PR: #15606 \r\nIssue: #15605 \r\nSpecification: https://github.com/jamesob/assumeutxo-docs/tree/master/proposal\r\n\r\n---\r\n\r\nThis change proposes logic for activating UTXO snapshots, which is unused at the moment aside from an included unittest. There are a few moveonyish/refactoring commits to allow for halfway decent unittests.\r\n\r\nBasic structure is included for specifying and checking the assumeutxo hash values used to validate activated snapshots. Initially I had specified a few height/hash pairs for mainnet in this change, but because of the security-critical nature of those parameters, I figured it was better to leave their inclusion to a future PR that includes only that change - my intent being that reviewers will be more likely to verify those parameters firsthand in a dedicated PR.\r\n\r\nAside from that and the snapshot activation logic, there are a few related changes:\r\n\r\n- ~~allow caching the `nChainTx` value in the CCoinsViewDB; this is set during snapshot activation. Because we don't necessarily have access to the full chain at the time of snapshot load, this value is communicated through the snapshot metadata and must be cached within the chainstate to survive restarts.~~\r\n- break out `CreateUTXOSnapshot()` from dumptxoutset. This is essentially a move-only change to allow the reuse of snapshot creation logic from within unittests.\r\n- ...and a few other misc. changes that are solely related to unittests.\r\n\r\nThe move-onlyish commit is most easily reviewed with `--color-moved=zebra`.",
          "user": {
            "login": "jamesob",
            "id": 73197,
            "node_id": "MDQ6VXNlcjczMTk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesob",
            "html_url": "https://github.com/jamesob",
            "followers_url": "https://api.github.com/users/jamesob/followers",
            "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesob/orgs",
            "repos_url": "https://api.github.com/users/jamesob/repos",
            "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jamesob/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 97470796,
              "node_id": "MDU6TGFiZWw5NzQ3MDc5Ng==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/UTXO%20Db%20and%20Indexes",
              "name": "UTXO Db and Indexes",
              "color": "fbca04",
              "default": false
            },
            {
              "id": 98279177,
              "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
              "name": "RPC/REST/ZMQ",
              "color": "0052cc",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 35,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19806",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19806",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19806.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19806.patch"
          },
          "closed_at": "2021-02-16T18:23:27Z",
          "created_at": "2020-08-25T18:49:41Z",
          "updated_at": "2022-08-18T18:23:16Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-05T23:35:07Z",
      "updated_at": "2020-11-05T23:35:07Z",
      "source": {
        "issue": {
          "id": 649130195,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDQyODIyMTk5",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19425",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19425/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19425/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19425/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19425",
          "number": 19425,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Get rid of more redundant chain methods",
          "body": "This just drops three interfaces::Chain methods replacing them with other calls.\r\n\r\nMotivation for removing these chain methods:\r\n\r\n- Need to get rid of findFirstBlockWithTimeAndHeight for #10102, which doesn't support overloaded methods\r\n- Followup from https://github.com/bitcoin/bitcoin/pull/16426#discussion_r412487403\r\n- phantomcircuit comments about findNextBlock test http://www.erisian.com.au/bitcoin-core-dev/log-2020-06-06.html#l-214\r\n\r\nBehavior is not changing in any way here. A TODO comment in ScanForWalletTransactions was removed, but just because it was invalid (see https://github.com/bitcoin/bitcoin/pull/19195#discussion_r448020762), not because it was implemented.\r\n",
          "user": {
            "login": "ryanofsky",
            "id": 7133040,
            "node_id": "MDQ6VXNlcjcxMzMwNDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanofsky",
            "html_url": "https://github.com/ryanofsky",
            "followers_url": "https://api.github.com/users/ryanofsky/followers",
            "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
            "repos_url": "https://api.github.com/users/ryanofsky/repos",
            "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 2260068353,
              "node_id": "MDU6TGFiZWwyMjYwMDY4MzUz",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/interfaces",
              "name": "interfaces",
              "description": "",
              "color": "83c9fc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 9,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19425",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19425",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19425.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19425.patch"
          },
          "closed_at": "2020-12-08T17:51:38Z",
          "created_at": "2020-07-01T16:54:33Z",
          "updated_at": "2022-02-15T10:49:22Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-06T01:20:09Z",
      "updated_at": "2020-11-06T01:20:09Z",
      "source": {
        "issue": {
          "id": 581753448,
          "node_id": "MDExOlB1bGxSZXF1ZXN0Mzg4NzY5NzUw",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18354/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18354",
          "number": 18354,
          "state": "closed",
          "state_reason": null,
          "title": "Use shared pointers only in validation interface",
          "body": "This pull request fully replace #18279 it fix 3 issues with wallet\r\n1. Crash in wallet destructor while it tries to delete mutex while it's hold by notification thread\r\n2. Crash in notification disconnect due to notification callback is set to nullptr before unregister interface is done\r\n3. Ensure unregister interface has no more background callbacks before returning to notification disconnect",
          "user": {
            "login": "bvbfan",
            "id": 8323581,
            "node_id": "MDQ6VXNlcjgzMjM1ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8323581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bvbfan",
            "html_url": "https://github.com/bvbfan",
            "followers_url": "https://api.github.com/users/bvbfan/followers",
            "following_url": "https://api.github.com/users/bvbfan/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/bvbfan/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/bvbfan/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/bvbfan/subscriptions",
            "organizations_url": "https://api.github.com/users/bvbfan/orgs",
            "repos_url": "https://api.github.com/users/bvbfan/repos",
            "events_url": "https://api.github.com/users/bvbfan/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/bvbfan/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 64585,
              "node_id": "MDU6TGFiZWw2NDU4NQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Bug",
              "name": "Bug",
              "color": "FBBAAB",
              "default": false
            },
            {
              "id": 149424,
              "node_id": "MDU6TGFiZWwxNDk0MjQ=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
              "name": "Wallet",
              "color": "08a781",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18354",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18354",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18354.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18354.patch"
          },
          "closed_at": "2022-02-22T10:56:18Z",
          "created_at": "2020-03-15T17:27:23Z",
          "updated_at": "2023-02-22T10:14:10Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "reviewed",
      "id": 527376694,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3Mzc2Njk0",
      "url": null,
      "actor": null,
      "commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 39387634834a1ef06e587b30fa42a781ce45e460. Obvious ACK. This is just test changes and the first 4 commits from #20158 with commit descriptions tweaked and improved",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#pullrequestreview-527376694",
      "submitted_at": "2020-11-10T16:22:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
    },
    {
      "event": "reviewed",
      "id": 527420359,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NDIwMzU5",
      "url": null,
      "actor": null,
      "commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "utACK 39387634834a1ef06e587b30fa42a781ce45e460\r\n\r\nSome suggestions to remove unneeded code inline.",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#pullrequestreview-527420359",
      "submitted_at": "2020-11-10T17:11:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
    },
    {
      "event": "unlabeled",
      "id": 3980482531,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mzk4MDQ4MjUzMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980482531",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T19:02:07Z",
      "label": {
        "name": "GUI",
        "color": "02d7e1"
      }
    },
    {
      "event": "unlabeled",
      "id": 3980482534,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50Mzk4MDQ4MjUzNA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/3980482534",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-10T19:02:07Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "reviewed",
      "id": 530571798,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNTcxNzk4",
      "url": null,
      "actor": null,
      "commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "promag",
        "id": 3534524,
        "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/promag",
        "html_url": "https://github.com/promag",
        "followers_url": "https://api.github.com/users/promag/followers",
        "following_url": "https://api.github.com/users/promag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/promag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/promag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
        "organizations_url": "https://api.github.com/users/promag/orgs",
        "repos_url": "https://api.github.com/users/promag/repos",
        "events_url": "https://api.github.com/users/promag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/promag/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#pullrequestreview-530571798",
      "submitted_at": "2020-11-14T11:22:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4002554679,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDAwMjU1NDY3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4002554679",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-16T22:07:59Z"
    },
    {
      "event": "commented",
      "id": 729086084,
      "node_id": "MDEyOklzc3VlQ29tbWVudDcyOTA4NjA4NA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/729086084",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-17T17:35:19Z",
      "updated_at": "2020-11-17T17:35:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "Addressed a few comments.\r\n\r\n-----\r\n\r\nfuzz CI failing because of https://github.com/bitcoin/bitcoin/pull/20188#issuecomment-728911018.",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-729086084",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4033548066,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDAzMzU0ODA2Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4033548066",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-11-24T15:52:30Z"
    },
    {
      "event": "reviewed",
      "id": 542084764,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMDg0NzY0",
      "url": null,
      "actor": null,
      "commit_id": "1319b17e15dfd5a3a6bbf3c67b98fcce72c80812",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 1319b17e15dfd5a3a6bbf3c67b98fcce72c80812. Only changes since last review were suggested simplifications to ChainTestingSetup constructor",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#pullrequestreview-542084764",
      "submitted_at": "2020-12-01T16:35:39Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
    },
    {
      "event": "commented",
      "id": 736669735,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNjY2OTczNQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736669735",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T16:38:22Z",
      "updated_at": "2020-12-01T16:38:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hopefully as a test-only cleanup PR with a lot of other changes building on top it (#20158), this can be merged soon",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-736669735",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "commented",
      "id": 736674583,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczNjY3NDU4Mw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/736674583",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-01T16:46:26Z",
      "updated_at": "2020-12-01T16:46:26Z",
      "author_association": "MEMBER",
      "body": "Reason I didn't merge this is that this overlaps with the test changes here: https://github.com/bitcoin/bitcoin/pull/19425#pullrequestreview-534180561. Though there have been outstanding questions and those questions also apply to this pull (in the extent that they overlap).",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-736674583",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "reviewed",
      "id": 542123958,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMTIzOTU4",
      "url": null,
      "actor": null,
      "commit_id": "43c880afbcafa9796c838518722594940af69b7d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "> Reason I didn't merge this is that this overlaps with the test changes here: [#19425 (review)](https://github.com/bitcoin/bitcoin/pull/19425#pullrequestreview-534180561). Though there have been outstanding questions and those questions also apply to this pull (in the extent that they overlap).\r\n\r\nThanks. I guess I need to rebase #19425. I'll check out the test changes too there and make updates if needed to make sure they are compatible with this PR.\r\n\r\nThis PR just takes approach of having fewer duplicate disconnected state objects inside tests, so I don't think there are real questions about it or major drawbacks. But if anyone has concerns or questions (even vague ones), it'd be good to post something so Carl can reply and this work doesn't languish",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#pullrequestreview-542123958",
      "submitted_at": "2020-12-01T17:29:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
    },
    {
      "event": "commented",
      "id": 738734145,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczODczNDE0NQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/738734145",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-04T11:31:10Z",
      "updated_at": "2020-12-04T11:31:10Z",
      "author_association": "MEMBER",
      "body": "utACK 1319b17e15dfd5a3a6bbf3c67b98fcce72c80812",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-738734145",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4074537538,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA3NDUzNzUzOA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4074537538",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-04T21:25:32Z"
    },
    {
      "event": "commented",
      "id": 739035976,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczOTAzNTk3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739035976",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-04T21:40:50Z",
      "updated_at": "2020-12-04T21:43:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pushed 1319b17e15dfd5a3a6bbf3c67b98fcce72c80812 -> 11fac8b2c8001e9aee9debb20df09473b9092b8c:\r\n1. Rebased over master for #20222\r\n2. Changed `assert`s in tests to `BOOST_REQUIRE` as recommended: https://github.com/bitcoin/bitcoin/pull/20323#discussion_r533584267\r\n3. Extracted out testing app initialization and destruction logic into `TestingAppInitSequence` and `TestingAppDestructionSequence` to improve sync and decrease maintenance burden between `ChainTestingSetup` and `TestingSetup` to address: https://github.com/bitcoin/bitcoin/pull/20323#discussion_r520810288\r\n\r\nIn (3), ordering-wise, the script-checking thread initialization was moved up to before the chainstate gets initialized and RPC command registration was moved down. Neither of which should have any tangible effect on the correctness of initialization.\r\n\r\nI can also remove the `bool chain_testing_only` argument to `TestingAppDestructionSequence` as it's a mostly idempotent sequence, somehow I like the self-documentation and symmetry. Let me know what seems better!",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-739035976",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-05T00:25:19Z",
      "updated_at": "2020-12-05T00:25:19Z",
      "source": {
        "issue": {
          "id": 728073037,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA4ODQ3MjQ1",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20228",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20228/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20228/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20228/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20228",
          "number": 20228,
          "state": "closed",
          "state_reason": null,
          "title": "addrman: Make addrman a top-level component",
          "body": "Addrman is currently a member variable of connman. Make it a top-level component with lifetime owned by node.context, and add a reference to addrman in peerman. This allows us to eliminate some functions in connman that are simply forwarding requests to addrman, and simplifies the connman-peerman interface.\r\n\r\nBy constructing the addrman in init, we can also add parameters to the ctor, which allows us to test it better. See #20233, where we enable consistency checking for addrman in our functional tests.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 33,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20228",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20228",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20228.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20228.patch"
          },
          "closed_at": "2021-03-30T10:30:22Z",
          "created_at": "2020-10-23T09:43:07Z",
          "updated_at": "2022-08-16T17:07:06Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-05T00:27:09Z",
      "updated_at": "2020-12-05T00:27:09Z",
      "source": {
        "issue": {
          "id": 727295829,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTA4MjE0NTIz",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20217",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20217/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20217/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20217/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20217",
          "number": 20217,
          "state": "closed",
          "state_reason": null,
          "title": "net: Remove g_relay_txes",
          "body": "`g_relay_txes` is only required inside net_processing and is set only once at startup. Instead of having a global, move it to be a const member of PeerManager.\r\n\r\nThis requires moving `PushNodeVersion()` into `PeerManager`, which also allows us to remove the `connman` argument.",
          "user": {
            "login": "jnewbery",
            "id": 1063656,
            "node_id": "MDQ6VXNlcjEwNjM2NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jnewbery",
            "html_url": "https://github.com/jnewbery",
            "followers_url": "https://api.github.com/users/jnewbery/followers",
            "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
            "organizations_url": "https://api.github.com/users/jnewbery/orgs",
            "repos_url": "https://api.github.com/users/jnewbery/repos",
            "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/jnewbery/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 98298007,
              "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
              "name": "P2P",
              "color": "006b75",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 23,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20217",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20217",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20217.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20217.patch"
          },
          "closed_at": "2020-12-10T06:31:49Z",
          "created_at": "2020-10-22T11:19:38Z",
          "updated_at": "2022-02-15T10:49:28Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-05T02:02:29Z",
      "updated_at": "2020-12-05T02:02:29Z",
      "source": {
        "issue": {
          "id": 623890117,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDIyNDMxNDk3",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19064",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19064/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19064/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19064/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/19064",
          "number": 19064,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Cleanup thread ctor calls",
          "body": "This PR does not change behavior.\r\nIts goal is to improve readability and maintainability of the code. ",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 26,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19064",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/19064",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/19064.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/19064.patch"
          },
          "closed_at": "2021-05-12T07:01:56Z",
          "created_at": "2020-05-24T15:45:04Z",
          "updated_at": "2022-08-18T18:31:04Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-05T02:17:31Z",
      "updated_at": "2020-12-05T02:17:31Z",
      "source": {
        "issue": {
          "id": 606814450,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDA4OTQwNDUy",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18766",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18766/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18766/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18766/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18766",
          "number": 18766,
          "state": "closed",
          "state_reason": null,
          "title": "Disable fee estimation in blocksonly mode (by removing the fee estimates global)",
          "body": "If the `blocksonly` mode is turned on after running with transaction\r\nrelay enabled for a while, the fee estimation will serve outdated data\r\nto both the internal wallet and to external applications that might be\r\nfeerate-sensitive and make use of `estimatesmartfee` (for example a\r\nLightning Network node).\r\n\r\nThis has already caused issues (for example https://github.com/bitcoin/bitcoin/issues/16840 (C-lightning), or https://github.com/lightningnetwork/lnd/issues/2562 (LND)) and it seems prudent to fail rather than to give inaccurate values.\r\n\r\nThis fixes #16840, and closes #16890 which tried to fix the symptoms (RPC) but not the cause as mentioned by sdaftuar :\r\n> If this is a substantial problem, then I would think we should take action to protect our own wallet users as well (rather than hide the results of what our fee estimation would do!).",
          "user": {
            "login": "darosior",
            "id": 22457751,
            "node_id": "MDQ6VXNlcjIyNDU3NzUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darosior",
            "html_url": "https://github.com/darosior",
            "followers_url": "https://api.github.com/users/darosior/followers",
            "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
            "organizations_url": "https://api.github.com/users/darosior/orgs",
            "repos_url": "https://api.github.com/users/darosior/repos",
            "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/darosior/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 82428251,
              "node_id": "MDU6TGFiZWw4MjQyODI1MQ==",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/TX%20fees%20and%20policy",
              "name": "TX fees and policy",
              "color": "5319e7",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 36,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18766",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18766",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18766.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18766.patch"
          },
          "closed_at": "2020-12-07T12:02:02Z",
          "created_at": "2020-04-25T17:13:47Z",
          "updated_at": "2022-08-16T17:02:38Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-05T02:19:27Z",
      "updated_at": "2020-12-05T02:19:27Z",
      "source": {
        "issue": {
          "id": 604368916,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDA2OTc3Mjg0",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18731",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18731/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18731/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18731/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18731",
          "number": 18731,
          "state": "closed",
          "state_reason": null,
          "title": "refactor: Make CCheckQueue RAII-styled",
          "body": "This PR:\r\n- makes `CCheckQueue` RAII-styled\r\n- gets rid of two global variables:\r\n  - `scriptcheckqueue`\r\n  - `g_parallel_script_checks`\r\n\r\nThis PR is based on #18710, therefore only the last two commits should be considered.",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 955867938,
              "node_id": "MDU6TGFiZWw5NTU4Njc5Mzg=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Needs%20rebase",
              "name": "Needs rebase",
              "description": "",
              "color": "cccccc",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "locked": false,
          "comments": 20,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18731",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18731",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18731.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18731.patch"
          },
          "closed_at": "2022-04-22T14:31:40Z",
          "created_at": "2020-04-22T00:33:08Z",
          "updated_at": "2022-12-28T13:18:44Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-05T02:21:19Z",
      "updated_at": "2020-12-05T02:21:19Z",
      "source": {
        "issue": {
          "id": 603299146,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NDA2MTEyNjEx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18710",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18710/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18710/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18710/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/18710",
          "number": 18710,
          "state": "closed",
          "state_reason": null,
          "title": "Add local thread pool to CCheckQueue",
          "body": "This PR:\r\n- gets rid of `boost::thread_group` in the `CCheckQueue` class\r\n- allows thread safety annotation usage in the `CCheckQueue` class\r\n- is alternative to #14464 (https://github.com/bitcoin/bitcoin/pull/18710#issuecomment-616618525, https://github.com/bitcoin/bitcoin/pull/18710#issuecomment-617291612)\r\n\r\nAlso, with this PR (I hope) it could be easier to resurrect a bunch of brilliant ideas from #9938.\r\n\r\nRelated: #17307",
          "user": {
            "login": "hebasto",
            "id": 32963518,
            "node_id": "MDQ6VXNlcjMyOTYzNTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hebasto",
            "html_url": "https://github.com/hebasto",
            "followers_url": "https://api.github.com/users/hebasto/followers",
            "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
            "organizations_url": "https://api.github.com/users/hebasto/orgs",
            "repos_url": "https://api.github.com/users/hebasto/repos",
            "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/hebasto/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "MEMBER",
          "milestone": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47",
            "html_url": "https://github.com/bitcoin/bitcoin/milestone/47",
            "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/47/labels",
            "id": 5347322,
            "node_id": "MDk6TWlsZXN0b25lNTM0NzMyMg==",
            "number": 47,
            "state": "closed",
            "title": "22.0",
            "description": "",
            "creator": {
              "login": "MarcoFalke",
              "id": 6399679,
              "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
              "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/MarcoFalke",
              "html_url": "https://github.com/MarcoFalke",
              "followers_url": "https://api.github.com/users/MarcoFalke/followers",
              "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
              "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
              "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
              "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
              "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
              "repos_url": "https://api.github.com/users/MarcoFalke/repos",
              "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
              "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
              "type": "User",
              "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 124,
            "created_at": "2020-04-25T00:14:49Z",
            "updated_at": "2021-09-14T07:16:53Z",
            "closed_at": "2021-09-09T12:47:52Z"
          },
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 48,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18710",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/18710",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/18710.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/18710.patch"
          },
          "closed_at": "2021-01-25T19:21:55Z",
          "created_at": "2020-04-20T14:51:38Z",
          "updated_at": "2022-08-16T17:03:20Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "commented",
      "id": 739830876,
      "node_id": "MDEyOklzc3VlQ29tbWVudDczOTgzMDg3Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/739830876",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T10:34:43Z",
      "updated_at": "2020-12-07T10:34:43Z",
      "author_association": "MEMBER",
      "body": "I've had a quick look through the new branch and find the `TestingAppInitSequence()` and `TestingAppDestructionSequence()` less clear than the previous version. In general functions that take a bool argument which substantially changes the logic inside that function (in this case `chain_testing_only`), suggest that the abstraction may be wrong.\r\n\r\nWas there an actual problem with the previous branch, or are you just trying to reduce code duplication?",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-739830876",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "reviewed",
      "id": 546028109,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2MDI4MTA5",
      "url": null,
      "actor": null,
      "commit_id": "11fac8b2c8001e9aee9debb20df09473b9092b8c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left some comments",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#pullrequestreview-546028109",
      "submitted_at": "2020-12-07T10:49:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
    },
    {
      "event": "labeled",
      "id": 4079524912,
      "node_id": "MDEyOkxhYmVsZWRFdmVudDQwNzk1MjQ5MTI=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4079524912",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-07T13:04:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 546644352,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjQ0MzUy",
      "url": null,
      "actor": null,
      "commit_id": "11fac8b2c8001e9aee9debb20df09473b9092b8c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 11fac8b2c8001e9aee9debb20df09473b9092b8c. Changes since last review are deduping test init functions and replacing asserts (thanks!).\r\n\r\nOther review suggestions for splitting up functions instead of using a bool arguments seem reasonable. \r\n\r\nAnother idea (not sure whether it is good or applicable): an alternative to calling pairs of functions in constructors and destructors is to just add class members. Member constructors will run in containing class's default constructor, and same with destructors. Seems like this would allow getting rid of the 4 one-line constructor/destructors.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#pullrequestreview-546644352",
      "submitted_at": "2020-12-08T00:09:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTllN2ZlNTY3MzRkNzI5ZWQ3ZGUzOWU4ODA1NzdiMTM1ZGZkMzY4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e9e7fe56734d729ed7de39e880577b135dfd368",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7e9e7fe56734d729ed7de39e880577b135dfd368",
      "tree": {
        "sha": "e8c77282202b2bc27826f46e2158ebd23838785f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8c77282202b2bc27826f46e2158ebd23838785f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e98d1d674091681f88c5872f3e3923e37ce81b00",
          "sha": "e98d1d674091681f88c5872f3e3923e37ce81b00",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e98d1d674091681f88c5872f3e3923e37ce81b00"
        }
      ],
      "message": "qt/test: [FIX] Add forgotten Context setting in RPCNestedTests",
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-12-08T19:22:43Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-08-28T20:27:32Z"
      },
      "sha": "7e9e7fe56734d729ed7de39e880577b135dfd368"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTEzN2M2MGZlNjIzNDU2OWUxYzVlNjc2MGYzYTZmMDE2OTU2OTQ0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/81137c60fe6234569e1c5e6760f3a6f016956944",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/81137c60fe6234569e1c5e6760f3a6f016956944",
      "tree": {
        "sha": "4a42001467db2fae5d9a086cdeb3131960f3f93f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a42001467db2fae5d9a086cdeb3131960f3f93f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e9e7fe56734d729ed7de39e880577b135dfd368",
          "sha": "7e9e7fe56734d729ed7de39e880577b135dfd368",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7e9e7fe56734d729ed7de39e880577b135dfd368"
        }
      ],
      "message": "test: Add new ChainTestingSetup and use it\n\nPreviously, the validation_chainstatemanager_tests test suite\ninstantiated its own duplicate ChainstateManager on which tests were\nperformed.\n\nThis wasn't a problem for the specific actions performed in\nthat suite. However, the existence of this duplicate ChainstateManager\nand the fact that many of our validation static functions reach for\ng_chainman, ::Chain(state|)Active means we may end up acting on two\ndifferent CChainStates should we write more extensive tests in the\nfuture.\n\nThis change adds a new ChainTestingSetup which performs all\ninitialization previously done by TestingSetup except:\n\n1. RPC command registration\n2. ChainState initialization\n3. Genesis Activation\n4. {Ban,Conn,Peer}Man initialization\n\nMeans that we will no longer need to initialize a duplicate\nChainstateManger in order to test the initialization codepaths of\nCChainState and ChainstateManager.\n\nLastly, this change has the additional benefit of allowing for\nreview-only assertions meant to show correctness to work in future work\nde-globalizing g_chainman.\n\nIn the test chainstatemanager_rebalance_caches, an additional\nLoadGenesisBlock call is added as MaybeReblanaceCaches eventually calls\nFlushBlockFile, which tries to access vinfoBlockFile[nLastBlockFile],\nwhich is out of bounds when LoadGenesisBlock hasn't been called yet.\n\n-----\n\nNote for the future:\n\nThe class con/destructor inheritance structure we have for these\nTestingSetup classes is probably not the most suitable abstraction. In\nparticular, for both TestingSetup and ChainTestingSetup, we need to stop\nthe scheduler first before anything else. Otherwise classes depending on\nthe scheduler may be referenced by the scheduler after said classes are\nfreed. This means that there's no clear parallel between our teardown\ncode and C++'s destructuring order for class hierarchies.\n\nFuture work should strive to coalesce (as much as possible) test and\nnon-test init codepaths and perhaps structure it in a more fail-proof\nway.",
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-12-08T20:00:25Z"
      },
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-10-13T20:55:20Z"
      },
      "sha": "81137c60fe6234569e1c5e6760f3a6f016956944"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 4086523978,
      "node_id": "MDIzOkhlYWRSZWZGb3JjZVB1c2hlZEV2ZW50NDA4NjUyMzk3OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4086523978",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T20:01:40Z"
    },
    {
      "event": "commented",
      "id": 740960339,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDk2MDMzOQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/740960339",
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T20:10:41Z",
      "updated_at": "2020-12-08T21:08:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks everyone for the reviews. The latest push 81137c6 is now rebased over #19485.\r\n\r\nThis PR is intended to just move things around a bit for the rest of the `ChainstateManager` de-globalization to work properly. I believe we've gotten a bit stuck on the intricacies of these `TestingSetup` abstractions.\r\n\r\nPersonally, I don't particularly care how the abstraction works here. The `TestingSetup` classes and their inheritance hierarchy is a somewhat poor abstraction of how our initialization and de-initialization logic work. Therefore, I'd like to just fix this particular problem for now and move on.\r\n\r\nI do fully intend on coming back to the initialization codepaths later, most likely after having moved a couple of mutable statics into classes they logically belong in, and having a larger PR that coalesces and cleans all of this up.\r\n\r\n-----\r\n\r\nIn this latest push I:\r\n\r\n1. Reverted back to my original solution of having this inheritance chain: `TestingSetup` -> `ChainTestingSetup` -> `BasicTestingSetup`. This has the advantage of not having to introduce any new functions.\r\n\tCompared to my last try at making this work, I now take advantage of the idempotency of our teardown sequence and have `~ChainTestingSetup` teardown all application logic while `~TestingSetup` inherits from it.\r\n2. Put `ChainTestingSetup` back in `setup_common` so that future tests can use it as requested [here](https://github.com/bitcoin/bitcoin/pull/20323#discussion_r537407409). (Sorry John, I knew you weren't the biggest fan of this 😕)\r\n\r\n-----\r\n\r\n> jnewbery: Was there an actual problem with the previous branch, or are you just trying to reduce code duplication?\r\n\r\nThere wasn't an actual problem with the previous branch, MarcoFalke brought up the concern that it was harder to maintain duplicate codepaths, so this previous push was a (perhaps poorly conceived) attempt at doing so. I agree w/re the bool argument and have since reverted to something similar to how I originally attempted this which avoids using a bool argument.",
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-740960339",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "unlabeled",
      "id": 4086639586,
      "node_id": "MDE0OlVubGFiZWxlZEV2ZW50NDA4NjYzOTU4Ng==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4086639586",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-08T20:33:44Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 547674245,
      "node_id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3Njc0MjQ1",
      "url": null,
      "actor": null,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 81137c60fe6234569e1c5e6760f3a6f016956944. This change is simpler after the rebase because wallet & bench commits are dropped.\r\n\r\nAlong with the rebase, new test init functions were dropped again in response to https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-739830876, which is fine. I think in the longer run more init code can be moved into RAII classes, and we won't need these intricate initialization functions and class hierarchies (tests could just state their resource requirements as variable declarations).",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#pullrequestreview-547674245",
      "submitted_at": "2020-12-08T22:09:22Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
    },
    {
      "event": "commented",
      "id": 741575690,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTU3NTY5MA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741575690",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T06:57:38Z",
      "updated_at": "2020-12-09T06:57:38Z",
      "author_association": "MEMBER",
      "body": "Thanks for shuffling this around for over a month\r\n\r\nACK 81137c60fe looking excellent now 🐩\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 81137c60fe looking excellent now 🐩\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjLNQv9G0SWcw2rzItf1EIttkPPy6CX5BxM3WRp4MY+hW42LikQIcTm236LyD9t\r\n/e4homRxM0DT1q6/JKin3RP4y1O4zpLswFaz8nNH7ScmLGyTNdb/HUDxLLNqnynb\r\nTYZYpZP6Md/EWjCoF2kKEBlVmzUeehagq3L9gQ7udXTMZtMu2z1jP6v7/TLe6XxA\r\nHqABCQn9BJYcD5dqHETg4TYBP2hG5bUnh5rmJWHnn0ifdEmnS4cbExtHCL9nxQpF\r\n1evmfgdk6nXzkkEllJsOm2tYVGhacW5Z483w/jFveBPmVJgduYmAO5mddMreqV/5\r\n/1Gegw1YQnb6LmEyHhsD2POxlidXksNTOEAyghOwylFFPN8467R/LQEXr8ltstQ9\r\nNnhkoCNVgSDBuzkdTB+n8S6gfQyTp2T3klrqr3GHJIPlRikRLGI5bOwtjtZsFkGX\r\nj5508lSIANRoUKGv3nbfWL47l8he+dYMfCvpqkLWxRPqGT+MnIQV9aRKKxLcSFIb\r\nczC392Ra\r\n=hAKu\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `1fd492318f7f8e7f0f9f62fce5042d824a2c5c3fcb368e2027f02582ea8ed27e  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e8929401081fd492318f7f8e7f0f9f62fce5042d824a2c5c3fcb368e2027f02582ea8ed27ef0103e3593fed7da326e22d4c7cab47b6a5808fff01060f86268a2ab50023831207e0d17d5c408f1045fd07539f0081526a420059384e10083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff0108a21a35dba35cb523c2d87be010dd57c08f1045fd07539f008e8d8c81035886ace0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff010a7cb02798d158bbec4791e51dc25387f08f1045fd07539f0089607b427ecf873830083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010cf5aa2e6831f77a75373d16afe36cd4f08f1045fd07539f008f6d3a6b761ae1a890083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-741575690",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "commented",
      "id": 741577830,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTU3NzgzMA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741577830",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T07:02:09Z",
      "updated_at": "2020-12-09T07:02:09Z",
      "author_association": "MEMBER",
      "body": "> 2. Put ChainTestingSetup back in setup_common so that future tests can use it as requested here. (Sorry John, I knew you weren't the biggest fan of this confused)\r\n\r\nOk, let's wait for @jnewbery 's green light before merge",
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-741577830",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "mentioned",
      "id": 4088387217,
      "node_id": "MDE0Ok1lbnRpb25lZEV2ZW50NDA4ODM4NzIxNw==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4088387217",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T07:02:09Z"
    },
    {
      "event": "subscribed",
      "id": 4088387223,
      "node_id": "MDE1OlN1YnNjcmliZWRFdmVudDQwODgzODcyMjM=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4088387223",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T07:02:10Z"
    },
    {
      "event": "commented",
      "id": 741628388,
      "node_id": "MDEyOklzc3VlQ29tbWVudDc0MTYyODM4OA==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/741628388",
      "actor": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T08:50:48Z",
      "updated_at": "2020-12-09T08:50:48Z",
      "author_association": "MEMBER",
      "body": "ACK 81137c60fe6234569e1c5e6760f3a6f016956944",
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#issuecomment-741628388",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20323"
    },
    {
      "event": "merged",
      "id": 4088919079,
      "node_id": "MDExOk1lcmdlZEV2ZW50NDA4ODkxOTA3OQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4088919079",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "a3586d592078aab09c56aa372d5adc7d897efb15",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3586d592078aab09c56aa372d5adc7d897efb15",
      "created_at": "2020-12-09T09:24:41Z"
    },
    {
      "event": "closed",
      "id": 4088919101,
      "node_id": "MDExOkNsb3NlZEV2ZW50NDA4ODkxOTEwMQ==",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4088919101",
      "actor": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2020-12-09T09:24:41Z"
    },
    {
      "event": "referenced",
      "id": 4090837204,
      "node_id": "MDE1OlJlZmVyZW5jZWRFdmVudDQwOTA4MzcyMDQ=",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/4090837204",
      "actor": {
        "login": "sidhujag",
        "id": 6238042,
        "node_id": "MDQ6VXNlcjYyMzgwNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6238042?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sidhujag",
        "html_url": "https://github.com/sidhujag",
        "followers_url": "https://api.github.com/users/sidhujag/followers",
        "following_url": "https://api.github.com/users/sidhujag/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sidhujag/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sidhujag/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sidhujag/subscriptions",
        "organizations_url": "https://api.github.com/users/sidhujag/orgs",
        "repos_url": "https://api.github.com/users/sidhujag/repos",
        "events_url": "https://api.github.com/users/sidhujag/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sidhujag/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": "d771bbd04bc84643d4fec3c63a2164c5b14bb556",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/d771bbd04bc84643d4fec3c63a2164c5b14bb556",
      "created_at": "2020-12-09T16:28:38Z"
    },
    {
      "event": "cross-referenced",
      "id": null,
      "node_id": null,
      "url": null,
      "actor": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2021-01-12T20:19:11Z",
      "updated_at": "2021-01-12T20:19:11Z",
      "source": {
        "issue": {
          "id": 773155422,
          "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ0MjkwODcx",
          "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20749",
          "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
          "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20749/labels%7B/name%7D",
          "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20749/comments",
          "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20749/events",
          "html_url": "https://github.com/bitcoin/bitcoin/pull/20749",
          "number": 20749,
          "state": "closed",
          "state_reason": null,
          "title": "[Bundle 1/n] Prune g_chainman usage related to ::LookupBlockIndex",
          "body": "Overall PR: #20158 (tree-wide: De-globalize ChainstateManager)\r\n\r\nNote to reviewers:\r\n1. This bundle may _apparently_ introduce usage of `g_chainman` or `::Chain(state|)Active()` globals, but these are resolved later on in the overall PR. [Commits of overall PR](https://github.com/bitcoin/bitcoin/pull/20158/commits)\r\n2. There may be seemingly obvious local references to `ChainstateManager` or other validation objects which are not being used in callers of the current function in question, this is done intentionally to **_keep each commit centered around one function/method_** to ease review and to make the overall change systematic. We don't assume anything about our callers. Rest assured that once we are considering that particular caller in later commits, we will use the obvious local references. [Commits of overall PR](https://github.com/bitcoin/bitcoin/pull/20158/commits)\r\n3. When changing a function/method that has many callers (e.g. `LookupBlockIndex` with 55 callers), it is sometimes easier (and less error-prone) to use a scripted-diff. When doing so, there will be 3 commits in sequence so that every commit compiles like so:\r\n\t1. Add `new_function`, make `old_function` a wrapper of `new_function`, divert all calls to `old_function` to `new_function` **in the local module only**\r\n\t2. Scripted-diff to divert all calls to `old_function` to `new_function` **in the rest of the codebase**\r\n\t3. Remove `old_function`",
          "user": {
            "login": "dongcarl",
            "id": 3445290,
            "node_id": "MDQ6VXNlcjM0NDUyOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongcarl",
            "html_url": "https://github.com/dongcarl",
            "followers_url": "https://api.github.com/users/dongcarl/followers",
            "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
            "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
            "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
            "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
            "organizations_url": "https://api.github.com/users/dongcarl/orgs",
            "repos_url": "https://api.github.com/users/dongcarl/repos",
            "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
            "received_events_url": "https://api.github.com/users/dongcarl/received_events",
            "type": "User",
            "site_admin": false
          },
          "labels": [
            {
              "id": 135961,
              "node_id": "MDU6TGFiZWwxMzU5NjE=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
              "name": "Refactoring",
              "color": "E6F6D6",
              "default": false
            },
            {
              "id": 118379652,
              "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
              "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
              "name": "Validation",
              "color": "6060aa",
              "default": false
            }
          ],
          "assignees": [],
          "author_association": "CONTRIBUTOR",
          "locked": true,
          "active_lock_reason": "resolved",
          "comments": 21,
          "pull_request": {
            "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20749",
            "html_url": "https://github.com/bitcoin/bitcoin/pull/20749",
            "diff_url": "https://github.com/bitcoin/bitcoin/pull/20749.diff",
            "patch_url": "https://github.com/bitcoin/bitcoin/pull/20749.patch"
          },
          "closed_at": "2021-02-01T12:10:10Z",
          "created_at": "2020-12-22T18:25:20Z",
          "updated_at": "2022-08-16T17:12:09Z"
        },
        "type": "issue"
      }
    },
    {
      "event": "locked",
      "id": 6073914956,
      "node_id": "LOE_lADOABII584r8I3nzwAAAAFqCJZM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/6073914956",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2022-02-15T10:49:24Z",
      "lock_reason": "resolved"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520726209",
      "pull_request_review_id": 527420359,
      "id": 520726209,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcyNjIwOQ==",
      "diff_hunk": "@@ -15,15 +18,62 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, TestingSetup)\n+struct ChainTestingSetup : public BasicTestingSetup {\n+    boost::thread_group threadGroup;\n+\n+    explicit ChainTestingSetup(const std::string& chainName = CBaseChainParams::MAIN, const std::vector<const char*>& extra_args = {})",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "You don't need these ctor arguments. Just remove them and call `BasicTestingSetup()` (which will use the default arguments for its constructor).",
      "created_at": "2020-11-10T17:07:12Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r520726209",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520726209"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520726307",
      "pull_request_review_id": 527420359,
      "id": 520726307,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcyNjMwNw==",
      "diff_hunk": "@@ -15,15 +18,62 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, TestingSetup)\n+struct ChainTestingSetup : public BasicTestingSetup {\n+    boost::thread_group threadGroup;\n+\n+    explicit ChainTestingSetup(const std::string& chainName = CBaseChainParams::MAIN, const std::vector<const char*>& extra_args = {})\n+        : BasicTestingSetup(chainName, extra_args)\n+    {\n+        // Ideally we'd move all the RPC tests to the functional testing framework\n+        // instead of unit tests, but for now we need these here.\n+        RegisterAllCoreRPCCommands(tableRPC);",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Not needed. Remove.",
      "created_at": "2020-11-10T17:07:21Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r520726307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520726307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": 27,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520726677",
      "pull_request_review_id": 527420359,
      "id": 520726677,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcyNjY3Nw==",
      "diff_hunk": "@@ -15,15 +18,62 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, TestingSetup)\n+struct ChainTestingSetup : public BasicTestingSetup {\n+    boost::thread_group threadGroup;\n+\n+    explicit ChainTestingSetup(const std::string& chainName = CBaseChainParams::MAIN, const std::vector<const char*>& extra_args = {})\n+        : BasicTestingSetup(chainName, extra_args)\n+    {\n+        // Ideally we'd move all the RPC tests to the functional testing framework\n+        // instead of unit tests, but for now we need these here.\n+        RegisterAllCoreRPCCommands(tableRPC);\n+\n+        m_node.scheduler = MakeUnique<CScheduler>();",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I'd suggest moving this below the \"We have to run...\" comment, since it fits with the code there.",
      "created_at": "2020-11-10T17:07:56Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r520726677",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520726677"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 31,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520726782",
      "pull_request_review_id": 527420359,
      "id": 520726782,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcyNjc4Mg==",
      "diff_hunk": "@@ -15,15 +18,62 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, TestingSetup)\n+struct ChainTestingSetup : public BasicTestingSetup {\n+    boost::thread_group threadGroup;\n+\n+    explicit ChainTestingSetup(const std::string& chainName = CBaseChainParams::MAIN, const std::vector<const char*>& extra_args = {})\n+        : BasicTestingSetup(chainName, extra_args)\n+    {\n+        // Ideally we'd move all the RPC tests to the functional testing framework\n+        // instead of unit tests, but for now we need these here.\n+        RegisterAllCoreRPCCommands(tableRPC);\n+\n+        m_node.scheduler = MakeUnique<CScheduler>();\n+\n+        // We have to run a scheduler thread to prevent ActivateBestChain\n+        // from blocking due to queue overrun.\n+        threadGroup.create_thread([&] { TraceThread(\"scheduler\", [&] { m_node.scheduler->serviceQueue(); }); });\n+        GetMainSignals().RegisterBackgroundSignalScheduler(*m_node.scheduler);\n+\n+        pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n+\n+        m_node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator);\n+\n+        m_node.chainman = &::g_chainman;\n+\n+        // Start script-checking threads. Set g_parallel_script_checks to true so they are used.\n+        constexpr int script_check_threads = 2;\n+        for (int i = 0; i < script_check_threads; ++i) {\n+            threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n+        }\n+        g_parallel_script_checks = true;\n+    }\n+    ~ChainTestingSetup() {\n+        if (m_node.scheduler) m_node.scheduler->stop();\n+        threadGroup.interrupt_all();\n+        threadGroup.join_all();\n+        GetMainSignals().FlushBackgroundCallbacks();\n+        GetMainSignals().UnregisterBackgroundSignalScheduler();\n+        m_node.args = nullptr;",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Remove this line.",
      "created_at": "2020-11-10T17:08:06Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r520726782",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520726782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520727442",
      "pull_request_review_id": 527420359,
      "id": 520727442,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcyNzQ0Mg==",
      "diff_hunk": "@@ -5,6 +5,9 @@\n #include <chainparams.h>\n #include <consensus/validation.h>\n #include <random.h>\n+#include <rpc/register.h>\n+#include <rpc/server.h>",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "in_reply_to_id": null,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Remove",
      "created_at": "2020-11-10T17:09:05Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r520727442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520727442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": 8,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520802498",
      "pull_request_review_id": 527517158,
      "id": 520802498,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMjQ5OA==",
      "diff_hunk": "@@ -15,15 +18,62 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, TestingSetup)\n+struct ChainTestingSetup : public BasicTestingSetup {\n+    boost::thread_group threadGroup;\n+\n+    explicit ChainTestingSetup(const std::string& chainName = CBaseChainParams::MAIN, const std::vector<const char*>& extra_args = {})\n+        : BasicTestingSetup(chainName, extra_args)\n+    {\n+        // Ideally we'd move all the RPC tests to the functional testing framework\n+        // instead of unit tests, but for now we need these here.\n+        RegisterAllCoreRPCCommands(tableRPC);\n+\n+        m_node.scheduler = MakeUnique<CScheduler>();\n+\n+        // We have to run a scheduler thread to prevent ActivateBestChain\n+        // from blocking due to queue overrun.\n+        threadGroup.create_thread([&] { TraceThread(\"scheduler\", [&] { m_node.scheduler->serviceQueue(); }); });\n+        GetMainSignals().RegisterBackgroundSignalScheduler(*m_node.scheduler);\n+\n+        pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n+\n+        m_node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator);\n+\n+        m_node.chainman = &::g_chainman;\n+\n+        // Start script-checking threads. Set g_parallel_script_checks to true so they are used.\n+        constexpr int script_check_threads = 2;\n+        for (int i = 0; i < script_check_threads; ++i) {\n+            threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n+        }\n+        g_parallel_script_checks = true;\n+    }\n+    ~ChainTestingSetup() {\n+        if (m_node.scheduler) m_node.scheduler->stop();\n+        threadGroup.interrupt_all();\n+        threadGroup.join_all();\n+        GetMainSignals().FlushBackgroundCallbacks();\n+        GetMainSignals().UnregisterBackgroundSignalScheduler();\n+        m_node.args = nullptr;",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "in_reply_to_id": 520726782,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "I copied this from `~TestingSetup`, is there a reason why this is needed there and not here?",
      "created_at": "2020-11-10T18:59:35Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r520802498",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520802498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520810288",
      "pull_request_review_id": 527525530,
      "id": 520810288,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxMDI4OA==",
      "diff_hunk": "@@ -15,15 +18,62 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, TestingSetup)\n+struct ChainTestingSetup : public BasicTestingSetup {\n+    boost::thread_group threadGroup;\n+\n+    explicit ChainTestingSetup(const std::string& chainName = CBaseChainParams::MAIN, const std::vector<const char*>& extra_args = {})\n+        : BasicTestingSetup(chainName, extra_args)\n+    {\n+        // Ideally we'd move all the RPC tests to the functional testing framework\n+        // instead of unit tests, but for now we need these here.\n+        RegisterAllCoreRPCCommands(tableRPC);\n+\n+        m_node.scheduler = MakeUnique<CScheduler>();\n+\n+        // We have to run a scheduler thread to prevent ActivateBestChain\n+        // from blocking due to queue overrun.\n+        threadGroup.create_thread([&] { TraceThread(\"scheduler\", [&] { m_node.scheduler->serviceQueue(); }); });\n+        GetMainSignals().RegisterBackgroundSignalScheduler(*m_node.scheduler);\n+\n+        pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n+\n+        m_node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator);\n+\n+        m_node.chainman = &::g_chainman;\n+\n+        // Start script-checking threads. Set g_parallel_script_checks to true so they are used.\n+        constexpr int script_check_threads = 2;\n+        for (int i = 0; i < script_check_threads; ++i) {\n+            threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n+        }\n+        g_parallel_script_checks = true;\n+    }\n+    ~ChainTestingSetup() {\n+        if (m_node.scheduler) m_node.scheduler->stop();\n+        threadGroup.interrupt_all();\n+        threadGroup.join_all();\n+        GetMainSignals().FlushBackgroundCallbacks();\n+        GetMainSignals().UnregisterBackgroundSignalScheduler();\n+        m_node.args = nullptr;",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "in_reply_to_id": 520726782,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "It's a bit odd to have the low level code copied here, and require modifying `src/test/validation_chainstatemanager_tests.cpp` whenever the testing setup is upgraded.\r\n\r\nwouldn't it be possible to simply keep using the `TestingSetup` here, like the tests did previously, and then do specific undo-hacks (hopefully less code) to unload the chainstates (and/or whatever else is required)",
      "created_at": "2020-11-10T19:11:05Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r520810288",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520810288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520821707",
      "pull_request_review_id": 527539975,
      "id": 520821707,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgyMTcwNw==",
      "diff_hunk": "@@ -15,15 +18,62 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, TestingSetup)\n+struct ChainTestingSetup : public BasicTestingSetup {\n+    boost::thread_group threadGroup;\n+\n+    explicit ChainTestingSetup(const std::string& chainName = CBaseChainParams::MAIN, const std::vector<const char*>& extra_args = {})\n+        : BasicTestingSetup(chainName, extra_args)\n+    {\n+        // Ideally we'd move all the RPC tests to the functional testing framework\n+        // instead of unit tests, but for now we need these here.\n+        RegisterAllCoreRPCCommands(tableRPC);\n+\n+        m_node.scheduler = MakeUnique<CScheduler>();\n+\n+        // We have to run a scheduler thread to prevent ActivateBestChain\n+        // from blocking due to queue overrun.\n+        threadGroup.create_thread([&] { TraceThread(\"scheduler\", [&] { m_node.scheduler->serviceQueue(); }); });\n+        GetMainSignals().RegisterBackgroundSignalScheduler(*m_node.scheduler);\n+\n+        pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n+\n+        m_node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator);\n+\n+        m_node.chainman = &::g_chainman;\n+\n+        // Start script-checking threads. Set g_parallel_script_checks to true so they are used.\n+        constexpr int script_check_threads = 2;\n+        for (int i = 0; i < script_check_threads; ++i) {\n+            threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n+        }\n+        g_parallel_script_checks = true;\n+    }\n+    ~ChainTestingSetup() {\n+        if (m_node.scheduler) m_node.scheduler->stop();\n+        threadGroup.interrupt_all();\n+        threadGroup.join_all();\n+        GetMainSignals().FlushBackgroundCallbacks();\n+        GetMainSignals().UnregisterBackgroundSignalScheduler();\n+        m_node.args = nullptr;",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "in_reply_to_id": 520726782,
      "user": {
        "login": "jnewbery",
        "id": 1063656,
        "node_id": "MDQ6VXNlcjEwNjM2NTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jnewbery",
        "html_url": "https://github.com/jnewbery",
        "followers_url": "https://api.github.com/users/jnewbery/followers",
        "following_url": "https://api.github.com/users/jnewbery/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jnewbery/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jnewbery/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
        "organizations_url": "https://api.github.com/users/jnewbery/orgs",
        "repos_url": "https://api.github.com/users/jnewbery/repos",
        "events_url": "https://api.github.com/users/jnewbery/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jnewbery/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "oops. My mistake. This should be left. I was confusing it with the RPC registration/deregistration.",
      "created_at": "2020-11-10T19:30:47Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r520821707",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/520821707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/524803514",
      "pull_request_review_id": 531929567,
      "id": 524803514,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgwMzUxNA==",
      "diff_hunk": "@@ -15,15 +18,62 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, TestingSetup)\n+struct ChainTestingSetup : public BasicTestingSetup {\n+    boost::thread_group threadGroup;\n+\n+    explicit ChainTestingSetup(const std::string& chainName = CBaseChainParams::MAIN, const std::vector<const char*>& extra_args = {})\n+        : BasicTestingSetup(chainName, extra_args)\n+    {\n+        // Ideally we'd move all the RPC tests to the functional testing framework\n+        // instead of unit tests, but for now we need these here.\n+        RegisterAllCoreRPCCommands(tableRPC);\n+\n+        m_node.scheduler = MakeUnique<CScheduler>();\n+\n+        // We have to run a scheduler thread to prevent ActivateBestChain\n+        // from blocking due to queue overrun.\n+        threadGroup.create_thread([&] { TraceThread(\"scheduler\", [&] { m_node.scheduler->serviceQueue(); }); });\n+        GetMainSignals().RegisterBackgroundSignalScheduler(*m_node.scheduler);\n+\n+        pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n+\n+        m_node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator);\n+\n+        m_node.chainman = &::g_chainman;\n+\n+        // Start script-checking threads. Set g_parallel_script_checks to true so they are used.\n+        constexpr int script_check_threads = 2;\n+        for (int i = 0; i < script_check_threads; ++i) {\n+            threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n+        }\n+        g_parallel_script_checks = true;\n+    }\n+    ~ChainTestingSetup() {\n+        if (m_node.scheduler) m_node.scheduler->stop();\n+        threadGroup.interrupt_all();\n+        threadGroup.join_all();\n+        GetMainSignals().FlushBackgroundCallbacks();\n+        GetMainSignals().UnregisterBackgroundSignalScheduler();\n+        m_node.args = nullptr;",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "39387634834a1ef06e587b30fa42a781ce45e460",
      "in_reply_to_id": 520726782,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "@MarcoFalke I assume you mean something like:\r\n\r\n```diff\r\ndiff --git a/src/test/validation_chainstatemanager_tests.cpp b/src/test/validation_chainstatemanager_tests.cpp\r\nindex 34e5723964..664405fc5e 100644\r\n--- a/src/test/validation_chainstatemanager_tests.cpp\r\n+++ b/src/test/validation_chainstatemanager_tests.cpp\r\n@@ -17,48 +17,7 @@\r\n \r\n #include <boost/test/unit_test.hpp>\r\n \r\n-struct ChainTestingSetup : public BasicTestingSetup {\r\n-    boost::thread_group threadGroup;\r\n-\r\n-    explicit ChainTestingSetup()\r\n-        : BasicTestingSetup()\r\n-    {\r\n-        // We have to run a scheduler thread to prevent ActivateBestChain\r\n-        // from blocking due to queue overrun.\r\n-        m_node.scheduler = MakeUnique<CScheduler>();\r\n-        threadGroup.create_thread([&] { TraceThread(\"scheduler\", [&] { m_node.scheduler->serviceQueue(); }); });\r\n-        GetMainSignals().RegisterBackgroundSignalScheduler(*m_node.scheduler);\r\n-\r\n-        pblocktree.reset(new CBlockTreeDB(1 << 20, true));\r\n-\r\n-        m_node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator);\r\n-\r\n-        m_node.chainman = &::g_chainman;\r\n-\r\n-        // Start script-checking threads. Set g_parallel_script_checks to true so they are used.\r\n-        constexpr int script_check_threads = 2;\r\n-        for (int i = 0; i < script_check_threads; ++i) {\r\n-            threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\r\n-        }\r\n-        g_parallel_script_checks = true;\r\n-    }\r\n-    ~ChainTestingSetup() {\r\n-        if (m_node.scheduler) m_node.scheduler->stop();\r\n-        threadGroup.interrupt_all();\r\n-        threadGroup.join_all();\r\n-        GetMainSignals().FlushBackgroundCallbacks();\r\n-        GetMainSignals().UnregisterBackgroundSignalScheduler();\r\n-        m_node.args = nullptr;\r\n-        UnloadBlockIndex(m_node.mempool.get(), *m_node.chainman);\r\n-        m_node.mempool.reset();\r\n-        m_node.scheduler.reset();\r\n-        m_node.chainman->Reset();\r\n-        m_node.chainman = nullptr;\r\n-        pblocktree.reset();\r\n-    }\r\n-};\r\n-\r\n-BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, ChainTestingSetup)\r\n+BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, TestingSetup)\r\n \r\n //! Basic tests for ChainstateManager.\r\n //!\r\n@@ -68,6 +27,9 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\r\n     ChainstateManager& manager = *m_node.chainman;\r\n     CTxMemPool& mempool = *m_node.mempool;\r\n \r\n+    UnloadBlockIndex(nullptr, manager);\r\n+    manager.Reset();\r\n+\r\n     std::vector<CChainState*> chainstates;\r\n     const CChainParams& chainparams = Params();\r\n \r\n@@ -151,6 +113,9 @@ BOOST_AUTO_TEST_CASE(chainstatemanager_rebalance_caches)\r\n     ChainstateManager& manager = *m_node.chainman;\r\n     CTxMemPool& mempool = *m_node.mempool;\r\n \r\n+    UnloadBlockIndex(nullptr, manager);\r\n+    manager.Reset();\r\n+\r\n     size_t max_cache = 10000;\r\n     manager.m_total_coinsdb_cache = max_cache;\r\n     manager.m_total_coinstip_cache = max_cache;\r\n```\r\n\r\nI found it hard to convince myself that `UnloadBlockIndex` and `Reset` cleanly resets everything exactly to before `ActivateBestChain` is run, which is why I thought repetition wasn't such a bad thing here. Let me know if I'm missing anything though.",
      "created_at": "2020-11-17T00:22:20Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r524803514",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/524803514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533584267",
      "pull_request_review_id": 542123958,
      "id": 533584267,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4NDI2Nw==",
      "diff_hunk": "@@ -122,6 +167,7 @@ BOOST_AUTO_TEST_CASE(chainstatemanager_rebalance_caches)\n     {\n         LOCK(::cs_main);\n         c1.InitCoinsCache(1 << 23);\n+        assert(c1.LoadGenesisBlock(Params()));",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "43c880afbcafa9796c838518722594940af69b7d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "In commit \"test: Add new ChainTestingSetup and use it\" (43c880afbcafa9796c838518722594940af69b7d)\r\n\r\nWould suggest using `BOOST_REQUIRE` instead of `assert` or splitting as `bool loaded = c1.LoadGenesisBlock(Params()); assert(loaded);`. Writing code with side effects in an `assert` adds some ambiguity because behavior will depend on value of NDEBUG",
      "created_at": "2020-12-01T17:17:07Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r533584267",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/533584267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535477290",
      "pull_request_review_id": 544253110,
      "id": 535477290,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ3NzI5MA==",
      "diff_hunk": "@@ -122,6 +167,7 @@ BOOST_AUTO_TEST_CASE(chainstatemanager_rebalance_caches)\n     {\n         LOCK(::cs_main);\n         c1.InitCoinsCache(1 << 23);\n+        assert(c1.LoadGenesisBlock(Params()));",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "43c880afbcafa9796c838518722594940af69b7d",
      "in_reply_to_id": 533584267,
      "user": {
        "login": "dongcarl",
        "id": 3445290,
        "node_id": "MDQ6VXNlcjM0NDUyOTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dongcarl",
        "html_url": "https://github.com/dongcarl",
        "followers_url": "https://api.github.com/users/dongcarl/followers",
        "following_url": "https://api.github.com/users/dongcarl/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dongcarl/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dongcarl/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
        "organizations_url": "https://api.github.com/users/dongcarl/orgs",
        "repos_url": "https://api.github.com/users/dongcarl/repos",
        "events_url": "https://api.github.com/users/dongcarl/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dongcarl/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Oh! Didn't know about `NDEBUG`... So when `NDEBUG` is set, the code inside `assert(...)` may be optimized out? Or is it the case that only the result isn't checked/asserted?",
      "created_at": "2020-12-03T18:24:12Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r535477290",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/535477290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 170,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537405985",
      "pull_request_review_id": 546028109,
      "id": 537405985,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNTk4NQ==",
      "diff_hunk": "@@ -124,76 +124,88 @@ BasicTestingSetup::~BasicTestingSetup()\n     ECC_Stop();\n }\n \n-TestingSetup::TestingSetup(const std::string& chainName, const std::vector<const char*>& extra_args)\n-    : BasicTestingSetup(chainName, extra_args)\n-{\n-    const CChainParams& chainparams = Params();\n-    // Ideally we'd move all the RPC tests to the functional testing framework\n-    // instead of unit tests, but for now we need these here.\n-    RegisterAllCoreRPCCommands(tableRPC);\n-\n-    m_node.scheduler = MakeUnique<CScheduler>();\n-\n+void TestingAppInitSequence(NodeContext& node, boost::thread_group& thread_group, bool chain_testing_only) {\n     // We have to run a scheduler thread to prevent ActivateBestChain\n     // from blocking due to queue overrun.\n-    threadGroup.create_thread([&] { TraceThread(\"scheduler\", [&] { m_node.scheduler->serviceQueue(); }); });\n-    GetMainSignals().RegisterBackgroundSignalScheduler(*m_node.scheduler);\n+    node.scheduler = MakeUnique<CScheduler>();\n+    thread_group.create_thread([&] { TraceThread(\"scheduler\", [&] { node.scheduler->serviceQueue(); }); });\n+    GetMainSignals().RegisterBackgroundSignalScheduler(*node.scheduler);\n \n     pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n \n-    m_node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator, 1);\n-\n-    m_node.chainman = &::g_chainman;\n-    m_node.chainman->InitializeChainstate(*m_node.mempool);\n-    ::ChainstateActive().InitCoinsDB(\n-        /* cache_size_bytes */ 1 << 23, /* in_memory */ true, /* should_wipe */ false);\n-    assert(!::ChainstateActive().CanFlushToDisk());\n-    ::ChainstateActive().InitCoinsCache(1 << 23);\n-    assert(::ChainstateActive().CanFlushToDisk());\n-    if (!LoadGenesisBlock(chainparams)) {\n-        throw std::runtime_error(\"LoadGenesisBlock failed.\");\n-    }\n+    node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator, 1);\n \n-    BlockValidationState state;\n-    if (!ActivateBestChain(state, chainparams)) {\n-        throw std::runtime_error(strprintf(\"ActivateBestChain failed. (%s)\", state.ToString()));\n-    }\n+    node.chainman = &::g_chainman;\n \n     // Start script-checking threads. Set g_parallel_script_checks to true so they are used.\n     constexpr int script_check_threads = 2;\n     for (int i = 0; i < script_check_threads; ++i) {\n-        threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n+        thread_group.create_thread([i]() { return ThreadScriptCheck(i); });\n     }\n     g_parallel_script_checks = true;\n \n-    m_node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n-    m_node.connman = MakeUnique<CConnman>(0x1337, 0x1337); // Deterministic randomness for tests.\n-    m_node.peerman = MakeUnique<PeerManager>(chainparams, *m_node.connman, m_node.banman.get(), *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n-    {\n-        CConnman::Options options;\n-        options.m_msgproc = m_node.peerman.get();\n-        m_node.connman->Init(options);\n+    if (!chain_testing_only) {\n+        const CChainParams& chainparams = Params();\n+        // Ideally we'd move all the RPC tests to the functional testing framework\n+        // instead of unit tests, but for now we need these here.\n+        RegisterAllCoreRPCCommands(tableRPC);\n+\n+        node.chainman->InitializeChainstate(*node.mempool);\n+        ::ChainstateActive().InitCoinsDB(\n+                                         /* cache_size_bytes */ 1 << 23, /* in_memory */ true, /* should_wipe */ false);\n+        assert(!::ChainstateActive().CanFlushToDisk());\n+        ::ChainstateActive().InitCoinsCache(1 << 23);\n+        assert(::ChainstateActive().CanFlushToDisk());\n+        if (!LoadGenesisBlock(chainparams)) {\n+            throw std::runtime_error(\"LoadGenesisBlock failed.\");\n+        }\n+\n+        BlockValidationState state;\n+        if (!ActivateBestChain(state, chainparams)) {\n+            throw std::runtime_error(strprintf(\"ActivateBestChain failed. (%s)\", state.ToString()));\n+        }\n+\n+        node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n+        node.connman = MakeUnique<CConnman>(0x1337, 0x1337); // Deterministic randomness for tests.\n+        node.peerman = MakeUnique<PeerManager>(chainparams, *node.connman, node.banman.get(), *node.scheduler, *node.chainman, *node.mempool);\n+        {\n+            CConnman::Options options;\n+            options.m_msgproc = node.peerman.get();\n+            node.connman->Init(options);\n+        }\n     }\n }\n \n-TestingSetup::~TestingSetup()\n-{\n-    if (m_node.scheduler) m_node.scheduler->stop();\n-    threadGroup.interrupt_all();\n-    threadGroup.join_all();\n+void TestingAppDestructionSequence(NodeContext& node, boost::thread_group& thread_group, bool chain_testing_only) {\n+    if (node.scheduler) node.scheduler->stop();\n+    thread_group.interrupt_all();\n+    thread_group.join_all();\n     GetMainSignals().FlushBackgroundCallbacks();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n-    m_node.connman.reset();\n-    m_node.banman.reset();\n-    m_node.args = nullptr;\n-    UnloadBlockIndex(m_node.mempool.get(), *m_node.chainman);\n-    m_node.mempool.reset();\n-    m_node.scheduler.reset();\n-    m_node.chainman->Reset();\n-    m_node.chainman = nullptr;\n+    if (!chain_testing_only) {\n+        node.connman.reset();\n+        node.banman.reset();\n+    }",
      "path": "src/test/util/setup_common.cpp",
      "position": null,
      "original_position": 114,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "11fac8b2c8001e9aee9debb20df09473b9092b8c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "any reason for the modifications here? reset is idempotent , so doesn't need to be guarded.",
      "created_at": "2020-12-07T10:45:36Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r537405985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537405985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537407409",
      "pull_request_review_id": 546028109,
      "id": 537407409,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwNzQwOQ==",
      "diff_hunk": "@@ -15,15 +17,31 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(validation_chainstatemanager_tests, TestingSetup)\n+struct ChainTestingSetup : public BasicTestingSetup {",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "11fac8b2c8001e9aee9debb20df09473b9092b8c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Any reason to add this here and not to setup_common? Moving it to setup_common would allow removing the confusing `TestingAppInitSequence` declarations in the header. Also, it would allow other tests to use the `ChainTestingSetup`.",
      "created_at": "2020-12-07T10:47:42Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r537407409",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537407409"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537408230",
      "pull_request_review_id": 546028109,
      "id": 537408230,
      "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQwODIzMA==",
      "diff_hunk": "@@ -124,76 +124,88 @@ BasicTestingSetup::~BasicTestingSetup()\n     ECC_Stop();\n }\n \n-TestingSetup::TestingSetup(const std::string& chainName, const std::vector<const char*>& extra_args)\n-    : BasicTestingSetup(chainName, extra_args)\n-{\n-    const CChainParams& chainparams = Params();\n-    // Ideally we'd move all the RPC tests to the functional testing framework\n-    // instead of unit tests, but for now we need these here.\n-    RegisterAllCoreRPCCommands(tableRPC);\n-\n-    m_node.scheduler = MakeUnique<CScheduler>();\n-\n+void TestingAppInitSequence(NodeContext& node, boost::thread_group& thread_group, bool chain_testing_only) {\n     // We have to run a scheduler thread to prevent ActivateBestChain\n     // from blocking due to queue overrun.\n-    threadGroup.create_thread([&] { TraceThread(\"scheduler\", [&] { m_node.scheduler->serviceQueue(); }); });\n-    GetMainSignals().RegisterBackgroundSignalScheduler(*m_node.scheduler);\n+    node.scheduler = MakeUnique<CScheduler>();\n+    thread_group.create_thread([&] { TraceThread(\"scheduler\", [&] { node.scheduler->serviceQueue(); }); });\n+    GetMainSignals().RegisterBackgroundSignalScheduler(*node.scheduler);\n \n     pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n \n-    m_node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator, 1);\n-\n-    m_node.chainman = &::g_chainman;\n-    m_node.chainman->InitializeChainstate(*m_node.mempool);\n-    ::ChainstateActive().InitCoinsDB(\n-        /* cache_size_bytes */ 1 << 23, /* in_memory */ true, /* should_wipe */ false);\n-    assert(!::ChainstateActive().CanFlushToDisk());\n-    ::ChainstateActive().InitCoinsCache(1 << 23);\n-    assert(::ChainstateActive().CanFlushToDisk());\n-    if (!LoadGenesisBlock(chainparams)) {\n-        throw std::runtime_error(\"LoadGenesisBlock failed.\");\n-    }\n+    node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator, 1);\n \n-    BlockValidationState state;\n-    if (!ActivateBestChain(state, chainparams)) {\n-        throw std::runtime_error(strprintf(\"ActivateBestChain failed. (%s)\", state.ToString()));\n-    }\n+    node.chainman = &::g_chainman;\n \n     // Start script-checking threads. Set g_parallel_script_checks to true so they are used.\n     constexpr int script_check_threads = 2;\n     for (int i = 0; i < script_check_threads; ++i) {\n-        threadGroup.create_thread([i]() { return ThreadScriptCheck(i); });\n+        thread_group.create_thread([i]() { return ThreadScriptCheck(i); });\n     }\n     g_parallel_script_checks = true;\n \n-    m_node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n-    m_node.connman = MakeUnique<CConnman>(0x1337, 0x1337); // Deterministic randomness for tests.\n-    m_node.peerman = MakeUnique<PeerManager>(chainparams, *m_node.connman, m_node.banman.get(), *m_node.scheduler, *m_node.chainman, *m_node.mempool);\n-    {\n-        CConnman::Options options;\n-        options.m_msgproc = m_node.peerman.get();\n-        m_node.connman->Init(options);\n+    if (!chain_testing_only) {",
      "path": "src/test/util/setup_common.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "81137c60fe6234569e1c5e6760f3a6f016956944",
      "original_commit_id": "11fac8b2c8001e9aee9debb20df09473b9092b8c",
      "in_reply_to_id": null,
      "user": {
        "login": "MarcoFalke",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarcoFalke",
        "html_url": "https://github.com/MarcoFalke",
        "followers_url": "https://api.github.com/users/MarcoFalke/followers",
        "following_url": "https://api.github.com/users/MarcoFalke/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarcoFalke/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarcoFalke/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
        "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
        "repos_url": "https://api.github.com/users/MarcoFalke/repos",
        "events_url": "https://api.github.com/users/MarcoFalke/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
        "type": "User",
        "site_admin": false
      },
      "body": "Agree with john that functions that have a large branch (and a boolean arg) are better split off into two functions",
      "created_at": "2020-12-07T10:49:06Z",
      "updated_at": "2020-12-08T20:01:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/20323#discussion_r537408230",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/537408230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20323"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    }
  ]
}